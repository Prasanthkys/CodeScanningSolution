name: SFDX scan code

on:
  pull_request:
    paths:
      - '**/*.cls'
      - '**/*.trigger'
      - '**/*.xml'
      - '**/*.lwc'
    branches:
      - '**'

jobs:
  installcli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install CLI
        run: npm install @salesforce/cli --global

      - name: Install Scanner Plugin
        run: sf plugins install @salesforce/sfdx-scanner

      - name: Verify SFDX CLI Installation
        run: sf --version

      - name: Verify SFDX Scanner Plugin Installation
        run: sf plugins --core

      - name: Get changed files and context
        id: get-changes
        run: |
          # Get the changed files
          if [ "$(git rev-list --count HEAD)" -gt "1" ]; then
            git diff --name-only HEAD~1 HEAD > changed_files.txt
          else
            echo "No previous commit to compare to." > changed_files.txt
          fi

          # Create a directory to store changed lines
          mkdir -p changed_lines

          # Extract changed lines with context for each file
          while IFS= read -r file; do
            # Create a temporary file with changed lines + context
            git diff -U5 HEAD~1 HEAD -- "$file" > "changed_lines/${file//\//_}.txt"
          done < changed_files.txt

      - name: Filter Changed LWC and Apex Files
        id: filter-changes
        run: |
          grep -E '\.cls$|\.lwc$' changed_files.txt > filtered_files.txt
          cat filtered_files.txt
        continue-on-error: true

      - name: Create Temporary Files with Context
        if: success()
        run: |
          mkdir -p temp_files
          while IFS= read -r file; do
            temp_file="temp_files/${file//\//_}.cls"
            touch "$temp_file"
            echo "Processing $file"
            # Filter only the additions with context
            grep -E '^\+|^ ' "changed_lines/${file//\//_}.txt" | sed 's/^+//' > "$temp_file"
          done < filtered_files.txt

      - name: Run SFDX Scanner on Temporary Files
        if: success()
        run: |
          rm -f scanner-report.csv
          touch scanner-report.csv
          for temp_file in temp_files/*; do
            if [ -s "$temp_file" ]; then
              sf scanner:run --target "$temp_file" --format "csv" --outfile "temp_scanner_report.csv"
              # Append the results to the main report
              tail -n +2 temp_scanner_report.csv >> scanner-report.csv
            fi
          done

          # If no results were generated, create an empty file
          if [ ! -s scanner-report.csv ]; then
            echo "No issues found in the changed lines." > scanner-report.csv
          fi
        env:
          SF_LAZY_LOAD_MODULES: 'true'
          SF_AUTOUPDATE_DISABLE: 'true'
          SF_DISABLE_AUTOUPDATE: 'true'

      - name: Encode CSV file to Base64
        if: success()
        id: encode_file
        run: |
          base64 scanner-report.csv | tr -d '\n' > encoded_report.txt

      - name: Install jq
        if: success()
        run: sudo apt-get install -y jq

      - name: Get Repository and Branch Info
        id: get-info
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          FILE_TITLE="Code Scanner Delta Report_${REPO_NAME}_${BRANCH_NAME}"
          echo "FILE_TITLE=${FILE_TITLE}" >> $GITHUB_ENV

      - name: Upload CSV Report to Salesforce
        if: success()
        run: |
          if [ -s encoded_report.txt ]; then
            contentDocumentResponse=$(curl -X POST https://individual-fc-dev-ed.develop.my.salesforce.com/services/data/v61.0/sobjects/ContentVersion/ \
              -H "Authorization: Bearer ${{ secrets.SF_ACCESS_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{
                "Title": "'"${{ env.FILE_TITLE }}"'",
                "PathOnClient": "scanner-report.csv",
                "VersionData": "'"$(cat encoded_report.txt)"'"
              }')
            echo "Response: $contentDocumentResponse"
            
            contentVersionId=$(echo $contentDocumentResponse | jq -r '.id // empty')
            if [ -z "$contentVersionId" ]; then
              echo "Error: Failed to upload file. No ContentVersionId found."
              exit 1
            fi
            echo "ContentVersionId: $contentVersionId"
            
            contentDocumentResponse=$(curl -X GET https://individual-fc-dev-ed.develop.my.salesforce.com/services/data/v61.0/sobjects/ContentVersion/$contentVersionId \
              -H "Authorization: Bearer ${{ secrets.SF_ACCESS_TOKEN }}" )
            echo "ContentDocument Response: $contentDocumentResponse"
            
            contentDocumentId=$(echo $contentDocumentResponse | jq -r '.ContentDocumentId // empty')
            if [ -z "$contentDocumentId" ]; then
              echo "Error: Failed to retrieve ContentDocumentId. No ContentDocumentId found."
              exit 1
            fi
            echo "ContentDocumentId: $contentDocumentId"
          else
            echo "No scanner report generated, skipping upload."
          fi
        env:
          SF_ACCESS_TOKEN: ${{ secrets.SF_ACCESS_TOKEN }}
        shell: bash

      - name: Post Scan Report as Comment on Pull Request
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: scanner-report.csv
