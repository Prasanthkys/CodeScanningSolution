on:
  push:
    branches:
      - '**'

jobs:
  installcli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install CLI
        run: npm install @salesforce/cli --global

      - name: Install Scanner Plugin
        run: sf plugins install @salesforce/sfdx-scanner

      - name: Verify SFDX CLI Installation
        run: sf --version

      - name: Verify SFDX Scanner Plugin Installation
        run: sf plugins --core

      - name: Get changed files
        id: get-changes
        run: |
          git fetch --unshallow || true
          if [ "$(git rev-list --count HEAD)" -gt "1" ]; then
            git diff --name-only HEAD~1 HEAD > changed_files.txt
          else
            echo "No previous commit to compare to." > changed_files.txt
          fi
          cat changed_files.txt

      - name: Run SFDX Scanner on Changed Files
        if: success()
        run: |
          files=$(cat changed_files.txt | grep -E '\.cls$|\.lwc$' || true)
          echo "Files to scan: $files"
          if [ -n "$files" ]; then
            sf scanner:run --target "$files" --format "csv" --outfile "scanner-report.csv"
          else
            touch scanner-report.csv
          fi
        env:
          SF_LAZY_LOAD_MODULES: 'true'
          SF_AUTOUPDATE_DISABLE: 'true'

      - name: Encode CSV file to Base64
        if: success()
        id: encode_file
        run: |
          base64 scanner-report.csv | tr -d '\n' > encoded_report.txt

      - name: Check Scanner Report Severity
        id: check_severity
        run: |
          if [ ! -f "scanner-report.csv" ]; then
            exit 1
          fi
          SEVERITY_FAIL_COUNT=$(awk -F',' '{gsub(/^ *| *$/, "", $2); if($2 == "\"3\"") count++} END {print count}' scanner-report.csv)
          SEVERITY_FAIL_COUNT=${SEVERITY_FAIL_COUNT:-0}
          if [ "$SEVERITY_FAIL_COUNT" -gt 0 ]; then
            echo "::error::Quality gate failed due to severity 3 issues."
            exit 1
          else
            echo "Quality gate passed."
          fi

      - name: Push changes to GitHub if validation passes
        if: success()
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add .
          git commit -m "Quality gate passed, pushing changes"
          git push origin Dev3Mnr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
