name: SFDX Code Scan Delta

on:
  push:
    branches:
      - '**'

jobs:
  installcli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install CLI
        run: npm install @salesforce/cli --global

      - name: Install Scanner Plugin
        run: sf plugins install @salesforce/sfdx-scanner

      - name: Verify SFDX CLI Installation
        run: sf --version

      - name: Verify SFDX Scanner Plugin Installation
        run: sf plugins --core

      - name: Get changed files
        id: get-changes
        run: |
          git fetch --unshallow || true
          if [ "$(git rev-list --count HEAD)" -gt "1" ]; then
            echo "Fetching changed files between HEAD~1 and HEAD"
            git diff --name-only HEAD~1 HEAD > changed_files.txt
          else
            echo "No previous commit to compare to." > changed_files.txt
          fi
          cat changed_files.txt

      - name: Run SFDX Scanner on Changed Files
        if: success()
        run: |
          files=$(cat changed_files.txt | grep -E '\.cls$|\.lwc$' || true)
          echo "Files to scan: $files"
          if [ -n "$files" ]; then
            sf scanner:run --target "$files" --format "csv" --outfile "scanner-report.csv" || { echo "Scanner run failed"; exit 1; }
          else
            echo "No relevant files changed."
            touch scanner-report.csv
          fi
        env:
          SF_LAZY_LOAD_MODULES: 'true'
          SF_AUTOUPDATE_DISABLE: 'true'
          SF_DISABLE_AUTOUPDATE: 'true'

      - name: Encode CSV file to Base64
        if: success()
        id: encode_file
        run: |
          if [ -f scanner-report.csv ]; then
            base64 scanner-report.csv | tr -d '\n' > encoded_report.txt
          else
            echo "Scanner report CSV file not found."
            exit 1
          fi

      - name: Check Scanner Report Severity
        id: check_severity
        run: |
          if [ ! -f "scanner-report.csv" ]; then
            echo "Scanner report not found!"
            echo "QUALITY_GATE_STATUS=FAILED" >> $GITHUB_ENV
            echo "::error file=scanner-report.csv::Scanner report not found!"
            exit 1
          fi

          SEVERITY_FAIL_COUNT=$(awk -F',' '$3 == "1" || $3 == "2" {count++} END {print count}' scanner-report.csv)
          if [ "$SEVERITY_FAIL_COUNT" -gt 0 ]; then
            echo "Quality gate failed due to high severity issues."
            echo "QUALITY_GATE_STATUS=FAILED" >> $GITHUB_ENV
            echo "::error::Quality gate failed due to high severity issues."
          else
            echo "Quality gate passed."
            echo "QUALITY_GATE_STATUS=PASSED" >> $GITHUB_ENV
            echo "::notice::Quality gate passed."
          fi

      - name: Get Repository and Branch Info
        id: get-info
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          COMMIT_LABEL=$(git log -1 --pretty=format:'%s')
          FILE_TITLE="Code Scanner Delta Report_${REPO_NAME}_${BRANCH_NAME}_${COMMIT_LABEL}"
          echo "FILE_TITLE=${FILE_TITLE}" >> $GITHUB_ENV

          - name: Get Pusher's Email
          id: get-pusher-email
          run: |
            COMMIT_SHA=${{ github.sha }}
            REPO=${{ github.repository }}
            PUSHER_EMAIL=$(curl -s -H "Authorization: token ${{ secrets.GIT_TOKEN }}" \
              "https://api.github.com/repos/${REPO}/commits/${COMMIT_SHA}" | jq -r '.commit.committer.email')
            echo "PUSHER_EMAIL=${PUSHER_EMAIL}" >> $GITHUB_ENV
        
      - name: Send Email with actions-send-mail
        uses: dawidd6/action-send-mail@v3
        with:
            server_address: 'smtp.gmail.com'
            server_port: '587'
            username: ${{ secrets.GMAIL_EMAIL }}
            password: ${{ secrets.GMAIL_APP_PASSWORD }}
            from: ${{ secrets.GMAIL_EMAIL }}
            subject: 'SFDX Code Scan Delta Report'
            body: |
              <html>
              <body>
                <p>The SFDX Code Scan Delta Report has been generated.</p>
                <p>Status: ${{ env.QUALITY_GATE_STATUS }}</p>
                <p>Click below to take action:</p>
                <p>
                  <a href="https://api.github.com/repos/${{ github.repository }}/dispatches" 
                     style="background-color: #28a745; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; font-weight: bold;" 
                     target="_blank" 
                     onclick="event.preventDefault(); fetch('https://api.github.com/repos/${{ github.repository }}/dispatches', { 
                       method: 'POST', 
                       headers: { 'Accept': 'application/vnd.github.v3+json', 'Authorization': 'token ${{ secrets.GIT_TOKEN }}' }, 
                       body: JSON.stringify({ event_type: 'accept', client_payload: { branch: '${{ env.BRANCH_NAME }}' } }) 
                     });">Accept</a>
                </p>
                <p>
                  <a href="https://api.github.com/repos/${{ github.repository }}/dispatches" 
                     style="background-color: #dc3545; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; font-weight: bold;" 
                     target="_blank" 
                     onclick="event.preventDefault(); fetch('https://api.github.com/repos/${{ github.repository }}/dispatches', { 
                       method: 'POST', 
                       headers: { 'Accept': 'application/vnd.github.v3+json', 'Authorization': 'token ${{ secrets.GIT_TOKEN }}' }, 
                       body: JSON.stringify({ event_type: 'reject', client_payload: { branch: '${{ env.BRANCH_NAME }}' } }) 
                     });">Reject</a>
                </p>
              </body>
              </html>
            to: ${{ env.PUSHER_EMAIL }}, ${{ secrets.GMAIL_EMAIL }}
            attachments: scanner-report.csv