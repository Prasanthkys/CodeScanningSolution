on:
  push:
    branches:
      - "**"

jobs:
  installcli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install CLI
        run: npm install @salesforce/cli --global

      - name: Install Scanner Plugin
        run: sf plugins install @salesforce/sfdx-scanner

      - name: Verify SFDX CLI Installation
        run: sf --version

      - name: Verify SFDX Scanner Plugin Installation
        run: sf plugins --core

      - name: Get changed files and lines (for .cls and .lwc files)
        id: get-changes
        run: |
          if [ "$(git rev-parse --is-shallow-repository)" = "true" ]; then
            git fetch --unshallow
          fi

          if [ "$(git rev-list --count HEAD)" -gt "1" ]; then
            git diff --unified=0 HEAD~1 HEAD > changes.diff
          else
            echo "No previous commit to compare to." > changes.diff
          fi

          awk '
            BEGIN {valid_file=0} 
            /^diff --git/ {valid_file=0} 
            /\.cls$|\.lwc$/ {valid_file=1} 
            /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); next} 
            /^[+][^+]/ && valid_file {print "Line", start++, ":", $0}
          ' changes.diff > changed_cls_lwc_lines.txt
          cat changed_cls_lwc_lines.txt

      - name: Run SFDX Scanner on Changed Files and Lines
        if: success()
        run: |
          files=$(grep -E '^\+\+\+ b/.*(\.cls|\.lwc)$' changes.diff | sed 's/+++ b\///')

          if [ -z "$files" ]; then
            echo "No changed .cls or .lwc files detected."
            exit 0
          fi

          declare -A line_map

          while IFS= read -r file; do
            file=$(echo "$file" | tr -d '"')
            changed_lines=$(grep -A 1000 "$file" changes.diff | grep '^\+' | sed 's/^+//')
            line_numbers=$(grep -A 1000 "$file" changes.diff | grep '^@@' | awk '{print $2}' | cut -d',' -f1 | sed 's/-//')
            current_line_number=$(echo "$line_numbers" | head -1)

            while IFS= read -r line; do
              sf scanner:run --target "$file" --format "csv" --outfile "scanner-report.csv" || { echo "Scanner run failed"; exit 1; }
              current_line_number=$((current_line_number + 1))
            done <<< "$changed_lines"

          done <<< "$files"

      # Step to upload the unfiltered scanner report and the changed lines file
      - name: Upload Scanner Report and Changed Lines File as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "scanner-report"
          path: scanner-report.csv
      - name: Upload Changed Lines as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "changed-lines"
          path: changed_cls_lwc_lines.txt

  filter-and-upload:
    needs: installcli
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download Scanner Report Artifact
        uses: actions/download-artifact@v3
        with:
          name: "scanner-report"
          path: .

      - name: Download Changed Lines Artifact
        uses: actions/download-artifact@v3
        with:
          name: "changed-lines"
          path: .

      - name: Filter Scanner Report by Line Numbers
        run: |
          current_line_number_list=$(grep 'Line' changed_cls_lwc_lines.txt | awk '{print $2}' | tr '\n' ' ')
          current_line_number_list=$(echo $current_line_number_list | sed 's/[^0-9 ]//g' | xargs)
          awk -v lines="$current_line_number_list" '
          BEGIN {
            FPAT = "([^,]+)|(\"[^\"]+\")";
            split(lines, arr, " ");
            for (i in arr) {
              valid[arr[i]] = 1;
            }
          }
          NR == 1 || (substr($4, 2, length($4)-2) in valid) {
            print $0;
          }
          ' scanner-report.csv > filtered-scanner-report.csv

          cat filtered-scanner-report.csv

      # Upload filtered scanner report
      - name: Upload Filtered Scanner Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "filtered-scanner-report"
          path: filtered-scanner-report.csv

      - name: Get Repository and Branch Info
        id: get-info
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          COMMIT_LABEL=$(git log -1 --pretty=format:'%s')
          FILE_TITLE="Code Scanner Delta Report_${REPO_NAME}_${BRANCH_NAME}_${COMMIT_LABEL}"
          echo "FILE_TITLE=${FILE_TITLE}" >> $GITHUB_ENV

      # Send Email with filtered report
      - name: Send Email with actions-send-mail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: "smtp.gmail.com"
          server_port: "587"
          username: ${{ secrets.GMAIL_EMAIL }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          from: ${{ secrets.GMAIL_EMAIL }}
          subject: "SFDX Code Scan Delta Report"
          body: "Please find the attached filtered SFDX Code Scan Delta Report."
          to: ${{ env.PUSHER_EMAIL }}, ${{ secrets.GMAIL_EMAIL }}
          attachments: filtered-scanner-report.csv
