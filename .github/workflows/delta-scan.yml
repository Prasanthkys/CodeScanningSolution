on:
  push:
    branches:
      - '**'

jobs:
  installcli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install CLI
        run: npm install @salesforce/cli --global

      - name: Install Scanner Plugin
        run: sf plugins install @salesforce/sfdx-scanner

      - name: Verify SFDX CLI Installation
        run: sf --version

      - name: Verify SFDX Scanner Plugin Installation
        run: sf plugins --core

      - name: Get changed files and lines
        id: get-changes
        run: |
          git fetch --unshallow || true
          if [ "$(git rev-list --count HEAD)" -gt "1" ]; then
            echo "Fetching changed files and lines between HEAD~1 and HEAD"
            git diff HEAD~1 HEAD --name-only > changed_files.txt
            git diff -U0 HEAD~1 HEAD > changed_lines.diff
          else
            echo "No previous commit to compare to." > changed_files.txt
            echo "No lines changed." > changed_lines.diff
          fi
          cat changed_files.txt
          cat changed_lines.diff

      - name: Filter Changed Apex or LWC Files
        id: filter-files
        run: |
          files=$(cat changed_files.txt | grep -E '\.cls$|\.lwc$' || true)
          echo "Files to scan: $files"
          echo "filtered_files=$files" >> $GITHUB_ENV
          if [ -z "$files" ]; then
            echo "No relevant files changed."
            exit 0
          fi

      - name: Run SFDX Scanner on Files
        if: success()
        run: |
          files=$(echo ${{ env.filtered_files }})
          echo "Running SFDX scanner on files: $files"
          if [ -n "$files" ]; then
            sf scanner:run --target "$files" --format "csv" --outfile "scanner-report.csv" || { echo "Scanner run failed"; exit 1; }
          else
            echo "No relevant files changed."
            touch scanner-report.csv
          fi

      - name: Filter Scanner Report for Changed Lines
        if: success()
        run: |
          echo "Filtering the scanner report for changed lines"
          awk '/^\+[^+]/ {print substr($0, 2)}' changed_lines.diff > delta_lines.txt
          
          if [ -s delta_lines.txt ]; then
            echo "Found changed lines"
            # Create a temporary filtered report
            header=$(head -n 1 scanner-report.csv)
            echo "$header" > filtered-scanner-report.csv

            while IFS=, read -r problem severity file line column rule description url category engine; do
              line_num=$(echo $line | tr -d '"')
              if grep -q ":$line_num" delta_lines.txt; then
                echo "$problem,$severity,$file,$line,$column,$rule,$description,$url,$category,$engine" >> filtered-scanner-report.csv
              fi
            done < <(tail -n +2 scanner-report.csv)

            echo "Filtered report generated."
          else
            echo "No lines changed, skipping filtering."
            cp scanner-report.csv filtered-scanner-report.csv
          fi

      - name: Upload Filtered Scanner Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.FILE_TITLE }}
          path: filtered-scanner-report.csv

      - name: Get Pusher's Email
        id: get-pusher-email
        run: |
          COMMIT_SHA=${{ github.sha }}
          REPO=${{ github.repository }}
          PUSHER_EMAIL=$(curl -s -H "Authorization: token ${{ secrets.GIT_TOKEN }}" \
            "https://api.github.com/repos/${REPO}/commits/${COMMIT_SHA}" | jq -r '.commit.committer.email')
          echo "PUSHER_EMAIL=${PUSHER_EMAIL}" >> $GITHUB_ENV

      - name: Send Email with actions-send-mail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: 'smtp.gmail.com'
          server_port: '587'
          username: ${{ secrets.GMAIL_EMAIL }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          from: ${{ secrets.GMAIL_EMAIL }}
          subject: 'SFDX Code Scan Delta Report'
          body: 'Please find the attached SFDX Code Scan Delta Report.'
          to: ${{ env.PUSHER_EMAIL }}, ${{ secrets.GMAIL_EMAIL }}
          attachments: filtered-scanner-report.csv