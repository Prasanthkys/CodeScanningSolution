diff --git a/.husky/pre-commit b/.husky/pre-commit
new file mode 100644
index 0000000..26737e6
--- /dev/null
+++ b/.husky/pre-commit
@@ -0,0 +1,80 @@
+#!/bin/sh
+. "$(dirname "$0")/_/husky.sh"
+
+# Install necessary dependencies
+npm install @salesforce/cli --global
+sf plugins install @salesforce/sfdx-scanner
+
+# Check for unstaged changes and get changed files/lines
+git diff --unified=0 --cached > changes.diff || { echo "Failed to get git diff"; exit 1; }
+
+if [ ! -s changes.diff ]; then
+  echo "No changes detected."
+  exit 0
+fi
+
+# Process only .cls and .lwc files
+awk '
+  BEGIN {valid_file=0} 
+  /^diff --git/ {valid_file=0} 
+  /\.cls$|\.lwc$/ {valid_file=1} 
+  /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
+  /^[+][^+]/ && valid_file {print "Line", start + line_offset++, ":", substr($0, 2)}  
+' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
+
+if [ ! -s changed_cls_lwc_lines.txt ]; then
+  echo "No changes detected in .cls or .lwc files."
+  exit 0
+fi
+
+cat changed_cls_lwc_lines.txt
+
+# Run SFDX Scanner on changed files (only once per file)
+files=$(grep -E '^\+\+\+ b/.*(\.cls|\.lwc)$' changes.diff | sed 's/+++ b\///')
+if [ -z "$files" ]; then
+  echo "No changed .cls or .lwc files detected."
+  exit 0
+fi
+
+for file in $files; do
+  echo "Running SFDX Scanner on file: $file"
+  sf scanner:run --target "$file" --format "csv" --outfile "scanner-report.csv" || { echo "Scanner run failed or no issues found for $file, continuing with other files."; }
+done
+
+# Filter Scanner Report (you can apply line filtering logic if necessary)
+if [ -f scanner-report.csv ]; then
+  current_line_number_list=$(cat line_numbers.txt)
+  current_line_number_list=$(echo $current_line_number_list | xargs)
+  echo "Filtering scanner report for the following line numbers: $current_line_number_list"
+  awk -v lines="$current_line_number_list" '
+  BEGIN {
+    FPAT = "([^,]+)|(\"[^\"]+\")";
+    split(lines, arr, " ");
+    for (i in arr) {
+      valid[arr[i]] = 1;
+    }
+  }
+  NR == 1 || (substr($4, 2, length($4)-2) in valid) {
+    print $0;
+  }
+  ' scanner-report.csv > filtered-scanner-report.csv
+  cat filtered-scanner-report.csv
+else
+  echo "No scanner report generated."
+  exit 0
+fi
+
+# Block commit if severity 3 vulnerabilities are found
+if [ -f filtered-scanner-report.csv ]; then
+  severity_fail_count=$(awk -F',' '{gsub(/^ *| *$/, "", $2); if($2 == "\"3\"") count++} END {print count}' filtered-scanner-report.csv)
+  echo "Severity 3 issues count: $severity_fail_count"
+  if [ "$severity_fail_count" -gt 0 ]; then
+    echo "Blocking your commit due to severity 3 vulnerabilities found."
+    exit 1
+  else
+    echo "No severity 3 vulnerabilities found. Proceeding with commit."
+  fi
+else
+  echo "No filtered scanner report found."
+  exit 0
+fi
diff --git a/changed_cls_lwc_lines.txt b/changed_cls_lwc_lines.txt
index 7a04cc9..b8329a2 100644
--- a/changed_cls_lwc_lines.txt
+++ b/changed_cls_lwc_lines.txt
@@ -1,960 +1,9887 @@
-a/changed_cls_lwc_lines.txt 0 : 0 : 3274 : -+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-a/changed_cls_lwc_lines.txt 1 : 1 : 3275 : -+index 1e62ed4..14cff41 100644
-a/changed_cls_lwc_lines.txt 2 : 2 : 3276 : -+--- a/force-app/main/default/classes/Account_Insert.cls
-a/changed_cls_lwc_lines.txt 3 : 3 : 3277 : -++++ b/force-app/main/default/classes/Account_Insert.cls
-a/changed_cls_lwc_lines.txt 4 : 4 : 3278 : -+@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
-a/changed_cls_lwc_lines.txt 5 : 5 : 3279 : -++          System.debug('Hello Hi');
-a/changed_cls_lwc_lines.txt 6 : 6 : 3280 : -+diff --git a/scanner-report.json b/scanner-report.json
-a/changed_cls_lwc_lines.txt 7 : 7 : 3281 : -+new file mode 100644
-a/changed_cls_lwc_lines.txt 8 : 8 : 3282 : -+index 0000000..8a298a1
-a/changed_cls_lwc_lines.txt 9 : 9 : 3283 : -+--- /dev/null
-a/changed_cls_lwc_lines.txt 10 : 10 : 3284 : -++++ b/scanner-report.json
-a/changed_cls_lwc_lines.txt 11 : 11 : 3285 : -+@@ -0,0 +1 @@
-a/changed_cls_lwc_lines.txt 12 : 12 : 3286 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-a/changed_cls_lwc_lines.txt 13 : 13 : 3287 : @@ -167 +323 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-a/changed_cls_lwc_lines.txt 14 : 14 : 3288 : -index 14cff41..9a5148a 100644
-a/changed_cls_lwc_lines.txt 15 : 15 : 3289 : @@ -171,2 +327,20 @@ index 14cff41..9a5148a 100644
-a/changed_cls_lwc_lines.txt 16 : 16 : 3290 : --          System.debug('Hello Hi');
-a/changed_cls_lwc_lines.txt 17 : 17 : 3291 : -+          System.debug('Hello');
-a/changed_cls_lwc_lines.txt 18 : 18 : 323 : index 1ec7a54..870d508 100644
-a/changed_cls_lwc_lines.txt 19 : 19 : 3272 : -          System.debug('Hi');
-a/changed_cls_lwc_lines.txt 20 : 20 : 3302 : deleted file mode 100644
-a/changed_cls_lwc_lines.txt 21 : 21 : 3303 : index e69de29..0000000
-a/changed_cls_lwc_lines.txt 22 : 22 : 3336 : deleted file mode 100644
-a/changed_cls_lwc_lines.txt 23 : 23 : 3337 : index fe51488..0000000
-a/changed_cls_lwc_lines.txt 24 : 24 : 3338 : --- a/scanner-reports/final-filtered-scanner-report.json
-a/changed_cls_lwc_lines.txt 25 : 25 : 3339 : @@ -1 +0,0 @@
-a/changed_cls_lwc_lines.txt 26 : 26 : 3340 : -[]
-a/changed_cls_lwc_lines.txt 27 : 27 : 3406 : deleted file mode 100644
-a/changed_cls_lwc_lines.txt 28 : 28 : 3407 : index e670f52..0000000
-a/changed_cls_lwc_lines.txt 29 : 29 : 3408 : --- a/scanner-reports/scanner-report-.json
-a/changed_cls_lwc_lines.txt 30 : 30 : 3409 : @@ -1 +0,0 @@
-a/changed_cls_lwc_lines.txt 31 : 31 : 3410 : -[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-a/changed_cls_lwc_lines.txt 32 : 32 : 70 :           System.debug('Hi');
-a/changed_cls_lwc_lines.txt 33 : 33 : -+@@ -52 +61 @@ while IFS= read -r file; do
-a/changed_cls_lwc_lines.txt 34 : 34 : -+-  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
-a/changed_cls_lwc_lines.txt 35 : 35 : -++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-a/changed_cls_lwc_lines.txt 36 : 36 : -+@@ -55 +64 @@ while IFS= read -r file; do
-a/changed_cls_lwc_lines.txt 37 : 37 : -+-  if [ ! -f "scanner-report-$file.json" ]; then
-a/changed_cls_lwc_lines.txt 38 : 38 : -++  if [ ! -f "$output_file" ]; then
-a/changed_cls_lwc_lines.txt 39 : 39 : -+@@ -64 +73 @@ while IFS= read -r file; do
-a/changed_cls_lwc_lines.txt 40 : 40 : -+-  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
-a/changed_cls_lwc_lines.txt 41 : 41 : -++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-a/changed_cls_lwc_lines.txt 42 : 42 : -+@@ -67 +76 @@ while IFS= read -r file; do
-a/changed_cls_lwc_lines.txt 43 : 43 : -+-  if [ ! -s "filtered-scanner-report-$file.json" ]; then
-a/changed_cls_lwc_lines.txt 44 : 44 : -++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-a/changed_cls_lwc_lines.txt 45 : 45 : -+@@ -73 +82 @@ while IFS= read -r file; do
-a/changed_cls_lwc_lines.txt 46 : 46 : -+-  cat "filtered-scanner-report-$file.json"
-a/changed_cls_lwc_lines.txt 47 : 47 : -++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-a/changed_cls_lwc_lines.txt 48 : 48 : -+@@ -78 +87 @@ done <<< "$changed_files"
-a/changed_cls_lwc_lines.txt 49 : 49 : -+-filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
-a/changed_cls_lwc_lines.txt 50 : 50 : -++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-a/changed_cls_lwc_lines.txt 51 : 51 : -+@@ -85 +94 @@ fi
-a/changed_cls_lwc_lines.txt 52 : 52 : -+-jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
-a/changed_cls_lwc_lines.txt 53 : 53 : -++jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-a/changed_cls_lwc_lines.txt 54 : 54 : -+@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
-a/changed_cls_lwc_lines.txt 55 : 55 : -+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
-a/changed_cls_lwc_lines.txt 56 : 56 : -++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-a/changed_cls_lwc_lines.txt 57 : 57 : -+diff --git a/changes.diff b/changes.diff
-a/changed_cls_lwc_lines.txt 58 : 58 : -@@ -3 +43 @@ new file mode 100644
-a/changed_cls_lwc_lines.txt 59 : 59 : --index 0000000..9b8d99e
-a/changed_cls_lwc_lines.txt 60 : 60 : -+index 0000000..dd57583
-a/changed_cls_lwc_lines.txt 61 : 61 : -@@ -5,102 +45,121 @@ index 0000000..9b8d99e
-a/changed_cls_lwc_lines.txt 62 : 62 : --+++ b/.husky/pre-commit
-a/changed_cls_lwc_lines.txt 63 : 63 : --@@ -0,0 +1,100 @@
-a/changed_cls_lwc_lines.txt 64 : 64 : --+#!/bin/bash
-a/changed_cls_lwc_lines.txt 65 : 65 : --+
-a/changed_cls_lwc_lines.txt 66 : 66 : --+# Prevent modification of Husky files
-a/changed_cls_lwc_lines.txt 67 : 67 : --+# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
-a/changed_cls_lwc_lines.txt 68 : 68 : --+#   echo "Error: pre-commit and post-commit files cannot be modified."
-a/changed_cls_lwc_lines.txt 69 : 69 : --+#   exit 1
-a/changed_cls_lwc_lines.txt 70 : 70 : --+# fi
-a/changed_cls_lwc_lines.txt 71 : 71 : --+# chmod 544 .husky/pre-commit
-a/changed_cls_lwc_lines.txt 72 : 72 : --+# chmod 544 .husky/post-commit
-a/changed_cls_lwc_lines.txt 73 : 73 : --+
-a/changed_cls_lwc_lines.txt 74 : 74 : --+# Check if Husky is installed
-a/changed_cls_lwc_lines.txt 75 : 75 : --+if ! command -v husky &> /dev/null
-a/changed_cls_lwc_lines.txt 76 : 76 : --+then
-a/changed_cls_lwc_lines.txt 77 : 77 : --+    echo "Husky is not installed. Installing Husky..."
-a/changed_cls_lwc_lines.txt 78 : 78 : --+    npm install husky --save-dev
-a/changed_cls_lwc_lines.txt 79 : 79 : --+    npx husky install
-a/changed_cls_lwc_lines.txt 80 : 80 : --+else
-a/changed_cls_lwc_lines.txt 81 : 81 : --+    echo "Husky is already installed Successfully."
-a/changed_cls_lwc_lines.txt 82 : 82 : --+fi
-a/changed_cls_lwc_lines.txt 83 : 83 : --+
-a/changed_cls_lwc_lines.txt 84 : 84 : --+# Get the list of changed Apex (.cls) or LWC files
-a/changed_cls_lwc_lines.txt 85 : 85 : --+changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
-a/changed_cls_lwc_lines.txt 86 : 86 : --+
-a/changed_cls_lwc_lines.txt 87 : 87 : --+# Check if there are any relevant changes
-a/changed_cls_lwc_lines.txt 88 : 88 : --+if [ -z "$changed_files" ]; then
-a/changed_cls_lwc_lines.txt 89 : 89 : --+  echo "No relevant changes to scan in the files."
-a/changed_cls_lwc_lines.txt 90 : 90 : --+  exit 0
-a/changed_cls_lwc_lines.txt 91 : 91 : --+fi
-a/changed_cls_lwc_lines.txt 92 : 92 : --+
-a/changed_cls_lwc_lines.txt 93 : 93 : --+# Extract the changed lines and corresponding line numbers from the diff for each file
-a/changed_cls_lwc_lines.txt 94 : 94 : --+git diff --unified=0 --cached > changes.diff
-a/changed_cls_lwc_lines.txt 95 : 95 : --+
-a/changed_cls_lwc_lines.txt 96 : 96 : --+# Loop through each changed file
-a/changed_cls_lwc_lines.txt 97 : 97 : --+while IFS= read -r file; do
-a/changed_cls_lwc_lines.txt 98 : 98 : --+  echo "Processing file: $file"
-a/changed_cls_lwc_lines.txt 99 : 99 : --+
-a/changed_cls_lwc_lines.txt 100 : 100 : --+  # Extract line numbers from the diff for this file
-a/changed_cls_lwc_lines.txt 101 : 101 : --+  changed_lines=$(awk -v file="$file" '
-a/changed_cls_lwc_lines.txt 102 : 102 : --+    BEGIN {inside=0}
-a/changed_cls_lwc_lines.txt 103 : 103 : --+    /^diff --git/ {inside=0}
-a/changed_cls_lwc_lines.txt 104 : 104 : --+    $0 ~ file {inside=1}
-a/changed_cls_lwc_lines.txt 105 : 105 : --+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
-a/changed_cls_lwc_lines.txt 106 : 106 : --+  ' changes.diff)
-a/changed_cls_lwc_lines.txt 107 : 107 : --+
-a/changed_cls_lwc_lines.txt 108 : 108 : --+  # If no line numbers were found for this file, skip it
-a/changed_cls_lwc_lines.txt 109 : 109 : --+  if [ -z "$changed_lines" ]; then
-a/changed_cls_lwc_lines.txt 110 : 110 : --+    echo "No changed lines found in $file"
-a/changed_cls_lwc_lines.txt 111 : 111 : --+    continue
-a/changed_cls_lwc_lines.txt 112 : 112 : --+  fi
-a/changed_cls_lwc_lines.txt 113 : 113 : --+
-a/changed_cls_lwc_lines.txt 114 : 114 : --+  # Run the SFDX scanner on the file and generate the report
-a/changed_cls_lwc_lines.txt 115 : 115 : --+  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
-a/changed_cls_lwc_lines.txt 116 : 116 : --+
-a/changed_cls_lwc_lines.txt 117 : 117 : --+  # Ensure that the scanner report was generated
-a/changed_cls_lwc_lines.txt 118 : 118 : --+  if [ ! -f "scanner-report-$file.json" ]; then
-a/changed_cls_lwc_lines.txt 119 : 119 : --+    echo "Scanner report for $file not found."
-a/changed_cls_lwc_lines.txt 120 : 120 : --+    continue
-a/changed_cls_lwc_lines.txt 121 : 121 : --+  fi
-a/changed_cls_lwc_lines.txt 122 : 122 : @@ -144,169 +149,25 @@ index dd57583..2bddfca 100644
-a/changed_cls_lwc_lines.txt 123 : 123 : --+  # Filter the scanner report based on the changed lines
-a/changed_cls_lwc_lines.txt 124 : 124 : --+  echo "Filtering scanner report for $file by changed lines..."
-a/changed_cls_lwc_lines.txt 125 : 125 : --+  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
-a/changed_cls_lwc_lines.txt 126 : 126 : --+    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
-a/changed_cls_lwc_lines.txt 127 : 127 : --+  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
-a/changed_cls_lwc_lines.txt 128 : 128 : --+
-a/changed_cls_lwc_lines.txt 129 : 129 : --+  # If no filtered report is found, skip
-a/changed_cls_lwc_lines.txt 130 : 130 : --+  if [ ! -s "filtered-scanner-report-$file.json" ]; then
-a/changed_cls_lwc_lines.txt 131 : 131 : --+    echo "No issues found for the changed lines in $file"
-a/changed_cls_lwc_lines.txt 132 : 132 : --+    continue
-a/changed_cls_lwc_lines.txt 133 : 133 : --+  fi
-a/changed_cls_lwc_lines.txt 134 : 134 : --+
-a/changed_cls_lwc_lines.txt 135 : 135 : --+  echo "Filtered scanner report for $file:"
-a/changed_cls_lwc_lines.txt 136 : 136 : --+  cat "filtered-scanner-report-$file.json"
-a/changed_cls_lwc_lines.txt 137 : 137 : --+
-a/changed_cls_lwc_lines.txt 138 : 138 : --+done <<< "$changed_files"
-a/changed_cls_lwc_lines.txt 139 : 139 : --+
-a/changed_cls_lwc_lines.txt 140 : 140 : --+# Check if any filtered reports were generated
-a/changed_cls_lwc_lines.txt 141 : 141 : --+filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
-a/changed_cls_lwc_lines.txt 142 : 142 : --+if [ -z "$filtered_reports" ]; then
-a/changed_cls_lwc_lines.txt 143 : 143 : --+  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
-a/changed_cls_lwc_lines.txt 144 : 144 : --+  exit 0
-a/changed_cls_lwc_lines.txt 145 : 145 : --+fi
-a/changed_cls_lwc_lines.txt 146 : 146 : --+
-a/changed_cls_lwc_lines.txt 147 : 147 : --+# Combine all filtered reports into one final report
-a/changed_cls_lwc_lines.txt 148 : 148 : --+jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
-a/changed_cls_lwc_lines.txt 149 : 149 : --+
-a/changed_cls_lwc_lines.txt 150 : 150 : --+# Parse the final filtered scanner report and check for severity 3 issues
-a/changed_cls_lwc_lines.txt 151 : 151 : --+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
-a/changed_cls_lwc_lines.txt 152 : 152 : --+
-a/changed_cls_lwc_lines.txt 153 : 153 : --+# Output the fail count for debugging
-a/changed_cls_lwc_lines.txt 154 : 154 : --+echo "Severity Fail Count: $severity_fail_count"
-a/changed_cls_lwc_lines.txt 155 : 155 : --+
-a/changed_cls_lwc_lines.txt 156 : 156 : --+# Block commit if there are severity 3 issues
-a/changed_cls_lwc_lines.txt 157 : 157 : --+if [ "$severity_fail_count" -gt 0 ]; then
-a/changed_cls_lwc_lines.txt 158 : 158 : --+  echo "Blocking your commit due to vulnerabilities found with severity 3."
-a/changed_cls_lwc_lines.txt 159 : 159 : --+  exit 1
-a/changed_cls_lwc_lines.txt 160 : 160 : --+else
-a/changed_cls_lwc_lines.txt 161 : 161 : --+  echo "No vulnerabilities found in changed lines. Proceeding with commit."
-a/changed_cls_lwc_lines.txt 162 : 162 : --+  exit 0
-a/changed_cls_lwc_lines.txt 163 : 163 : --+fi
-a/changed_cls_lwc_lines.txt 164 : 164 : -++++ b/changes.diff
-a/changed_cls_lwc_lines.txt 165 : 165 : -+@@ -0,0 +1,119 @@
-a/changed_cls_lwc_lines.txt 166 : 166 : -++diff --git a/.husky/pre-commit b/.husky/pre-commit
-a/changed_cls_lwc_lines.txt 167 : 167 : -++new file mode 100644
-a/changed_cls_lwc_lines.txt 168 : 168 : -++index 0000000..9b8d99e
-a/changed_cls_lwc_lines.txt 169 : 169 : -++--- /dev/null
-a/changed_cls_lwc_lines.txt 170 : 170 : -+++++ b/.husky/pre-commit
-a/changed_cls_lwc_lines.txt 171 : 171 : -++@@ -0,0 +1,100 @@
-a/changed_cls_lwc_lines.txt 172 : 172 : -+++#!/bin/bash
-a/changed_cls_lwc_lines.txt 173 : 173 : -+++
-a/changed_cls_lwc_lines.txt 174 : 174 : -+++# Prevent modification of Husky files
-a/changed_cls_lwc_lines.txt 175 : 175 : -+++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
-a/changed_cls_lwc_lines.txt 176 : 176 : -+++#   echo "Error: pre-commit and post-commit files cannot be modified."
-a/changed_cls_lwc_lines.txt 177 : 177 : -+++#   exit 1
-a/changed_cls_lwc_lines.txt 178 : 178 : -+++# fi
-a/changed_cls_lwc_lines.txt 179 : 179 : -+++# chmod 544 .husky/pre-commit
-a/changed_cls_lwc_lines.txt 180 : 180 : -+++# chmod 544 .husky/post-commit
-a/changed_cls_lwc_lines.txt 181 : 181 : -+++
-a/changed_cls_lwc_lines.txt 182 : 182 : -+++# Check if Husky is installed
-a/changed_cls_lwc_lines.txt 183 : 183 : -+++if ! command -v husky &> /dev/null
-a/changed_cls_lwc_lines.txt 184 : 184 : -+++then
-a/changed_cls_lwc_lines.txt 185 : 185 : -+++    echo "Husky is not installed. Installing Husky..."
-a/changed_cls_lwc_lines.txt 186 : 186 : -+++    npm install husky --save-dev
-a/changed_cls_lwc_lines.txt 187 : 187 : -+++    npx husky install
-a/changed_cls_lwc_lines.txt 188 : 188 : -+++else
-a/changed_cls_lwc_lines.txt 189 : 189 : -+++    echo "Husky is already installed Successfully."
-a/changed_cls_lwc_lines.txt 190 : 190 : -+++fi
-a/changed_cls_lwc_lines.txt 191 : 191 : -+++
-a/changed_cls_lwc_lines.txt 192 : 192 : -+++# Get the list of changed Apex (.cls) or LWC files
-a/changed_cls_lwc_lines.txt 193 : 193 : -+++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
-a/changed_cls_lwc_lines.txt 194 : 194 : -+++
-a/changed_cls_lwc_lines.txt 195 : 195 : -+++# Check if there are any relevant changes
-a/changed_cls_lwc_lines.txt 196 : 196 : -+++if [ -z "$changed_files" ]; then
-a/changed_cls_lwc_lines.txt 197 : 197 : -+++  echo "No relevant changes to scan in the files."
-a/changed_cls_lwc_lines.txt 198 : 198 : -+++  exit 0
-a/changed_cls_lwc_lines.txt 199 : 199 : -+++fi
-a/changed_cls_lwc_lines.txt 200 : 200 : -+++
-a/changed_cls_lwc_lines.txt 201 : 201 : -+++# Extract the changed lines and corresponding line numbers from the diff for each file
-a/changed_cls_lwc_lines.txt 202 : 202 : -+++git diff --unified=0 --cached > changes.diff
-a/changed_cls_lwc_lines.txt 203 : 203 : -+++
-a/changed_cls_lwc_lines.txt 204 : 204 : -+++# Loop through each changed file
-a/changed_cls_lwc_lines.txt 205 : 205 : -+++while IFS= read -r file; do
-a/changed_cls_lwc_lines.txt 206 : 206 : -+++  echo "Processing file: $file"
-a/changed_cls_lwc_lines.txt 207 : 207 : -+++
-a/changed_cls_lwc_lines.txt 208 : 208 : -+++  # Extract line numbers from the diff for this file
-a/changed_cls_lwc_lines.txt 209 : 209 : -+++  changed_lines=$(awk -v file="$file" '
-a/changed_cls_lwc_lines.txt 210 : 210 : -+++    BEGIN {inside=0}
-a/changed_cls_lwc_lines.txt 211 : 211 : -+++    /^diff --git/ {inside=0}
-a/changed_cls_lwc_lines.txt 212 : 212 : -+++    $0 ~ file {inside=1}
-a/changed_cls_lwc_lines.txt 213 : 213 : -+++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
-a/changed_cls_lwc_lines.txt 214 : 214 : -+++  ' changes.diff)
-a/changed_cls_lwc_lines.txt 215 : 215 : -+++
-a/changed_cls_lwc_lines.txt 216 : 216 : -+++  # If no line numbers were found for this file, skip it
-a/changed_cls_lwc_lines.txt 217 : 217 : -+++  if [ -z "$changed_lines" ]; then
-a/changed_cls_lwc_lines.txt 218 : 218 : -+++    echo "No changed lines found in $file"
-a/changed_cls_lwc_lines.txt 219 : 219 : -+++    continue
-a/changed_cls_lwc_lines.txt 220 : 220 : -+++  fi
-a/changed_cls_lwc_lines.txt 221 : 221 : -+++
-a/changed_cls_lwc_lines.txt 222 : 222 : -+++  # Run the SFDX scanner on the file and generate the report
-a/changed_cls_lwc_lines.txt 223 : 223 : -+++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
-a/changed_cls_lwc_lines.txt 224 : 224 : -+++
-a/changed_cls_lwc_lines.txt 225 : 225 : -+++  # Ensure that the scanner report was generated
-a/changed_cls_lwc_lines.txt 226 : 226 : -+++  if [ ! -f "scanner-report-$file.json" ]; then
-a/changed_cls_lwc_lines.txt 227 : 227 : -+++    echo "Scanner report for $file not found."
-a/changed_cls_lwc_lines.txt 228 : 228 : -+++    continue
-a/changed_cls_lwc_lines.txt 229 : 229 : -+++  fi
-a/changed_cls_lwc_lines.txt 230 : 230 : -+++
-a/changed_cls_lwc_lines.txt 231 : 231 : -+++  # Filter the scanner report based on the changed lines
-a/changed_cls_lwc_lines.txt 232 : 232 : -+++  echo "Filtering scanner report for $file by changed lines..."
-a/changed_cls_lwc_lines.txt 233 : 233 : -+++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
-a/changed_cls_lwc_lines.txt 234 : 234 : -+++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
-a/changed_cls_lwc_lines.txt 235 : 235 : -+++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
-a/changed_cls_lwc_lines.txt 236 : 236 : -+++
-a/changed_cls_lwc_lines.txt 237 : 237 : -+++  # If no filtered report is found, skip
-a/changed_cls_lwc_lines.txt 238 : 238 : -+++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
-a/changed_cls_lwc_lines.txt 239 : 239 : -+++    echo "No issues found for the changed lines in $file"
-a/changed_cls_lwc_lines.txt 240 : 240 : -+++    continue
-a/changed_cls_lwc_lines.txt 241 : 241 : -+++  fi
-a/changed_cls_lwc_lines.txt 242 : 242 : -+++
-a/changed_cls_lwc_lines.txt 243 : 243 : -+++  echo "Filtered scanner report for $file:"
-a/changed_cls_lwc_lines.txt 244 : 244 : -+++  cat "filtered-scanner-report-$file.json"
-a/changed_cls_lwc_lines.txt 245 : 245 : -+++
-a/changed_cls_lwc_lines.txt 246 : 246 : -+++done <<< "$changed_files"
-a/changed_cls_lwc_lines.txt 247 : 247 : -+++
-a/changed_cls_lwc_lines.txt 248 : 248 : -+++# Check if any filtered reports were generated
-a/changed_cls_lwc_lines.txt 249 : 249 : -+++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
-a/changed_cls_lwc_lines.txt 250 : 250 : -+++if [ -z "$filtered_reports" ]; then
-a/changed_cls_lwc_lines.txt 251 : 251 : -+++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
-a/changed_cls_lwc_lines.txt 252 : 252 : -+++  exit 0
-a/changed_cls_lwc_lines.txt 253 : 253 : -+++fi
-a/changed_cls_lwc_lines.txt 254 : 254 : -+++
-a/changed_cls_lwc_lines.txt 255 : 255 : -+++# Combine all filtered reports into one final report
-a/changed_cls_lwc_lines.txt 256 : 256 : -+++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
-a/changed_cls_lwc_lines.txt 257 : 257 : -+++
-a/changed_cls_lwc_lines.txt 258 : 258 : -+++# Parse the final filtered scanner report and check for severity 3 issues
-a/changed_cls_lwc_lines.txt 259 : 259 : -+++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
-a/changed_cls_lwc_lines.txt 260 : 260 : -+++
-a/changed_cls_lwc_lines.txt 261 : 261 : -+++# Output the fail count for debugging
-a/changed_cls_lwc_lines.txt 262 : 262 : -+++echo "Severity Fail Count: $severity_fail_count"
-a/changed_cls_lwc_lines.txt 263 : 263 : -+++
-a/changed_cls_lwc_lines.txt 264 : 264 : -+++# Block commit if there are severity 3 issues
-a/changed_cls_lwc_lines.txt 265 : 265 : -+++if [ "$severity_fail_count" -gt 0 ]; then
-a/changed_cls_lwc_lines.txt 266 : 266 : -+++  echo "Blocking your commit due to vulnerabilities found with severity 3."
-a/changed_cls_lwc_lines.txt 267 : 267 : -+++  exit 1
-a/changed_cls_lwc_lines.txt 268 : 268 : -+++else
-a/changed_cls_lwc_lines.txt 269 : 269 : -+++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
-a/changed_cls_lwc_lines.txt 270 : 270 : -+++  exit 0
-a/changed_cls_lwc_lines.txt 271 : 271 : -+++fi
-a/changed_cls_lwc_lines.txt 272 : 272 : -++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-a/changed_cls_lwc_lines.txt 273 : 273 : -++index 1e62ed4..14cff41 100644
-a/changed_cls_lwc_lines.txt 274 : 274 : -++--- a/force-app/main/default/classes/Account_Insert.cls
-a/changed_cls_lwc_lines.txt 275 : 275 : -+++++ b/force-app/main/default/classes/Account_Insert.cls
-a/changed_cls_lwc_lines.txt 276 : 276 : -++@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
-a/changed_cls_lwc_lines.txt 277 : 277 : -+++          System.debug('Hello Hi');
-a/changed_cls_lwc_lines.txt 278 : 278 : -++diff --git a/scanner-report.json b/scanner-report.json
-a/changed_cls_lwc_lines.txt 279 : 279 : -++new file mode 100644
-a/changed_cls_lwc_lines.txt 280 : 280 : -++index 0000000..8a298a1
-a/changed_cls_lwc_lines.txt 281 : 281 : -++--- /dev/null
-a/changed_cls_lwc_lines.txt 282 : 282 : -+++++ b/scanner-report.json
-a/changed_cls_lwc_lines.txt 283 : 283 : -++@@ -0,0 +1 @@
-a/changed_cls_lwc_lines.txt 284 : 284 : -+++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-a/changed_cls_lwc_lines.txt 285 : 285 : -@@ -108 +167 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-a/changed_cls_lwc_lines.txt 286 : 286 : --index 1e62ed4..14cff41 100644
-a/changed_cls_lwc_lines.txt 287 : 287 : -+index 14cff41..9a5148a 100644
-a/changed_cls_lwc_lines.txt 288 : 288 : -@@ -111,9 +170,3 @@ index 1e62ed4..14cff41 100644
-a/changed_cls_lwc_lines.txt 289 : 289 : --@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
-a/changed_cls_lwc_lines.txt 290 : 290 : --+          System.debug('Hello Hi');
-a/changed_cls_lwc_lines.txt 291 : 291 : --diff --git a/scanner-report.json b/scanner-report.json
-a/changed_cls_lwc_lines.txt 292 : 292 : @@ -314 +175 @@ index dd57583..2bddfca 100644
-a/changed_cls_lwc_lines.txt 293 : 293 : --index 0000000..8a298a1
-a/changed_cls_lwc_lines.txt 294 : 294 : @@ -316,6 +177,429 @@ index dd57583..2bddfca 100644
-a/changed_cls_lwc_lines.txt 295 : 295 : --+++ b/scanner-report.json
-a/changed_cls_lwc_lines.txt 296 : 296 : --@@ -0,0 +1 @@
-a/changed_cls_lwc_lines.txt 297 : 297 : --+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-a/changed_cls_lwc_lines.txt 298 : 298 : -+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-a/changed_cls_lwc_lines.txt 299 : 299 : -+-          System.debug('Hello Hi');
-a/changed_cls_lwc_lines.txt 300 : 300 : -++          System.debug('Hello');
-a/changed_cls_lwc_lines.txt 301 : 301 : @@ -323 +607 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-a/changed_cls_lwc_lines.txt 302 : 302 : -index 9a5148a..1ec7a54 100644
-a/changed_cls_lwc_lines.txt 303 : 303 : @@ -327,2 +611,2 @@ index 9a5148a..1ec7a54 100644
-a/changed_cls_lwc_lines.txt 304 : 304 : --          System.debug('Hello');
-a/changed_cls_lwc_lines.txt 305 : 305 : -+          System.debug('Hi');
-a/changed_cls_lwc_lines.txt 306 : 306 : @@ -330,2 +614,2 @@ diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/fil
-a/changed_cls_lwc_lines.txt 307 : 307 : -new file mode 100644
-a/changed_cls_lwc_lines.txt 308 : 308 : -index 0000000..e69de29
-a/changed_cls_lwc_lines.txt 309 : 309 : @@ -333,6 +617,6 @@ diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-report
-a/changed_cls_lwc_lines.txt 310 : 310 : -new file mode 100644
-a/changed_cls_lwc_lines.txt 311 : 311 : -index 0000000..fe51488
-a/changed_cls_lwc_lines.txt 312 : 312 : ---- /dev/null
-a/changed_cls_lwc_lines.txt 313 : 313 : -+++ b/scanner-reports/final-filtered-scanner-report.json
-a/changed_cls_lwc_lines.txt 314 : 314 : -@@ -0,0 +1 @@
-a/changed_cls_lwc_lines.txt 315 : 315 : -+[]
-a/changed_cls_lwc_lines.txt 316 : 316 : @@ -340,6 +624,6 @@ diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-repo
-a/changed_cls_lwc_lines.txt 317 : 317 : -new file mode 100644
-a/changed_cls_lwc_lines.txt 318 : 318 : -index 0000000..e670f52
-a/changed_cls_lwc_lines.txt 319 : 319 : ---- /dev/null
-a/changed_cls_lwc_lines.txt 320 : 320 : -+++ b/scanner-reports/scanner-report-.json
-a/changed_cls_lwc_lines.txt 321 : 321 : -@@ -0,0 +1 @@
-a/changed_cls_lwc_lines.txt 322 : 322 : -+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-a/changed_cls_lwc_lines.txt 323 : 607 : index 870d508..1ec7a54 100644
-a/changed_cls_lwc_lines.txt 324 : 61119 : -          System.debug('Hi Hello');
-a/changed_cls_lwc_lines.txt 325 : 61120 : diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-a/changed_cls_lwc_lines.txt 326 : 61121 : new file mode 100644
-a/changed_cls_lwc_lines.txt 327 : 61122 : index 0000000..cd70445
-a/changed_cls_lwc_lines.txt 328 : 61123 : --- /dev/null
-a/changed_cls_lwc_lines.txt 329 : 61124 : @@ -0,0 +1 @@
-a/changed_cls_lwc_lines.txt 330 : 70 :           System.debug('Hi Hello');
-a/changes.diff 239 : index 6223d95..dfdd9f6 100644
-a/changes.diff 24330 : -index 4433528..439f404 100644
-a/changes.diff 24331 : @@ -5,40 +5,17 @@ index 4433528..439f404 100644
-a/changes.diff 24332 : -@@ -4,6 +4 @@
-a/changes.diff 24333 : --# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
-a/changes.diff 24334 : --#   echo "Error: pre-commit and post-commit files cannot be modified."
-a/changes.diff 24335 : --#   exit 1
-a/changes.diff 24336 : --# fi
-a/changes.diff 24337 : --# chmod 544 .husky/pre-commit
-a/changes.diff 24338 : --# chmod 544 .husky/post-commit
-a/changes.diff 24339 : -+# ...
-a/changes.diff 24340 : -@@ -12,8 +7 @@
-a/changes.diff 24341 : --if ! command -v husky &> /dev/null
-a/changes.diff 24342 : --then
-a/changes.diff 24343 : --    echo "Husky is not installed. Installing Husky..."
-a/changes.diff 24344 : --    npm install husky --save-dev
-a/changes.diff 24345 : --    npx husky install
-a/changes.diff 24346 : --else
-a/changes.diff 24347 : --    echo "Husky is already installed successfully."
-a/changes.diff 24348 : --fi
-a/changes.diff 24349 : -+# ...
-a/changes.diff 24350 : -@@ -36,6 +24,16 @@ git diff --unified=0 --cached > changes.diff
-a/changes.diff 24351 : --# Loop through each changed file
-a/changes.diff 24352 : --while IFS= read -r file; do
-a/changes.diff 24353 : --  echo "Processing file: $file"
-a/changes.diff 24354 : --
-a/changes.diff 24355 : --  # Remove leading slashes to make it compatible with file path
-a/changes.diff 24356 : --  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
-a/changes.diff 24357 : -+# Extract and print only the changed lines and line numbers from .cls and .lwc files
-a/changes.diff 24358 : -+echo "Processing changes for .cls and .lwc files only..."
-a/changes.diff 24359 : -+awk '
-a/changes.diff 24360 : -+  BEGIN {valid_file=0; file=""}
-a/changes.diff 24361 : -+  /^diff --git/ {valid_file=0}
-a/changes.diff 24362 : -+  /^diff --git a\/.* b\/(.*)/ {file=$3; sub(/^b\//,"",file)}
-a/changes.diff 24363 : -+  $0 ~ /\.cls$|\.lwc$/ {valid_file=1}
-a/changes.diff 24364 : -+  /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}
-a/changes.diff 24365 : -+  /^[+][^+]/ && valid_file {print file, start + line_offset++, ":", substr($0, 2)}
-a/changes.diff 24366 : -+' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
-a/changes.diff 24367 : -+
-a/changes.diff 24368 : -+# Check if any relevant changes were found in .cls or .lwc files
-a/changes.diff 24369 : -+if [ ! -s changed_cls_lwc_lines.txt ]; then
-a/changes.diff 24370 : -+  echo "No changes detected in .cls or .lwc files."
-a/changes.diff 24371 : -+  exit 0
-a/changes.diff 24372 : @@ -46,18 +23,19 @@ index 4433528..439f404 100644
-a/changes.diff 24373 : -@@ -43,8 +41 @@ while IFS= read -r file; do
-a/changes.diff 24374 : --  # Extract the changed lines and corresponding line numbers
-a/changes.diff 24375 : --  awk '
-a/changes.diff 24376 : --    BEGIN {valid_file=0} 
-a/changes.diff 24377 : --    /^diff --git/ {valid_file=0} 
-a/changes.diff 24378 : --    $0 ~ /\.cls$|\.lwc$/ {valid_file=1} 
-a/changes.diff 24379 : --    /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
-a/changes.diff 24380 : --    /^[+][^+]/ && valid_file {print start + line_offset++, ":", substr($0, 2)}  
-a/changes.diff 24381 : --  ' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
-a/changes.diff 24382 : -+cat changed_cls_lwc_lines.txt
-a/changes.diff 24383 : -@@ -52,5 +43,5 @@ while IFS= read -r file; do
-a/changes.diff 24384 : --  # If no lines are found for this file, skip it
-a/changes.diff 24385 : --  if [ ! -s changed_cls_lwc_lines.txt ]; then
-a/changes.diff 24386 : --    echo "No changed lines found in $file"
-a/changes.diff 24387 : --    continue
-a/changes.diff 24388 : --  fi
-a/changes.diff 24389 : -+# Process each file
-a/changes.diff 24390 : -+for file in $changed_files; do
-a/changes.diff 2744 : @@ -65,7 +43,18 @@ index 4433528..439f404 100644
-a/changes.diff 2745 : -+  clean_file=$(basename "$file")
-a/changes.diff 2746 : -+  echo "Clean file: $clean_file"
-a/changes.diff 2747 : -@@ -70,2 +61,10 @@ while IFS= read -r file; do
-a/changes.diff 2748 : --  # Read the changed lines from the file for filtering
-a/changes.diff 2749 : --  changed_lines=$(cut -d':' -f1 changed_cls_lwc_lines.txt | tr '\n' ' ')
-a/changes.diff 2750 : -+  # Extract line numbers for this file
-a/changes.diff 2751 : -+  line_numbers=$(grep "^$file " changed_cls_lwc_lines.txt | cut -d':' -f1 | awk '{print $2}' | tr '\n' ' ')
-a/changes.diff 27947 : @@ -73 +62,2 @@ index 4433528..439f404 100644
-a/changes.diff 27948 : -+  if [ -z "$line_numbers" ]; then
-a/changes.diff 27949 : @@ -77,9 +67,8 @@ index 4433528..439f404 100644
-a/changes.diff 27950 : -+
-a/changes.diff 27951 : -+  # Generate the select expression for jq
-a/changes.diff 27952 : -+  select_expression=$(echo "$line_numbers" | awk '{for(i=1;i<=NF;i++) printf ".line == %s%s", $i, (i<NF ? " or " : "")}')
-a/changes.diff 27953 : -@@ -75,2 +74,2 @@ while IFS= read -r file; do
-a/changes.diff 27954 : --  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
-a/changes.diff 27955 : --    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
-a/changes.diff 27956 : -+  jq '
-a/changes.diff 27957 : -+    .[] | .violations[]? | select('"$select_expression"')
-a/changes.diff 27958 : -@@ -87,2 +86 @@ while IFS= read -r file; do
-a/changes.diff 32915 : @@ -87,5 +76,19 @@ index 4433528..439f404 100644
-a/changes.diff 32916 : --done <<< "$changed_files"
-a/changes.diff 32917 : -+done
-a/changes.diff 32918 : -@@ -101 +99 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-a/changes.diff 32919 : --severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-a/changes.diff 32920 : -+severity_fail_count=$(jq '[.[].severity | select(. == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-a/changes.diff 345208 : @@ -93,3 +96,2 @@ diff --git a/changed_cls_lwc_lines.txt b/changed_cls_lwc_lines.txt
-a/changes.diff 345209 : -new file mode 100644
-a/changes.diff 345210 : -index 0000000..1210cb6
-a/changes.diff 345211 : ---- /dev/null
-a/changes.diff 345212 : @@ -97,5 +99,139 @@ index 0000000..1210cb6
-a/changes.diff 345213 : -@@ -0,0 +1,4 @@
-a/changes.diff 345214 : -+108 : index 14cff41..9a5148a 100644
-a/changes.diff 345215 : -+1119 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-a/changes.diff 345216 : -+1120 : -          System.debug('Hello Hi');
-a/changes.diff 345217 : -+70 :           System.debug('Hi');
-a/changes.diff 345218 : @@ -103 +239 @@ diff --git a/changes.diff b/changes.diff
-a/changes.diff 345219 : -index 2bddfca..b1d3858 100644
-a/changes.diff 345220 : @@ -107,17 +243,110 @@ index 2bddfca..b1d3858 100644
-a/changes.diff 345221 : --index 9b8d99e..d68baeb 100644
-a/changes.diff 345222 : -+index d68baeb..4433528 100644
-a/changes.diff 345223 : -@@ -5,3 +5,22 @@ index 9b8d99e..d68baeb 100644
-a/changes.diff 345224 : --@@ -29,0 +30,3 @@ fi
-a/changes.diff 345225 : --+# Create a directory for scanner reports if it doesn't exist
-a/changes.diff 345226 : --+mkdir -p scanner-reports
-a/changes.diff 345227 : -+@@ -18 +18 @@ else
-a/changes.diff 345228 : -+-    echo "Husky is already installed Successfully."
-a/changes.diff 345229 : -++    echo "Husky is already installed successfully."
-a/changes.diff 345230 : -+@@ -43,10 +43,11 @@ while IFS= read -r file; do
-a/changes.diff 345231 : -+-  # Extract line numbers from the diff for this file
-a/changes.diff 345232 : -+-  changed_lines=$(awk -v file="$file" '
-a/changes.diff 345233 : -+-    BEGIN {inside=0}
-a/changes.diff 345234 : -+-    /^diff --git/ {inside=0}
-a/changes.diff 345235 : -+-    $0 ~ file {inside=1}
-a/changes.diff 345236 : -+-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
-a/changes.diff 345237 : -+-  ' changes.diff)
-a/changes.diff 345238 : @@ -125,159 +354,26 @@ index 2bddfca..b1d3858 100644
-a/changes.diff 345239 : -+-  # If no line numbers were found for this file, skip it
-a/changes.diff 345240 : -+-  if [ -z "$changed_lines" ]; then
-a/changes.diff 345241 : -++  # Extract the changed lines and corresponding line numbers
-a/changes.diff 345242 : -++  awk '
-a/changes.diff 345243 : -++    BEGIN {valid_file=0} 
-a/changes.diff 345244 : -++    /^diff --git/ {valid_file=0} 
-a/changes.diff 345245 : -++    $0 ~ /\.cls$|\.lwc$/ {valid_file=1} 
-a/changes.diff 345246 : -++    /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
-a/changes.diff 345247 : -++    /^[+][^+]/ && valid_file {print start + line_offset++, ":", substr($0, 2)}  
-a/changes.diff 345248 : -++  ' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
-a/changes.diff 345249 : -@@ -9,3 +28,5 @@ index 9b8d99e..d68baeb 100644
-a/changes.diff 345250 : --@@ -36,0 +40,3 @@ while IFS= read -r file; do
-a/changes.diff 345251 : --+  # Remove leading slashes to make it compatible with file path
-a/changes.diff 345252 : --+  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
-a/changes.diff 345253 : -++  # If no lines are found for this file, skip it
-a/changes.diff 345254 : -++  if [ ! -s changed_cls_lwc_lines.txt ]; then
-a/changes.diff 345255 : -+@@ -68,0 +70,3 @@ while IFS= read -r file; do
-a/changes.diff 345256 : -++  # Read the changed lines from the file for filtering
-a/changes.diff 345257 : -++  changed_lines=$(cut -d':' -f1 changed_cls_lwc_lines.txt | tr '\n' ' ')
-a/changes.diff 345258 : -@@ -13,28 +33,0 @@ index 9b8d99e..d68baeb 100644
-a/changes.diff 345259 : --@@ -50,0 +57,3 @@ while IFS= read -r file; do
-a/changes.diff 345260 : --+  # Define the output path for the scanner report
-a/changes.diff 345261 : --+  output_file="scanner-reports/scanner-report-${clean_file}.json"
-a/changes.diff 554583 : --@@ -52 +61 @@ while IFS= read -r file; do
-a/changes.diff 554584 : ---  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
-a/changes.diff 554585 : --+  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-a/changes.diff 554586 : --@@ -55 +64 @@ while IFS= read -r file; do
-a/changes.diff 554587 : ---  if [ ! -f "scanner-report-$file.json" ]; then
-a/changes.diff 554588 : --+  if [ ! -f "$output_file" ]; then
-a/changes.diff 554589 : --@@ -64 +73 @@ while IFS= read -r file; do
-a/changes.diff 554590 : ---  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
-a/changes.diff 554591 : --+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-a/changes.diff 554592 : --@@ -67 +76 @@ while IFS= read -r file; do
-a/changes.diff 554593 : ---  if [ ! -s "filtered-scanner-report-$file.json" ]; then
-a/changes.diff 554594 : --+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-a/changes.diff 554595 : --@@ -73 +82 @@ while IFS= read -r file; do
-a/changes.diff 554596 : ---  cat "filtered-scanner-report-$file.json"
-a/changes.diff 554597 : --+  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-a/changes.diff 554598 : --@@ -78 +87 @@ done <<< "$changed_files"
-a/changes.diff 554599 : ---filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
-a/changes.diff 554600 : --+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-a/changes.diff 554601 : --@@ -85 +94 @@ fi
-a/changes.diff 554602 : ---jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
-a/changes.diff 554603 : --+jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-a/changes.diff 554604 : --@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
-a/changes.diff 554605 : ---severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
-a/changes.diff 554606 : --+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-a/changes.diff 554607 : -@@ -42,3 +35,2 @@ diff --git a/changes.diff b/changes.diff
-a/changes.diff 554608 : --new file mode 100644
-a/changes.diff 554609 : --index 0000000..dd57583
-a/changes.diff 554610 : ----- /dev/null
-a/changes.diff 554611 : -+index dd57583..2bddfca 100644
-a/changes.diff 554612 : -+--- a/changes.diff
-a/changes.diff 554613 : -@@ -46,5 +38,3 @@ index 0000000..dd57583
-a/changes.diff 554614 : --@@ -0,0 +1,119 @@
-a/changes.diff 554615 : --+diff --git a/.husky/pre-commit b/.husky/pre-commit
-a/changes.diff 554616 : --+new file mode 100644
-a/changes.diff 554617 : --+index 0000000..9b8d99e
-a/changes.diff 554618 : --+--- /dev/null
-a/changes.diff 554619 : -+@@ -1,0 +2,40 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-a/changes.diff 554620 : -++index 9b8d99e..d68baeb 100644
-a/changes.diff 554621 : -++--- a/.husky/pre-commit
-a/changes.diff 554622 : -@@ -52,53 +42,3 @@ index 0000000..dd57583
-a/changes.diff 554623 : --+@@ -0,0 +1,100 @@
-a/changes.diff 554624 : --++#!/bin/bash
-a/changes.diff 554625 : --++
-a/changes.diff 554626 : --++# Prevent modification of Husky files
-a/changes.diff 554627 : --++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
-a/changes.diff 554628 : --++#   echo "Error: pre-commit and post-commit files cannot be modified."
-a/changes.diff 554629 : --++#   exit 1
-a/changes.diff 554630 : --++# fi
-a/changes.diff 554631 : --++# chmod 544 .husky/pre-commit
-a/changes.diff 554632 : --++# chmod 544 .husky/post-commit
-a/changes.diff 554633 : --++
-a/changes.diff 554634 : --++# Check if Husky is installed
-a/changes.diff 554635 : --++if ! command -v husky &> /dev/null
-a/changes.diff 554636 : --++then
-a/changes.diff 554637 : --++    echo "Husky is not installed. Installing Husky..."
-a/changes.diff 554638 : --++    npm install husky --save-dev
-a/changes.diff 554639 : --++    npx husky install
-a/changes.diff 554640 : --++else
-a/changes.diff 554641 : --++    echo "Husky is already installed Successfully."
-a/changes.diff 554642 : --++fi
-a/changes.diff 554643 : --++
-a/changes.diff 554644 : --++# Get the list of changed Apex (.cls) or LWC files
-a/changes.diff 554645 : --++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
-a/changes.diff 554646 : --++
-a/changes.diff 554647 : --++# Check if there are any relevant changes
-a/changes.diff 554648 : --++if [ -z "$changed_files" ]; then
-a/changes.diff 554649 : --++  echo "No relevant changes to scan in the files."
-a/changes.diff 554650 : --++  exit 0
-a/changes.diff 554651 : --++fi
-a/changes.diff 554652 : --++
-a/changes.diff 554653 : --++# Extract the changed lines and corresponding line numbers from the diff for each file
-a/changes.diff 554654 : --++git diff --unified=0 --cached > changes.diff
-a/changes.diff 554655 : --++
-a/changes.diff 554656 : --++# Loop through each changed file
-a/changes.diff 554657 : --++while IFS= read -r file; do
-a/changes.diff 554658 : --++  echo "Processing file: $file"
-a/changes.diff 554659 : --++
-a/changes.diff 554660 : --++  # Extract line numbers from the diff for this file
-a/changes.diff 554661 : --++  changed_lines=$(awk -v file="$file" '
-a/changes.diff 554662 : --++    BEGIN {inside=0}
-a/changes.diff 554663 : --++    /^diff --git/ {inside=0}
-a/changes.diff 554664 : --++    $0 ~ file {inside=1}
-a/changes.diff 554665 : --++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
-a/changes.diff 554666 : --++  ' changes.diff)
-a/changes.diff 554667 : --++
-a/changes.diff 554668 : --++  # If no line numbers were found for this file, skip it
-a/changes.diff 554669 : --++  if [ -z "$changed_lines" ]; then
-a/changes.diff 554670 : --++    echo "No changed lines found in $file"
-a/changes.diff 554671 : --++    continue
-a/changes.diff 554672 : --++  fi
-a/changes.diff 554673 : --++
-a/changes.diff 554674 : --++  # Run the SFDX scanner on the file and generate the report
-a/changes.diff 554675 : --++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
-a/changes.diff 554676 : -++@@ -29,0 +30,3 @@ fi
-a/changes.diff 554677 : -+++# Create a directory for scanner reports if it doesn't exist
-a/changes.diff 554678 : -+++mkdir -p scanner-reports
-a/changes.diff 554679 : -@@ -106,5 +46,3 @@ index 0000000..dd57583
-a/changes.diff 554680 : --++  # Ensure that the scanner report was generated
-a/changes.diff 554681 : --++  if [ ! -f "scanner-report-$file.json" ]; then
-a/changes.diff 554682 : --++    echo "Scanner report for $file not found."
-a/changes.diff 554683 : --++    continue
-a/changes.diff 554684 : --++  fi
-a/changes.diff 554685 : -++@@ -36,0 +40,3 @@ while IFS= read -r file; do
-a/changes.diff 554686 : -+++  # Remove leading slashes to make it compatible with file path
-a/changes.diff 554687 : -+++  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
-a/changes.diff 554688 : -@@ -112,5 +50,3 @@ index 0000000..dd57583
-a/changes.diff 554689 : --++  # Filter the scanner report based on the changed lines
-a/changes.diff 554690 : --++  echo "Filtering scanner report for $file by changed lines..."
-a/changes.diff 554691 : --++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
-a/changes.diff 554692 : --++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
-a/changes.diff 554693 : --++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
-a/changes.diff 554694 : -++@@ -50,0 +57,3 @@ while IFS= read -r file; do
-a/changes.diff 554695 : -+++  # Define the output path for the scanner report
-a/changes.diff 554696 : -+++  output_file="scanner-reports/scanner-report-${clean_file}.json"
-a/changes.diff 554697 : -@@ -118,48 +54,268 @@ index 0000000..dd57583
-a/changes.diff 554698 : --++  # If no filtered report is found, skip
-a/changes.diff 554699 : --++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
-a/changes.diff 554700 : --++    echo "No issues found for the changed lines in $file"
-a/changes.diff 554701 : --++    continue
-a/changes.diff 554702 : --++  fi
-a/changes.diff 554703 : --++
-a/changes.diff 554704 : --++  echo "Filtered scanner report for $file:"
-a/changes.diff 554705 : --++  cat "filtered-scanner-report-$file.json"
-a/changes.diff 554706 : --++
-a/changes.diff 554707 : --++done <<< "$changed_files"
-a/changes.diff 554708 : --++
-a/changes.diff 554709 : --++# Check if any filtered reports were generated
-a/changes.diff 554710 : --++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
-a/changes.diff 554711 : --++if [ -z "$filtered_reports" ]; then
-a/changes.diff 554712 : --++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
-a/changes.diff 554713 : --++  exit 0
-a/changes.diff 554714 : --++fi
-a/changes.diff 554715 : --++
-a/changes.diff 554716 : --++# Combine all filtered reports into one final report
-a/changes.diff 554717 : --++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
-a/changes.diff 114350 : @@ -285,2 +381,3 @@ index 2bddfca..b1d3858 100644
-a/changes.diff 114351 : --++# Parse the final filtered scanner report and check for severity 3 issues
-a/changes.diff 114352 : --++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
-a/changes.diff 114353 : @@ -288,2 +385,3 @@ index 2bddfca..b1d3858 100644
-a/changes.diff 114354 : --++# Output the fail count for debugging
-a/changes.diff 114355 : --++echo "Severity Fail Count: $severity_fail_count"
-a/changes.diff 114356 : @@ -291,315 +389,804 @@ index 2bddfca..b1d3858 100644
-a/changes.diff 114357 : --++# Block commit if there are severity 3 issues
-a/changes.diff 114358 : --++if [ "$severity_fail_count" -gt 0 ]; then
-a/changes.diff 114359 : --++  echo "Blocking your commit due to vulnerabilities found with severity 3."
-a/changes.diff 114360 : --++  exit 1
-a/changes.diff 114361 : --++else
-a/changes.diff 114362 : --++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
-a/changes.diff 114363 : --++  exit 0
-a/changes.diff 114364 : --++fi
-a/changes.diff 114365 : --+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-a/changes.diff 114366 : --+index 1e62ed4..14cff41 100644
-a/changes.diff 114367 : --+--- a/force-app/main/default/classes/Account_Insert.cls
-a/changes.diff 114368 : --++++ b/force-app/main/default/classes/Account_Insert.cls
-a/changes.diff 114369 : --+@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
-a/changes.diff 114370 : --++          System.debug('Hello Hi');
-a/changes.diff 114371 : --+diff --git a/scanner-report.json b/scanner-report.json
-a/changes.diff 114372 : --+new file mode 100644
-a/changes.diff 114373 : --+index 0000000..8a298a1
-a/changes.diff 114374 : --+--- /dev/null
-a/changes.diff 114375 : --++++ b/scanner-report.json
-a/changes.diff 114376 : --+@@ -0,0 +1 @@
-a/changes.diff 114377 : --++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-a/changes.diff 114378 : -++@@ -52 +61 @@ while IFS= read -r file; do
-a/changes.diff 114379 : -++-  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
-a/changes.diff 114380 : -+++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-a/changes.diff 114381 : -++@@ -55 +64 @@ while IFS= read -r file; do
-a/changes.diff 114382 : -++-  if [ ! -f "scanner-report-$file.json" ]; then
-a/changes.diff 114383 : -+++  if [ ! -f "$output_file" ]; then
-a/changes.diff 114384 : -++@@ -64 +73 @@ while IFS= read -r file; do
-a/changes.diff 114385 : -++-  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
-a/changes.diff 114386 : -+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-a/changes.diff 114387 : -++@@ -67 +76 @@ while IFS= read -r file; do
-a/changes.diff 114388 : -++-  if [ ! -s "filtered-scanner-report-$file.json" ]; then
-a/changes.diff 114389 : -+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-a/changes.diff 114390 : -++@@ -73 +82 @@ while IFS= read -r file; do
-a/changes.diff 114391 : -++-  cat "filtered-scanner-report-$file.json"
-a/changes.diff 114392 : -+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-a/changes.diff 114393 : -++@@ -78 +87 @@ done <<< "$changed_files"
-a/changes.diff 114394 : -++-filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
-a/changes.diff 114395 : -+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-a/changes.diff 114396 : -++@@ -85 +94 @@ fi
-a/changes.diff 114397 : -++-jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
-a/changes.diff 114398 : -+++jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-a/changes.diff 114399 : -++@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
-a/changes.diff 114400 : -++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
-a/changes.diff 114401 : -+++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-a/changes.diff 114402 : -++diff --git a/changes.diff b/changes.diff
-a/changes.diff 114403 : -+@@ -3 +43 @@ new file mode 100644
-a/changes.diff 114404 : -+-index 0000000..9b8d99e
-a/changes.diff 114405 : -++index 0000000..dd57583
-a/changes.diff 114406 : -+@@ -5,102 +45,121 @@ index 0000000..9b8d99e
-a/changes.diff 114407 : -+-+++ b/.husky/pre-commit
-a/changes.diff 114408 : -+-@@ -0,0 +1,100 @@
-a/changes.diff 114409 : -+-+#!/bin/bash
-a/changes.diff 114410 : -+-+
-a/changes.diff 114411 : -+-+# Prevent modification of Husky files
-a/changes.diff 114412 : -+-+# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
-a/changes.diff 114413 : -+-+#   echo "Error: pre-commit and post-commit files cannot be modified."
-a/changes.diff 114414 : -+-+#   exit 1
-a/changes.diff 114415 : -+-+# fi
-a/changes.diff 114416 : -+-+# chmod 544 .husky/pre-commit
-a/changes.diff 114417 : -+-+# chmod 544 .husky/post-commit
-a/changes.diff 114418 : -+-+
-a/changes.diff 114419 : -+-+# Check if Husky is installed
-a/changes.diff 114420 : -+-+if ! command -v husky &> /dev/null
-a/changes.diff 114421 : -+-+then
-a/changes.diff 114422 : -+-+    echo "Husky is not installed. Installing Husky..."
-a/changes.diff 114423 : -+-+    npm install husky --save-dev
-a/changes.diff 114424 : -+-+    npx husky install
-a/changes.diff 114425 : -+-+else
-a/changes.diff 114426 : -+-+    echo "Husky is already installed Successfully."
-a/changes.diff 114427 : -+-+fi
-a/changes.diff 114428 : -+-+
-a/changes.diff 114429 : -+-+# Get the list of changed Apex (.cls) or LWC files
-a/changes.diff 114430 : -+-+changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
-a/changes.diff 114431 : -+-+
-a/changes.diff 114432 : -+-+# Check if there are any relevant changes
-a/changes.diff 114433 : -+-+if [ -z "$changed_files" ]; then
-a/changes.diff 114434 : -+-+  echo "No relevant changes to scan in the files."
-a/changes.diff 114435 : -+-+  exit 0
-a/changes.diff 114436 : -+-+fi
-a/changes.diff 114437 : -+-+
-a/changes.diff 114438 : -+-+# Extract the changed lines and corresponding line numbers from the diff for each file
-a/changes.diff 114439 : -+-+git diff --unified=0 --cached > changes.diff
-a/changes.diff 114440 : -+-+
-a/changes.diff 114441 : -+-+# Loop through each changed file
-a/changes.diff 114442 : -+-+while IFS= read -r file; do
-a/changes.diff 114443 : -+-+  echo "Processing file: $file"
-a/changes.diff 114444 : -+-+
-a/changes.diff 114445 : -+-+  # Extract line numbers from the diff for this file
-a/changes.diff 114446 : -+-+  changed_lines=$(awk -v file="$file" '
-a/changes.diff 114447 : -+-+    BEGIN {inside=0}
-a/changes.diff 114448 : -+-+    /^diff --git/ {inside=0}
-a/changes.diff 114449 : -+-+    $0 ~ file {inside=1}
-a/changes.diff 114450 : -+-+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
-a/changes.diff 114451 : -+-+  ' changes.diff)
-a/changes.diff 114452 : -+-+
-a/changes.diff 114453 : -+-+  # If no line numbers were found for this file, skip it
-a/changes.diff 114454 : -+-+  if [ -z "$changed_lines" ]; then
-a/changes.diff 114455 : -+-+    echo "No changed lines found in $file"
-a/changes.diff 114456 : -+-+    continue
-a/changes.diff 114457 : -+-+  fi
-a/changes.diff 114458 : -+-+
-a/changes.diff 114459 : -+-+  # Run the SFDX scanner on the file and generate the report
-a/changes.diff 114460 : -+-+  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
-a/changes.diff 114461 : -+-+
-a/changes.diff 114462 : -+-+  # Ensure that the scanner report was generated
-a/changes.diff 114463 : -+-+  if [ ! -f "scanner-report-$file.json" ]; then
-a/changes.diff 114464 : -+-+    echo "Scanner report for $file not found."
-a/changes.diff 114465 : -+-+    continue
-a/changes.diff 114466 : -+-+  fi
-a/changes.diff 114467 : -+-+
-a/changes.diff 114468 : -+-+  # Filter the scanner report based on the changed lines
-a/changes.diff 114469 : -+-+  echo "Filtering scanner report for $file by changed lines..."
-a/changes.diff 114470 : -+-+  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
-a/changes.diff 114471 : -+-+    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
-a/changes.diff 114472 : -+-+  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
-a/changes.diff 114473 : -+-+
-a/changes.diff 114474 : -+-+  # If no filtered report is found, skip
-a/changes.diff 114475 : -+-+  if [ ! -s "filtered-scanner-report-$file.json" ]; then
-a/changes.diff 114476 : -+-+    echo "No issues found for the changed lines in $file"
-a/changes.diff 114477 : -+-+    continue
-a/changes.diff 114478 : -+-+  fi
-a/changes.diff 114479 : -+-+
-a/changes.diff 114480 : -+-+  echo "Filtered scanner report for $file:"
-a/changes.diff 114481 : -+-+  cat "filtered-scanner-report-$file.json"
-a/changes.diff 114482 : -+-+
-a/changes.diff 114483 : -+-+done <<< "$changed_files"
-a/changes.diff 114484 : -+-+
-a/changes.diff 114485 : -+-+# Check if any filtered reports were generated
-a/changes.diff 114486 : -+-+filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
-a/changes.diff 114487 : -+-+if [ -z "$filtered_reports" ]; then
-a/changes.diff 114488 : -+-+  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
-a/changes.diff 114489 : -+-+  exit 0
-a/changes.diff 114490 : -+-+fi
-a/changes.diff 114491 : -+-+
-a/changes.diff 114492 : -+-+# Combine all filtered reports into one final report
-a/changes.diff 114493 : -+-+jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
-a/changes.diff 114494 : -+-+
-a/changes.diff 114495 : -+-+# Parse the final filtered scanner report and check for severity 3 issues
-a/changes.diff 114496 : -+-+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
-a/changes.diff 114497 : -+-+
-a/changes.diff 114498 : -+-+# Output the fail count for debugging
-a/changes.diff 114499 : -+-+echo "Severity Fail Count: $severity_fail_count"
-a/changes.diff 114500 : -+-+
-a/changes.diff 114501 : -+-+# Block commit if there are severity 3 issues
-a/changes.diff 114502 : -+-+if [ "$severity_fail_count" -gt 0 ]; then
-a/changes.diff 114503 : -+-+  echo "Blocking your commit due to vulnerabilities found with severity 3."
-a/changes.diff 114504 : -+-+  exit 1
-a/changes.diff 114505 : -+-+else
-a/changes.diff 114506 : -+-+  echo "No vulnerabilities found in changed lines. Proceeding with commit."
-a/changes.diff 114507 : -+-+  exit 0
-a/changes.diff 114508 : -+-+fi
-a/changes.diff 114509 : -+++++ b/changes.diff
-a/changes.diff 114510 : -++@@ -0,0 +1,119 @@
-a/changes.diff 114511 : -+++diff --git a/.husky/pre-commit b/.husky/pre-commit
-a/changes.diff 114512 : -+++new file mode 100644
-a/changes.diff 114513 : -+++index 0000000..9b8d99e
-a/changes.diff 114514 : -+++--- /dev/null
-a/changes.diff 114515 : -++++++ b/.husky/pre-commit
-a/changes.diff 114516 : -+++@@ -0,0 +1,100 @@
-a/changes.diff 114517 : -++++#!/bin/bash
-a/changes.diff 114518 : -++++
-a/changes.diff 114519 : -++++# Prevent modification of Husky files
-a/changes.diff 114520 : -++++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
-a/changes.diff 114521 : -++++#   echo "Error: pre-commit and post-commit files cannot be modified."
-a/changes.diff 114522 : -++++#   exit 1
-a/changes.diff 114523 : -++++# fi
-a/changes.diff 114524 : -++++# chmod 544 .husky/pre-commit
-a/changes.diff 114525 : -++++# chmod 544 .husky/post-commit
-a/changes.diff 114526 : -++++
-a/changes.diff 114527 : -++++# Check if Husky is installed
-a/changes.diff 114528 : -++++if ! command -v husky &> /dev/null
-a/changes.diff 114529 : -++++then
-a/changes.diff 114530 : -++++    echo "Husky is not installed. Installing Husky..."
-a/changes.diff 114531 : -++++    npm install husky --save-dev
-a/changes.diff 114532 : -++++    npx husky install
-a/changes.diff 114533 : -++++else
-a/changes.diff 114534 : -++++    echo "Husky is already installed Successfully."
-a/changes.diff 114535 : -++++fi
-a/changes.diff 114536 : -++++
-a/changes.diff 114537 : -++++# Get the list of changed Apex (.cls) or LWC files
-a/changes.diff 114538 : -++++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
-a/changes.diff 114539 : -++++
-a/changes.diff 114540 : -++++# Check if there are any relevant changes
-a/changes.diff 114541 : -++++if [ -z "$changed_files" ]; then
-a/changes.diff 114542 : -++++  echo "No relevant changes to scan in the files."
-a/changes.diff 114543 : -++++  exit 0
-a/changes.diff 114544 : -++++fi
-a/changes.diff 114545 : -++++
-a/changes.diff 114546 : -++++# Extract the changed lines and corresponding line numbers from the diff for each file
-a/changes.diff 114547 : -++++git diff --unified=0 --cached > changes.diff
-a/changes.diff 114548 : -++++
-a/changes.diff 114549 : -++++# Loop through each changed file
-a/changes.diff 114550 : -++++while IFS= read -r file; do
-a/changes.diff 114551 : -++++  echo "Processing file: $file"
-a/changes.diff 114552 : -++++
-a/changes.diff 114553 : -++++  # Extract line numbers from the diff for this file
-a/changes.diff 114554 : -++++  changed_lines=$(awk -v file="$file" '
-a/changes.diff 114555 : -++++    BEGIN {inside=0}
-a/changes.diff 114556 : -++++    /^diff --git/ {inside=0}
-a/changes.diff 114557 : -++++    $0 ~ file {inside=1}
-a/changes.diff 114558 : -++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
-a/changes.diff 114559 : -++++  ' changes.diff)
-a/changes.diff 114560 : -++++
-a/changes.diff 114561 : -++++  # If no line numbers were found for this file, skip it
-a/changes.diff 114562 : -++++  if [ -z "$changed_lines" ]; then
-a/changes.diff 114563 : -++++    echo "No changed lines found in $file"
-a/changes.diff 114564 : -++++    continue
-a/changes.diff 114565 : -++++  fi
-a/changes.diff 114566 : -++++
-a/changes.diff 114567 : -++++  # Run the SFDX scanner on the file and generate the report
-a/changes.diff 114568 : -++++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
-a/changes.diff 114569 : -++++
-a/changes.diff 114570 : -++++  # Ensure that the scanner report was generated
-a/changes.diff 114571 : -++++  if [ ! -f "scanner-report-$file.json" ]; then
-a/changes.diff 114572 : -++++    echo "Scanner report for $file not found."
-a/changes.diff 114573 : -++++    continue
-a/changes.diff 114574 : -++++  fi
-a/changes.diff 114575 : -++++
-a/changes.diff 114576 : -++++  # Filter the scanner report based on the changed lines
-a/changes.diff 114577 : -++++  echo "Filtering scanner report for $file by changed lines..."
-a/changes.diff 114578 : -++++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
-a/changes.diff 114579 : -++++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
-a/changes.diff 114580 : -++++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
-a/changes.diff 114581 : -++++
-a/changes.diff 114582 : -++++  # If no filtered report is found, skip
-a/changes.diff 114583 : -++++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
-a/changes.diff 114584 : -++++    echo "No issues found for the changed lines in $file"
-a/changes.diff 114585 : -++++    continue
-a/changes.diff 114586 : -++++  fi
-a/changes.diff 114587 : -++++
-a/changes.diff 114588 : -++++  echo "Filtered scanner report for $file:"
-a/changes.diff 114589 : -++++  cat "filtered-scanner-report-$file.json"
-a/changes.diff 114590 : -++++
-a/changes.diff 114591 : -++++done <<< "$changed_files"
-a/changes.diff 114592 : -++++
-a/changes.diff 114593 : -++++# Check if any filtered reports were generated
-a/changes.diff 114594 : -++++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
-a/changes.diff 114595 : -++++if [ -z "$filtered_reports" ]; then
-a/changes.diff 114596 : -++++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
-a/changes.diff 114597 : -++++  exit 0
-a/changes.diff 114598 : -++++fi
-a/changes.diff 114599 : -++++
-a/changes.diff 114600 : -++++# Combine all filtered reports into one final report
-a/changes.diff 114601 : -++++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
-a/changes.diff 114602 : -++++
-a/changes.diff 114603 : -++++# Parse the final filtered scanner report and check for severity 3 issues
-a/changes.diff 114604 : -++++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
-a/changes.diff 114605 : -++++
-a/changes.diff 114606 : -++++# Output the fail count for debugging
-a/changes.diff 114607 : -++++echo "Severity Fail Count: $severity_fail_count"
-a/changes.diff 114608 : -++++
-a/changes.diff 114609 : -++++# Block commit if there are severity 3 issues
-a/changes.diff 114610 : -++++if [ "$severity_fail_count" -gt 0 ]; then
-a/changes.diff 114611 : -++++  echo "Blocking your commit due to vulnerabilities found with severity 3."
-a/changes.diff 114612 : -++++  exit 1
-a/changes.diff 114613 : -++++else
-a/changes.diff 114614 : -++++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
-a/changes.diff 114615 : -++++  exit 0
-a/changes.diff 114616 : -++++fi
-a/changes.diff 114617 : -+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-a/changes.diff 114618 : -+++index 1e62ed4..14cff41 100644
-a/changes.diff 114619 : -+++--- a/force-app/main/default/classes/Account_Insert.cls
-a/changes.diff 114620 : -++++++ b/force-app/main/default/classes/Account_Insert.cls
-a/changes.diff 114621 : -+++@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
-a/changes.diff 114622 : -++++          System.debug('Hello Hi');
-a/changes.diff 114623 : -+++diff --git a/scanner-report.json b/scanner-report.json
-a/changes.diff 114624 : -+++new file mode 100644
-a/changes.diff 114625 : -+++index 0000000..8a298a1
-a/changes.diff 114626 : -+++--- /dev/null
-a/changes.diff 114627 : -++++++ b/scanner-report.json
-a/changes.diff 114628 : -+++@@ -0,0 +1 @@
-a/changes.diff 114629 : -++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-a/changes.diff 114630 : -+@@ -108 +167 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-a/changes.diff 114631 : -+-index 1e62ed4..14cff41 100644
-a/changes.diff 114632 : -++index 14cff41..9a5148a 100644
-a/changes.diff 114633 : -+@@ -111,9 +170,3 @@ index 1e62ed4..14cff41 100644
-a/changes.diff 114634 : -+-@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
-a/changes.diff 114635 : -+-+          System.debug('Hello Hi');
-a/changes.diff 114636 : -+-diff --git a/scanner-report.json b/scanner-report.json
-a/changes.diff 114637 : -+-new file mode 100644
-a/changes.diff 114638 : -+-index 0000000..8a298a1
-a/changes.diff 114639 : -+---- /dev/null
-a/changes.diff 114640 : -+-+++ b/scanner-report.json
-a/changes.diff 114641 : -+-@@ -0,0 +1 @@
-a/changes.diff 114642 : -+-+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-a/changes.diff 114643 : -++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-a/changes.diff 114644 : -++-          System.debug('Hello Hi');
-a/changes.diff 114645 : -+++          System.debug('Hello');
-a/changes.diff 114646 : -@@ -167 +323 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-a/changes.diff 114647 : --index 14cff41..9a5148a 100644
-a/changes.diff 114648 : -+index 9a5148a..1ec7a54 100644
-a/changes.diff 114649 : -@@ -171,2 +327,20 @@ index 14cff41..9a5148a 100644
-a/changes.diff 114650 : ---          System.debug('Hello Hi');
-a/changes.diff 114651 : --+          System.debug('Hello');
-a/changes.diff 114652 : -+-          System.debug('Hello');
-a/changes.diff 114653 : -++          System.debug('Hi');
-a/changes.diff 114654 : -+diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/filtered-scanner-report-.json
-a/changes.diff 114655 : -+new file mode 100644
-a/changes.diff 114656 : -+index 0000000..e69de29
-a/changes.diff 114657 : -+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-a/changes.diff 114658 : -+new file mode 100644
-a/changes.diff 114659 : -+index 0000000..fe51488
-a/changes.diff 114660 : -+--- /dev/null
-a/changes.diff 114661 : -++++ b/scanner-reports/final-filtered-scanner-report.json
-a/changes.diff 114662 : -+@@ -0,0 +1 @@
-a/changes.diff 114663 : -++[]
-a/changes.diff 114664 : -+diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-report-.json
-a/changes.diff 114665 : -+new file mode 100644
-a/changes.diff 114666 : -+index 0000000..e670f52
-a/changes.diff 114667 : -+--- /dev/null
-a/changes.diff 114668 : -++++ b/scanner-reports/scanner-report-.json
-a/changes.diff 114669 : -+@@ -0,0 +1 @@
-a/changes.diff 114670 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-a/changes.diff 114671 : -+\ No newline at end of file
-a/changes.diff 114672 : @@ -607 +1194 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-a/changes.diff 114673 : -index 1ec7a54..870d508 100644
-a/changes.diff 114674 : @@ -611,19 +1198,9 @@ index 1ec7a54..870d508 100644
-a/changes.diff 114675 : --          System.debug('Hi');
-a/changes.diff 114676 : -+          System.debug('Hi Hello');
-a/changes.diff 114677 : -diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/filtered-scanner-report-.json
-a/changes.diff 114678 : -deleted file mode 100644
-a/changes.diff 114679 : -index e69de29..0000000
-a/changes.diff 114680 : -diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-a/changes.diff 114681 : -deleted file mode 100644
-a/changes.diff 114682 : -index fe51488..0000000
-a/changes.diff 114683 : ---- a/scanner-reports/final-filtered-scanner-report.json
-a/changes.diff 114684 : -+++ /dev/null
-a/changes.diff 114685 : -@@ -1 +0,0 @@
-a/changes.diff 114686 : --[]
-a/changes.diff 114687 : -diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-report-.json
-a/changes.diff 114688 : -deleted file mode 100644
-a/changes.diff 114689 : -index e670f52..0000000
-a/changes.diff 114690 : ---- a/scanner-reports/scanner-report-.json
-a/changes.diff 114691 : -+++ /dev/null
-a/changes.diff 114692 : -@@ -1 +0,0 @@
-a/changes.diff 114693 : --[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-a/changes.diff 1194 : index 1ec7a54..870d508 100644
-a/changes.diff 11982 : -          System.debug('Hi');
-a/changes.diff 12016 : deleted file mode 100644
-a/changes.diff 12017 : index cd70445..0000000
-a/changes.diff 12018 : --- a/scanner-reports/scanner-report-Account_Insert.cls.json
-a/changes.diff 12019 : @@ -1 +0,0 @@
-a/changes.diff 12020 : -[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-a/force-app/main/default/classes/Account_Insert.cls 70 :           System.debug('Hi');
+Line 0 : Line 0 : Line 21 :           System.debug('Hello Hi');
+Line 1 : Line 1 : @@ -0,0 +1,97 @@
+Line 2 : Line 8833 : index 6d35ef2..90803a9 100644
+Line 3 : Line 88364 : @@ -21 +21 @@ public with sharing class AccountInsertClass {
+Line 4 : Line 88365 : -          System.debug('Hello');
+Line 5 : Line 21 :           System.debug('Hello Hi');
+Line 6 : Line 240 :       System.debug('Hello');
+Line 7 : -a/changed_cls_lwc_lines.txt 0 : 0 : 3274 : -+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 8 : -a/changed_cls_lwc_lines.txt 1 : 1 : 3275 : -+index 1e62ed4..14cff41 100644
+Line 9 : -a/changed_cls_lwc_lines.txt 2 : 2 : 3276 : -+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 10 : -a/changed_cls_lwc_lines.txt 3 : 3 : 3277 : -++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 11 : -a/changed_cls_lwc_lines.txt 4 : 4 : 3278 : -+@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+Line 12 : -a/changed_cls_lwc_lines.txt 5 : 5 : 3279 : -++          System.debug('Hello Hi');
+Line 13 : -a/changed_cls_lwc_lines.txt 6 : 6 : 3280 : -+diff --git a/scanner-report.json b/scanner-report.json
+Line 14 : -a/changed_cls_lwc_lines.txt 7 : 7 : 3281 : -+new file mode 100644
+Line 15 : -a/changed_cls_lwc_lines.txt 8 : 8 : 3282 : -+index 0000000..8a298a1
+Line 16 : -a/changed_cls_lwc_lines.txt 9 : 9 : 3283 : -+--- /dev/null
+Line 17 : -a/changed_cls_lwc_lines.txt 10 : 10 : 3284 : -++++ b/scanner-report.json
+Line 18 : -a/changed_cls_lwc_lines.txt 11 : 11 : 3285 : -+@@ -0,0 +1 @@
+Line 19 : -a/changed_cls_lwc_lines.txt 12 : 12 : 3286 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 20 : -a/changed_cls_lwc_lines.txt 13 : 13 : 3287 : @@ -167 +323 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 21 : -a/changed_cls_lwc_lines.txt 14 : 14 : 3288 : -index 14cff41..9a5148a 100644
+Line 22 : -a/changed_cls_lwc_lines.txt 15 : 15 : 3289 : @@ -171,2 +327,20 @@ index 14cff41..9a5148a 100644
+Line 23 : -a/changed_cls_lwc_lines.txt 16 : 16 : 3290 : --          System.debug('Hello Hi');
+Line 24 : -a/changed_cls_lwc_lines.txt 17 : 17 : 3291 : -+          System.debug('Hello');
+Line 25 : -a/changed_cls_lwc_lines.txt 18 : 18 : 323 : index 1ec7a54..870d508 100644
+Line 26 : -a/changed_cls_lwc_lines.txt 19 : 19 : 3272 : -          System.debug('Hi');
+Line 27 : -a/changed_cls_lwc_lines.txt 20 : 20 : 3302 : deleted file mode 100644
+Line 28 : -a/changed_cls_lwc_lines.txt 21 : 21 : 3303 : index e69de29..0000000
+Line 29 : -a/changed_cls_lwc_lines.txt 22 : 22 : 3336 : deleted file mode 100644
+Line 30 : -a/changed_cls_lwc_lines.txt 23 : 23 : 3337 : index fe51488..0000000
+Line 31 : -a/changed_cls_lwc_lines.txt 24 : 24 : 3338 : --- a/scanner-reports/final-filtered-scanner-report.json
+Line 32 : -a/changed_cls_lwc_lines.txt 25 : 25 : 3339 : @@ -1 +0,0 @@
+Line 33 : -a/changed_cls_lwc_lines.txt 26 : 26 : 3340 : -[]
+Line 34 : -a/changed_cls_lwc_lines.txt 27 : 27 : 3406 : deleted file mode 100644
+Line 35 : -a/changed_cls_lwc_lines.txt 28 : 28 : 3407 : index e670f52..0000000
+Line 36 : -a/changed_cls_lwc_lines.txt 29 : 29 : 3408 : --- a/scanner-reports/scanner-report-.json
+Line 37 : -a/changed_cls_lwc_lines.txt 30 : 30 : 3409 : @@ -1 +0,0 @@
+Line 38 : -a/changed_cls_lwc_lines.txt 31 : 31 : 3410 : -[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 39 : -a/changed_cls_lwc_lines.txt 32 : 32 : 70 :           System.debug('Hi');
+Line 40 : -a/changed_cls_lwc_lines.txt 33 : 33 : -+@@ -52 +61 @@ while IFS= read -r file; do
+Line 41 : -a/changed_cls_lwc_lines.txt 34 : 34 : -+-  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+Line 42 : -a/changed_cls_lwc_lines.txt 35 : 35 : -++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 43 : -a/changed_cls_lwc_lines.txt 36 : 36 : -+@@ -55 +64 @@ while IFS= read -r file; do
+Line 44 : -a/changed_cls_lwc_lines.txt 37 : 37 : -+-  if [ ! -f "scanner-report-$file.json" ]; then
+Line 45 : -a/changed_cls_lwc_lines.txt 38 : 38 : -++  if [ ! -f "$output_file" ]; then
+Line 46 : -a/changed_cls_lwc_lines.txt 39 : 39 : -+@@ -64 +73 @@ while IFS= read -r file; do
+Line 47 : -a/changed_cls_lwc_lines.txt 40 : 40 : -+-  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+Line 48 : -a/changed_cls_lwc_lines.txt 41 : 41 : -++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 49 : -a/changed_cls_lwc_lines.txt 42 : 42 : -+@@ -67 +76 @@ while IFS= read -r file; do
+Line 50 : -a/changed_cls_lwc_lines.txt 43 : 43 : -+-  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+Line 51 : -a/changed_cls_lwc_lines.txt 44 : 44 : -++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 52 : -a/changed_cls_lwc_lines.txt 45 : 45 : -+@@ -73 +82 @@ while IFS= read -r file; do
+Line 53 : -a/changed_cls_lwc_lines.txt 46 : 46 : -+-  cat "filtered-scanner-report-$file.json"
+Line 54 : -a/changed_cls_lwc_lines.txt 47 : 47 : -++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 55 : -a/changed_cls_lwc_lines.txt 48 : 48 : -+@@ -78 +87 @@ done <<< "$changed_files"
+Line 56 : -a/changed_cls_lwc_lines.txt 49 : 49 : -+-filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+Line 57 : -a/changed_cls_lwc_lines.txt 50 : 50 : -++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 58 : -a/changed_cls_lwc_lines.txt 51 : 51 : -+@@ -85 +94 @@ fi
+Line 59 : -a/changed_cls_lwc_lines.txt 52 : 52 : -+-jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+Line 60 : -a/changed_cls_lwc_lines.txt 53 : 53 : -++jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 61 : -a/changed_cls_lwc_lines.txt 54 : 54 : -+@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+Line 62 : -a/changed_cls_lwc_lines.txt 55 : 55 : -+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+Line 63 : -a/changed_cls_lwc_lines.txt 56 : 56 : -++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 64 : -a/changed_cls_lwc_lines.txt 57 : 57 : -+diff --git a/changes.diff b/changes.diff
+Line 65 : -a/changed_cls_lwc_lines.txt 58 : 58 : -@@ -3 +43 @@ new file mode 100644
+Line 66 : -a/changed_cls_lwc_lines.txt 59 : 59 : --index 0000000..9b8d99e
+Line 67 : -a/changed_cls_lwc_lines.txt 60 : 60 : -+index 0000000..dd57583
+Line 68 : -a/changed_cls_lwc_lines.txt 61 : 61 : -@@ -5,102 +45,121 @@ index 0000000..9b8d99e
+Line 69 : -a/changed_cls_lwc_lines.txt 62 : 62 : --+++ b/.husky/pre-commit
+Line 70 : -a/changed_cls_lwc_lines.txt 63 : 63 : --@@ -0,0 +1,100 @@
+Line 71 : -a/changed_cls_lwc_lines.txt 64 : 64 : --+#!/bin/bash
+Line 72 : -a/changed_cls_lwc_lines.txt 65 : 65 : --+
+Line 73 : -a/changed_cls_lwc_lines.txt 66 : 66 : --+# Prevent modification of Husky files
+Line 74 : -a/changed_cls_lwc_lines.txt 67 : 67 : --+# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+Line 75 : -a/changed_cls_lwc_lines.txt 68 : 68 : --+#   echo "Error: pre-commit and post-commit files cannot be modified."
+Line 76 : -a/changed_cls_lwc_lines.txt 69 : 69 : --+#   exit 1
+Line 77 : -a/changed_cls_lwc_lines.txt 70 : 70 : --+# fi
+Line 78 : -a/changed_cls_lwc_lines.txt 71 : 71 : --+# chmod 544 .husky/pre-commit
+Line 79 : -a/changed_cls_lwc_lines.txt 72 : 72 : --+# chmod 544 .husky/post-commit
+Line 80 : -a/changed_cls_lwc_lines.txt 73 : 73 : --+
+Line 81 : -a/changed_cls_lwc_lines.txt 74 : 74 : --+# Check if Husky is installed
+Line 82 : -a/changed_cls_lwc_lines.txt 75 : 75 : --+if ! command -v husky &> /dev/null
+Line 83 : -a/changed_cls_lwc_lines.txt 76 : 76 : --+then
+Line 84 : -a/changed_cls_lwc_lines.txt 77 : 77 : --+    echo "Husky is not installed. Installing Husky..."
+Line 85 : -a/changed_cls_lwc_lines.txt 78 : 78 : --+    npm install husky --save-dev
+Line 86 : -a/changed_cls_lwc_lines.txt 79 : 79 : --+    npx husky install
+Line 87 : -a/changed_cls_lwc_lines.txt 80 : 80 : --+else
+Line 88 : -a/changed_cls_lwc_lines.txt 81 : 81 : --+    echo "Husky is already installed Successfully."
+Line 89 : -a/changed_cls_lwc_lines.txt 82 : 82 : --+fi
+Line 90 : -a/changed_cls_lwc_lines.txt 83 : 83 : --+
+Line 91 : -a/changed_cls_lwc_lines.txt 84 : 84 : --+# Get the list of changed Apex (.cls) or LWC files
+Line 92 : -a/changed_cls_lwc_lines.txt 85 : 85 : --+changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
+Line 93 : -a/changed_cls_lwc_lines.txt 86 : 86 : --+
+Line 94 : -a/changed_cls_lwc_lines.txt 87 : 87 : --+# Check if there are any relevant changes
+Line 95 : -a/changed_cls_lwc_lines.txt 88 : 88 : --+if [ -z "$changed_files" ]; then
+Line 96 : -a/changed_cls_lwc_lines.txt 89 : 89 : --+  echo "No relevant changes to scan in the files."
+Line 97 : -a/changed_cls_lwc_lines.txt 90 : 90 : --+  exit 0
+Line 98 : -a/changed_cls_lwc_lines.txt 91 : 91 : --+fi
+Line 99 : -a/changed_cls_lwc_lines.txt 92 : 92 : --+
+Line 100 : -a/changed_cls_lwc_lines.txt 93 : 93 : --+# Extract the changed lines and corresponding line numbers from the diff for each file
+Line 101 : -a/changed_cls_lwc_lines.txt 94 : 94 : --+git diff --unified=0 --cached > changes.diff
+Line 102 : -a/changed_cls_lwc_lines.txt 95 : 95 : --+
+Line 103 : -a/changed_cls_lwc_lines.txt 96 : 96 : --+# Loop through each changed file
+Line 104 : -a/changed_cls_lwc_lines.txt 97 : 97 : --+while IFS= read -r file; do
+Line 105 : -a/changed_cls_lwc_lines.txt 98 : 98 : --+  echo "Processing file: $file"
+Line 106 : -a/changed_cls_lwc_lines.txt 99 : 99 : --+
+Line 107 : -a/changed_cls_lwc_lines.txt 100 : 100 : --+  # Extract line numbers from the diff for this file
+Line 108 : -a/changed_cls_lwc_lines.txt 101 : 101 : --+  changed_lines=$(awk -v file="$file" '
+Line 109 : -a/changed_cls_lwc_lines.txt 102 : 102 : --+    BEGIN {inside=0}
+Line 110 : -a/changed_cls_lwc_lines.txt 103 : 103 : --+    /^diff --git/ {inside=0}
+Line 111 : -a/changed_cls_lwc_lines.txt 104 : 104 : --+    $0 ~ file {inside=1}
+Line 112 : -a/changed_cls_lwc_lines.txt 105 : 105 : --+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+Line 113 : -a/changed_cls_lwc_lines.txt 106 : 106 : --+  ' changes.diff)
+Line 114 : -a/changed_cls_lwc_lines.txt 107 : 107 : --+
+Line 115 : -a/changed_cls_lwc_lines.txt 108 : 108 : --+  # If no line numbers were found for this file, skip it
+Line 116 : -a/changed_cls_lwc_lines.txt 109 : 109 : --+  if [ -z "$changed_lines" ]; then
+Line 117 : -a/changed_cls_lwc_lines.txt 110 : 110 : --+    echo "No changed lines found in $file"
+Line 118 : -a/changed_cls_lwc_lines.txt 111 : 111 : --+    continue
+Line 119 : -a/changed_cls_lwc_lines.txt 112 : 112 : --+  fi
+Line 120 : -a/changed_cls_lwc_lines.txt 113 : 113 : --+
+Line 121 : -a/changed_cls_lwc_lines.txt 114 : 114 : --+  # Run the SFDX scanner on the file and generate the report
+Line 122 : -a/changed_cls_lwc_lines.txt 115 : 115 : --+  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+Line 123 : -a/changed_cls_lwc_lines.txt 116 : 116 : --+
+Line 124 : -a/changed_cls_lwc_lines.txt 117 : 117 : --+  # Ensure that the scanner report was generated
+Line 125 : -a/changed_cls_lwc_lines.txt 118 : 118 : --+  if [ ! -f "scanner-report-$file.json" ]; then
+Line 126 : -a/changed_cls_lwc_lines.txt 119 : 119 : --+    echo "Scanner report for $file not found."
+Line 127 : -a/changed_cls_lwc_lines.txt 120 : 120 : --+    continue
+Line 128 : -a/changed_cls_lwc_lines.txt 121 : 121 : --+  fi
+Line 129 : -a/changed_cls_lwc_lines.txt 122 : 122 : @@ -144,169 +149,25 @@ index dd57583..2bddfca 100644
+Line 130 : -a/changed_cls_lwc_lines.txt 123 : 123 : --+  # Filter the scanner report based on the changed lines
+Line 131 : -a/changed_cls_lwc_lines.txt 124 : 124 : --+  echo "Filtering scanner report for $file by changed lines..."
+Line 132 : -a/changed_cls_lwc_lines.txt 125 : 125 : --+  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+Line 133 : -a/changed_cls_lwc_lines.txt 126 : 126 : --+    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+Line 134 : -a/changed_cls_lwc_lines.txt 127 : 127 : --+  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+Line 135 : -a/changed_cls_lwc_lines.txt 128 : 128 : --+
+Line 136 : -a/changed_cls_lwc_lines.txt 129 : 129 : --+  # If no filtered report is found, skip
+Line 137 : -a/changed_cls_lwc_lines.txt 130 : 130 : --+  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+Line 138 : -a/changed_cls_lwc_lines.txt 131 : 131 : --+    echo "No issues found for the changed lines in $file"
+Line 139 : -a/changed_cls_lwc_lines.txt 132 : 132 : --+    continue
+Line 140 : -a/changed_cls_lwc_lines.txt 133 : 133 : --+  fi
+Line 141 : -a/changed_cls_lwc_lines.txt 134 : 134 : --+
+Line 142 : -a/changed_cls_lwc_lines.txt 135 : 135 : --+  echo "Filtered scanner report for $file:"
+Line 143 : -a/changed_cls_lwc_lines.txt 136 : 136 : --+  cat "filtered-scanner-report-$file.json"
+Line 144 : -a/changed_cls_lwc_lines.txt 137 : 137 : --+
+Line 145 : -a/changed_cls_lwc_lines.txt 138 : 138 : --+done <<< "$changed_files"
+Line 146 : -a/changed_cls_lwc_lines.txt 139 : 139 : --+
+Line 147 : -a/changed_cls_lwc_lines.txt 140 : 140 : --+# Check if any filtered reports were generated
+Line 148 : -a/changed_cls_lwc_lines.txt 141 : 141 : --+filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+Line 149 : -a/changed_cls_lwc_lines.txt 142 : 142 : --+if [ -z "$filtered_reports" ]; then
+Line 150 : -a/changed_cls_lwc_lines.txt 143 : 143 : --+  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
+Line 151 : -a/changed_cls_lwc_lines.txt 144 : 144 : --+  exit 0
+Line 152 : -a/changed_cls_lwc_lines.txt 145 : 145 : --+fi
+Line 153 : -a/changed_cls_lwc_lines.txt 146 : 146 : --+
+Line 154 : -a/changed_cls_lwc_lines.txt 147 : 147 : --+# Combine all filtered reports into one final report
+Line 155 : -a/changed_cls_lwc_lines.txt 148 : 148 : --+jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+Line 156 : -a/changed_cls_lwc_lines.txt 149 : 149 : --+
+Line 157 : -a/changed_cls_lwc_lines.txt 150 : 150 : --+# Parse the final filtered scanner report and check for severity 3 issues
+Line 158 : -a/changed_cls_lwc_lines.txt 151 : 151 : --+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+Line 159 : -a/changed_cls_lwc_lines.txt 152 : 152 : --+
+Line 160 : -a/changed_cls_lwc_lines.txt 153 : 153 : --+# Output the fail count for debugging
+Line 161 : -a/changed_cls_lwc_lines.txt 154 : 154 : --+echo "Severity Fail Count: $severity_fail_count"
+Line 162 : -a/changed_cls_lwc_lines.txt 155 : 155 : --+
+Line 163 : -a/changed_cls_lwc_lines.txt 156 : 156 : --+# Block commit if there are severity 3 issues
+Line 164 : -a/changed_cls_lwc_lines.txt 157 : 157 : --+if [ "$severity_fail_count" -gt 0 ]; then
+Line 165 : -a/changed_cls_lwc_lines.txt 158 : 158 : --+  echo "Blocking your commit due to vulnerabilities found with severity 3."
+Line 166 : -a/changed_cls_lwc_lines.txt 159 : 159 : --+  exit 1
+Line 167 : -a/changed_cls_lwc_lines.txt 160 : 160 : --+else
+Line 168 : -a/changed_cls_lwc_lines.txt 161 : 161 : --+  echo "No vulnerabilities found in changed lines. Proceeding with commit."
+Line 169 : -a/changed_cls_lwc_lines.txt 162 : 162 : --+  exit 0
+Line 170 : -a/changed_cls_lwc_lines.txt 163 : 163 : --+fi
+Line 171 : -a/changed_cls_lwc_lines.txt 164 : 164 : -++++ b/changes.diff
+Line 172 : -a/changed_cls_lwc_lines.txt 165 : 165 : -+@@ -0,0 +1,119 @@
+Line 173 : -a/changed_cls_lwc_lines.txt 166 : 166 : -++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 174 : -a/changed_cls_lwc_lines.txt 167 : 167 : -++new file mode 100644
+Line 175 : -a/changed_cls_lwc_lines.txt 168 : 168 : -++index 0000000..9b8d99e
+Line 176 : -a/changed_cls_lwc_lines.txt 169 : 169 : -++--- /dev/null
+Line 177 : -a/changed_cls_lwc_lines.txt 170 : 170 : -+++++ b/.husky/pre-commit
+Line 178 : -a/changed_cls_lwc_lines.txt 171 : 171 : -++@@ -0,0 +1,100 @@
+Line 179 : -a/changed_cls_lwc_lines.txt 172 : 172 : -+++#!/bin/bash
+Line 180 : -a/changed_cls_lwc_lines.txt 173 : 173 : -+++
+Line 181 : -a/changed_cls_lwc_lines.txt 174 : 174 : -+++# Prevent modification of Husky files
+Line 182 : -a/changed_cls_lwc_lines.txt 175 : 175 : -+++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+Line 183 : -a/changed_cls_lwc_lines.txt 176 : 176 : -+++#   echo "Error: pre-commit and post-commit files cannot be modified."
+Line 184 : -a/changed_cls_lwc_lines.txt 177 : 177 : -+++#   exit 1
+Line 185 : -a/changed_cls_lwc_lines.txt 178 : 178 : -+++# fi
+Line 186 : -a/changed_cls_lwc_lines.txt 179 : 179 : -+++# chmod 544 .husky/pre-commit
+Line 187 : -a/changed_cls_lwc_lines.txt 180 : 180 : -+++# chmod 544 .husky/post-commit
+Line 188 : -a/changed_cls_lwc_lines.txt 181 : 181 : -+++
+Line 189 : -a/changed_cls_lwc_lines.txt 182 : 182 : -+++# Check if Husky is installed
+Line 190 : -a/changed_cls_lwc_lines.txt 183 : 183 : -+++if ! command -v husky &> /dev/null
+Line 191 : -a/changed_cls_lwc_lines.txt 184 : 184 : -+++then
+Line 192 : -a/changed_cls_lwc_lines.txt 185 : 185 : -+++    echo "Husky is not installed. Installing Husky..."
+Line 193 : -a/changed_cls_lwc_lines.txt 186 : 186 : -+++    npm install husky --save-dev
+Line 194 : -a/changed_cls_lwc_lines.txt 187 : 187 : -+++    npx husky install
+Line 195 : -a/changed_cls_lwc_lines.txt 188 : 188 : -+++else
+Line 196 : -a/changed_cls_lwc_lines.txt 189 : 189 : -+++    echo "Husky is already installed Successfully."
+Line 197 : -a/changed_cls_lwc_lines.txt 190 : 190 : -+++fi
+Line 198 : -a/changed_cls_lwc_lines.txt 191 : 191 : -+++
+Line 199 : -a/changed_cls_lwc_lines.txt 192 : 192 : -+++# Get the list of changed Apex (.cls) or LWC files
+Line 200 : -a/changed_cls_lwc_lines.txt 193 : 193 : -+++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
+Line 201 : -a/changed_cls_lwc_lines.txt 194 : 194 : -+++
+Line 202 : -a/changed_cls_lwc_lines.txt 195 : 195 : -+++# Check if there are any relevant changes
+Line 203 : -a/changed_cls_lwc_lines.txt 196 : 196 : -+++if [ -z "$changed_files" ]; then
+Line 204 : -a/changed_cls_lwc_lines.txt 197 : 197 : -+++  echo "No relevant changes to scan in the files."
+Line 205 : -a/changed_cls_lwc_lines.txt 198 : 198 : -+++  exit 0
+Line 206 : -a/changed_cls_lwc_lines.txt 199 : 199 : -+++fi
+Line 207 : -a/changed_cls_lwc_lines.txt 200 : 200 : -+++
+Line 208 : -a/changed_cls_lwc_lines.txt 201 : 201 : -+++# Extract the changed lines and corresponding line numbers from the diff for each file
+Line 209 : -a/changed_cls_lwc_lines.txt 202 : 202 : -+++git diff --unified=0 --cached > changes.diff
+Line 210 : -a/changed_cls_lwc_lines.txt 203 : 203 : -+++
+Line 211 : -a/changed_cls_lwc_lines.txt 204 : 204 : -+++# Loop through each changed file
+Line 212 : -a/changed_cls_lwc_lines.txt 205 : 205 : -+++while IFS= read -r file; do
+Line 213 : -a/changed_cls_lwc_lines.txt 206 : 206 : -+++  echo "Processing file: $file"
+Line 214 : -a/changed_cls_lwc_lines.txt 207 : 207 : -+++
+Line 215 : -a/changed_cls_lwc_lines.txt 208 : 208 : -+++  # Extract line numbers from the diff for this file
+Line 216 : -a/changed_cls_lwc_lines.txt 209 : 209 : -+++  changed_lines=$(awk -v file="$file" '
+Line 217 : -a/changed_cls_lwc_lines.txt 210 : 210 : -+++    BEGIN {inside=0}
+Line 218 : -a/changed_cls_lwc_lines.txt 211 : 211 : -+++    /^diff --git/ {inside=0}
+Line 219 : -a/changed_cls_lwc_lines.txt 212 : 212 : -+++    $0 ~ file {inside=1}
+Line 220 : -a/changed_cls_lwc_lines.txt 213 : 213 : -+++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+Line 221 : -a/changed_cls_lwc_lines.txt 214 : 214 : -+++  ' changes.diff)
+Line 222 : -a/changed_cls_lwc_lines.txt 215 : 215 : -+++
+Line 223 : -a/changed_cls_lwc_lines.txt 216 : 216 : -+++  # If no line numbers were found for this file, skip it
+Line 224 : -a/changed_cls_lwc_lines.txt 217 : 217 : -+++  if [ -z "$changed_lines" ]; then
+Line 225 : -a/changed_cls_lwc_lines.txt 218 : 218 : -+++    echo "No changed lines found in $file"
+Line 226 : -a/changed_cls_lwc_lines.txt 219 : 219 : -+++    continue
+Line 227 : -a/changed_cls_lwc_lines.txt 220 : 220 : -+++  fi
+Line 228 : -a/changed_cls_lwc_lines.txt 221 : 221 : -+++
+Line 229 : -a/changed_cls_lwc_lines.txt 222 : 222 : -+++  # Run the SFDX scanner on the file and generate the report
+Line 230 : -a/changed_cls_lwc_lines.txt 223 : 223 : -+++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+Line 231 : -a/changed_cls_lwc_lines.txt 224 : 224 : -+++
+Line 232 : -a/changed_cls_lwc_lines.txt 225 : 225 : -+++  # Ensure that the scanner report was generated
+Line 233 : -a/changed_cls_lwc_lines.txt 226 : 226 : -+++  if [ ! -f "scanner-report-$file.json" ]; then
+Line 234 : -a/changed_cls_lwc_lines.txt 227 : 227 : -+++    echo "Scanner report for $file not found."
+Line 235 : -a/changed_cls_lwc_lines.txt 228 : 228 : -+++    continue
+Line 236 : -a/changed_cls_lwc_lines.txt 229 : 229 : -+++  fi
+Line 237 : -a/changed_cls_lwc_lines.txt 230 : 230 : -+++
+Line 238 : -a/changed_cls_lwc_lines.txt 231 : 231 : -+++  # Filter the scanner report based on the changed lines
+Line 239 : -a/changed_cls_lwc_lines.txt 232 : 232 : -+++  echo "Filtering scanner report for $file by changed lines..."
+Line 240 : -a/changed_cls_lwc_lines.txt 233 : 233 : -+++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+Line 241 : -a/changed_cls_lwc_lines.txt 234 : 234 : -+++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+Line 242 : -a/changed_cls_lwc_lines.txt 235 : 235 : -+++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+Line 243 : -a/changed_cls_lwc_lines.txt 236 : 236 : -+++
+Line 244 : -a/changed_cls_lwc_lines.txt 237 : 237 : -+++  # If no filtered report is found, skip
+Line 245 : -a/changed_cls_lwc_lines.txt 238 : 238 : -+++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+Line 246 : -a/changed_cls_lwc_lines.txt 239 : 239 : -+++    echo "No issues found for the changed lines in $file"
+Line 247 : -a/changed_cls_lwc_lines.txt 240 : 240 : -+++    continue
+Line 248 : -a/changed_cls_lwc_lines.txt 241 : 241 : -+++  fi
+Line 249 : -a/changed_cls_lwc_lines.txt 242 : 242 : -+++
+Line 250 : -a/changed_cls_lwc_lines.txt 243 : 243 : -+++  echo "Filtered scanner report for $file:"
+Line 251 : -a/changed_cls_lwc_lines.txt 244 : 244 : -+++  cat "filtered-scanner-report-$file.json"
+Line 252 : -a/changed_cls_lwc_lines.txt 245 : 245 : -+++
+Line 253 : -a/changed_cls_lwc_lines.txt 246 : 246 : -+++done <<< "$changed_files"
+Line 254 : -a/changed_cls_lwc_lines.txt 247 : 247 : -+++
+Line 255 : -a/changed_cls_lwc_lines.txt 248 : 248 : -+++# Check if any filtered reports were generated
+Line 256 : -a/changed_cls_lwc_lines.txt 249 : 249 : -+++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+Line 257 : -a/changed_cls_lwc_lines.txt 250 : 250 : -+++if [ -z "$filtered_reports" ]; then
+Line 258 : -a/changed_cls_lwc_lines.txt 251 : 251 : -+++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
+Line 259 : -a/changed_cls_lwc_lines.txt 252 : 252 : -+++  exit 0
+Line 260 : -a/changed_cls_lwc_lines.txt 253 : 253 : -+++fi
+Line 261 : -a/changed_cls_lwc_lines.txt 254 : 254 : -+++
+Line 262 : -a/changed_cls_lwc_lines.txt 255 : 255 : -+++# Combine all filtered reports into one final report
+Line 263 : -a/changed_cls_lwc_lines.txt 256 : 256 : -+++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+Line 264 : -a/changed_cls_lwc_lines.txt 257 : 257 : -+++
+Line 265 : -a/changed_cls_lwc_lines.txt 258 : 258 : -+++# Parse the final filtered scanner report and check for severity 3 issues
+Line 266 : -a/changed_cls_lwc_lines.txt 259 : 259 : -+++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+Line 267 : -a/changed_cls_lwc_lines.txt 260 : 260 : -+++
+Line 268 : -a/changed_cls_lwc_lines.txt 261 : 261 : -+++# Output the fail count for debugging
+Line 269 : -a/changed_cls_lwc_lines.txt 262 : 262 : -+++echo "Severity Fail Count: $severity_fail_count"
+Line 270 : -a/changed_cls_lwc_lines.txt 263 : 263 : -+++
+Line 271 : -a/changed_cls_lwc_lines.txt 264 : 264 : -+++# Block commit if there are severity 3 issues
+Line 272 : -a/changed_cls_lwc_lines.txt 265 : 265 : -+++if [ "$severity_fail_count" -gt 0 ]; then
+Line 273 : -a/changed_cls_lwc_lines.txt 266 : 266 : -+++  echo "Blocking your commit due to vulnerabilities found with severity 3."
+Line 274 : -a/changed_cls_lwc_lines.txt 267 : 267 : -+++  exit 1
+Line 275 : -a/changed_cls_lwc_lines.txt 268 : 268 : -+++else
+Line 276 : -a/changed_cls_lwc_lines.txt 269 : 269 : -+++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
+Line 277 : -a/changed_cls_lwc_lines.txt 270 : 270 : -+++  exit 0
+Line 278 : -a/changed_cls_lwc_lines.txt 271 : 271 : -+++fi
+Line 279 : -a/changed_cls_lwc_lines.txt 272 : 272 : -++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 280 : -a/changed_cls_lwc_lines.txt 273 : 273 : -++index 1e62ed4..14cff41 100644
+Line 281 : -a/changed_cls_lwc_lines.txt 274 : 274 : -++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 282 : -a/changed_cls_lwc_lines.txt 275 : 275 : -+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 283 : -a/changed_cls_lwc_lines.txt 276 : 276 : -++@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+Line 284 : -a/changed_cls_lwc_lines.txt 277 : 277 : -+++          System.debug('Hello Hi');
+Line 285 : -a/changed_cls_lwc_lines.txt 278 : 278 : -++diff --git a/scanner-report.json b/scanner-report.json
+Line 286 : -a/changed_cls_lwc_lines.txt 279 : 279 : -++new file mode 100644
+Line 287 : -a/changed_cls_lwc_lines.txt 280 : 280 : -++index 0000000..8a298a1
+Line 288 : -a/changed_cls_lwc_lines.txt 281 : 281 : -++--- /dev/null
+Line 289 : -a/changed_cls_lwc_lines.txt 282 : 282 : -+++++ b/scanner-report.json
+Line 290 : -a/changed_cls_lwc_lines.txt 283 : 283 : -++@@ -0,0 +1 @@
+Line 291 : -a/changed_cls_lwc_lines.txt 284 : 284 : -+++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 292 : -a/changed_cls_lwc_lines.txt 285 : 285 : -@@ -108 +167 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 293 : -a/changed_cls_lwc_lines.txt 286 : 286 : --index 1e62ed4..14cff41 100644
+Line 294 : -a/changed_cls_lwc_lines.txt 287 : 287 : -+index 14cff41..9a5148a 100644
+Line 295 : -a/changed_cls_lwc_lines.txt 288 : 288 : -@@ -111,9 +170,3 @@ index 1e62ed4..14cff41 100644
+Line 296 : -a/changed_cls_lwc_lines.txt 289 : 289 : --@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+Line 297 : -a/changed_cls_lwc_lines.txt 290 : 290 : --+          System.debug('Hello Hi');
+Line 298 : -a/changed_cls_lwc_lines.txt 291 : 291 : --diff --git a/scanner-report.json b/scanner-report.json
+Line 299 : -a/changed_cls_lwc_lines.txt 292 : 292 : @@ -314 +175 @@ index dd57583..2bddfca 100644
+Line 300 : -a/changed_cls_lwc_lines.txt 293 : 293 : --index 0000000..8a298a1
+Line 301 : -a/changed_cls_lwc_lines.txt 294 : 294 : @@ -316,6 +177,429 @@ index dd57583..2bddfca 100644
+Line 302 : -a/changed_cls_lwc_lines.txt 295 : 295 : --+++ b/scanner-report.json
+Line 303 : -a/changed_cls_lwc_lines.txt 296 : 296 : --@@ -0,0 +1 @@
+Line 304 : -a/changed_cls_lwc_lines.txt 297 : 297 : --+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 305 : -a/changed_cls_lwc_lines.txt 298 : 298 : -+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 306 : -a/changed_cls_lwc_lines.txt 299 : 299 : -+-          System.debug('Hello Hi');
+Line 307 : -a/changed_cls_lwc_lines.txt 300 : 300 : -++          System.debug('Hello');
+Line 308 : -a/changed_cls_lwc_lines.txt 301 : 301 : @@ -323 +607 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 309 : -a/changed_cls_lwc_lines.txt 302 : 302 : -index 9a5148a..1ec7a54 100644
+Line 310 : -a/changed_cls_lwc_lines.txt 303 : 303 : @@ -327,2 +611,2 @@ index 9a5148a..1ec7a54 100644
+Line 311 : -a/changed_cls_lwc_lines.txt 304 : 304 : --          System.debug('Hello');
+Line 312 : -a/changed_cls_lwc_lines.txt 305 : 305 : -+          System.debug('Hi');
+Line 313 : -a/changed_cls_lwc_lines.txt 306 : 306 : @@ -330,2 +614,2 @@ diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/fil
+Line 314 : -a/changed_cls_lwc_lines.txt 307 : 307 : -new file mode 100644
+Line 315 : -a/changed_cls_lwc_lines.txt 308 : 308 : -index 0000000..e69de29
+Line 316 : -a/changed_cls_lwc_lines.txt 309 : 309 : @@ -333,6 +617,6 @@ diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-report
+Line 317 : -a/changed_cls_lwc_lines.txt 310 : 310 : -new file mode 100644
+Line 318 : -a/changed_cls_lwc_lines.txt 311 : 311 : -index 0000000..fe51488
+Line 319 : -a/changed_cls_lwc_lines.txt 312 : 312 : ---- /dev/null
+Line 320 : -a/changed_cls_lwc_lines.txt 313 : 313 : -+++ b/scanner-reports/final-filtered-scanner-report.json
+Line 321 : -a/changed_cls_lwc_lines.txt 314 : 314 : -@@ -0,0 +1 @@
+Line 322 : -a/changed_cls_lwc_lines.txt 315 : 315 : -+[]
+Line 323 : -a/changed_cls_lwc_lines.txt 316 : 316 : @@ -340,6 +624,6 @@ diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-repo
+Line 324 : -a/changed_cls_lwc_lines.txt 317 : 317 : -new file mode 100644
+Line 325 : -a/changed_cls_lwc_lines.txt 318 : 318 : -index 0000000..e670f52
+Line 326 : -a/changed_cls_lwc_lines.txt 319 : 319 : ---- /dev/null
+Line 327 : -a/changed_cls_lwc_lines.txt 320 : 320 : -+++ b/scanner-reports/scanner-report-.json
+Line 328 : -a/changed_cls_lwc_lines.txt 321 : 321 : -@@ -0,0 +1 @@
+Line 329 : -a/changed_cls_lwc_lines.txt 322 : 322 : -+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 330 : -a/changed_cls_lwc_lines.txt 323 : 607 : index 870d508..1ec7a54 100644
+Line 331 : -a/changed_cls_lwc_lines.txt 324 : 61119 : -          System.debug('Hi Hello');
+Line 332 : -a/changed_cls_lwc_lines.txt 325 : 61120 : diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 333 : -a/changed_cls_lwc_lines.txt 326 : 61121 : new file mode 100644
+Line 334 : -a/changed_cls_lwc_lines.txt 327 : 61122 : index 0000000..cd70445
+Line 335 : -a/changed_cls_lwc_lines.txt 328 : 61123 : --- /dev/null
+Line 336 : -a/changed_cls_lwc_lines.txt 329 : 61124 : @@ -0,0 +1 @@
+Line 337 : -a/changed_cls_lwc_lines.txt 330 : 70 :           System.debug('Hi Hello');
+Line 338 : -a/changes.diff 239 : index 6223d95..dfdd9f6 100644
+Line 339 : -a/changes.diff 24330 : -index 4433528..439f404 100644
+Line 340 : -a/changes.diff 24331 : @@ -5,40 +5,17 @@ index 4433528..439f404 100644
+Line 341 : -a/changes.diff 24332 : -@@ -4,6 +4 @@
+Line 342 : -a/changes.diff 24333 : --# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+Line 343 : -a/changes.diff 24334 : --#   echo "Error: pre-commit and post-commit files cannot be modified."
+Line 344 : -a/changes.diff 24335 : --#   exit 1
+Line 345 : -a/changes.diff 24336 : --# fi
+Line 346 : -a/changes.diff 24337 : --# chmod 544 .husky/pre-commit
+Line 347 : -a/changes.diff 24338 : --# chmod 544 .husky/post-commit
+Line 348 : -a/changes.diff 24339 : -+# ...
+Line 349 : -a/changes.diff 24340 : -@@ -12,8 +7 @@
+Line 350 : -a/changes.diff 24341 : --if ! command -v husky &> /dev/null
+Line 351 : -a/changes.diff 24342 : --then
+Line 352 : -a/changes.diff 24343 : --    echo "Husky is not installed. Installing Husky..."
+Line 353 : -a/changes.diff 24344 : --    npm install husky --save-dev
+Line 354 : -a/changes.diff 24345 : --    npx husky install
+Line 355 : -a/changes.diff 24346 : --else
+Line 356 : -a/changes.diff 24347 : --    echo "Husky is already installed successfully."
+Line 357 : -a/changes.diff 24348 : --fi
+Line 358 : -a/changes.diff 24349 : -+# ...
+Line 359 : -a/changes.diff 24350 : -@@ -36,6 +24,16 @@ git diff --unified=0 --cached > changes.diff
+Line 360 : -a/changes.diff 24351 : --# Loop through each changed file
+Line 361 : -a/changes.diff 24352 : --while IFS= read -r file; do
+Line 362 : -a/changes.diff 24353 : --  echo "Processing file: $file"
+Line 363 : -a/changes.diff 24354 : --
+Line 364 : -a/changes.diff 24355 : --  # Remove leading slashes to make it compatible with file path
+Line 365 : -a/changes.diff 24356 : --  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
+Line 366 : -a/changes.diff 24357 : -+# Extract and print only the changed lines and line numbers from .cls and .lwc files
+Line 367 : -a/changes.diff 24358 : -+echo "Processing changes for .cls and .lwc files only..."
+Line 368 : -a/changes.diff 24359 : -+awk '
+Line 369 : -a/changes.diff 24360 : -+  BEGIN {valid_file=0; file=""}
+Line 370 : -a/changes.diff 24361 : -+  /^diff --git/ {valid_file=0}
+Line 371 : -a/changes.diff 24362 : -+  /^diff --git a\/.* b\/(.*)/ {file=$3; sub(/^b\//,"",file)}
+Line 372 : -a/changes.diff 24363 : -+  $0 ~ /\.cls$|\.lwc$/ {valid_file=1}
+Line 373 : -a/changes.diff 24364 : -+  /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}
+Line 374 : -a/changes.diff 24365 : -+  /^[+][^+]/ && valid_file {print file, start + line_offset++, ":", substr($0, 2)}
+Line 375 : -a/changes.diff 24366 : -+' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
+Line 376 : -a/changes.diff 24367 : -+
+Line 377 : -a/changes.diff 24368 : -+# Check if any relevant changes were found in .cls or .lwc files
+Line 378 : -a/changes.diff 24369 : -+if [ ! -s changed_cls_lwc_lines.txt ]; then
+Line 379 : -a/changes.diff 24370 : -+  echo "No changes detected in .cls or .lwc files."
+Line 380 : -a/changes.diff 24371 : -+  exit 0
+Line 381 : -a/changes.diff 24372 : @@ -46,18 +23,19 @@ index 4433528..439f404 100644
+Line 382 : -a/changes.diff 24373 : -@@ -43,8 +41 @@ while IFS= read -r file; do
+Line 383 : -a/changes.diff 24374 : --  # Extract the changed lines and corresponding line numbers
+Line 384 : -a/changes.diff 24375 : --  awk '
+Line 385 : -a/changes.diff 24376 : --    BEGIN {valid_file=0} 
+Line 386 : -a/changes.diff 24377 : --    /^diff --git/ {valid_file=0} 
+Line 387 : -a/changes.diff 24378 : --    $0 ~ /\.cls$|\.lwc$/ {valid_file=1} 
+Line 388 : -a/changes.diff 24379 : --    /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
+Line 389 : -a/changes.diff 24380 : --    /^[+][^+]/ && valid_file {print start + line_offset++, ":", substr($0, 2)}  
+Line 390 : -a/changes.diff 24381 : --  ' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
+Line 391 : -a/changes.diff 24382 : -+cat changed_cls_lwc_lines.txt
+Line 392 : -a/changes.diff 24383 : -@@ -52,5 +43,5 @@ while IFS= read -r file; do
+Line 393 : -a/changes.diff 24384 : --  # If no lines are found for this file, skip it
+Line 394 : -a/changes.diff 24385 : --  if [ ! -s changed_cls_lwc_lines.txt ]; then
+Line 395 : -a/changes.diff 24386 : --    echo "No changed lines found in $file"
+Line 396 : -a/changes.diff 24387 : --    continue
+Line 397 : -a/changes.diff 24388 : --  fi
+Line 398 : -a/changes.diff 24389 : -+# Process each file
+Line 399 : -a/changes.diff 24390 : -+for file in $changed_files; do
+Line 400 : -a/changes.diff 2744 : @@ -65,7 +43,18 @@ index 4433528..439f404 100644
+Line 401 : -a/changes.diff 2745 : -+  clean_file=$(basename "$file")
+Line 402 : -a/changes.diff 2746 : -+  echo "Clean file: $clean_file"
+Line 403 : -a/changes.diff 2747 : -@@ -70,2 +61,10 @@ while IFS= read -r file; do
+Line 404 : -a/changes.diff 2748 : --  # Read the changed lines from the file for filtering
+Line 405 : -a/changes.diff 2749 : --  changed_lines=$(cut -d':' -f1 changed_cls_lwc_lines.txt | tr '\n' ' ')
+Line 406 : -a/changes.diff 2750 : -+  # Extract line numbers for this file
+Line 407 : -a/changes.diff 2751 : -+  line_numbers=$(grep "^$file " changed_cls_lwc_lines.txt | cut -d':' -f1 | awk '{print $2}' | tr '\n' ' ')
+Line 408 : -a/changes.diff 27947 : @@ -73 +62,2 @@ index 4433528..439f404 100644
+Line 409 : -a/changes.diff 27948 : -+  if [ -z "$line_numbers" ]; then
+Line 410 : -a/changes.diff 27949 : @@ -77,9 +67,8 @@ index 4433528..439f404 100644
+Line 411 : -a/changes.diff 27950 : -+
+Line 412 : -a/changes.diff 27951 : -+  # Generate the select expression for jq
+Line 413 : -a/changes.diff 27952 : -+  select_expression=$(echo "$line_numbers" | awk '{for(i=1;i<=NF;i++) printf ".line == %s%s", $i, (i<NF ? " or " : "")}')
+Line 414 : -a/changes.diff 27953 : -@@ -75,2 +74,2 @@ while IFS= read -r file; do
+Line 415 : -a/changes.diff 27954 : --  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+Line 416 : -a/changes.diff 27955 : --    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+Line 417 : -a/changes.diff 27956 : -+  jq '
+Line 418 : -a/changes.diff 27957 : -+    .[] | .violations[]? | select('"$select_expression"')
+Line 419 : -a/changes.diff 27958 : -@@ -87,2 +86 @@ while IFS= read -r file; do
+Line 420 : -a/changes.diff 32915 : @@ -87,5 +76,19 @@ index 4433528..439f404 100644
+Line 421 : -a/changes.diff 32916 : --done <<< "$changed_files"
+Line 422 : -a/changes.diff 32917 : -+done
+Line 423 : -a/changes.diff 32918 : -@@ -101 +99 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 424 : -a/changes.diff 32919 : --severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 425 : -a/changes.diff 32920 : -+severity_fail_count=$(jq '[.[].severity | select(. == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 426 : -a/changes.diff 345208 : @@ -93,3 +96,2 @@ diff --git a/changed_cls_lwc_lines.txt b/changed_cls_lwc_lines.txt
+Line 427 : -a/changes.diff 345209 : -new file mode 100644
+Line 428 : -a/changes.diff 345210 : -index 0000000..1210cb6
+Line 429 : -a/changes.diff 345211 : ---- /dev/null
+Line 430 : -a/changes.diff 345212 : @@ -97,5 +99,139 @@ index 0000000..1210cb6
+Line 431 : -a/changes.diff 345213 : -@@ -0,0 +1,4 @@
+Line 432 : -a/changes.diff 345214 : -+108 : index 14cff41..9a5148a 100644
+Line 433 : -a/changes.diff 345215 : -+1119 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 434 : -a/changes.diff 345216 : -+1120 : -          System.debug('Hello Hi');
+Line 435 : -a/changes.diff 345217 : -+70 :           System.debug('Hi');
+Line 436 : -a/changes.diff 345218 : @@ -103 +239 @@ diff --git a/changes.diff b/changes.diff
+Line 437 : -a/changes.diff 345219 : -index 2bddfca..b1d3858 100644
+Line 438 : -a/changes.diff 345220 : @@ -107,17 +243,110 @@ index 2bddfca..b1d3858 100644
+Line 439 : -a/changes.diff 345221 : --index 9b8d99e..d68baeb 100644
+Line 440 : -a/changes.diff 345222 : -+index d68baeb..4433528 100644
+Line 441 : -a/changes.diff 345223 : -@@ -5,3 +5,22 @@ index 9b8d99e..d68baeb 100644
+Line 442 : -a/changes.diff 345224 : --@@ -29,0 +30,3 @@ fi
+Line 443 : -a/changes.diff 345225 : --+# Create a directory for scanner reports if it doesn't exist
+Line 444 : -a/changes.diff 345226 : --+mkdir -p scanner-reports
+Line 445 : -a/changes.diff 345227 : -+@@ -18 +18 @@ else
+Line 446 : -a/changes.diff 345228 : -+-    echo "Husky is already installed Successfully."
+Line 447 : -a/changes.diff 345229 : -++    echo "Husky is already installed successfully."
+Line 448 : -a/changes.diff 345230 : -+@@ -43,10 +43,11 @@ while IFS= read -r file; do
+Line 449 : -a/changes.diff 345231 : -+-  # Extract line numbers from the diff for this file
+Line 450 : -a/changes.diff 345232 : -+-  changed_lines=$(awk -v file="$file" '
+Line 451 : -a/changes.diff 345233 : -+-    BEGIN {inside=0}
+Line 452 : -a/changes.diff 345234 : -+-    /^diff --git/ {inside=0}
+Line 453 : -a/changes.diff 345235 : -+-    $0 ~ file {inside=1}
+Line 454 : -a/changes.diff 345236 : -+-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+Line 455 : -a/changes.diff 345237 : -+-  ' changes.diff)
+Line 456 : -a/changes.diff 345238 : @@ -125,159 +354,26 @@ index 2bddfca..b1d3858 100644
+Line 457 : -a/changes.diff 345239 : -+-  # If no line numbers were found for this file, skip it
+Line 458 : -a/changes.diff 345240 : -+-  if [ -z "$changed_lines" ]; then
+Line 459 : -a/changes.diff 345241 : -++  # Extract the changed lines and corresponding line numbers
+Line 460 : -a/changes.diff 345242 : -++  awk '
+Line 461 : -a/changes.diff 345243 : -++    BEGIN {valid_file=0} 
+Line 462 : -a/changes.diff 345244 : -++    /^diff --git/ {valid_file=0} 
+Line 463 : -a/changes.diff 345245 : -++    $0 ~ /\.cls$|\.lwc$/ {valid_file=1} 
+Line 464 : -a/changes.diff 345246 : -++    /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
+Line 465 : -a/changes.diff 345247 : -++    /^[+][^+]/ && valid_file {print start + line_offset++, ":", substr($0, 2)}  
+Line 466 : -a/changes.diff 345248 : -++  ' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
+Line 467 : -a/changes.diff 345249 : -@@ -9,3 +28,5 @@ index 9b8d99e..d68baeb 100644
+Line 468 : -a/changes.diff 345250 : --@@ -36,0 +40,3 @@ while IFS= read -r file; do
+Line 469 : -a/changes.diff 345251 : --+  # Remove leading slashes to make it compatible with file path
+Line 470 : -a/changes.diff 345252 : --+  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
+Line 471 : -a/changes.diff 345253 : -++  # If no lines are found for this file, skip it
+Line 472 : -a/changes.diff 345254 : -++  if [ ! -s changed_cls_lwc_lines.txt ]; then
+Line 473 : -a/changes.diff 345255 : -+@@ -68,0 +70,3 @@ while IFS= read -r file; do
+Line 474 : -a/changes.diff 345256 : -++  # Read the changed lines from the file for filtering
+Line 475 : -a/changes.diff 345257 : -++  changed_lines=$(cut -d':' -f1 changed_cls_lwc_lines.txt | tr '\n' ' ')
+Line 476 : -a/changes.diff 345258 : -@@ -13,28 +33,0 @@ index 9b8d99e..d68baeb 100644
+Line 477 : -a/changes.diff 345259 : --@@ -50,0 +57,3 @@ while IFS= read -r file; do
+Line 478 : -a/changes.diff 345260 : --+  # Define the output path for the scanner report
+Line 479 : -a/changes.diff 345261 : --+  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 480 : -a/changes.diff 554583 : --@@ -52 +61 @@ while IFS= read -r file; do
+Line 481 : -a/changes.diff 554584 : ---  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+Line 482 : -a/changes.diff 554585 : --+  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 483 : -a/changes.diff 554586 : --@@ -55 +64 @@ while IFS= read -r file; do
+Line 484 : -a/changes.diff 554587 : ---  if [ ! -f "scanner-report-$file.json" ]; then
+Line 485 : -a/changes.diff 554588 : --+  if [ ! -f "$output_file" ]; then
+Line 486 : -a/changes.diff 554589 : --@@ -64 +73 @@ while IFS= read -r file; do
+Line 487 : -a/changes.diff 554590 : ---  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+Line 488 : -a/changes.diff 554591 : --+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 489 : -a/changes.diff 554592 : --@@ -67 +76 @@ while IFS= read -r file; do
+Line 490 : -a/changes.diff 554593 : ---  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+Line 491 : -a/changes.diff 554594 : --+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 492 : -a/changes.diff 554595 : --@@ -73 +82 @@ while IFS= read -r file; do
+Line 493 : -a/changes.diff 554596 : ---  cat "filtered-scanner-report-$file.json"
+Line 494 : -a/changes.diff 554597 : --+  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 495 : -a/changes.diff 554598 : --@@ -78 +87 @@ done <<< "$changed_files"
+Line 496 : -a/changes.diff 554599 : ---filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+Line 497 : -a/changes.diff 554600 : --+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 498 : -a/changes.diff 554601 : --@@ -85 +94 @@ fi
+Line 499 : -a/changes.diff 554602 : ---jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+Line 500 : -a/changes.diff 554603 : --+jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 501 : -a/changes.diff 554604 : --@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+Line 502 : -a/changes.diff 554605 : ---severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+Line 503 : -a/changes.diff 554606 : --+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 504 : -a/changes.diff 554607 : -@@ -42,3 +35,2 @@ diff --git a/changes.diff b/changes.diff
+Line 505 : -a/changes.diff 554608 : --new file mode 100644
+Line 506 : -a/changes.diff 554609 : --index 0000000..dd57583
+Line 507 : -a/changes.diff 554610 : ----- /dev/null
+Line 508 : -a/changes.diff 554611 : -+index dd57583..2bddfca 100644
+Line 509 : -a/changes.diff 554612 : -+--- a/changes.diff
+Line 510 : -a/changes.diff 554613 : -@@ -46,5 +38,3 @@ index 0000000..dd57583
+Line 511 : -a/changes.diff 554614 : --@@ -0,0 +1,119 @@
+Line 512 : -a/changes.diff 554615 : --+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 513 : -a/changes.diff 554616 : --+new file mode 100644
+Line 514 : -a/changes.diff 554617 : --+index 0000000..9b8d99e
+Line 515 : -a/changes.diff 554618 : --+--- /dev/null
+Line 516 : -a/changes.diff 554619 : -+@@ -1,0 +2,40 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 517 : -a/changes.diff 554620 : -++index 9b8d99e..d68baeb 100644
+Line 518 : -a/changes.diff 554621 : -++--- a/.husky/pre-commit
+Line 519 : -a/changes.diff 554622 : -@@ -52,53 +42,3 @@ index 0000000..dd57583
+Line 520 : -a/changes.diff 554623 : --+@@ -0,0 +1,100 @@
+Line 521 : -a/changes.diff 554624 : --++#!/bin/bash
+Line 522 : -a/changes.diff 554625 : --++
+Line 523 : -a/changes.diff 554626 : --++# Prevent modification of Husky files
+Line 524 : -a/changes.diff 554627 : --++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+Line 525 : -a/changes.diff 554628 : --++#   echo "Error: pre-commit and post-commit files cannot be modified."
+Line 526 : -a/changes.diff 554629 : --++#   exit 1
+Line 527 : -a/changes.diff 554630 : --++# fi
+Line 528 : -a/changes.diff 554631 : --++# chmod 544 .husky/pre-commit
+Line 529 : -a/changes.diff 554632 : --++# chmod 544 .husky/post-commit
+Line 530 : -a/changes.diff 554633 : --++
+Line 531 : -a/changes.diff 554634 : --++# Check if Husky is installed
+Line 532 : -a/changes.diff 554635 : --++if ! command -v husky &> /dev/null
+Line 533 : -a/changes.diff 554636 : --++then
+Line 534 : -a/changes.diff 554637 : --++    echo "Husky is not installed. Installing Husky..."
+Line 535 : -a/changes.diff 554638 : --++    npm install husky --save-dev
+Line 536 : -a/changes.diff 554639 : --++    npx husky install
+Line 537 : -a/changes.diff 554640 : --++else
+Line 538 : -a/changes.diff 554641 : --++    echo "Husky is already installed Successfully."
+Line 539 : -a/changes.diff 554642 : --++fi
+Line 540 : -a/changes.diff 554643 : --++
+Line 541 : -a/changes.diff 554644 : --++# Get the list of changed Apex (.cls) or LWC files
+Line 542 : -a/changes.diff 554645 : --++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
+Line 543 : -a/changes.diff 554646 : --++
+Line 544 : -a/changes.diff 554647 : --++# Check if there are any relevant changes
+Line 545 : -a/changes.diff 554648 : --++if [ -z "$changed_files" ]; then
+Line 546 : -a/changes.diff 554649 : --++  echo "No relevant changes to scan in the files."
+Line 547 : -a/changes.diff 554650 : --++  exit 0
+Line 548 : -a/changes.diff 554651 : --++fi
+Line 549 : -a/changes.diff 554652 : --++
+Line 550 : -a/changes.diff 554653 : --++# Extract the changed lines and corresponding line numbers from the diff for each file
+Line 551 : -a/changes.diff 554654 : --++git diff --unified=0 --cached > changes.diff
+Line 552 : -a/changes.diff 554655 : --++
+Line 553 : -a/changes.diff 554656 : --++# Loop through each changed file
+Line 554 : -a/changes.diff 554657 : --++while IFS= read -r file; do
+Line 555 : -a/changes.diff 554658 : --++  echo "Processing file: $file"
+Line 556 : -a/changes.diff 554659 : --++
+Line 557 : -a/changes.diff 554660 : --++  # Extract line numbers from the diff for this file
+Line 558 : -a/changes.diff 554661 : --++  changed_lines=$(awk -v file="$file" '
+Line 559 : -a/changes.diff 554662 : --++    BEGIN {inside=0}
+Line 560 : -a/changes.diff 554663 : --++    /^diff --git/ {inside=0}
+Line 561 : -a/changes.diff 554664 : --++    $0 ~ file {inside=1}
+Line 562 : -a/changes.diff 554665 : --++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+Line 563 : -a/changes.diff 554666 : --++  ' changes.diff)
+Line 564 : -a/changes.diff 554667 : --++
+Line 565 : -a/changes.diff 554668 : --++  # If no line numbers were found for this file, skip it
+Line 566 : -a/changes.diff 554669 : --++  if [ -z "$changed_lines" ]; then
+Line 567 : -a/changes.diff 554670 : --++    echo "No changed lines found in $file"
+Line 568 : -a/changes.diff 554671 : --++    continue
+Line 569 : -a/changes.diff 554672 : --++  fi
+Line 570 : -a/changes.diff 554673 : --++
+Line 571 : -a/changes.diff 554674 : --++  # Run the SFDX scanner on the file and generate the report
+Line 572 : -a/changes.diff 554675 : --++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+Line 573 : -a/changes.diff 554676 : -++@@ -29,0 +30,3 @@ fi
+Line 574 : -a/changes.diff 554677 : -+++# Create a directory for scanner reports if it doesn't exist
+Line 575 : -a/changes.diff 554678 : -+++mkdir -p scanner-reports
+Line 576 : -a/changes.diff 554679 : -@@ -106,5 +46,3 @@ index 0000000..dd57583
+Line 577 : -a/changes.diff 554680 : --++  # Ensure that the scanner report was generated
+Line 578 : -a/changes.diff 554681 : --++  if [ ! -f "scanner-report-$file.json" ]; then
+Line 579 : -a/changes.diff 554682 : --++    echo "Scanner report for $file not found."
+Line 580 : -a/changes.diff 554683 : --++    continue
+Line 581 : -a/changes.diff 554684 : --++  fi
+Line 582 : -a/changes.diff 554685 : -++@@ -36,0 +40,3 @@ while IFS= read -r file; do
+Line 583 : -a/changes.diff 554686 : -+++  # Remove leading slashes to make it compatible with file path
+Line 584 : -a/changes.diff 554687 : -+++  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
+Line 585 : -a/changes.diff 554688 : -@@ -112,5 +50,3 @@ index 0000000..dd57583
+Line 586 : -a/changes.diff 554689 : --++  # Filter the scanner report based on the changed lines
+Line 587 : -a/changes.diff 554690 : --++  echo "Filtering scanner report for $file by changed lines..."
+Line 588 : -a/changes.diff 554691 : --++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+Line 589 : -a/changes.diff 554692 : --++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+Line 590 : -a/changes.diff 554693 : --++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+Line 591 : -a/changes.diff 554694 : -++@@ -50,0 +57,3 @@ while IFS= read -r file; do
+Line 592 : -a/changes.diff 554695 : -+++  # Define the output path for the scanner report
+Line 593 : -a/changes.diff 554696 : -+++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 594 : -a/changes.diff 554697 : -@@ -118,48 +54,268 @@ index 0000000..dd57583
+Line 595 : -a/changes.diff 554698 : --++  # If no filtered report is found, skip
+Line 596 : -a/changes.diff 554699 : --++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+Line 597 : -a/changes.diff 554700 : --++    echo "No issues found for the changed lines in $file"
+Line 598 : -a/changes.diff 554701 : --++    continue
+Line 599 : -a/changes.diff 554702 : --++  fi
+Line 600 : -a/changes.diff 554703 : --++
+Line 601 : -a/changes.diff 554704 : --++  echo "Filtered scanner report for $file:"
+Line 602 : -a/changes.diff 554705 : --++  cat "filtered-scanner-report-$file.json"
+Line 603 : -a/changes.diff 554706 : --++
+Line 604 : -a/changes.diff 554707 : --++done <<< "$changed_files"
+Line 605 : -a/changes.diff 554708 : --++
+Line 606 : -a/changes.diff 554709 : --++# Check if any filtered reports were generated
+Line 607 : -a/changes.diff 554710 : --++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+Line 608 : -a/changes.diff 554711 : --++if [ -z "$filtered_reports" ]; then
+Line 609 : -a/changes.diff 554712 : --++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
+Line 610 : -a/changes.diff 554713 : --++  exit 0
+Line 611 : -a/changes.diff 554714 : --++fi
+Line 612 : -a/changes.diff 554715 : --++
+Line 613 : -a/changes.diff 554716 : --++# Combine all filtered reports into one final report
+Line 614 : -a/changes.diff 554717 : --++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+Line 615 : -a/changes.diff 114350 : @@ -285,2 +381,3 @@ index 2bddfca..b1d3858 100644
+Line 616 : -a/changes.diff 114351 : --++# Parse the final filtered scanner report and check for severity 3 issues
+Line 617 : -a/changes.diff 114352 : --++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+Line 618 : -a/changes.diff 114353 : @@ -288,2 +385,3 @@ index 2bddfca..b1d3858 100644
+Line 619 : -a/changes.diff 114354 : --++# Output the fail count for debugging
+Line 620 : -a/changes.diff 114355 : --++echo "Severity Fail Count: $severity_fail_count"
+Line 621 : -a/changes.diff 114356 : @@ -291,315 +389,804 @@ index 2bddfca..b1d3858 100644
+Line 622 : -a/changes.diff 114357 : --++# Block commit if there are severity 3 issues
+Line 623 : -a/changes.diff 114358 : --++if [ "$severity_fail_count" -gt 0 ]; then
+Line 624 : -a/changes.diff 114359 : --++  echo "Blocking your commit due to vulnerabilities found with severity 3."
+Line 625 : -a/changes.diff 114360 : --++  exit 1
+Line 626 : -a/changes.diff 114361 : --++else
+Line 627 : -a/changes.diff 114362 : --++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
+Line 628 : -a/changes.diff 114363 : --++  exit 0
+Line 629 : -a/changes.diff 114364 : --++fi
+Line 630 : -a/changes.diff 114365 : --+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 631 : -a/changes.diff 114366 : --+index 1e62ed4..14cff41 100644
+Line 632 : -a/changes.diff 114367 : --+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 633 : -a/changes.diff 114368 : --++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 634 : -a/changes.diff 114369 : --+@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+Line 635 : -a/changes.diff 114370 : --++          System.debug('Hello Hi');
+Line 636 : -a/changes.diff 114371 : --+diff --git a/scanner-report.json b/scanner-report.json
+Line 637 : -a/changes.diff 114372 : --+new file mode 100644
+Line 638 : -a/changes.diff 114373 : --+index 0000000..8a298a1
+Line 639 : -a/changes.diff 114374 : --+--- /dev/null
+Line 640 : -a/changes.diff 114375 : --++++ b/scanner-report.json
+Line 641 : -a/changes.diff 114376 : --+@@ -0,0 +1 @@
+Line 642 : -a/changes.diff 114377 : --++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 643 : -a/changes.diff 114378 : -++@@ -52 +61 @@ while IFS= read -r file; do
+Line 644 : -a/changes.diff 114379 : -++-  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+Line 645 : -a/changes.diff 114380 : -+++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 646 : -a/changes.diff 114381 : -++@@ -55 +64 @@ while IFS= read -r file; do
+Line 647 : -a/changes.diff 114382 : -++-  if [ ! -f "scanner-report-$file.json" ]; then
+Line 648 : -a/changes.diff 114383 : -+++  if [ ! -f "$output_file" ]; then
+Line 649 : -a/changes.diff 114384 : -++@@ -64 +73 @@ while IFS= read -r file; do
+Line 650 : -a/changes.diff 114385 : -++-  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+Line 651 : -a/changes.diff 114386 : -+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 652 : -a/changes.diff 114387 : -++@@ -67 +76 @@ while IFS= read -r file; do
+Line 653 : -a/changes.diff 114388 : -++-  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+Line 654 : -a/changes.diff 114389 : -+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 655 : -a/changes.diff 114390 : -++@@ -73 +82 @@ while IFS= read -r file; do
+Line 656 : -a/changes.diff 114391 : -++-  cat "filtered-scanner-report-$file.json"
+Line 657 : -a/changes.diff 114392 : -+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 658 : -a/changes.diff 114393 : -++@@ -78 +87 @@ done <<< "$changed_files"
+Line 659 : -a/changes.diff 114394 : -++-filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+Line 660 : -a/changes.diff 114395 : -+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 661 : -a/changes.diff 114396 : -++@@ -85 +94 @@ fi
+Line 662 : -a/changes.diff 114397 : -++-jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+Line 663 : -a/changes.diff 114398 : -+++jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 664 : -a/changes.diff 114399 : -++@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+Line 665 : -a/changes.diff 114400 : -++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+Line 666 : -a/changes.diff 114401 : -+++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 667 : -a/changes.diff 114402 : -++diff --git a/changes.diff b/changes.diff
+Line 668 : -a/changes.diff 114403 : -+@@ -3 +43 @@ new file mode 100644
+Line 669 : -a/changes.diff 114404 : -+-index 0000000..9b8d99e
+Line 670 : -a/changes.diff 114405 : -++index 0000000..dd57583
+Line 671 : -a/changes.diff 114406 : -+@@ -5,102 +45,121 @@ index 0000000..9b8d99e
+Line 672 : -a/changes.diff 114407 : -+-+++ b/.husky/pre-commit
+Line 673 : -a/changes.diff 114408 : -+-@@ -0,0 +1,100 @@
+Line 674 : -a/changes.diff 114409 : -+-+#!/bin/bash
+Line 675 : -a/changes.diff 114410 : -+-+
+Line 676 : -a/changes.diff 114411 : -+-+# Prevent modification of Husky files
+Line 677 : -a/changes.diff 114412 : -+-+# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+Line 678 : -a/changes.diff 114413 : -+-+#   echo "Error: pre-commit and post-commit files cannot be modified."
+Line 679 : -a/changes.diff 114414 : -+-+#   exit 1
+Line 680 : -a/changes.diff 114415 : -+-+# fi
+Line 681 : -a/changes.diff 114416 : -+-+# chmod 544 .husky/pre-commit
+Line 682 : -a/changes.diff 114417 : -+-+# chmod 544 .husky/post-commit
+Line 683 : -a/changes.diff 114418 : -+-+
+Line 684 : -a/changes.diff 114419 : -+-+# Check if Husky is installed
+Line 685 : -a/changes.diff 114420 : -+-+if ! command -v husky &> /dev/null
+Line 686 : -a/changes.diff 114421 : -+-+then
+Line 687 : -a/changes.diff 114422 : -+-+    echo "Husky is not installed. Installing Husky..."
+Line 688 : -a/changes.diff 114423 : -+-+    npm install husky --save-dev
+Line 689 : -a/changes.diff 114424 : -+-+    npx husky install
+Line 690 : -a/changes.diff 114425 : -+-+else
+Line 691 : -a/changes.diff 114426 : -+-+    echo "Husky is already installed Successfully."
+Line 692 : -a/changes.diff 114427 : -+-+fi
+Line 693 : -a/changes.diff 114428 : -+-+
+Line 694 : -a/changes.diff 114429 : -+-+# Get the list of changed Apex (.cls) or LWC files
+Line 695 : -a/changes.diff 114430 : -+-+changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
+Line 696 : -a/changes.diff 114431 : -+-+
+Line 697 : -a/changes.diff 114432 : -+-+# Check if there are any relevant changes
+Line 698 : -a/changes.diff 114433 : -+-+if [ -z "$changed_files" ]; then
+Line 699 : -a/changes.diff 114434 : -+-+  echo "No relevant changes to scan in the files."
+Line 700 : -a/changes.diff 114435 : -+-+  exit 0
+Line 701 : -a/changes.diff 114436 : -+-+fi
+Line 702 : -a/changes.diff 114437 : -+-+
+Line 703 : -a/changes.diff 114438 : -+-+# Extract the changed lines and corresponding line numbers from the diff for each file
+Line 704 : -a/changes.diff 114439 : -+-+git diff --unified=0 --cached > changes.diff
+Line 705 : -a/changes.diff 114440 : -+-+
+Line 706 : -a/changes.diff 114441 : -+-+# Loop through each changed file
+Line 707 : -a/changes.diff 114442 : -+-+while IFS= read -r file; do
+Line 708 : -a/changes.diff 114443 : -+-+  echo "Processing file: $file"
+Line 709 : -a/changes.diff 114444 : -+-+
+Line 710 : -a/changes.diff 114445 : -+-+  # Extract line numbers from the diff for this file
+Line 711 : -a/changes.diff 114446 : -+-+  changed_lines=$(awk -v file="$file" '
+Line 712 : -a/changes.diff 114447 : -+-+    BEGIN {inside=0}
+Line 713 : -a/changes.diff 114448 : -+-+    /^diff --git/ {inside=0}
+Line 714 : -a/changes.diff 114449 : -+-+    $0 ~ file {inside=1}
+Line 715 : -a/changes.diff 114450 : -+-+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+Line 716 : -a/changes.diff 114451 : -+-+  ' changes.diff)
+Line 717 : -a/changes.diff 114452 : -+-+
+Line 718 : -a/changes.diff 114453 : -+-+  # If no line numbers were found for this file, skip it
+Line 719 : -a/changes.diff 114454 : -+-+  if [ -z "$changed_lines" ]; then
+Line 720 : -a/changes.diff 114455 : -+-+    echo "No changed lines found in $file"
+Line 721 : -a/changes.diff 114456 : -+-+    continue
+Line 722 : -a/changes.diff 114457 : -+-+  fi
+Line 723 : -a/changes.diff 114458 : -+-+
+Line 724 : -a/changes.diff 114459 : -+-+  # Run the SFDX scanner on the file and generate the report
+Line 725 : -a/changes.diff 114460 : -+-+  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+Line 726 : -a/changes.diff 114461 : -+-+
+Line 727 : -a/changes.diff 114462 : -+-+  # Ensure that the scanner report was generated
+Line 728 : -a/changes.diff 114463 : -+-+  if [ ! -f "scanner-report-$file.json" ]; then
+Line 729 : -a/changes.diff 114464 : -+-+    echo "Scanner report for $file not found."
+Line 730 : -a/changes.diff 114465 : -+-+    continue
+Line 731 : -a/changes.diff 114466 : -+-+  fi
+Line 732 : -a/changes.diff 114467 : -+-+
+Line 733 : -a/changes.diff 114468 : -+-+  # Filter the scanner report based on the changed lines
+Line 734 : -a/changes.diff 114469 : -+-+  echo "Filtering scanner report for $file by changed lines..."
+Line 735 : -a/changes.diff 114470 : -+-+  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+Line 736 : -a/changes.diff 114471 : -+-+    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+Line 737 : -a/changes.diff 114472 : -+-+  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+Line 738 : -a/changes.diff 114473 : -+-+
+Line 739 : -a/changes.diff 114474 : -+-+  # If no filtered report is found, skip
+Line 740 : -a/changes.diff 114475 : -+-+  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+Line 741 : -a/changes.diff 114476 : -+-+    echo "No issues found for the changed lines in $file"
+Line 742 : -a/changes.diff 114477 : -+-+    continue
+Line 743 : -a/changes.diff 114478 : -+-+  fi
+Line 744 : -a/changes.diff 114479 : -+-+
+Line 745 : -a/changes.diff 114480 : -+-+  echo "Filtered scanner report for $file:"
+Line 746 : -a/changes.diff 114481 : -+-+  cat "filtered-scanner-report-$file.json"
+Line 747 : -a/changes.diff 114482 : -+-+
+Line 748 : -a/changes.diff 114483 : -+-+done <<< "$changed_files"
+Line 749 : -a/changes.diff 114484 : -+-+
+Line 750 : -a/changes.diff 114485 : -+-+# Check if any filtered reports were generated
+Line 751 : -a/changes.diff 114486 : -+-+filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+Line 752 : -a/changes.diff 114487 : -+-+if [ -z "$filtered_reports" ]; then
+Line 753 : -a/changes.diff 114488 : -+-+  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
+Line 754 : -a/changes.diff 114489 : -+-+  exit 0
+Line 755 : -a/changes.diff 114490 : -+-+fi
+Line 756 : -a/changes.diff 114491 : -+-+
+Line 757 : -a/changes.diff 114492 : -+-+# Combine all filtered reports into one final report
+Line 758 : -a/changes.diff 114493 : -+-+jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+Line 759 : -a/changes.diff 114494 : -+-+
+Line 760 : -a/changes.diff 114495 : -+-+# Parse the final filtered scanner report and check for severity 3 issues
+Line 761 : -a/changes.diff 114496 : -+-+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+Line 762 : -a/changes.diff 114497 : -+-+
+Line 763 : -a/changes.diff 114498 : -+-+# Output the fail count for debugging
+Line 764 : -a/changes.diff 114499 : -+-+echo "Severity Fail Count: $severity_fail_count"
+Line 765 : -a/changes.diff 114500 : -+-+
+Line 766 : -a/changes.diff 114501 : -+-+# Block commit if there are severity 3 issues
+Line 767 : -a/changes.diff 114502 : -+-+if [ "$severity_fail_count" -gt 0 ]; then
+Line 768 : -a/changes.diff 114503 : -+-+  echo "Blocking your commit due to vulnerabilities found with severity 3."
+Line 769 : -a/changes.diff 114504 : -+-+  exit 1
+Line 770 : -a/changes.diff 114505 : -+-+else
+Line 771 : -a/changes.diff 114506 : -+-+  echo "No vulnerabilities found in changed lines. Proceeding with commit."
+Line 772 : -a/changes.diff 114507 : -+-+  exit 0
+Line 773 : -a/changes.diff 114508 : -+-+fi
+Line 774 : -a/changes.diff 114509 : -+++++ b/changes.diff
+Line 775 : -a/changes.diff 114510 : -++@@ -0,0 +1,119 @@
+Line 776 : -a/changes.diff 114511 : -+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 777 : -a/changes.diff 114512 : -+++new file mode 100644
+Line 778 : -a/changes.diff 114513 : -+++index 0000000..9b8d99e
+Line 779 : -a/changes.diff 114514 : -+++--- /dev/null
+Line 780 : -a/changes.diff 114515 : -++++++ b/.husky/pre-commit
+Line 781 : -a/changes.diff 114516 : -+++@@ -0,0 +1,100 @@
+Line 782 : -a/changes.diff 114517 : -++++#!/bin/bash
+Line 783 : -a/changes.diff 114518 : -++++
+Line 784 : -a/changes.diff 114519 : -++++# Prevent modification of Husky files
+Line 785 : -a/changes.diff 114520 : -++++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+Line 786 : -a/changes.diff 114521 : -++++#   echo "Error: pre-commit and post-commit files cannot be modified."
+Line 787 : -a/changes.diff 114522 : -++++#   exit 1
+Line 788 : -a/changes.diff 114523 : -++++# fi
+Line 789 : -a/changes.diff 114524 : -++++# chmod 544 .husky/pre-commit
+Line 790 : -a/changes.diff 114525 : -++++# chmod 544 .husky/post-commit
+Line 791 : -a/changes.diff 114526 : -++++
+Line 792 : -a/changes.diff 114527 : -++++# Check if Husky is installed
+Line 793 : -a/changes.diff 114528 : -++++if ! command -v husky &> /dev/null
+Line 794 : -a/changes.diff 114529 : -++++then
+Line 795 : -a/changes.diff 114530 : -++++    echo "Husky is not installed. Installing Husky..."
+Line 796 : -a/changes.diff 114531 : -++++    npm install husky --save-dev
+Line 797 : -a/changes.diff 114532 : -++++    npx husky install
+Line 798 : -a/changes.diff 114533 : -++++else
+Line 799 : -a/changes.diff 114534 : -++++    echo "Husky is already installed Successfully."
+Line 800 : -a/changes.diff 114535 : -++++fi
+Line 801 : -a/changes.diff 114536 : -++++
+Line 802 : -a/changes.diff 114537 : -++++# Get the list of changed Apex (.cls) or LWC files
+Line 803 : -a/changes.diff 114538 : -++++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
+Line 804 : -a/changes.diff 114539 : -++++
+Line 805 : -a/changes.diff 114540 : -++++# Check if there are any relevant changes
+Line 806 : -a/changes.diff 114541 : -++++if [ -z "$changed_files" ]; then
+Line 807 : -a/changes.diff 114542 : -++++  echo "No relevant changes to scan in the files."
+Line 808 : -a/changes.diff 114543 : -++++  exit 0
+Line 809 : -a/changes.diff 114544 : -++++fi
+Line 810 : -a/changes.diff 114545 : -++++
+Line 811 : -a/changes.diff 114546 : -++++# Extract the changed lines and corresponding line numbers from the diff for each file
+Line 812 : -a/changes.diff 114547 : -++++git diff --unified=0 --cached > changes.diff
+Line 813 : -a/changes.diff 114548 : -++++
+Line 814 : -a/changes.diff 114549 : -++++# Loop through each changed file
+Line 815 : -a/changes.diff 114550 : -++++while IFS= read -r file; do
+Line 816 : -a/changes.diff 114551 : -++++  echo "Processing file: $file"
+Line 817 : -a/changes.diff 114552 : -++++
+Line 818 : -a/changes.diff 114553 : -++++  # Extract line numbers from the diff for this file
+Line 819 : -a/changes.diff 114554 : -++++  changed_lines=$(awk -v file="$file" '
+Line 820 : -a/changes.diff 114555 : -++++    BEGIN {inside=0}
+Line 821 : -a/changes.diff 114556 : -++++    /^diff --git/ {inside=0}
+Line 822 : -a/changes.diff 114557 : -++++    $0 ~ file {inside=1}
+Line 823 : -a/changes.diff 114558 : -++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+Line 824 : -a/changes.diff 114559 : -++++  ' changes.diff)
+Line 825 : -a/changes.diff 114560 : -++++
+Line 826 : -a/changes.diff 114561 : -++++  # If no line numbers were found for this file, skip it
+Line 827 : -a/changes.diff 114562 : -++++  if [ -z "$changed_lines" ]; then
+Line 828 : -a/changes.diff 114563 : -++++    echo "No changed lines found in $file"
+Line 829 : -a/changes.diff 114564 : -++++    continue
+Line 830 : -a/changes.diff 114565 : -++++  fi
+Line 831 : -a/changes.diff 114566 : -++++
+Line 832 : -a/changes.diff 114567 : -++++  # Run the SFDX scanner on the file and generate the report
+Line 833 : -a/changes.diff 114568 : -++++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+Line 834 : -a/changes.diff 114569 : -++++
+Line 835 : -a/changes.diff 114570 : -++++  # Ensure that the scanner report was generated
+Line 836 : -a/changes.diff 114571 : -++++  if [ ! -f "scanner-report-$file.json" ]; then
+Line 837 : -a/changes.diff 114572 : -++++    echo "Scanner report for $file not found."
+Line 838 : -a/changes.diff 114573 : -++++    continue
+Line 839 : -a/changes.diff 114574 : -++++  fi
+Line 840 : -a/changes.diff 114575 : -++++
+Line 841 : -a/changes.diff 114576 : -++++  # Filter the scanner report based on the changed lines
+Line 842 : -a/changes.diff 114577 : -++++  echo "Filtering scanner report for $file by changed lines..."
+Line 843 : -a/changes.diff 114578 : -++++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+Line 844 : -a/changes.diff 114579 : -++++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+Line 845 : -a/changes.diff 114580 : -++++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+Line 846 : -a/changes.diff 114581 : -++++
+Line 847 : -a/changes.diff 114582 : -++++  # If no filtered report is found, skip
+Line 848 : -a/changes.diff 114583 : -++++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+Line 849 : -a/changes.diff 114584 : -++++    echo "No issues found for the changed lines in $file"
+Line 850 : -a/changes.diff 114585 : -++++    continue
+Line 851 : -a/changes.diff 114586 : -++++  fi
+Line 852 : -a/changes.diff 114587 : -++++
+Line 853 : -a/changes.diff 114588 : -++++  echo "Filtered scanner report for $file:"
+Line 854 : -a/changes.diff 114589 : -++++  cat "filtered-scanner-report-$file.json"
+Line 855 : -a/changes.diff 114590 : -++++
+Line 856 : -a/changes.diff 114591 : -++++done <<< "$changed_files"
+Line 857 : -a/changes.diff 114592 : -++++
+Line 858 : -a/changes.diff 114593 : -++++# Check if any filtered reports were generated
+Line 859 : -a/changes.diff 114594 : -++++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+Line 860 : -a/changes.diff 114595 : -++++if [ -z "$filtered_reports" ]; then
+Line 861 : -a/changes.diff 114596 : -++++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
+Line 862 : -a/changes.diff 114597 : -++++  exit 0
+Line 863 : -a/changes.diff 114598 : -++++fi
+Line 864 : -a/changes.diff 114599 : -++++
+Line 865 : -a/changes.diff 114600 : -++++# Combine all filtered reports into one final report
+Line 866 : -a/changes.diff 114601 : -++++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+Line 867 : -a/changes.diff 114602 : -++++
+Line 868 : -a/changes.diff 114603 : -++++# Parse the final filtered scanner report and check for severity 3 issues
+Line 869 : -a/changes.diff 114604 : -++++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+Line 870 : -a/changes.diff 114605 : -++++
+Line 871 : -a/changes.diff 114606 : -++++# Output the fail count for debugging
+Line 872 : -a/changes.diff 114607 : -++++echo "Severity Fail Count: $severity_fail_count"
+Line 873 : -a/changes.diff 114608 : -++++
+Line 874 : -a/changes.diff 114609 : -++++# Block commit if there are severity 3 issues
+Line 875 : -a/changes.diff 114610 : -++++if [ "$severity_fail_count" -gt 0 ]; then
+Line 876 : -a/changes.diff 114611 : -++++  echo "Blocking your commit due to vulnerabilities found with severity 3."
+Line 877 : -a/changes.diff 114612 : -++++  exit 1
+Line 878 : -a/changes.diff 114613 : -++++else
+Line 879 : -a/changes.diff 114614 : -++++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
+Line 880 : -a/changes.diff 114615 : -++++  exit 0
+Line 881 : -a/changes.diff 114616 : -++++fi
+Line 882 : -a/changes.diff 114617 : -+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 883 : -a/changes.diff 114618 : -+++index 1e62ed4..14cff41 100644
+Line 884 : -a/changes.diff 114619 : -+++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 885 : -a/changes.diff 114620 : -++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 886 : -a/changes.diff 114621 : -+++@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+Line 887 : -a/changes.diff 114622 : -++++          System.debug('Hello Hi');
+Line 888 : -a/changes.diff 114623 : -+++diff --git a/scanner-report.json b/scanner-report.json
+Line 889 : -a/changes.diff 114624 : -+++new file mode 100644
+Line 890 : -a/changes.diff 114625 : -+++index 0000000..8a298a1
+Line 891 : -a/changes.diff 114626 : -+++--- /dev/null
+Line 892 : -a/changes.diff 114627 : -++++++ b/scanner-report.json
+Line 893 : -a/changes.diff 114628 : -+++@@ -0,0 +1 @@
+Line 894 : -a/changes.diff 114629 : -++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 895 : -a/changes.diff 114630 : -+@@ -108 +167 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 896 : -a/changes.diff 114631 : -+-index 1e62ed4..14cff41 100644
+Line 897 : -a/changes.diff 114632 : -++index 14cff41..9a5148a 100644
+Line 898 : -a/changes.diff 114633 : -+@@ -111,9 +170,3 @@ index 1e62ed4..14cff41 100644
+Line 899 : -a/changes.diff 114634 : -+-@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+Line 900 : -a/changes.diff 114635 : -+-+          System.debug('Hello Hi');
+Line 901 : -a/changes.diff 114636 : -+-diff --git a/scanner-report.json b/scanner-report.json
+Line 902 : -a/changes.diff 114637 : -+-new file mode 100644
+Line 903 : -a/changes.diff 114638 : -+-index 0000000..8a298a1
+Line 904 : -a/changes.diff 114639 : -+---- /dev/null
+Line 905 : -a/changes.diff 114640 : -+-+++ b/scanner-report.json
+Line 906 : -a/changes.diff 114641 : -+-@@ -0,0 +1 @@
+Line 907 : -a/changes.diff 114642 : -+-+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 908 : -a/changes.diff 114643 : -++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 909 : -a/changes.diff 114644 : -++-          System.debug('Hello Hi');
+Line 910 : -a/changes.diff 114645 : -+++          System.debug('Hello');
+Line 911 : -a/changes.diff 114646 : -@@ -167 +323 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 912 : -a/changes.diff 114647 : --index 14cff41..9a5148a 100644
+Line 913 : -a/changes.diff 114648 : -+index 9a5148a..1ec7a54 100644
+Line 914 : -a/changes.diff 114649 : -@@ -171,2 +327,20 @@ index 14cff41..9a5148a 100644
+Line 915 : -a/changes.diff 114650 : ---          System.debug('Hello Hi');
+Line 916 : -a/changes.diff 114651 : --+          System.debug('Hello');
+Line 917 : -a/changes.diff 114652 : -+-          System.debug('Hello');
+Line 918 : -a/changes.diff 114653 : -++          System.debug('Hi');
+Line 919 : -a/changes.diff 114654 : -+diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/filtered-scanner-report-.json
+Line 920 : -a/changes.diff 114655 : -+new file mode 100644
+Line 921 : -a/changes.diff 114656 : -+index 0000000..e69de29
+Line 922 : -a/changes.diff 114657 : -+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 923 : -a/changes.diff 114658 : -+new file mode 100644
+Line 924 : -a/changes.diff 114659 : -+index 0000000..fe51488
+Line 925 : -a/changes.diff 114660 : -+--- /dev/null
+Line 926 : -a/changes.diff 114661 : -++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 927 : -a/changes.diff 114662 : -+@@ -0,0 +1 @@
+Line 928 : -a/changes.diff 114663 : -++[]
+Line 929 : -a/changes.diff 114664 : -+diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-report-.json
+Line 930 : -a/changes.diff 114665 : -+new file mode 100644
+Line 931 : -a/changes.diff 114666 : -+index 0000000..e670f52
+Line 932 : -a/changes.diff 114667 : -+--- /dev/null
+Line 933 : -a/changes.diff 114668 : -++++ b/scanner-reports/scanner-report-.json
+Line 934 : -a/changes.diff 114669 : -+@@ -0,0 +1 @@
+Line 935 : -a/changes.diff 114670 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 936 : -a/changes.diff 114671 : -+\ No newline at end of file
+Line 937 : -a/changes.diff 114672 : @@ -607 +1194 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 938 : -a/changes.diff 114673 : -index 1ec7a54..870d508 100644
+Line 939 : -a/changes.diff 114674 : @@ -611,19 +1198,9 @@ index 1ec7a54..870d508 100644
+Line 940 : -a/changes.diff 114675 : --          System.debug('Hi');
+Line 941 : -a/changes.diff 114676 : -+          System.debug('Hi Hello');
+Line 942 : -a/changes.diff 114677 : -diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/filtered-scanner-report-.json
+Line 943 : -a/changes.diff 114678 : -deleted file mode 100644
+Line 944 : -a/changes.diff 114679 : -index e69de29..0000000
+Line 945 : -a/changes.diff 114680 : -diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 946 : -a/changes.diff 114681 : -deleted file mode 100644
+Line 947 : -a/changes.diff 114682 : -index fe51488..0000000
+Line 948 : -a/changes.diff 114683 : ---- a/scanner-reports/final-filtered-scanner-report.json
+Line 949 : -a/changes.diff 114684 : -+++ /dev/null
+Line 950 : -a/changes.diff 114685 : -@@ -1 +0,0 @@
+Line 951 : -a/changes.diff 114686 : --[]
+Line 952 : -a/changes.diff 114687 : -diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-report-.json
+Line 953 : -a/changes.diff 114688 : -deleted file mode 100644
+Line 954 : -a/changes.diff 114689 : -index e670f52..0000000
+Line 955 : -a/changes.diff 114690 : ---- a/scanner-reports/scanner-report-.json
+Line 956 : -a/changes.diff 114691 : -+++ /dev/null
+Line 957 : -a/changes.diff 114692 : -@@ -1 +0,0 @@
+Line 958 : -a/changes.diff 114693 : --[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 959 : -a/changes.diff 1194 : index 1ec7a54..870d508 100644
+Line 960 : -a/changes.diff 11982 : -          System.debug('Hi');
+Line 961 : -a/changes.diff 12016 : deleted file mode 100644
+Line 962 : -a/changes.diff 12017 : index cd70445..0000000
+Line 963 : -a/changes.diff 12018 : --- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 964 : -a/changes.diff 12019 : @@ -1 +0,0 @@
+Line 965 : -a/changes.diff 12020 : -[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 966 : -a/force-app/main/default/classes/Account_Insert.cls 70 :           System.debug('Hi');
+Line 18 : index f240d91..ab72173 100644
+Line 21124 : @@ -2,2 +2,3 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21125 : -index 1328704..af60e83 100644
+Line 21126 : ---- a/.husky/pre-commit
+Line 21127 : @@ -5,8827 +6,98 @@ index 1328704..af60e83 100644
+Line 21128 : -@@ -25 +25 @@ while IFS= read -r file; do
+Line 21129 : --  # Extract only the added or modified lines for .cls and .lwc files
+Line 21130 : -+  # Extract only the added or modified lines and their line numbers for .cls and .lwc files
+Line 21131 : -@@ -29,4 +29,4 @@ while IFS= read -r file; do
+Line 21132 : --    $0 ~ file {inside=1}
+Line 21133 : --    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+Line 21134 : --    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+Line 21135 : --  ' changes.diff | uniq)
+Line 21136 : -+    $0 ~ file {inside=1}  # Start processing when the correct file section starts
+Line 21137 : -+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
+Line 21138 : -+    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only added or modified lines, excluding unchanged or deleted ones
+Line 21139 : -+  ' changes.diff | sort -n | uniq)
+Line 21140 : -diff --git a/changes.diff b/changes.diff
+Line 21141 : -index 1f4c0b2..3afa5f1 100644
+Line 21142 : ---- a/changes.diff
+Line 21143 : -+++ b/changes.diff
+Line 21144 : -@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21145 : --index daf61a1..3603bae 100644
+Line 21146 : -+index 1328704..8d1a279 100644
+Line 21147 : -@@ -5,3 +4,0 @@ index daf61a1..3603bae 100644
+Line 21148 : --@@ -16 +16 @@ mkdir -p scanner-reports
+Line 21149 : ---git diff --unified=0 --cached > changes.diff
+Line 21150 : --+git diff --cached --unified=0 > changes.diff
+Line 21151 : -@@ -9,8 +6,15 @@ index daf61a1..3603bae 100644
+Line 21152 : ---  # Extract only the changed line numbers for the file
+Line 21153 : --+  # Extract only the added or modified lines for .cls and .lwc files
+Line 21154 : --@@ -32 +32 @@ while IFS= read -r file; do
+Line 21155 : ---  ' changes.diff)
+Line 21156 : --+  ' changes.diff | uniq)
+Line 21157 : --@@ -61 +61 @@ while IFS= read -r file; do
+Line 21158 : ---      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 21159 : --+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 21160 : -+-  # Extract only the added or modified lines for .cls and .lwc files
+Line 21161 : -++  # Extract the actual changed lines and line numbers for the specific file
+Line 21162 : -+@@ -29,4 +29,4 @@ while IFS= read -r file; do
+Line 21163 : -+-    $0 ~ file {inside=1}
+Line 21164 : -+-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+Line 21165 : -+-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+Line 21166 : -+-  ' changes.diff | uniq)
+Line 21167 : -++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
+Line 21168 : -++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
+Line 21169 : -++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
+Line 21170 : -++  ' changes.diff | sort -n | uniq)
+Line 21171 : -+@@ -56,0 +57,3 @@ while IFS= read -r file; do
+Line 21172 : -++  # Extract and map the current line number for each changed line
+Line 21173 : -++  current_line_number=$(echo "$line_numbers" | head -1)
+Line 21174 : -++
+Line 21175 : -@@ -18,3 +22,2 @@ diff --git a/changes.diff b/changes.diff
+Line 21176 : --new file mode 100644
+Line 21177 : --index 0000000..a6452b3
+Line 21178 : ----- /dev/null
+Line 21179 : -+index 1f4c0b2..905f973 100644
+Line 21180 : -+--- a/changes.diff
+Line 21181 : -@@ -22,961 +25,7053 @@ index 0000000..a6452b3
+Line 21182 : --@@ -0,0 +1,1262 @@
+Line 21183 : --+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21184 : --+index daf61a1..3603bae 100644
+Line 21185 : --+--- a/.husky/pre-commit
+Line 21186 : --++++ b/.husky/pre-commit
+Line 21187 : --+@@ -16 +16 @@ mkdir -p scanner-reports
+Line 21188 : --+-git diff --unified=0 --cached > changes.diff
+Line 21189 : --++git diff --cached --unified=0 > changes.diff
+Line 21190 : --+@@ -25 +25 @@ while IFS= read -r file; do
+Line 21191 : --+-  # Extract only the changed line numbers for the file
+Line 21192 : --++  # Extract only the added or modified lines for .cls and .lwc files
+Line 21193 : --+@@ -32 +32 @@ while IFS= read -r file; do
+Line 21194 : --+-  ' changes.diff)
+Line 21195 : --++  ' changes.diff | uniq)
+Line 21196 : --+@@ -61 +61 @@ while IFS= read -r file; do
+Line 21197 : --+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 21198 : --++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 21199 : --+diff --git a/changes.diff b/changes.diff
+Line 21200 : --+new file mode 100644
+Line 21201 : --+index 0000000..1831031
+Line 21202 : --+--- /dev/null
+Line 21203 : --++++ b/changes.diff
+Line 21204 : --+@@ -0,0 +1,1158 @@
+Line 21205 : --++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21206 : --++index daf61a1..d6ae40b 100644
+Line 21207 : --++--- a/.husky/pre-commit
+Line 21208 : --+++++ b/.husky/pre-commit
+Line 21209 : --++@@ -25 +25 @@ while IFS= read -r file; do
+Line 21210 : --++-  # Extract only the changed line numbers for the file
+Line 21211 : --+++  # Extract only the added or modified lines for .cls and .lwc files
+Line 21212 : --++@@ -32 +32 @@ while IFS= read -r file; do
+Line 21213 : --++-  ' changes.diff)
+Line 21214 : --+++  ' changes.diff | uniq)
+Line 21215 : --++@@ -61 +61 @@ while IFS= read -r file; do
+Line 21216 : --++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 21217 : --+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 21218 : --++diff --git a/changes.diff b/changes.diff
+Line 21219 : --++new file mode 100644
+Line 21220 : --++index 0000000..47b6c1c
+Line 21221 : --++--- /dev/null
+Line 21222 : --+++++ b/changes.diff
+Line 21223 : --++@@ -0,0 +1,1078 @@
+Line 21224 : --+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21225 : --+++index daf61a1..d6ae40b 100644
+Line 21226 : --+++--- a/.husky/pre-commit
+Line 21227 : --++++++ b/.husky/pre-commit
+Line 21228 : --+++@@ -25 +25 @@ while IFS= read -r file; do
+Line 21229 : --+++-  # Extract only the changed line numbers for the file
+Line 21230 : --++++  # Extract only the added or modified lines for .cls and .lwc files
+Line 21231 : --+++@@ -32 +32 @@ while IFS= read -r file; do
+Line 21232 : --+++-  ' changes.diff)
+Line 21233 : --++++  ' changes.diff | uniq)
+Line 21234 : --+++@@ -61 +61 @@ while IFS= read -r file; do
+Line 21235 : --+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 21236 : --++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 21237 : --+++diff --git a/changes.diff b/changes.diff
+Line 21238 : --+++new file mode 100644
+Line 21239 : --+++index 0000000..8cd4f1a
+Line 21240 : --+++--- /dev/null
+Line 21241 : --++++++ b/changes.diff
+Line 21242 : --+++@@ -0,0 +1,977 @@
+Line 21243 : --++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21244 : --++++index daf61a1..73bb862 100644
+Line 21245 : --++++--- a/.husky/pre-commit
+Line 21246 : --+++++++ b/.husky/pre-commit
+Line 21247 : --++++@@ -61 +61 @@ while IFS= read -r file; do
+Line 21248 : --++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 21249 : --+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 21250 : --++++diff --git a/changes.diff b/changes.diff
+Line 21251 : --++++new file mode 100644
+Line 21252 : --++++index 0000000..f9d24dc
+Line 21253 : --++++--- /dev/null
+Line 21254 : --+++++++ b/changes.diff
+Line 21255 : --++++@@ -0,0 +1,876 @@
+Line 21256 : --+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21257 : --+++++index 19cfdbc..daf61a1 100644
+Line 21258 : --+++++--- a/.husky/pre-commit
+Line 21259 : --++++++++ b/.husky/pre-commit
+Line 21260 : --+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+Line 21261 : --+++++-  # Define the output path for the scanner report in CSV format
+Line 21262 : --+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 21263 : --++++++  # Extract only the changed line numbers for the file
+Line 21264 : --++++++  line_numbers=$(awk -v file="$file" '
+Line 21265 : --++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+Line 21266 : --++++++    /^diff --git/ {inside=0}
+Line 21267 : --++++++    $0 ~ file {inside=1}
+Line 21268 : --++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+Line 21269 : --++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 21270 : --++++++  ' changes.diff)
+Line 21271 : --++++++
+Line 21272 : --++++++  # If no changed lines are found for this file, skip it
+Line 21273 : --++++++  if [ -z "$line_numbers" ]; then
+Line 21274 : --++++++    echo "No changed lines found in $file"
+Line 21275 : --++++++    continue
+Line 21276 : --++++++  fi
+Line 21277 : --++++++
+Line 21278 : --++++++  # Convert the line numbers to a JSON array format for jq filtering
+Line 21279 : --++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+Line 21280 : --++++++
+Line 21281 : --++++++  echo "Changed lines for $file: $line_numbers_array"
+Line 21282 : --++++++
+Line 21283 : --++++++  # Define the output path for the scanner report in JSON format
+Line 21284 : --++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 21285 : --+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+Line 21286 : --+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 21287 : --+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 21288 : --++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+Line 21289 : --++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 21290 : --+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+Line 21291 : --+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+Line 21292 : --+++++-  echo "Filtering scanner report for $file for Line '70'..."
+Line 21293 : --+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21294 : --++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+Line 21295 : --++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+Line 21296 : --++++++  jq --argjson lines "$line_numbers_array" '
+Line 21297 : --++++++    [.[] | 
+Line 21298 : --++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 21299 : --++++++      select(.violations | length > 0)]
+Line 21300 : --++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21301 : --+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+Line 21302 : --+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 21303 : --+++++-    echo "No issues found for line '70' in $file"
+Line 21304 : --++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 21305 : --++++++    echo "No issues found for changed lines in $file"
+Line 21306 : --+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+Line 21307 : --+++++-  echo "Filtered scanner report for $file (Line '70'):"
+Line 21308 : --+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21309 : --++++++  echo "Filtered scanner report for $file (Changed lines):"
+Line 21310 : --++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21311 : --+++++@@ -53 +77 @@ done <<< "$changed_files"
+Line 21312 : --+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 21313 : --++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 21314 : --+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+Line 21315 : --+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+Line 21316 : --++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+Line 21317 : --+++++@@ -60,2 +84,2 @@ fi
+Line 21318 : --+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 21319 : --+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 21320 : --++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+Line 21321 : --++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+Line 21322 : --+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 21323 : --+++++-echo "Final filtered scanner report (Line '70'):"
+Line 21324 : --++++++echo "Final filtered scanner report (Changed lines):"
+Line 21325 : --+++++@@ -67 +91 @@ cat "$final_report"
+Line 21326 : --+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+Line 21327 : --++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+Line 21328 : --+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+Line 21329 : --+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+Line 21330 : --++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+Line 21331 : --+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+Line 21332 : --+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+Line 21333 : --++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+Line 21334 : --+++++@@ -77 +101 @@ else
+Line 21335 : --+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+Line 21336 : --++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+Line 21337 : --+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 21338 : --+++++deleted file mode 100644
+Line 21339 : --+++++index 9d692ac..0000000
+Line 21340 : --+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 21341 : --++++++++ /dev/null
+Line 21342 : --+++++@@ -1,24 +0,0 @@
+Line 21343 : --+++++-0
+Line 21344 : --+++++-1
+Line 21345 : --+++++-2
+Line 21346 : --+++++-3
+Line 21347 : --+++++-4
+Line 21348 : --+++++-5
+Line 21349 : --+++++-60
+Line 21350 : --+++++-642
+Line 21351 : --+++++-643
+Line 21352 : --+++++-644
+Line 21353 : --+++++-645
+Line 21354 : --+++++-646
+Line 21355 : --+++++-647
+Line 21356 : --+++++-648
+Line 21357 : --+++++-649
+Line 21358 : --+++++-650
+Line 21359 : --+++++-651
+Line 21360 : --+++++-652
+Line 21361 : --+++++-653
+Line 21362 : --+++++-654
+Line 21363 : --+++++-655
+Line 21364 : --+++++-656
+Line 21365 : --+++++-657
+Line 21366 : --+++++-70
+Line 21367 : --+++++diff --git a/changes.diff b/changes.diff
+Line 21368 : --+++++deleted file mode 100644
+Line 21369 : --+++++index 61d162d..0000000
+Line 21370 : --+++++--- a/changes.diff
+Line 21371 : --++++++++ /dev/null
+Line 21372 : --+++++@@ -1,647 +0,0 @@
+Line 21373 : --+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21374 : --+++++-index 5b262e4..8c05f52 100644
+Line 21375 : --+++++---- a/.husky/pre-commit
+Line 21376 : --+++++-+++ b/.husky/pre-commit
+Line 21377 : --+++++-@@ -113 +113 @@ cat "$final_report"
+Line 21378 : --+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 21379 : --+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+Line 21380 : --+++++-diff --git a/changes.diff b/changes.diff
+Line 21381 : --+++++-index 9a218e6..4fe1995 100644
+Line 21382 : --+++++---- a/changes.diff
+Line 21383 : --+++++-+++ b/changes.diff
+Line 21384 : --+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21385 : --+++++--index aa6762f..586962b 100644
+Line 21386 : --+++++-+index 586962b..5b262e4 100644
+Line 21387 : --+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+Line 21388 : --+++++--@@ -41 +41 @@ while IFS= read -r file; do
+Line 21389 : --+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 21390 : --+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 21391 : --+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 21392 : --+++++---  # Extract line numbers as a comma-separated string for filtering later
+Line 21393 : --+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 21394 : --+++++--+  # Extract line numbers as an array for filtering later
+Line 21395 : --+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 21396 : --+++++--@@ -66 +66 @@ while IFS= read -r file; do
+Line 21397 : --+++++---  if [ -z "$line_numbers" ]; then
+Line 21398 : --+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 21399 : --+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 21400 : --+++++--+  # Convert the array of line numbers into a format that can be used by awk
+Line 21401 : --+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 21402 : --+++++--+  lines_for_filter="${lines_for_filter:1}"
+Line 21403 : --+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+Line 21404 : --+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+Line 21405 : --+++++-+-  awk -v file="$file" '
+Line 21406 : --+++++-++  # Extract only the changed line numbers for the file
+Line 21407 : --+++++-++  line_numbers=$(awk -v file="$file" '
+Line 21408 : --+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+Line 21409 : --+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+Line 21410 : --+++++-++  ' changes.diff)
+Line 21411 : --+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+Line 21412 : --+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+Line 21413 : --+++++-++  if [ -z "$line_numbers" ]; then
+Line 21414 : --+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+Line 21415 : --+++++-+-  # Extract line numbers as an array for filtering later
+Line 21416 : --+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 21417 : --+++++-++  # Convert the line numbers to a comma-separated string for matching
+Line 21418 : --+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+Line 21419 : --+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+Line 21420 : --+++++--@@ -73 +77 @@ while IFS= read -r file; do
+Line 21421 : --+++++---  awk -v lines="$line_numbers" '
+Line 21422 : --+++++--+  awk -v lines="$lines_for_filter" '
+Line 21423 : --+++++--@@ -81 +85 @@ while IFS= read -r file; do
+Line 21424 : --+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 21425 : --+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 21426 : --+++++--@@ -111 +115 @@ cat "$final_report"
+Line 21427 : --+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21428 : --+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 21429 : --+++++-++  echo "Changed lines for $file: $line_numbers_string"
+Line 21430 : --+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+Line 21431 : --+++++-+-  # Ensure that line_numbers is not empty
+Line 21432 : --+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 21433 : --+++++-++  # Ensure that line_numbers_string is not empty
+Line 21434 : --+++++-++  if [ -z "$line_numbers_string" ]; then
+Line 21435 : --+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+Line 21436 : --+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+Line 21437 : --+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 21438 : --+++++-+-  lines_for_filter="${lines_for_filter:1}"
+Line 21439 : --+++++-+-
+Line 21440 : --+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+Line 21441 : --+++++-+-  awk -v lines="$lines_for_filter" '
+Line 21442 : --+++++-++  awk -v lines="$line_numbers_string" '
+Line 21443 : --+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 21444 : --+++++--index 0e43eee..a206584 100644
+Line 21445 : --+++++-+index a206584..9d692ac 100644
+Line 21446 : --+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+Line 21447 : --+++++--@@ -1 +1,6 @@
+Line 21448 : --+++++---70 :           System.debug('Hi Hello');
+Line 21449 : --+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 21450 : --+++++--+1 : index 1ec7a54..870d508 100644
+Line 21451 : --+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 21452 : --+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 21453 : --+++++--+4 : -          System.debug('Hi');
+Line 21454 : --+++++--+70 :           System.debug('Hi');
+Line 21455 : --+++++-+@@ -1,6 +1,24 @@
+Line 21456 : --+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 21457 : --+++++-+-1 : index 1ec7a54..870d508 100644
+Line 21458 : --+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 21459 : --+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 21460 : --+++++-+-4 : -          System.debug('Hi');
+Line 21461 : --+++++-+-70 :           System.debug('Hi');
+Line 21462 : --+++++-++0
+Line 21463 : --+++++-++1
+Line 21464 : --+++++-++2
+Line 21465 : --+++++-++3
+Line 21466 : --+++++-++4
+Line 21467 : --+++++-++5
+Line 21468 : --+++++-++60
+Line 21469 : --+++++-++642
+Line 21470 : --+++++-++643
+Line 21471 : --+++++-++644
+Line 21472 : --+++++-++645
+Line 21473 : --+++++-++646
+Line 21474 : --+++++-++647
+Line 21475 : --+++++-++648
+Line 21476 : --+++++-++649
+Line 21477 : --+++++-++650
+Line 21478 : --+++++-++651
+Line 21479 : --+++++-++652
+Line 21480 : --+++++-++653
+Line 21481 : --+++++-++654
+Line 21482 : --+++++-++655
+Line 21483 : --+++++-++656
+Line 21484 : --+++++-++657
+Line 21485 : --+++++-++70
+Line 21486 : --+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+Line 21487 : --+++++--index 760971b..3dfa538 100644
+Line 21488 : --+++++-+index 3dfa538..9a218e6 100644
+Line 21489 : --+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+Line 21490 : --+++++---index 255a037..525d43a 100644
+Line 21491 : --+++++--+index 525d43a..aa6762f 100644
+Line 21492 : --+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 21493 : --+++++---@@ -50 +50 @@ while IFS= read -r file; do
+Line 21494 : --+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 21495 : --+++++---+  # Extract line numbers as a comma-separated string for filtering later
+Line 21496 : --+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 21497 : --+++++----  # Define the output path for the scanner report
+Line 21498 : --+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 21499 : --+++++---+  # Define the output path for the scanner report in CSV format
+Line 21500 : --+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 21501 : --+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 21502 : --+++++----  # Run the SFDX scanner on the file and generate the report
+Line 21503 : --+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 21504 : --+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 21505 : --+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 21506 : --+++++---@@ -71 +71 @@ while IFS= read -r file; do
+Line 21507 : --+++++----  # Filter the scanner report based on the changed line numbers
+Line 21508 : --+++++---+  # Filter the CSV scanner report based on the changed line numbers
+Line 21509 : --+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 21510 : --+++++----  jq --arg lines "$line_numbers" '
+Line 21511 : --+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 21512 : --+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21513 : --+++++---+  awk -v lines="$line_numbers" '
+Line 21514 : --+++++---+  BEGIN {
+Line 21515 : --+++++---+    FS=OFS=",";
+Line 21516 : --+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 21517 : --+++++---+    for (i in arr) {
+Line 21518 : --+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 21519 : --+++++---+    }
+Line 21520 : --+++++---+  }
+Line 21521 : --+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 21522 : --+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21523 : --+++++---@@ -78 +85 @@ while IFS= read -r file; do
+Line 21524 : --+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 21525 : --+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 21526 : --+++++---@@ -84 +91 @@ while IFS= read -r file; do
+Line 21527 : --+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21528 : --+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21529 : --+++++---@@ -89 +96 @@ done <<< "$changed_files"
+Line 21530 : --+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 21531 : --+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 21532 : --+++++---@@ -95,2 +102,4 @@ fi
+Line 21533 : --+++++----# Combine all filtered reports into one final report
+Line 21534 : --+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 21535 : --+++++---+# Combine all filtered reports into one final report (optional)
+Line 21536 : --+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 21537 : --+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 21538 : --+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 21539 : --+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 21540 : --+++++----# Parse the final filtered scanner report and check for severity 3 issues
+Line 21541 : --+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 21542 : --+++++---+echo "Final filtered scanner report:"
+Line 21543 : --+++++---+cat "$final_report"
+Line 21544 : --+++++---+
+Line 21545 : --+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 21546 : --+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21547 : --+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+Line 21548 : --+++++--+-    FS=OFS=",";
+Line 21549 : --+++++--++    FS=OFS=",";  # Define CSV format
+Line 21550 : --+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+Line 21551 : --+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 21552 : --+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 21553 : --+++++--+@@ -111 +111 @@ cat "$final_report"
+Line 21554 : --+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21555 : --+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21556 : --+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 21557 : --+++++--+new file mode 100644
+Line 21558 : --+++++--+index 0000000..0e43eee
+Line 21559 : --+++++--+--- /dev/null
+Line 21560 : --+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 21561 : --+++++--+@@ -0,0 +1 @@
+Line 21562 : --+++++--++70 :           System.debug('Hi Hello');
+Line 21563 : --+++++--+diff --git a/changes.diff b/changes.diff
+Line 21564 : --+++++--+new file mode 100644
+Line 21565 : --+++++--+index 0000000..760971b
+Line 21566 : --+++++--+--- /dev/null
+Line 21567 : --+++++--++++ b/changes.diff
+Line 21568 : --+++++--+@@ -0,0 +1,65 @@
+Line 21569 : --+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21570 : --+++++--++index 255a037..525d43a 100644
+Line 21571 : --+++++--++--- a/.husky/pre-commit
+Line 21572 : --+++++--+++++ b/.husky/pre-commit
+Line 21573 : --+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+Line 21574 : --+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 21575 : --+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+Line 21576 : --+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 21577 : --+++++--++-  # Define the output path for the scanner report
+Line 21578 : --+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 21579 : --+++++--+++  # Define the output path for the scanner report in CSV format
+Line 21580 : --+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 21581 : --+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 21582 : --+++++--++-  # Run the SFDX scanner on the file and generate the report
+Line 21583 : --+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 21584 : --+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 21585 : --+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 21586 : --+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+Line 21587 : --+++++--++-  # Filter the scanner report based on the changed line numbers
+Line 21588 : --+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+Line 21589 : --+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 21590 : --+++++--++-  jq --arg lines "$line_numbers" '
+Line 21591 : --+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 21592 : --+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21593 : --+++++--+++  awk -v lines="$line_numbers" '
+Line 21594 : --+++++--+++  BEGIN {
+Line 21595 : --+++++--+++    FS=OFS=",";
+Line 21596 : --+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 21597 : --+++++--+++    for (i in arr) {
+Line 21598 : --+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 21599 : --+++++--+++    }
+Line 21600 : --+++++--+++  }
+Line 21601 : --+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 21602 : --+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21603 : --+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+Line 21604 : --+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 21605 : --+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 21606 : --+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+Line 21607 : --+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21608 : --+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21609 : --+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+Line 21610 : --+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 21611 : --+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 21612 : --+++++--++@@ -95,2 +102,4 @@ fi
+Line 21613 : --+++++--++-# Combine all filtered reports into one final report
+Line 21614 : --+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 21615 : --+++++--+++# Combine all filtered reports into one final report (optional)
+Line 21616 : --+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 21617 : --+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 21618 : --+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 21619 : --+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 21620 : --+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 21621 : --+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 21622 : --+++++--+++echo "Final filtered scanner report:"
+Line 21623 : --+++++--+++cat "$final_report"
+Line 21624 : --+++++--+++
+Line 21625 : --+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 21626 : --+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21627 : --+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 21628 : --+++++--++index 1ec7a54..870d508 100644
+Line 21629 : --+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 21630 : --+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 21631 : --+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 21632 : --+++++--++-          System.debug('Hi');
+Line 21633 : --+++++--+++          System.debug('Hi Hello');
+Line 21634 : --+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 21635 : --+++++---index 1ec7a54..870d508 100644
+Line 21636 : --+++++--+index 870d508..1ec7a54 100644
+Line 21637 : --+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 21638 : --+++++----          System.debug('Hi');
+Line 21639 : --+++++---+          System.debug('Hi Hello');
+Line 21640 : --+++++--+-          System.debug('Hi Hello');
+Line 21641 : --+++++--++          System.debug('Hi');
+Line 21642 : --+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 21643 : --+++++--+new file mode 100644
+Line 21644 : --+++++--+index 0000000..5a3a1ac
+Line 21645 : --+++++--+--- /dev/null
+Line 21646 : --+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 21647 : --+++++--+@@ -0,0 +1 @@
+Line 21648 : --+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 21649 : --+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 21650 : --+++++--+new file mode 100644
+Line 21651 : --+++++--+index 0000000..5a3a1ac
+Line 21652 : --+++++--+--- /dev/null
+Line 21653 : --+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 21654 : --+++++--+@@ -0,0 +1 @@
+Line 21655 : --+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 21656 : --+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 21657 : --+++++--+new file mode 100644
+Line 21658 : --+++++--+index 0000000..e1ef0f0
+Line 21659 : --+++++--+--- /dev/null
+Line 21660 : --+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 21661 : --+++++--+@@ -0,0 +1,5 @@
+Line 21662 : --+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 21663 : --+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 21664 : --+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 21665 : --+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 21666 : --+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 21667 : --+++++-+-index 525d43a..aa6762f 100644
+Line 21668 : --+++++-++index aa6762f..586962b 100644
+Line 21669 : --+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+Line 21670 : --+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+Line 21671 : --+++++-+--    FS=OFS=",";
+Line 21672 : --+++++-+-+    FS=OFS=",";  # Define CSV format
+Line 21673 : --+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+Line 21674 : --+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 21675 : --+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 21676 : --+++++-+-@@ -111 +111 @@ cat "$final_report"
+Line 21677 : --+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21678 : --+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21679 : --+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+Line 21680 : --+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 21681 : --+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 21682 : --+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 21683 : --+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+Line 21684 : --+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 21685 : --+++++-+++  # Extract line numbers as an array for filtering later
+Line 21686 : --+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 21687 : --+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+Line 21688 : --+++++-++-  if [ -z "$line_numbers" ]; then
+Line 21689 : --+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 21690 : --+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 21691 : --+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+Line 21692 : --+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 21693 : --+++++-+++  lines_for_filter="${lines_for_filter:1}"
+Line 21694 : --+++++-+++
+Line 21695 : --+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+Line 21696 : --+++++-++-  awk -v lines="$line_numbers" '
+Line 21697 : --+++++-+++  awk -v lines="$lines_for_filter" '
+Line 21698 : --+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+Line 21699 : --+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 21700 : --+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 21701 : --+++++-++@@ -111 +115 @@ cat "$final_report"
+Line 21702 : --+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21703 : --+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 21704 : --+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 21705 : --+++++-+-new file mode 100644
+Line 21706 : --+++++-+-index 0000000..0e43eee
+Line 21707 : --+++++-+---- /dev/null
+Line 21708 : --+++++-++index 0e43eee..a206584 100644
+Line 21709 : --+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 21710 : --+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+Line 21711 : --+++++-+-@@ -0,0 +1 @@
+Line 21712 : --+++++-+-+70 :           System.debug('Hi Hello');
+Line 21713 : --+++++-++@@ -1 +1,6 @@
+Line 21714 : --+++++-++-70 :           System.debug('Hi Hello');
+Line 21715 : --+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 21716 : --+++++-+++1 : index 1ec7a54..870d508 100644
+Line 21717 : --+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 21718 : --+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 21719 : --+++++-+++4 : -          System.debug('Hi');
+Line 21720 : --+++++-+++70 :           System.debug('Hi');
+Line 21721 : --+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+Line 21722 : --+++++-+-new file mode 100644
+Line 21723 : --+++++-+-index 0000000..760971b
+Line 21724 : --+++++-+---- /dev/null
+Line 21725 : --+++++-++index 760971b..3dfa538 100644
+Line 21726 : --+++++-++--- a/changes.diff
+Line 21727 : --+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+Line 21728 : --+++++-+-@@ -0,0 +1,65 @@
+Line 21729 : --+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21730 : --+++++-+-+index 255a037..525d43a 100644
+Line 21731 : --+++++-+-+--- a/.husky/pre-commit
+Line 21732 : --+++++-+-++++ b/.husky/pre-commit
+Line 21733 : --+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+Line 21734 : --+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 21735 : --+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+Line 21736 : --+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 21737 : --+++++-+-+-  # Define the output path for the scanner report
+Line 21738 : --+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 21739 : --+++++-+-++  # Define the output path for the scanner report in CSV format
+Line 21740 : --+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 21741 : --+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 21742 : --+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+Line 21743 : --+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 21744 : --+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 21745 : --+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 21746 : --+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+Line 21747 : --+++++-+-+-  # Filter the scanner report based on the changed line numbers
+Line 21748 : --+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+Line 21749 : --+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 21750 : --+++++-+-+-  jq --arg lines "$line_numbers" '
+Line 21751 : --+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 21752 : --+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21753 : --+++++-+-++  awk -v lines="$line_numbers" '
+Line 21754 : --+++++-+-++  BEGIN {
+Line 21755 : --+++++-+-++    FS=OFS=",";
+Line 21756 : --+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 21757 : --+++++-+-++    for (i in arr) {
+Line 21758 : --+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 21759 : --+++++-+-++    }
+Line 21760 : --+++++-+-++  }
+Line 21761 : --+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 21762 : --+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21763 : --+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+Line 21764 : --+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 21765 : --+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 21766 : --+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+Line 21767 : --+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21768 : --+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21769 : --+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+Line 21770 : --+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 21771 : --+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 21772 : --+++++-+-+@@ -95,2 +102,4 @@ fi
+Line 21773 : --+++++-+-+-# Combine all filtered reports into one final report
+Line 21774 : --+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 21775 : --+++++-+-++# Combine all filtered reports into one final report (optional)
+Line 21776 : --+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 21777 : --+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 21778 : --+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 21779 : --+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 21780 : --+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+Line 21781 : --+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 21782 : --+++++-+-++echo "Final filtered scanner report:"
+Line 21783 : --+++++-+-++cat "$final_report"
+Line 21784 : --+++++-+-++
+Line 21785 : --+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 21786 : --+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21787 : --+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 21788 : --+++++-+-+index 1ec7a54..870d508 100644
+Line 21789 : --+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 21790 : --+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 21791 : --+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 21792 : --+++++-+-+-          System.debug('Hi');
+Line 21793 : --+++++-+-++          System.debug('Hi Hello');
+Line 21794 : --+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21795 : --+++++-++-index 255a037..525d43a 100644
+Line 21796 : --+++++-+++index 525d43a..aa6762f 100644
+Line 21797 : --+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 21798 : --+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+Line 21799 : --+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 21800 : --+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+Line 21801 : --+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 21802 : --+++++-++--  # Define the output path for the scanner report
+Line 21803 : --+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 21804 : --+++++-++-+  # Define the output path for the scanner report in CSV format
+Line 21805 : --+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 21806 : --+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 21807 : --+++++-++--  # Run the SFDX scanner on the file and generate the report
+Line 21808 : --+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 21809 : --+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 21810 : --+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 21811 : --+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+Line 21812 : --+++++-++--  # Filter the scanner report based on the changed line numbers
+Line 21813 : --+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+Line 21814 : --+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 21815 : --+++++-++--  jq --arg lines "$line_numbers" '
+Line 21816 : --+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 21817 : --+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21818 : --+++++-++-+  awk -v lines="$line_numbers" '
+Line 21819 : --+++++-++-+  BEGIN {
+Line 21820 : --+++++-++-+    FS=OFS=",";
+Line 21821 : --+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 21822 : --+++++-++-+    for (i in arr) {
+Line 21823 : --+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 21824 : --+++++-++-+    }
+Line 21825 : --+++++-++-+  }
+Line 21826 : --+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 21827 : --+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21828 : --+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+Line 21829 : --+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 21830 : --+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 21831 : --+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+Line 21832 : --+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21833 : --+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21834 : --+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+Line 21835 : --+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 21836 : --+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 21837 : --+++++-++-@@ -95,2 +102,4 @@ fi
+Line 21838 : --+++++-++--# Combine all filtered reports into one final report
+Line 21839 : --+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 21840 : --+++++-++-+# Combine all filtered reports into one final report (optional)
+Line 21841 : --+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 21842 : --+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 21843 : --+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 21844 : --+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 21845 : --+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+Line 21846 : --+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 21847 : --+++++-++-+echo "Final filtered scanner report:"
+Line 21848 : --+++++-++-+cat "$final_report"
+Line 21849 : --+++++-++-+
+Line 21850 : --+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 21851 : --+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21852 : --+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+Line 21853 : --+++++-+++-    FS=OFS=",";
+Line 21854 : --+++++-++++    FS=OFS=",";  # Define CSV format
+Line 21855 : --+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+Line 21856 : --+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 21857 : --+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 21858 : --+++++-+++@@ -111 +111 @@ cat "$final_report"
+Line 21859 : --+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21860 : --+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21861 : --+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 21862 : --+++++-+++new file mode 100644
+Line 21863 : --+++++-+++index 0000000..0e43eee
+Line 21864 : --+++++-+++--- /dev/null
+Line 21865 : --+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 21866 : --+++++-+++@@ -0,0 +1 @@
+Line 21867 : --+++++-++++70 :           System.debug('Hi Hello');
+Line 21868 : --+++++-+++diff --git a/changes.diff b/changes.diff
+Line 21869 : --+++++-+++new file mode 100644
+Line 21870 : --+++++-+++index 0000000..760971b
+Line 21871 : --+++++-+++--- /dev/null
+Line 21872 : --+++++-++++++ b/changes.diff
+Line 21873 : --+++++-+++@@ -0,0 +1,65 @@
+Line 21874 : --+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 21875 : --+++++-++++index 255a037..525d43a 100644
+Line 21876 : --+++++-++++--- a/.husky/pre-commit
+Line 21877 : --+++++-+++++++ b/.husky/pre-commit
+Line 21878 : --+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+Line 21879 : --+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 21880 : --+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+Line 21881 : --+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 21882 : --+++++-++++-  # Define the output path for the scanner report
+Line 21883 : --+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 21884 : --+++++-+++++  # Define the output path for the scanner report in CSV format
+Line 21885 : --+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 21886 : --+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 21887 : --+++++-++++-  # Run the SFDX scanner on the file and generate the report
+Line 21888 : --+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 21889 : --+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 21890 : --+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 21891 : --+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+Line 21892 : --+++++-++++-  # Filter the scanner report based on the changed line numbers
+Line 21893 : --+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+Line 21894 : --+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 21895 : --+++++-++++-  jq --arg lines "$line_numbers" '
+Line 21896 : --+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 21897 : --+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21898 : --+++++-+++++  awk -v lines="$line_numbers" '
+Line 21899 : --+++++-+++++  BEGIN {
+Line 21900 : --+++++-+++++    FS=OFS=",";
+Line 21901 : --+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 21902 : --+++++-+++++    for (i in arr) {
+Line 21903 : --+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 21904 : --+++++-+++++    }
+Line 21905 : --+++++-+++++  }
+Line 21906 : --+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 21907 : --+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21908 : --+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+Line 21909 : --+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 21910 : --+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 21911 : --+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+Line 21912 : --+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 21913 : --+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 21914 : --+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+Line 21915 : --+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 21916 : --+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 21917 : --+++++-++++@@ -95,2 +102,4 @@ fi
+Line 21918 : --+++++-++++-# Combine all filtered reports into one final report
+Line 21919 : --+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 21920 : --+++++-+++++# Combine all filtered reports into one final report (optional)
+Line 21921 : --+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 21922 : --+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 21923 : --+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 21924 : --+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 21925 : --+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 21926 : --+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 21927 : --+++++-+++++echo "Final filtered scanner report:"
+Line 21928 : --+++++-+++++cat "$final_report"
+Line 21929 : --+++++-+++++
+Line 21930 : --+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 21931 : --+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 21932 : --+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 21933 : --+++++-++++index 1ec7a54..870d508 100644
+Line 21934 : --+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 21935 : --+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 21936 : --+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 21937 : --+++++-++++-          System.debug('Hi');
+Line 21938 : --+++++-+++++          System.debug('Hi Hello');
+Line 21939 : --+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 21940 : --+++++-++-index 1ec7a54..870d508 100644
+Line 21941 : --+++++-+++index 870d508..1ec7a54 100644
+Line 21942 : --+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 21943 : --+++++-++--          System.debug('Hi');
+Line 21944 : --+++++-++-+          System.debug('Hi Hello');
+Line 21945 : --+++++-+++-          System.debug('Hi Hello');
+Line 21946 : --+++++-++++          System.debug('Hi');
+Line 21947 : --+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 21948 : --+++++-+++new file mode 100644
+Line 21949 : --+++++-+++index 0000000..5a3a1ac
+Line 21950 : --+++++-+++--- /dev/null
+Line 21951 : --+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 21952 : --+++++-+++@@ -0,0 +1 @@
+Line 21953 : --+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 21954 : --+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 21955 : --+++++-+++new file mode 100644
+Line 21956 : --+++++-+++index 0000000..5a3a1ac
+Line 21957 : --+++++-+++--- /dev/null
+Line 21958 : --+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 21959 : --+++++-+++@@ -0,0 +1 @@
+Line 21960 : --+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 21961 : --+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 21962 : --+++++-+++new file mode 100644
+Line 21963 : --+++++-+++index 0000000..e1ef0f0
+Line 21964 : --+++++-+++--- /dev/null
+Line 21965 : --+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 21966 : --+++++-+++@@ -0,0 +1,5 @@
+Line 21967 : --+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 21968 : --+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 21969 : --+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 21970 : --+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 21971 : --+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 21972 : --+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 21973 : --+++++-+-index 870d508..1ec7a54 100644
+Line 21974 : --+++++-++index 1ec7a54..870d508 100644
+Line 21975 : --+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+Line 21976 : --+++++-+--          System.debug('Hi Hello');
+Line 21977 : --+++++-+-+          System.debug('Hi');
+Line 21978 : --+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 21979 : --+++++-+-new file mode 100644
+Line 21980 : --+++++-+-index 0000000..5a3a1ac
+Line 21981 : --+++++-+---- /dev/null
+Line 21982 : --+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 21983 : --+++++-+-@@ -0,0 +1 @@
+Line 21984 : --+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 21985 : --+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 21986 : --+++++-+-new file mode 100644
+Line 21987 : --+++++-+-index 0000000..5a3a1ac
+Line 21988 : --+++++-+---- /dev/null
+Line 21989 : --+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 21990 : --+++++-+-@@ -0,0 +1 @@
+Line 21991 : --+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 21992 : --+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 21993 : --+++++-+-new file mode 100644
+Line 21994 : --+++++-+-index 0000000..e1ef0f0
+Line 21995 : --+++++-+---- /dev/null
+Line 21996 : --+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 21997 : --+++++-+-@@ -0,0 +1,5 @@
+Line 21998 : --+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 21999 : --+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 22000 : --+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 22001 : --+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 22002 : --+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 22003 : --+++++-++-          System.debug('Hi');
+Line 22004 : --+++++-+++          System.debug('Hi Hello');
+Line 22005 : --+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 22006 : --+++++--index 1ec7a54..870d508 100644
+Line 22007 : --+++++-+index 870d508..5eafcac 100644
+Line 22008 : --+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+Line 22009 : --+++++---          System.debug('Hi');
+Line 22010 : --+++++--+          System.debug('Hi Hello');
+Line 22011 : --+++++-+-          System.debug('Hi Hello');
+Line 22012 : --+++++-++          System.debug('Happy');
+Line 22013 : --+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 22014 : --+++++-index 5eafcac..1ec7a54 100644
+Line 22015 : --+++++---- a/force-app/main/default/classes/Account_Insert.cls
+Line 22016 : --+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+Line 22017 : --+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 22018 : --+++++--          System.debug('Happy');
+Line 22019 : --+++++-+          System.debug('Hi');
+Line 22020 : --+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 22021 : --+++++index 73696e2..9e21e88 100644
+Line 22022 : --+++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 22023 : --++++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 22024 : --+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 22025 : --+++++-          System.debug('Hello and Hi');
+Line 22026 : --++++++          System.debug('Hi AND');
+Line 22027 : --+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 22028 : --+++++deleted file mode 100644
+Line 22029 : --+++++index 5a3a1ac..0000000
+Line 22030 : --+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 22031 : --++++++++ /dev/null
+Line 22032 : --+++++@@ -1 +0,0 @@
+Line 22033 : --+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22034 : --+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 22035 : --+++++new file mode 100644
+Line 22036 : --+++++index 0000000..ebc3aa5
+Line 22037 : --+++++--- /dev/null
+Line 22038 : --++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 22039 : --+++++@@ -0,0 +1,30 @@
+Line 22040 : --++++++[
+Line 22041 : --++++++  {
+Line 22042 : --++++++    "engine": "pmd",
+Line 22043 : --++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 22044 : --++++++    "violations": [
+Line 22045 : --++++++      {
+Line 22046 : --++++++        "line": 70,
+Line 22047 : --++++++        "column": 11,
+Line 22048 : --++++++        "endLine": 70,
+Line 22049 : --++++++        "endColumn": 29,
+Line 22050 : --++++++        "severity": 3,
+Line 22051 : --++++++        "ruleName": "AvoidDebugStatements",
+Line 22052 : --++++++        "category": "Performance",
+Line 22053 : --++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 22054 : --++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 22055 : --++++++      },
+Line 22056 : --++++++      {
+Line 22057 : --++++++        "line": 70,
+Line 22058 : --++++++        "column": 11,
+Line 22059 : --++++++        "endLine": 70,
+Line 22060 : --++++++        "endColumn": 29,
+Line 22061 : --++++++        "severity": 3,
+Line 22062 : --++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 22063 : --++++++        "category": "Best Practices",
+Line 22064 : --++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 22065 : --++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 22066 : --++++++      }
+Line 22067 : --++++++    ]
+Line 22068 : --++++++  }
+Line 22069 : --++++++]
+Line 22070 : --+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 22071 : --+++++deleted file mode 100644
+Line 22072 : --+++++index 5a3a1ac..0000000
+Line 22073 : --+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+Line 22074 : --++++++++ /dev/null
+Line 22075 : --+++++@@ -1 +0,0 @@
+Line 22076 : --+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22077 : --+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 22078 : --+++++new file mode 100644
+Line 22079 : --+++++index 0000000..ebc3aa5
+Line 22080 : --+++++--- /dev/null
+Line 22081 : --++++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 22082 : --+++++@@ -0,0 +1,30 @@
+Line 22083 : --++++++[
+Line 22084 : --++++++  {
+Line 22085 : --++++++    "engine": "pmd",
+Line 22086 : --++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 22087 : --++++++    "violations": [
+Line 22088 : --++++++      {
+Line 22089 : --++++++        "line": 70,
+Line 22090 : --++++++        "column": 11,
+Line 22091 : --++++++        "endLine": 70,
+Line 22092 : --++++++        "endColumn": 29,
+Line 22093 : --++++++        "severity": 3,
+Line 22094 : --++++++        "ruleName": "AvoidDebugStatements",
+Line 22095 : --++++++        "category": "Performance",
+Line 22096 : --++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 22097 : --++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 22098 : --++++++      },
+Line 22099 : --++++++      {
+Line 22100 : --++++++        "line": 70,
+Line 22101 : --++++++        "column": 11,
+Line 22102 : --++++++        "endLine": 70,
+Line 22103 : --++++++        "endColumn": 29,
+Line 22104 : --++++++        "severity": 3,
+Line 22105 : --++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 22106 : --++++++        "category": "Best Practices",
+Line 22107 : --++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 22108 : --++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 22109 : --++++++      }
+Line 22110 : --++++++    ]
+Line 22111 : --++++++  }
+Line 22112 : --++++++]
+Line 22113 : --+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 22114 : --+++++deleted file mode 100644
+Line 22115 : --+++++index e1ef0f0..0000000
+Line 22116 : --+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 22117 : --++++++++ /dev/null
+Line 22118 : --+++++@@ -1,5 +0,0 @@
+Line 22119 : --+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22120 : --+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 22121 : --+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 22122 : --+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 22123 : --+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 22124 : --+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 22125 : --+++++new file mode 100644
+Line 22126 : --+++++index 0000000..c973918
+Line 22127 : --+++++--- /dev/null
+Line 22128 : --++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 22129 : --+++++@@ -0,0 +1 @@
+Line 22130 : --++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 22131 : --+++++\ No newline at end of file
+Line 22132 : --++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 22133 : --++++index 9e21e88..800635e 100644
+Line 22134 : --++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 22135 : --+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 22136 : --++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 22137 : --++++-          System.debug('Hi AND');
+Line 22138 : --+++++          System.debug('Hi AND Hello');
+Line 22139 : --++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 22140 : --++++index ebc3aa5..fe51488 100644
+Line 22141 : --++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 22142 : --+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 22143 : -+@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22144 : -+-index daf61a1..3603bae 100644
+Line 22145 : -++index 1328704..8004c80 100644
+Line 22146 : -+@@ -5,12 +5,9 @@ index daf61a1..3603bae 100644
+Line 22147 : -+-@@ -16 +16 @@ mkdir -p scanner-reports
+Line 22148 : -+--git diff --unified=0 --cached > changes.diff
+Line 22149 : -+-+git diff --cached --unified=0 > changes.diff
+Line 22150 : -+-@@ -25 +25 @@ while IFS= read -r file; do
+Line 22151 : -+--  # Extract only the changed line numbers for the file
+Line 22152 : -+-+  # Extract only the added or modified lines for .cls and .lwc files
+Line 22153 : -+-@@ -32 +32 @@ while IFS= read -r file; do
+Line 22154 : -+--  ' changes.diff)
+Line 22155 : -+-+  ' changes.diff | uniq)
+Line 22156 : -+-@@ -61 +61 @@ while IFS= read -r file; do
+Line 22157 : -+--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 22158 : -+-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 22159 : -++@@ -29,4 +29,4 @@ while IFS= read -r file; do
+Line 22160 : -++-    $0 ~ file {inside=1}
+Line 22161 : -++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+Line 22162 : -++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+Line 22163 : -++-  ' changes.diff | uniq)
+Line 22164 : -+++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
+Line 22165 : -+++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
+Line 22166 : -+++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
+Line 22167 : -+++  ' changes.diff | sort -n | uniq)
+Line 22168 : -+@@ -18,3 +15,2 @@ diff --git a/changes.diff b/changes.diff
+Line 22169 : -+-new file mode 100644
+Line 22170 : -+-index 0000000..a6452b3
+Line 22171 : -+---- /dev/null
+Line 22172 : -++index 1f4c0b2..eb6e437 100644
+Line 22173 : -++--- a/changes.diff
+Line 22174 : -+@@ -22,968 +18,5667 @@ index 0000000..a6452b3
+Line 22175 : -+-@@ -0,0 +1,1262 @@
+Line 22176 : -+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22177 : -+-+index daf61a1..3603bae 100644
+Line 22178 : -+-+--- a/.husky/pre-commit
+Line 22179 : -+-++++ b/.husky/pre-commit
+Line 22180 : -+-+@@ -16 +16 @@ mkdir -p scanner-reports
+Line 22181 : -+-+-git diff --unified=0 --cached > changes.diff
+Line 22182 : -+-++git diff --cached --unified=0 > changes.diff
+Line 22183 : -+-+@@ -25 +25 @@ while IFS= read -r file; do
+Line 22184 : -+-+-  # Extract only the changed line numbers for the file
+Line 22185 : -+-++  # Extract only the added or modified lines for .cls and .lwc files
+Line 22186 : -+-+@@ -32 +32 @@ while IFS= read -r file; do
+Line 22187 : -+-+-  ' changes.diff)
+Line 22188 : -+-++  ' changes.diff | uniq)
+Line 22189 : -+-+@@ -61 +61 @@ while IFS= read -r file; do
+Line 22190 : -+-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 22191 : -+-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 22192 : -+-+diff --git a/changes.diff b/changes.diff
+Line 22193 : -+-+new file mode 100644
+Line 22194 : -+-+index 0000000..1831031
+Line 22195 : -+-+--- /dev/null
+Line 22196 : -+-++++ b/changes.diff
+Line 22197 : -+-+@@ -0,0 +1,1158 @@
+Line 22198 : -+-++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22199 : -+-++index daf61a1..d6ae40b 100644
+Line 22200 : -+-++--- a/.husky/pre-commit
+Line 22201 : -+-+++++ b/.husky/pre-commit
+Line 22202 : -+-++@@ -25 +25 @@ while IFS= read -r file; do
+Line 22203 : -+-++-  # Extract only the changed line numbers for the file
+Line 22204 : -+-+++  # Extract only the added or modified lines for .cls and .lwc files
+Line 22205 : -+-++@@ -32 +32 @@ while IFS= read -r file; do
+Line 22206 : -+-++-  ' changes.diff)
+Line 22207 : -+-+++  ' changes.diff | uniq)
+Line 22208 : -+-++@@ -61 +61 @@ while IFS= read -r file; do
+Line 22209 : -+-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 22210 : -+-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 22211 : -+-++diff --git a/changes.diff b/changes.diff
+Line 22212 : -+-++new file mode 100644
+Line 22213 : -+-++index 0000000..47b6c1c
+Line 22214 : -+-++--- /dev/null
+Line 22215 : -+-+++++ b/changes.diff
+Line 22216 : -+-++@@ -0,0 +1,1078 @@
+Line 22217 : -+-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22218 : -+-+++index daf61a1..d6ae40b 100644
+Line 22219 : -+-+++--- a/.husky/pre-commit
+Line 22220 : -+-++++++ b/.husky/pre-commit
+Line 22221 : -+-+++@@ -25 +25 @@ while IFS= read -r file; do
+Line 22222 : -+-+++-  # Extract only the changed line numbers for the file
+Line 22223 : -+-++++  # Extract only the added or modified lines for .cls and .lwc files
+Line 22224 : -+-+++@@ -32 +32 @@ while IFS= read -r file; do
+Line 22225 : -+-+++-  ' changes.diff)
+Line 22226 : -+-++++  ' changes.diff | uniq)
+Line 22227 : -+-+++@@ -61 +61 @@ while IFS= read -r file; do
+Line 22228 : -+-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 22229 : -+-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 22230 : -+-+++diff --git a/changes.diff b/changes.diff
+Line 22231 : -+-+++new file mode 100644
+Line 22232 : -+-+++index 0000000..8cd4f1a
+Line 22233 : -+-+++--- /dev/null
+Line 22234 : -+-++++++ b/changes.diff
+Line 22235 : -+-+++@@ -0,0 +1,977 @@
+Line 22236 : -+-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22237 : -+-++++index daf61a1..73bb862 100644
+Line 22238 : -+-++++--- a/.husky/pre-commit
+Line 22239 : -+-+++++++ b/.husky/pre-commit
+Line 22240 : -+-++++@@ -61 +61 @@ while IFS= read -r file; do
+Line 22241 : -+-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 22242 : -+-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 22243 : -+-++++diff --git a/changes.diff b/changes.diff
+Line 22244 : -+-++++new file mode 100644
+Line 22245 : -+-++++index 0000000..f9d24dc
+Line 22246 : -+-++++--- /dev/null
+Line 22247 : -+-+++++++ b/changes.diff
+Line 22248 : -+-++++@@ -0,0 +1,876 @@
+Line 22249 : -+-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22250 : -+-+++++index 19cfdbc..daf61a1 100644
+Line 22251 : -+-+++++--- a/.husky/pre-commit
+Line 22252 : -+-++++++++ b/.husky/pre-commit
+Line 22253 : -+-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+Line 22254 : -+-+++++-  # Define the output path for the scanner report in CSV format
+Line 22255 : -+-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 22256 : -+-++++++  # Extract only the changed line numbers for the file
+Line 22257 : -+-++++++  line_numbers=$(awk -v file="$file" '
+Line 22258 : -+-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+Line 22259 : -+-++++++    /^diff --git/ {inside=0}
+Line 22260 : -+-++++++    $0 ~ file {inside=1}
+Line 22261 : -+-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+Line 22262 : -+-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 22263 : -+-++++++  ' changes.diff)
+Line 22264 : -+-++++++
+Line 22265 : -+-++++++  # If no changed lines are found for this file, skip it
+Line 22266 : -+-++++++  if [ -z "$line_numbers" ]; then
+Line 22267 : -+-++++++    echo "No changed lines found in $file"
+Line 22268 : -+-++++++    continue
+Line 22269 : -+-++++++  fi
+Line 22270 : -+-++++++
+Line 22271 : -+-++++++  # Convert the line numbers to a JSON array format for jq filtering
+Line 22272 : -+-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+Line 22273 : -+-++++++
+Line 22274 : -+-++++++  echo "Changed lines for $file: $line_numbers_array"
+Line 22275 : -+-++++++
+Line 22276 : -+-++++++  # Define the output path for the scanner report in JSON format
+Line 22277 : -+-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 22278 : -+-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+Line 22279 : -+-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 22280 : -+-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 22281 : -+-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+Line 22282 : -+-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 22283 : -+-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+Line 22284 : -+-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+Line 22285 : -+-+++++-  echo "Filtering scanner report for $file for Line '70'..."
+Line 22286 : -+-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22287 : -+-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+Line 22288 : -+-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+Line 22289 : -+-++++++  jq --argjson lines "$line_numbers_array" '
+Line 22290 : -+-++++++    [.[] | 
+Line 22291 : -+-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 22292 : -+-++++++      select(.violations | length > 0)]
+Line 22293 : -+-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22294 : -+-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+Line 22295 : -+-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 22296 : -+-+++++-    echo "No issues found for line '70' in $file"
+Line 22297 : -+-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 22298 : -+-++++++    echo "No issues found for changed lines in $file"
+Line 22299 : -+-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+Line 22300 : -+-+++++-  echo "Filtered scanner report for $file (Line '70'):"
+Line 22301 : -+-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22302 : -+-++++++  echo "Filtered scanner report for $file (Changed lines):"
+Line 22303 : -+-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22304 : -+-+++++@@ -53 +77 @@ done <<< "$changed_files"
+Line 22305 : -+-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 22306 : -+-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 22307 : -+-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+Line 22308 : -+-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+Line 22309 : -+-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+Line 22310 : -+-+++++@@ -60,2 +84,2 @@ fi
+Line 22311 : -+-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 22312 : -+-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 22313 : -+-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+Line 22314 : -+-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+Line 22315 : -+-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 22316 : -+-+++++-echo "Final filtered scanner report (Line '70'):"
+Line 22317 : -+-++++++echo "Final filtered scanner report (Changed lines):"
+Line 22318 : -+-+++++@@ -67 +91 @@ cat "$final_report"
+Line 22319 : -+-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+Line 22320 : -+-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+Line 22321 : -+-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+Line 22322 : -+-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+Line 22323 : -+-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+Line 22324 : -+-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+Line 22325 : -+-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+Line 22326 : -+-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+Line 22327 : -+-+++++@@ -77 +101 @@ else
+Line 22328 : -+-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+Line 22329 : -+-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+Line 22330 : -+-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 22331 : -+-+++++deleted file mode 100644
+Line 22332 : -+-+++++index 9d692ac..0000000
+Line 22333 : -+-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 22334 : -+-++++++++ /dev/null
+Line 22335 : -+-+++++@@ -1,24 +0,0 @@
+Line 22336 : -+-+++++-0
+Line 22337 : -+-+++++-1
+Line 22338 : -+-+++++-2
+Line 22339 : -+-+++++-3
+Line 22340 : -+-+++++-4
+Line 22341 : -+-+++++-5
+Line 22342 : -+-+++++-60
+Line 22343 : -+-+++++-642
+Line 22344 : -+-+++++-643
+Line 22345 : -+-+++++-644
+Line 22346 : -+-+++++-645
+Line 22347 : -+-+++++-646
+Line 22348 : -+-+++++-647
+Line 22349 : -+-+++++-648
+Line 22350 : -+-+++++-649
+Line 22351 : -+-+++++-650
+Line 22352 : -+-+++++-651
+Line 22353 : -+-+++++-652
+Line 22354 : -+-+++++-653
+Line 22355 : -+-+++++-654
+Line 22356 : -+-+++++-655
+Line 22357 : -+-+++++-656
+Line 22358 : -+-+++++-657
+Line 22359 : -+-+++++-70
+Line 22360 : -+-+++++diff --git a/changes.diff b/changes.diff
+Line 22361 : -+-+++++deleted file mode 100644
+Line 22362 : -+-+++++index 61d162d..0000000
+Line 22363 : -+-+++++--- a/changes.diff
+Line 22364 : -+-++++++++ /dev/null
+Line 22365 : -+-+++++@@ -1,647 +0,0 @@
+Line 22366 : -+-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22367 : -+-+++++-index 5b262e4..8c05f52 100644
+Line 22368 : -+-+++++---- a/.husky/pre-commit
+Line 22369 : -+-+++++-+++ b/.husky/pre-commit
+Line 22370 : -+-+++++-@@ -113 +113 @@ cat "$final_report"
+Line 22371 : -+-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 22372 : -+-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+Line 22373 : -+-+++++-diff --git a/changes.diff b/changes.diff
+Line 22374 : -+-+++++-index 9a218e6..4fe1995 100644
+Line 22375 : -+-+++++---- a/changes.diff
+Line 22376 : -+-+++++-+++ b/changes.diff
+Line 22377 : -+-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22378 : -+-+++++--index aa6762f..586962b 100644
+Line 22379 : -+-+++++-+index 586962b..5b262e4 100644
+Line 22380 : -+-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+Line 22381 : -+-+++++--@@ -41 +41 @@ while IFS= read -r file; do
+Line 22382 : -+-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 22383 : -+-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 22384 : -+-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 22385 : -+-+++++---  # Extract line numbers as a comma-separated string for filtering later
+Line 22386 : -+-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 22387 : -+-+++++--+  # Extract line numbers as an array for filtering later
+Line 22388 : -+-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 22389 : -+-+++++--@@ -66 +66 @@ while IFS= read -r file; do
+Line 22390 : -+-+++++---  if [ -z "$line_numbers" ]; then
+Line 22391 : -+-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 22392 : -+-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 22393 : -+-+++++--+  # Convert the array of line numbers into a format that can be used by awk
+Line 22394 : -+-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 22395 : -+-+++++--+  lines_for_filter="${lines_for_filter:1}"
+Line 22396 : -+-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+Line 22397 : -+-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+Line 22398 : -+-+++++-+-  awk -v file="$file" '
+Line 22399 : -+-+++++-++  # Extract only the changed line numbers for the file
+Line 22400 : -+-+++++-++  line_numbers=$(awk -v file="$file" '
+Line 22401 : -+-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+Line 22402 : -+-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+Line 22403 : -+-+++++-++  ' changes.diff)
+Line 22404 : -+-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+Line 22405 : -+-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+Line 22406 : -+-+++++-++  if [ -z "$line_numbers" ]; then
+Line 22407 : -+-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+Line 22408 : -+-+++++-+-  # Extract line numbers as an array for filtering later
+Line 22409 : -+-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 22410 : -+-+++++-++  # Convert the line numbers to a comma-separated string for matching
+Line 22411 : -+-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+Line 22412 : -+-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+Line 22413 : -+-+++++--@@ -73 +77 @@ while IFS= read -r file; do
+Line 22414 : -+-+++++---  awk -v lines="$line_numbers" '
+Line 22415 : -+-+++++--+  awk -v lines="$lines_for_filter" '
+Line 22416 : -+-+++++--@@ -81 +85 @@ while IFS= read -r file; do
+Line 22417 : -+-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 22418 : -+-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 22419 : -+-+++++--@@ -111 +115 @@ cat "$final_report"
+Line 22420 : -+-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22421 : -+-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 22422 : -+-+++++-++  echo "Changed lines for $file: $line_numbers_string"
+Line 22423 : -+-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+Line 22424 : -+-+++++-+-  # Ensure that line_numbers is not empty
+Line 22425 : -+-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 22426 : -+-+++++-++  # Ensure that line_numbers_string is not empty
+Line 22427 : -+-+++++-++  if [ -z "$line_numbers_string" ]; then
+Line 22428 : -+-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+Line 22429 : -+-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+Line 22430 : -+-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 22431 : -+-+++++-+-  lines_for_filter="${lines_for_filter:1}"
+Line 22432 : -+-+++++-+-
+Line 22433 : -+-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+Line 22434 : -+-+++++-+-  awk -v lines="$lines_for_filter" '
+Line 22435 : -+-+++++-++  awk -v lines="$line_numbers_string" '
+Line 22436 : -+-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 22437 : -+-+++++--index 0e43eee..a206584 100644
+Line 22438 : -+-+++++-+index a206584..9d692ac 100644
+Line 22439 : -+-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+Line 22440 : -+-+++++--@@ -1 +1,6 @@
+Line 22441 : -+-+++++---70 :           System.debug('Hi Hello');
+Line 22442 : -+-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 22443 : -+-+++++--+1 : index 1ec7a54..870d508 100644
+Line 22444 : -+-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 22445 : -+-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 22446 : -+-+++++--+4 : -          System.debug('Hi');
+Line 22447 : -+-+++++--+70 :           System.debug('Hi');
+Line 22448 : -+-+++++-+@@ -1,6 +1,24 @@
+Line 22449 : -+-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 22450 : -+-+++++-+-1 : index 1ec7a54..870d508 100644
+Line 22451 : -+-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 22452 : -+-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 22453 : -+-+++++-+-4 : -          System.debug('Hi');
+Line 22454 : -+-+++++-+-70 :           System.debug('Hi');
+Line 22455 : -+-+++++-++0
+Line 22456 : -+-+++++-++1
+Line 22457 : -+-+++++-++2
+Line 22458 : -+-+++++-++3
+Line 22459 : -+-+++++-++4
+Line 22460 : -+-+++++-++5
+Line 22461 : -+-+++++-++60
+Line 22462 : -+-+++++-++642
+Line 22463 : -+-+++++-++643
+Line 22464 : -+-+++++-++644
+Line 22465 : -+-+++++-++645
+Line 22466 : -+-+++++-++646
+Line 22467 : -+-+++++-++647
+Line 22468 : -+-+++++-++648
+Line 22469 : -+-+++++-++649
+Line 22470 : -+-+++++-++650
+Line 22471 : -+-+++++-++651
+Line 22472 : -+-+++++-++652
+Line 22473 : -+-+++++-++653
+Line 22474 : -+-+++++-++654
+Line 22475 : -+-+++++-++655
+Line 22476 : -+-+++++-++656
+Line 22477 : -+-+++++-++657
+Line 22478 : -+-+++++-++70
+Line 22479 : -+-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+Line 22480 : -+-+++++--index 760971b..3dfa538 100644
+Line 22481 : -+-+++++-+index 3dfa538..9a218e6 100644
+Line 22482 : -+-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+Line 22483 : -+-+++++---index 255a037..525d43a 100644
+Line 22484 : -+-+++++--+index 525d43a..aa6762f 100644
+Line 22485 : -+-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 22486 : -+-+++++---@@ -50 +50 @@ while IFS= read -r file; do
+Line 22487 : -+-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 22488 : -+-+++++---+  # Extract line numbers as a comma-separated string for filtering later
+Line 22489 : -+-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 22490 : -+-+++++----  # Define the output path for the scanner report
+Line 22491 : -+-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 22492 : -+-+++++---+  # Define the output path for the scanner report in CSV format
+Line 22493 : -+-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 22494 : -+-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 22495 : -+-+++++----  # Run the SFDX scanner on the file and generate the report
+Line 22496 : -+-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 22497 : -+-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 22498 : -+-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 22499 : -+-+++++---@@ -71 +71 @@ while IFS= read -r file; do
+Line 22500 : -+-+++++----  # Filter the scanner report based on the changed line numbers
+Line 22501 : -+-+++++---+  # Filter the CSV scanner report based on the changed line numbers
+Line 22502 : -+-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 22503 : -+-+++++----  jq --arg lines "$line_numbers" '
+Line 22504 : -+-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 22505 : -+-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22506 : -+-+++++---+  awk -v lines="$line_numbers" '
+Line 22507 : -+-+++++---+  BEGIN {
+Line 22508 : -+-+++++---+    FS=OFS=",";
+Line 22509 : -+-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 22510 : -+-+++++---+    for (i in arr) {
+Line 22511 : -+-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 22512 : -+-+++++---+    }
+Line 22513 : -+-+++++---+  }
+Line 22514 : -+-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 22515 : -+-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22516 : -+-+++++---@@ -78 +85 @@ while IFS= read -r file; do
+Line 22517 : -+-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 22518 : -+-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 22519 : -+-+++++---@@ -84 +91 @@ while IFS= read -r file; do
+Line 22520 : -+-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22521 : -+-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22522 : -+-+++++---@@ -89 +96 @@ done <<< "$changed_files"
+Line 22523 : -+-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 22524 : -+-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 22525 : -+-+++++---@@ -95,2 +102,4 @@ fi
+Line 22526 : -+-+++++----# Combine all filtered reports into one final report
+Line 22527 : -+-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 22528 : -+-+++++---+# Combine all filtered reports into one final report (optional)
+Line 22529 : -+-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 22530 : -+-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 22531 : -+-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 22532 : -+-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 22533 : -+-+++++----# Parse the final filtered scanner report and check for severity 3 issues
+Line 22534 : -+-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 22535 : -+-+++++---+echo "Final filtered scanner report:"
+Line 22536 : -+-+++++---+cat "$final_report"
+Line 22537 : -+-+++++---+
+Line 22538 : -+-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 22539 : -+-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22540 : -+-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+Line 22541 : -+-+++++--+-    FS=OFS=",";
+Line 22542 : -+-+++++--++    FS=OFS=",";  # Define CSV format
+Line 22543 : -+-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+Line 22544 : -+-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 22545 : -+-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 22546 : -+-+++++--+@@ -111 +111 @@ cat "$final_report"
+Line 22547 : -+-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22548 : -+-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22549 : -+-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 22550 : -+-+++++--+new file mode 100644
+Line 22551 : -+-+++++--+index 0000000..0e43eee
+Line 22552 : -+-+++++--+--- /dev/null
+Line 22553 : -+-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 22554 : -+-+++++--+@@ -0,0 +1 @@
+Line 22555 : -+-+++++--++70 :           System.debug('Hi Hello');
+Line 22556 : -+-+++++--+diff --git a/changes.diff b/changes.diff
+Line 22557 : -+-+++++--+new file mode 100644
+Line 22558 : -+-+++++--+index 0000000..760971b
+Line 22559 : -+-+++++--+--- /dev/null
+Line 22560 : -+-+++++--++++ b/changes.diff
+Line 22561 : -+-+++++--+@@ -0,0 +1,65 @@
+Line 22562 : -+-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22563 : -+-+++++--++index 255a037..525d43a 100644
+Line 22564 : -+-+++++--++--- a/.husky/pre-commit
+Line 22565 : -+-+++++--+++++ b/.husky/pre-commit
+Line 22566 : -+-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+Line 22567 : -+-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 22568 : -+-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+Line 22569 : -+-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 22570 : -+-+++++--++-  # Define the output path for the scanner report
+Line 22571 : -+-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 22572 : -+-+++++--+++  # Define the output path for the scanner report in CSV format
+Line 22573 : -+-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 22574 : -+-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 22575 : -+-+++++--++-  # Run the SFDX scanner on the file and generate the report
+Line 22576 : -+-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 22577 : -+-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 22578 : -+-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 22579 : -+-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+Line 22580 : -+-+++++--++-  # Filter the scanner report based on the changed line numbers
+Line 22581 : -+-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+Line 22582 : -+-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 22583 : -+-+++++--++-  jq --arg lines "$line_numbers" '
+Line 22584 : -+-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 22585 : -+-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22586 : -+-+++++--+++  awk -v lines="$line_numbers" '
+Line 22587 : -+-+++++--+++  BEGIN {
+Line 22588 : -+-+++++--+++    FS=OFS=",";
+Line 22589 : -+-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 22590 : -+-+++++--+++    for (i in arr) {
+Line 22591 : -+-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 22592 : -+-+++++--+++    }
+Line 22593 : -+-+++++--+++  }
+Line 22594 : -+-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 22595 : -+-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22596 : -+-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+Line 22597 : -+-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 22598 : -+-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 22599 : -+-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+Line 22600 : -+-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22601 : -+-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22602 : -+-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+Line 22603 : -+-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 22604 : -+-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 22605 : -+-+++++--++@@ -95,2 +102,4 @@ fi
+Line 22606 : -+-+++++--++-# Combine all filtered reports into one final report
+Line 22607 : -+-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 22608 : -+-+++++--+++# Combine all filtered reports into one final report (optional)
+Line 22609 : -+-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 22610 : -+-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 22611 : -+-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 22612 : -+-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 22613 : -+-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 22614 : -+-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 22615 : -+-+++++--+++echo "Final filtered scanner report:"
+Line 22616 : -+-+++++--+++cat "$final_report"
+Line 22617 : -+-+++++--+++
+Line 22618 : -+-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 22619 : -+-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22620 : -+-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 22621 : -+-+++++--++index 1ec7a54..870d508 100644
+Line 22622 : -+-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 22623 : -+-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 22624 : -+-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 22625 : -+-+++++--++-          System.debug('Hi');
+Line 22626 : -+-+++++--+++          System.debug('Hi Hello');
+Line 22627 : -+-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 22628 : -+-+++++---index 1ec7a54..870d508 100644
+Line 22629 : -+-+++++--+index 870d508..1ec7a54 100644
+Line 22630 : -+-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 22631 : -+-+++++----          System.debug('Hi');
+Line 22632 : -+-+++++---+          System.debug('Hi Hello');
+Line 22633 : -+-+++++--+-          System.debug('Hi Hello');
+Line 22634 : -+-+++++--++          System.debug('Hi');
+Line 22635 : -+-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 22636 : -+-+++++--+new file mode 100644
+Line 22637 : -+-+++++--+index 0000000..5a3a1ac
+Line 22638 : -+-+++++--+--- /dev/null
+Line 22639 : -+-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 22640 : -+-+++++--+@@ -0,0 +1 @@
+Line 22641 : -+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22642 : -+-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 22643 : -+-+++++--+new file mode 100644
+Line 22644 : -+-+++++--+index 0000000..5a3a1ac
+Line 22645 : -+-+++++--+--- /dev/null
+Line 22646 : -+-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 22647 : -+-+++++--+@@ -0,0 +1 @@
+Line 22648 : -+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22649 : -+-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 22650 : -+-+++++--+new file mode 100644
+Line 22651 : -+-+++++--+index 0000000..e1ef0f0
+Line 22652 : -+-+++++--+--- /dev/null
+Line 22653 : -+-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 22654 : -+-+++++--+@@ -0,0 +1,5 @@
+Line 22655 : -+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22656 : -+-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 22657 : -+-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 22658 : -+-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 22659 : -+-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 22660 : -+-+++++-+-index 525d43a..aa6762f 100644
+Line 22661 : -+-+++++-++index aa6762f..586962b 100644
+Line 22662 : -+-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+Line 22663 : -+-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+Line 22664 : -+-+++++-+--    FS=OFS=",";
+Line 22665 : -+-+++++-+-+    FS=OFS=",";  # Define CSV format
+Line 22666 : -+-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+Line 22667 : -+-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 22668 : -+-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 22669 : -+-+++++-+-@@ -111 +111 @@ cat "$final_report"
+Line 22670 : -+-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22671 : -+-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22672 : -+-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+Line 22673 : -+-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 22674 : -+-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 22675 : -+-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 22676 : -+-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+Line 22677 : -+-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 22678 : -+-+++++-+++  # Extract line numbers as an array for filtering later
+Line 22679 : -+-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 22680 : -+-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+Line 22681 : -+-+++++-++-  if [ -z "$line_numbers" ]; then
+Line 22682 : -+-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 22683 : -+-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 22684 : -+-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+Line 22685 : -+-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 22686 : -+-+++++-+++  lines_for_filter="${lines_for_filter:1}"
+Line 22687 : -+-+++++-+++
+Line 22688 : -+-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+Line 22689 : -+-+++++-++-  awk -v lines="$line_numbers" '
+Line 22690 : -+-+++++-+++  awk -v lines="$lines_for_filter" '
+Line 22691 : -+-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+Line 22692 : -+-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 22693 : -+-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 22694 : -+-+++++-++@@ -111 +115 @@ cat "$final_report"
+Line 22695 : -+-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22696 : -+-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 22697 : -+-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 22698 : -+-+++++-+-new file mode 100644
+Line 22699 : -+-+++++-+-index 0000000..0e43eee
+Line 22700 : -+-+++++-+---- /dev/null
+Line 22701 : -+-+++++-++index 0e43eee..a206584 100644
+Line 22702 : -+-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 22703 : -+-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+Line 22704 : -+-+++++-+-@@ -0,0 +1 @@
+Line 22705 : -+-+++++-+-+70 :           System.debug('Hi Hello');
+Line 22706 : -+-+++++-++@@ -1 +1,6 @@
+Line 22707 : -+-+++++-++-70 :           System.debug('Hi Hello');
+Line 22708 : -+-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 22709 : -+-+++++-+++1 : index 1ec7a54..870d508 100644
+Line 22710 : -+-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 22711 : -+-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 22712 : -+-+++++-+++4 : -          System.debug('Hi');
+Line 22713 : -+-+++++-+++70 :           System.debug('Hi');
+Line 22714 : -+-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+Line 22715 : -+-+++++-+-new file mode 100644
+Line 22716 : -+-+++++-+-index 0000000..760971b
+Line 22717 : -+-+++++-+---- /dev/null
+Line 22718 : -+-+++++-++index 760971b..3dfa538 100644
+Line 22719 : -+-+++++-++--- a/changes.diff
+Line 22720 : -+-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+Line 22721 : -+-+++++-+-@@ -0,0 +1,65 @@
+Line 22722 : -+-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22723 : -+-+++++-+-+index 255a037..525d43a 100644
+Line 22724 : -+-+++++-+-+--- a/.husky/pre-commit
+Line 22725 : -+-+++++-+-++++ b/.husky/pre-commit
+Line 22726 : -+-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+Line 22727 : -+-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 22728 : -+-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+Line 22729 : -+-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 22730 : -+-+++++-+-+-  # Define the output path for the scanner report
+Line 22731 : -+-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 22732 : -+-+++++-+-++  # Define the output path for the scanner report in CSV format
+Line 22733 : -+-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 22734 : -+-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 22735 : -+-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+Line 22736 : -+-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 22737 : -+-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 22738 : -+-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 22739 : -+-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+Line 22740 : -+-+++++-+-+-  # Filter the scanner report based on the changed line numbers
+Line 22741 : -+-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+Line 22742 : -+-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 22743 : -+-+++++-+-+-  jq --arg lines "$line_numbers" '
+Line 22744 : -+-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 22745 : -+-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22746 : -+-+++++-+-++  awk -v lines="$line_numbers" '
+Line 22747 : -+-+++++-+-++  BEGIN {
+Line 22748 : -+-+++++-+-++    FS=OFS=",";
+Line 22749 : -+-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 22750 : -+-+++++-+-++    for (i in arr) {
+Line 22751 : -+-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 22752 : -+-+++++-+-++    }
+Line 22753 : -+-+++++-+-++  }
+Line 22754 : -+-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 22755 : -+-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22756 : -+-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+Line 22757 : -+-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 22758 : -+-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 22759 : -+-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+Line 22760 : -+-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22761 : -+-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22762 : -+-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+Line 22763 : -+-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 22764 : -+-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 22765 : -+-+++++-+-+@@ -95,2 +102,4 @@ fi
+Line 22766 : -+-+++++-+-+-# Combine all filtered reports into one final report
+Line 22767 : -+-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 22768 : -+-+++++-+-++# Combine all filtered reports into one final report (optional)
+Line 22769 : -+-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 22770 : -+-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 22771 : -+-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 22772 : -+-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 22773 : -+-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+Line 22774 : -+-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 22775 : -+-+++++-+-++echo "Final filtered scanner report:"
+Line 22776 : -+-+++++-+-++cat "$final_report"
+Line 22777 : -+-+++++-+-++
+Line 22778 : -+-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 22779 : -+-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22780 : -+-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 22781 : -+-+++++-+-+index 1ec7a54..870d508 100644
+Line 22782 : -+-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 22783 : -+-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 22784 : -+-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 22785 : -+-+++++-+-+-          System.debug('Hi');
+Line 22786 : -+-+++++-+-++          System.debug('Hi Hello');
+Line 22787 : -+-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22788 : -+-+++++-++-index 255a037..525d43a 100644
+Line 22789 : -+-+++++-+++index 525d43a..aa6762f 100644
+Line 22790 : -+-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 22791 : -+-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+Line 22792 : -+-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 22793 : -+-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+Line 22794 : -+-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 22795 : -+-+++++-++--  # Define the output path for the scanner report
+Line 22796 : -+-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 22797 : -+-+++++-++-+  # Define the output path for the scanner report in CSV format
+Line 22798 : -+-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 22799 : -+-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 22800 : -+-+++++-++--  # Run the SFDX scanner on the file and generate the report
+Line 22801 : -+-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 22802 : -+-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 22803 : -+-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 22804 : -+-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+Line 22805 : -+-+++++-++--  # Filter the scanner report based on the changed line numbers
+Line 22806 : -+-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+Line 22807 : -+-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 22808 : -+-+++++-++--  jq --arg lines "$line_numbers" '
+Line 22809 : -+-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 22810 : -+-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22811 : -+-+++++-++-+  awk -v lines="$line_numbers" '
+Line 22812 : -+-+++++-++-+  BEGIN {
+Line 22813 : -+-+++++-++-+    FS=OFS=",";
+Line 22814 : -+-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 22815 : -+-+++++-++-+    for (i in arr) {
+Line 22816 : -+-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 22817 : -+-+++++-++-+    }
+Line 22818 : -+-+++++-++-+  }
+Line 22819 : -+-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 22820 : -+-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22821 : -+-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+Line 22822 : -+-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 22823 : -+-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 22824 : -+-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+Line 22825 : -+-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22826 : -+-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22827 : -+-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+Line 22828 : -+-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 22829 : -+-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 22830 : -+-+++++-++-@@ -95,2 +102,4 @@ fi
+Line 22831 : -+-+++++-++--# Combine all filtered reports into one final report
+Line 22832 : -+-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 22833 : -+-+++++-++-+# Combine all filtered reports into one final report (optional)
+Line 22834 : -+-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 22835 : -+-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 22836 : -+-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 22837 : -+-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 22838 : -+-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+Line 22839 : -+-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 22840 : -+-+++++-++-+echo "Final filtered scanner report:"
+Line 22841 : -+-+++++-++-+cat "$final_report"
+Line 22842 : -+-+++++-++-+
+Line 22843 : -+-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 22844 : -+-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22845 : -+-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+Line 22846 : -+-+++++-+++-    FS=OFS=",";
+Line 22847 : -+-+++++-++++    FS=OFS=",";  # Define CSV format
+Line 22848 : -+-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+Line 22849 : -+-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 22850 : -+-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 22851 : -+-+++++-+++@@ -111 +111 @@ cat "$final_report"
+Line 22852 : -+-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22853 : -+-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22854 : -+-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 22855 : -+-+++++-+++new file mode 100644
+Line 22856 : -+-+++++-+++index 0000000..0e43eee
+Line 22857 : -+-+++++-+++--- /dev/null
+Line 22858 : -+-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 22859 : -+-+++++-+++@@ -0,0 +1 @@
+Line 22860 : -+-+++++-++++70 :           System.debug('Hi Hello');
+Line 22861 : -+-+++++-+++diff --git a/changes.diff b/changes.diff
+Line 22862 : -+-+++++-+++new file mode 100644
+Line 22863 : -+-+++++-+++index 0000000..760971b
+Line 22864 : -+-+++++-+++--- /dev/null
+Line 22865 : -+-+++++-++++++ b/changes.diff
+Line 22866 : -+-+++++-+++@@ -0,0 +1,65 @@
+Line 22867 : -+-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 22868 : -+-+++++-++++index 255a037..525d43a 100644
+Line 22869 : -+-+++++-++++--- a/.husky/pre-commit
+Line 22870 : -+-+++++-+++++++ b/.husky/pre-commit
+Line 22871 : -+-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+Line 22872 : -+-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 22873 : -+-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+Line 22874 : -+-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 22875 : -+-+++++-++++-  # Define the output path for the scanner report
+Line 22876 : -+-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 22877 : -+-+++++-+++++  # Define the output path for the scanner report in CSV format
+Line 22878 : -+-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 22879 : -+-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 22880 : -+-+++++-++++-  # Run the SFDX scanner on the file and generate the report
+Line 22881 : -+-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 22882 : -+-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 22883 : -+-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 22884 : -+-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+Line 22885 : -+-+++++-++++-  # Filter the scanner report based on the changed line numbers
+Line 22886 : -+-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+Line 22887 : -+-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 22888 : -+-+++++-++++-  jq --arg lines "$line_numbers" '
+Line 22889 : -+-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 22890 : -+-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22891 : -+-+++++-+++++  awk -v lines="$line_numbers" '
+Line 22892 : -+-+++++-+++++  BEGIN {
+Line 22893 : -+-+++++-+++++    FS=OFS=",";
+Line 22894 : -+-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 22895 : -+-+++++-+++++    for (i in arr) {
+Line 22896 : -+-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 22897 : -+-+++++-+++++    }
+Line 22898 : -+-+++++-+++++  }
+Line 22899 : -+-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 22900 : -+-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22901 : -+-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+Line 22902 : -+-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 22903 : -+-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 22904 : -+-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+Line 22905 : -+-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 22906 : -+-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 22907 : -+-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+Line 22908 : -+-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 22909 : -+-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 22910 : -+-+++++-++++@@ -95,2 +102,4 @@ fi
+Line 22911 : -+-+++++-++++-# Combine all filtered reports into one final report
+Line 22912 : -+-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 22913 : -+-+++++-+++++# Combine all filtered reports into one final report (optional)
+Line 22914 : -+-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 22915 : -+-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 22916 : -+-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 22917 : -+-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 22918 : -+-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 22919 : -+-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 22920 : -+-+++++-+++++echo "Final filtered scanner report:"
+Line 22921 : -+-+++++-+++++cat "$final_report"
+Line 22922 : -+-+++++-+++++
+Line 22923 : -+-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 22924 : -+-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 22925 : -+-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 22926 : -+-+++++-++++index 1ec7a54..870d508 100644
+Line 22927 : -+-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 22928 : -+-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 22929 : -+-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 22930 : -+-+++++-++++-          System.debug('Hi');
+Line 22931 : -+-+++++-+++++          System.debug('Hi Hello');
+Line 22932 : -+-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 22933 : -+-+++++-++-index 1ec7a54..870d508 100644
+Line 22934 : -+-+++++-+++index 870d508..1ec7a54 100644
+Line 22935 : -+-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 22936 : -+-+++++-++--          System.debug('Hi');
+Line 22937 : -+-+++++-++-+          System.debug('Hi Hello');
+Line 22938 : -+-+++++-+++-          System.debug('Hi Hello');
+Line 22939 : -+-+++++-++++          System.debug('Hi');
+Line 22940 : -+-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 22941 : -+-+++++-+++new file mode 100644
+Line 22942 : -+-+++++-+++index 0000000..5a3a1ac
+Line 22943 : -+-+++++-+++--- /dev/null
+Line 22944 : -+-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 22945 : -+-+++++-+++@@ -0,0 +1 @@
+Line 22946 : -+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22947 : -+-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 22948 : -+-+++++-+++new file mode 100644
+Line 22949 : -+-+++++-+++index 0000000..5a3a1ac
+Line 22950 : -+-+++++-+++--- /dev/null
+Line 22951 : -+-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 22952 : -+-+++++-+++@@ -0,0 +1 @@
+Line 22953 : -+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22954 : -+-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 22955 : -+-+++++-+++new file mode 100644
+Line 22956 : -+-+++++-+++index 0000000..e1ef0f0
+Line 22957 : -+-+++++-+++--- /dev/null
+Line 22958 : -+-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 22959 : -+-+++++-+++@@ -0,0 +1,5 @@
+Line 22960 : -+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22961 : -+-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 22962 : -+-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 22963 : -+-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 22964 : -+-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 22965 : -+-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 22966 : -+-+++++-+-index 870d508..1ec7a54 100644
+Line 22967 : -+-+++++-++index 1ec7a54..870d508 100644
+Line 22968 : -+-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+Line 22969 : -+-+++++-+--          System.debug('Hi Hello');
+Line 22970 : -+-+++++-+-+          System.debug('Hi');
+Line 22971 : -+-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 22972 : -+-+++++-+-new file mode 100644
+Line 22973 : -+-+++++-+-index 0000000..5a3a1ac
+Line 22974 : -+-+++++-+---- /dev/null
+Line 22975 : -+-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 22976 : -+-+++++-+-@@ -0,0 +1 @@
+Line 22977 : -+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22978 : -+-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 22979 : -+-+++++-+-new file mode 100644
+Line 22980 : -+-+++++-+-index 0000000..5a3a1ac
+Line 22981 : -+-+++++-+---- /dev/null
+Line 22982 : -+-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 22983 : -+-+++++-+-@@ -0,0 +1 @@
+Line 22984 : -+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22985 : -+-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 22986 : -+-+++++-+-new file mode 100644
+Line 22987 : -+-+++++-+-index 0000000..e1ef0f0
+Line 22988 : -+-+++++-+---- /dev/null
+Line 22989 : -+-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 22990 : -+-+++++-+-@@ -0,0 +1,5 @@
+Line 22991 : -+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 22992 : -+-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 22993 : -+-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 22994 : -+-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 22995 : -+-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 22996 : -+-+++++-++-          System.debug('Hi');
+Line 22997 : -+-+++++-+++          System.debug('Hi Hello');
+Line 22998 : -+-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 22999 : -+-+++++--index 1ec7a54..870d508 100644
+Line 23000 : -+-+++++-+index 870d508..5eafcac 100644
+Line 23001 : -+-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+Line 23002 : -+-+++++---          System.debug('Hi');
+Line 23003 : -+-+++++--+          System.debug('Hi Hello');
+Line 23004 : -+-+++++-+-          System.debug('Hi Hello');
+Line 23005 : -+-+++++-++          System.debug('Happy');
+Line 23006 : -+-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 23007 : -+-+++++-index 5eafcac..1ec7a54 100644
+Line 23008 : -+-+++++---- a/force-app/main/default/classes/Account_Insert.cls
+Line 23009 : -+-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+Line 23010 : -+-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 23011 : -+-+++++--          System.debug('Happy');
+Line 23012 : -+-+++++-+          System.debug('Hi');
+Line 23013 : -+-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 23014 : -+-+++++index 73696e2..9e21e88 100644
+Line 23015 : -+-+++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 23016 : -+-++++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 23017 : -+-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 23018 : -+-+++++-          System.debug('Hello and Hi');
+Line 23019 : -+-++++++          System.debug('Hi AND');
+Line 23020 : -+-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 23021 : -+-+++++deleted file mode 100644
+Line 23022 : -+-+++++index 5a3a1ac..0000000
+Line 23023 : -+-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 23024 : -+-++++++++ /dev/null
+Line 23025 : -+-+++++@@ -1 +0,0 @@
+Line 23026 : -+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23027 : -+-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 23028 : -+-+++++new file mode 100644
+Line 23029 : -+-+++++index 0000000..ebc3aa5
+Line 23030 : -+-+++++--- /dev/null
+Line 23031 : -+-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 23032 : -+-+++++@@ -0,0 +1,30 @@
+Line 23033 : -+-++++++[
+Line 23034 : -+-++++++  {
+Line 23035 : -+-++++++    "engine": "pmd",
+Line 23036 : -+-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 23037 : -+-++++++    "violations": [
+Line 23038 : -+-++++++      {
+Line 23039 : -+-++++++        "line": 70,
+Line 23040 : -+-++++++        "column": 11,
+Line 23041 : -+-++++++        "endLine": 70,
+Line 23042 : -+-++++++        "endColumn": 29,
+Line 23043 : -+-++++++        "severity": 3,
+Line 23044 : -+-++++++        "ruleName": "AvoidDebugStatements",
+Line 23045 : -+-++++++        "category": "Performance",
+Line 23046 : -+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 23047 : -+-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 23048 : -+-++++++      },
+Line 23049 : -+-++++++      {
+Line 23050 : -+-++++++        "line": 70,
+Line 23051 : -+-++++++        "column": 11,
+Line 23052 : -+-++++++        "endLine": 70,
+Line 23053 : -+-++++++        "endColumn": 29,
+Line 23054 : -+-++++++        "severity": 3,
+Line 23055 : -+-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 23056 : -+-++++++        "category": "Best Practices",
+Line 23057 : -+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 23058 : -+-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 23059 : -+-++++++      }
+Line 23060 : -+-++++++    ]
+Line 23061 : -+-++++++  }
+Line 23062 : -+-++++++]
+Line 23063 : -+-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 23064 : -+-+++++deleted file mode 100644
+Line 23065 : -+-+++++index 5a3a1ac..0000000
+Line 23066 : -+-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+Line 23067 : -+-++++++++ /dev/null
+Line 23068 : -+-+++++@@ -1 +0,0 @@
+Line 23069 : -+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23070 : -+-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 23071 : -+-+++++new file mode 100644
+Line 23072 : -+-+++++index 0000000..ebc3aa5
+Line 23073 : -+-+++++--- /dev/null
+Line 23074 : -+-++++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 23075 : -+-+++++@@ -0,0 +1,30 @@
+Line 23076 : -+-++++++[
+Line 23077 : -+-++++++  {
+Line 23078 : -+-++++++    "engine": "pmd",
+Line 23079 : -+-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 23080 : -+-++++++    "violations": [
+Line 23081 : -+-++++++      {
+Line 23082 : -+-++++++        "line": 70,
+Line 23083 : -+-++++++        "column": 11,
+Line 23084 : -+-++++++        "endLine": 70,
+Line 23085 : -+-++++++        "endColumn": 29,
+Line 23086 : -+-++++++        "severity": 3,
+Line 23087 : -+-++++++        "ruleName": "AvoidDebugStatements",
+Line 23088 : -+-++++++        "category": "Performance",
+Line 23089 : -+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 23090 : -+-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 23091 : -+-++++++      },
+Line 23092 : -+-++++++      {
+Line 23093 : -+-++++++        "line": 70,
+Line 23094 : -+-++++++        "column": 11,
+Line 23095 : -+-++++++        "endLine": 70,
+Line 23096 : -+-++++++        "endColumn": 29,
+Line 23097 : -+-++++++        "severity": 3,
+Line 23098 : -+-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 23099 : -+-++++++        "category": "Best Practices",
+Line 23100 : -+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 23101 : -+-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 23102 : -+-++++++      }
+Line 23103 : -+-++++++    ]
+Line 23104 : -+-++++++  }
+Line 23105 : -+-++++++]
+Line 23106 : -+-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 23107 : -+-+++++deleted file mode 100644
+Line 23108 : -+-+++++index e1ef0f0..0000000
+Line 23109 : -+-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 23110 : -+-++++++++ /dev/null
+Line 23111 : -+-+++++@@ -1,5 +0,0 @@
+Line 23112 : -+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23113 : -+-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 23114 : -+-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 23115 : -+-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 23116 : -+-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 23117 : -+-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 23118 : -+-+++++new file mode 100644
+Line 23119 : -+-+++++index 0000000..c973918
+Line 23120 : -+-+++++--- /dev/null
+Line 23121 : -+-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 23122 : -+-+++++@@ -0,0 +1 @@
+Line 23123 : -+-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 23124 : -+-+++++\ No newline at end of file
+Line 23125 : -+-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 23126 : -+-++++index 9e21e88..800635e 100644
+Line 23127 : -+-++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 23128 : -+-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 23129 : -+-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 23130 : -+-++++-          System.debug('Hi AND');
+Line 23131 : -+-+++++          System.debug('Hi AND Hello');
+Line 23132 : -+-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 23133 : -+-++++index ebc3aa5..fe51488 100644
+Line 23134 : -+-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 23135 : -+-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 23136 : -+-++++@@ -1,30 +1 @@
+Line 23137 : -+-++++-[
+Line 23138 : -+-++++-  {
+Line 23139 : -+-++++-    "engine": "pmd",
+Line 23140 : -+-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 23141 : -+-++++-    "violations": [
+Line 23142 : -+-++++-      {
+Line 23143 : -++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23144 : -++-index daf61a1..3603bae 100644
+Line 23145 : -+++index 1328704..8004c80 100644
+Line 23146 : -++@@ -5,12 +5,9 @@ index daf61a1..3603bae 100644
+Line 23147 : -++-@@ -16 +16 @@ mkdir -p scanner-reports
+Line 23148 : -++--git diff --unified=0 --cached > changes.diff
+Line 23149 : -++-+git diff --cached --unified=0 > changes.diff
+Line 23150 : -++-@@ -25 +25 @@ while IFS= read -r file; do
+Line 23151 : -++--  # Extract only the changed line numbers for the file
+Line 23152 : -++-+  # Extract only the added or modified lines for .cls and .lwc files
+Line 23153 : -++-@@ -32 +32 @@ while IFS= read -r file; do
+Line 23154 : -++--  ' changes.diff)
+Line 23155 : -++-+  ' changes.diff | uniq)
+Line 23156 : -++-@@ -61 +61 @@ while IFS= read -r file; do
+Line 23157 : -++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 23158 : -++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 23159 : -+++@@ -29,4 +29,4 @@ while IFS= read -r file; do
+Line 23160 : -+++-    $0 ~ file {inside=1}
+Line 23161 : -+++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+Line 23162 : -+++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+Line 23163 : -+++-  ' changes.diff | uniq)
+Line 23164 : -++++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
+Line 23165 : -++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
+Line 23166 : -++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
+Line 23167 : -++++  ' changes.diff | sort -n | uniq)
+Line 23168 : -++@@ -18,3 +15,2 @@ diff --git a/changes.diff b/changes.diff
+Line 23169 : -++-new file mode 100644
+Line 23170 : -++-index 0000000..a6452b3
+Line 23171 : -++---- /dev/null
+Line 23172 : -+++index 1f4c0b2..6a026dd 100644
+Line 23173 : -+++--- a/changes.diff
+Line 23174 : -++@@ -22,1073 +18,4567 @@ index 0000000..a6452b3
+Line 23175 : -++-@@ -0,0 +1,1262 @@
+Line 23176 : -++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23177 : -++-+index daf61a1..3603bae 100644
+Line 23178 : -++-+--- a/.husky/pre-commit
+Line 23179 : -++-++++ b/.husky/pre-commit
+Line 23180 : -++-+@@ -16 +16 @@ mkdir -p scanner-reports
+Line 23181 : -++-+-git diff --unified=0 --cached > changes.diff
+Line 23182 : -++-++git diff --cached --unified=0 > changes.diff
+Line 23183 : -++-+@@ -25 +25 @@ while IFS= read -r file; do
+Line 23184 : -++-+-  # Extract only the changed line numbers for the file
+Line 23185 : -++-++  # Extract only the added or modified lines for .cls and .lwc files
+Line 23186 : -++-+@@ -32 +32 @@ while IFS= read -r file; do
+Line 23187 : -++-+-  ' changes.diff)
+Line 23188 : -++-++  ' changes.diff | uniq)
+Line 23189 : -++-+@@ -61 +61 @@ while IFS= read -r file; do
+Line 23190 : -++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 23191 : -++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 23192 : -++-+diff --git a/changes.diff b/changes.diff
+Line 23193 : -++-+new file mode 100644
+Line 23194 : -++-+index 0000000..1831031
+Line 23195 : -++-+--- /dev/null
+Line 23196 : -++-++++ b/changes.diff
+Line 23197 : -++-+@@ -0,0 +1,1158 @@
+Line 23198 : -++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23199 : -++-++index daf61a1..d6ae40b 100644
+Line 23200 : -++-++--- a/.husky/pre-commit
+Line 23201 : -++-+++++ b/.husky/pre-commit
+Line 23202 : -++-++@@ -25 +25 @@ while IFS= read -r file; do
+Line 23203 : -++-++-  # Extract only the changed line numbers for the file
+Line 23204 : -++-+++  # Extract only the added or modified lines for .cls and .lwc files
+Line 23205 : -++-++@@ -32 +32 @@ while IFS= read -r file; do
+Line 23206 : -++-++-  ' changes.diff)
+Line 23207 : -++-+++  ' changes.diff | uniq)
+Line 23208 : -++-++@@ -61 +61 @@ while IFS= read -r file; do
+Line 23209 : -++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 23210 : -++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 23211 : -++-++diff --git a/changes.diff b/changes.diff
+Line 23212 : -++-++new file mode 100644
+Line 23213 : -++-++index 0000000..47b6c1c
+Line 23214 : -++-++--- /dev/null
+Line 23215 : -++-+++++ b/changes.diff
+Line 23216 : -++-++@@ -0,0 +1,1078 @@
+Line 23217 : -++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23218 : -++-+++index daf61a1..d6ae40b 100644
+Line 23219 : -++-+++--- a/.husky/pre-commit
+Line 23220 : -++-++++++ b/.husky/pre-commit
+Line 23221 : -++-+++@@ -25 +25 @@ while IFS= read -r file; do
+Line 23222 : -++-+++-  # Extract only the changed line numbers for the file
+Line 23223 : -++-++++  # Extract only the added or modified lines for .cls and .lwc files
+Line 23224 : -++-+++@@ -32 +32 @@ while IFS= read -r file; do
+Line 23225 : -++-+++-  ' changes.diff)
+Line 23226 : -++-++++  ' changes.diff | uniq)
+Line 23227 : -++-+++@@ -61 +61 @@ while IFS= read -r file; do
+Line 23228 : -++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 23229 : -++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 23230 : -++-+++diff --git a/changes.diff b/changes.diff
+Line 23231 : -++-+++new file mode 100644
+Line 23232 : -++-+++index 0000000..8cd4f1a
+Line 23233 : -++-+++--- /dev/null
+Line 23234 : -++-++++++ b/changes.diff
+Line 23235 : -++-+++@@ -0,0 +1,977 @@
+Line 23236 : -++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23237 : -++-++++index daf61a1..73bb862 100644
+Line 23238 : -++-++++--- a/.husky/pre-commit
+Line 23239 : -++-+++++++ b/.husky/pre-commit
+Line 23240 : -++-++++@@ -61 +61 @@ while IFS= read -r file; do
+Line 23241 : -++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 23242 : -++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 23243 : -++-++++diff --git a/changes.diff b/changes.diff
+Line 23244 : -++-++++new file mode 100644
+Line 23245 : -++-++++index 0000000..f9d24dc
+Line 23246 : -++-++++--- /dev/null
+Line 23247 : -++-+++++++ b/changes.diff
+Line 23248 : -++-++++@@ -0,0 +1,876 @@
+Line 23249 : -++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23250 : -++-+++++index 19cfdbc..daf61a1 100644
+Line 23251 : -++-+++++--- a/.husky/pre-commit
+Line 23252 : -++-++++++++ b/.husky/pre-commit
+Line 23253 : -++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+Line 23254 : -++-+++++-  # Define the output path for the scanner report in CSV format
+Line 23255 : -++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 23256 : -++-++++++  # Extract only the changed line numbers for the file
+Line 23257 : -++-++++++  line_numbers=$(awk -v file="$file" '
+Line 23258 : -++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+Line 23259 : -++-++++++    /^diff --git/ {inside=0}
+Line 23260 : -++-++++++    $0 ~ file {inside=1}
+Line 23261 : -++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+Line 23262 : -++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 23263 : -++-++++++  ' changes.diff)
+Line 23264 : -++-++++++
+Line 23265 : -++-++++++  # If no changed lines are found for this file, skip it
+Line 23266 : -++-++++++  if [ -z "$line_numbers" ]; then
+Line 23267 : -++-++++++    echo "No changed lines found in $file"
+Line 23268 : -++-++++++    continue
+Line 23269 : -++-++++++  fi
+Line 23270 : -++-++++++
+Line 23271 : -++-++++++  # Convert the line numbers to a JSON array format for jq filtering
+Line 23272 : -++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+Line 23273 : -++-++++++
+Line 23274 : -++-++++++  echo "Changed lines for $file: $line_numbers_array"
+Line 23275 : -++-++++++
+Line 23276 : -++-++++++  # Define the output path for the scanner report in JSON format
+Line 23277 : -++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 23278 : -++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+Line 23279 : -++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 23280 : -++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 23281 : -++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+Line 23282 : -++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 23283 : -++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+Line 23284 : -++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+Line 23285 : -++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
+Line 23286 : -++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23287 : -++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+Line 23288 : -++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+Line 23289 : -++-++++++  jq --argjson lines "$line_numbers_array" '
+Line 23290 : -++-++++++    [.[] | 
+Line 23291 : -++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 23292 : -++-++++++      select(.violations | length > 0)]
+Line 23293 : -++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23294 : -++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+Line 23295 : -++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 23296 : -++-+++++-    echo "No issues found for line '70' in $file"
+Line 23297 : -++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 23298 : -++-++++++    echo "No issues found for changed lines in $file"
+Line 23299 : -++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+Line 23300 : -++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
+Line 23301 : -++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23302 : -++-++++++  echo "Filtered scanner report for $file (Changed lines):"
+Line 23303 : -++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23304 : -++-+++++@@ -53 +77 @@ done <<< "$changed_files"
+Line 23305 : -++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 23306 : -++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 23307 : -++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+Line 23308 : -++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+Line 23309 : -++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+Line 23310 : -++-+++++@@ -60,2 +84,2 @@ fi
+Line 23311 : -++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 23312 : -++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 23313 : -++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+Line 23314 : -++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+Line 23315 : -++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 23316 : -++-+++++-echo "Final filtered scanner report (Line '70'):"
+Line 23317 : -++-++++++echo "Final filtered scanner report (Changed lines):"
+Line 23318 : -++-+++++@@ -67 +91 @@ cat "$final_report"
+Line 23319 : -++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+Line 23320 : -++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+Line 23321 : -++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+Line 23322 : -++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+Line 23323 : -++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+Line 23324 : -++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+Line 23325 : -++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+Line 23326 : -++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+Line 23327 : -++-+++++@@ -77 +101 @@ else
+Line 23328 : -++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+Line 23329 : -++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+Line 23330 : -++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 23331 : -++-+++++deleted file mode 100644
+Line 23332 : -++-+++++index 9d692ac..0000000
+Line 23333 : -++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 23334 : -++-++++++++ /dev/null
+Line 23335 : -++-+++++@@ -1,24 +0,0 @@
+Line 23336 : -++-+++++-0
+Line 23337 : -++-+++++-1
+Line 23338 : -++-+++++-2
+Line 23339 : -++-+++++-3
+Line 23340 : -++-+++++-4
+Line 23341 : -++-+++++-5
+Line 23342 : -++-+++++-60
+Line 23343 : -++-+++++-642
+Line 23344 : -++-+++++-643
+Line 23345 : -++-+++++-644
+Line 23346 : -++-+++++-645
+Line 23347 : -++-+++++-646
+Line 23348 : -++-+++++-647
+Line 23349 : -++-+++++-648
+Line 23350 : -++-+++++-649
+Line 23351 : -++-+++++-650
+Line 23352 : -++-+++++-651
+Line 23353 : -++-+++++-652
+Line 23354 : -++-+++++-653
+Line 23355 : -++-+++++-654
+Line 23356 : -++-+++++-655
+Line 23357 : -++-+++++-656
+Line 23358 : -++-+++++-657
+Line 23359 : -++-+++++-70
+Line 23360 : -++-+++++diff --git a/changes.diff b/changes.diff
+Line 23361 : -++-+++++deleted file mode 100644
+Line 23362 : -++-+++++index 61d162d..0000000
+Line 23363 : -++-+++++--- a/changes.diff
+Line 23364 : -++-++++++++ /dev/null
+Line 23365 : -++-+++++@@ -1,647 +0,0 @@
+Line 23366 : -++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23367 : -++-+++++-index 5b262e4..8c05f52 100644
+Line 23368 : -++-+++++---- a/.husky/pre-commit
+Line 23369 : -++-+++++-+++ b/.husky/pre-commit
+Line 23370 : -++-+++++-@@ -113 +113 @@ cat "$final_report"
+Line 23371 : -++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 23372 : -++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+Line 23373 : -++-+++++-diff --git a/changes.diff b/changes.diff
+Line 23374 : -++-+++++-index 9a218e6..4fe1995 100644
+Line 23375 : -++-+++++---- a/changes.diff
+Line 23376 : -++-+++++-+++ b/changes.diff
+Line 23377 : -++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23378 : -++-+++++--index aa6762f..586962b 100644
+Line 23379 : -++-+++++-+index 586962b..5b262e4 100644
+Line 23380 : -++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+Line 23381 : -++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
+Line 23382 : -++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 23383 : -++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 23384 : -++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 23385 : -++-+++++---  # Extract line numbers as a comma-separated string for filtering later
+Line 23386 : -++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 23387 : -++-+++++--+  # Extract line numbers as an array for filtering later
+Line 23388 : -++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 23389 : -++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
+Line 23390 : -++-+++++---  if [ -z "$line_numbers" ]; then
+Line 23391 : -++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 23392 : -++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 23393 : -++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
+Line 23394 : -++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 23395 : -++-+++++--+  lines_for_filter="${lines_for_filter:1}"
+Line 23396 : -++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+Line 23397 : -++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+Line 23398 : -++-+++++-+-  awk -v file="$file" '
+Line 23399 : -++-+++++-++  # Extract only the changed line numbers for the file
+Line 23400 : -++-+++++-++  line_numbers=$(awk -v file="$file" '
+Line 23401 : -++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+Line 23402 : -++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+Line 23403 : -++-+++++-++  ' changes.diff)
+Line 23404 : -++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+Line 23405 : -++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+Line 23406 : -++-+++++-++  if [ -z "$line_numbers" ]; then
+Line 23407 : -++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+Line 23408 : -++-+++++-+-  # Extract line numbers as an array for filtering later
+Line 23409 : -++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 23410 : -++-+++++-++  # Convert the line numbers to a comma-separated string for matching
+Line 23411 : -++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+Line 23412 : -++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+Line 23413 : -++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
+Line 23414 : -++-+++++---  awk -v lines="$line_numbers" '
+Line 23415 : -++-+++++--+  awk -v lines="$lines_for_filter" '
+Line 23416 : -++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
+Line 23417 : -++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 23418 : -++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 23419 : -++-+++++--@@ -111 +115 @@ cat "$final_report"
+Line 23420 : -++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23421 : -++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 23422 : -++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
+Line 23423 : -++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+Line 23424 : -++-+++++-+-  # Ensure that line_numbers is not empty
+Line 23425 : -++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 23426 : -++-+++++-++  # Ensure that line_numbers_string is not empty
+Line 23427 : -++-+++++-++  if [ -z "$line_numbers_string" ]; then
+Line 23428 : -++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+Line 23429 : -++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+Line 23430 : -++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 23431 : -++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
+Line 23432 : -++-+++++-+-
+Line 23433 : -++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+Line 23434 : -++-+++++-+-  awk -v lines="$lines_for_filter" '
+Line 23435 : -++-+++++-++  awk -v lines="$line_numbers_string" '
+Line 23436 : -++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 23437 : -++-+++++--index 0e43eee..a206584 100644
+Line 23438 : -++-+++++-+index a206584..9d692ac 100644
+Line 23439 : -++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+Line 23440 : -++-+++++--@@ -1 +1,6 @@
+Line 23441 : -++-+++++---70 :           System.debug('Hi Hello');
+Line 23442 : -++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 23443 : -++-+++++--+1 : index 1ec7a54..870d508 100644
+Line 23444 : -++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 23445 : -++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 23446 : -++-+++++--+4 : -          System.debug('Hi');
+Line 23447 : -++-+++++--+70 :           System.debug('Hi');
+Line 23448 : -++-+++++-+@@ -1,6 +1,24 @@
+Line 23449 : -++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 23450 : -++-+++++-+-1 : index 1ec7a54..870d508 100644
+Line 23451 : -++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 23452 : -++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 23453 : -++-+++++-+-4 : -          System.debug('Hi');
+Line 23454 : -++-+++++-+-70 :           System.debug('Hi');
+Line 23455 : -++-+++++-++0
+Line 23456 : -++-+++++-++1
+Line 23457 : -++-+++++-++2
+Line 23458 : -++-+++++-++3
+Line 23459 : -++-+++++-++4
+Line 23460 : -++-+++++-++5
+Line 23461 : -++-+++++-++60
+Line 23462 : -++-+++++-++642
+Line 23463 : -++-+++++-++643
+Line 23464 : -++-+++++-++644
+Line 23465 : -++-+++++-++645
+Line 23466 : -++-+++++-++646
+Line 23467 : -++-+++++-++647
+Line 23468 : -++-+++++-++648
+Line 23469 : -++-+++++-++649
+Line 23470 : -++-+++++-++650
+Line 23471 : -++-+++++-++651
+Line 23472 : -++-+++++-++652
+Line 23473 : -++-+++++-++653
+Line 23474 : -++-+++++-++654
+Line 23475 : -++-+++++-++655
+Line 23476 : -++-+++++-++656
+Line 23477 : -++-+++++-++657
+Line 23478 : -++-+++++-++70
+Line 23479 : -++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+Line 23480 : -++-+++++--index 760971b..3dfa538 100644
+Line 23481 : -++-+++++-+index 3dfa538..9a218e6 100644
+Line 23482 : -++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+Line 23483 : -++-+++++---index 255a037..525d43a 100644
+Line 23484 : -++-+++++--+index 525d43a..aa6762f 100644
+Line 23485 : -++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 23486 : -++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
+Line 23487 : -++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 23488 : -++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
+Line 23489 : -++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 23490 : -++-+++++----  # Define the output path for the scanner report
+Line 23491 : -++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 23492 : -++-+++++---+  # Define the output path for the scanner report in CSV format
+Line 23493 : -++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 23494 : -++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 23495 : -++-+++++----  # Run the SFDX scanner on the file and generate the report
+Line 23496 : -++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 23497 : -++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 23498 : -++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 23499 : -++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
+Line 23500 : -++-+++++----  # Filter the scanner report based on the changed line numbers
+Line 23501 : -++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
+Line 23502 : -++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 23503 : -++-+++++----  jq --arg lines "$line_numbers" '
+Line 23504 : -++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 23505 : -++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23506 : -++-+++++---+  awk -v lines="$line_numbers" '
+Line 23507 : -++-+++++---+  BEGIN {
+Line 23508 : -++-+++++---+    FS=OFS=",";
+Line 23509 : -++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 23510 : -++-+++++---+    for (i in arr) {
+Line 23511 : -++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 23512 : -++-+++++---+    }
+Line 23513 : -++-+++++---+  }
+Line 23514 : -++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 23515 : -++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23516 : -++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
+Line 23517 : -++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 23518 : -++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 23519 : -++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
+Line 23520 : -++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23521 : -++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23522 : -++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
+Line 23523 : -++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 23524 : -++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 23525 : -++-+++++---@@ -95,2 +102,4 @@ fi
+Line 23526 : -++-+++++----# Combine all filtered reports into one final report
+Line 23527 : -++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 23528 : -++-+++++---+# Combine all filtered reports into one final report (optional)
+Line 23529 : -++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 23530 : -++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 23531 : -++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 23532 : -++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 23533 : -++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
+Line 23534 : -++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 23535 : -++-+++++---+echo "Final filtered scanner report:"
+Line 23536 : -++-+++++---+cat "$final_report"
+Line 23537 : -++-+++++---+
+Line 23538 : -++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 23539 : -++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23540 : -++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+Line 23541 : -++-+++++--+-    FS=OFS=",";
+Line 23542 : -++-+++++--++    FS=OFS=",";  # Define CSV format
+Line 23543 : -++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+Line 23544 : -++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 23545 : -++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 23546 : -++-+++++--+@@ -111 +111 @@ cat "$final_report"
+Line 23547 : -++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23548 : -++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23549 : -++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 23550 : -++-+++++--+new file mode 100644
+Line 23551 : -++-+++++--+index 0000000..0e43eee
+Line 23552 : -++-+++++--+--- /dev/null
+Line 23553 : -++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 23554 : -++-+++++--+@@ -0,0 +1 @@
+Line 23555 : -++-+++++--++70 :           System.debug('Hi Hello');
+Line 23556 : -++-+++++--+diff --git a/changes.diff b/changes.diff
+Line 23557 : -++-+++++--+new file mode 100644
+Line 23558 : -++-+++++--+index 0000000..760971b
+Line 23559 : -++-+++++--+--- /dev/null
+Line 23560 : -++-+++++--++++ b/changes.diff
+Line 23561 : -++-+++++--+@@ -0,0 +1,65 @@
+Line 23562 : -++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23563 : -++-+++++--++index 255a037..525d43a 100644
+Line 23564 : -++-+++++--++--- a/.husky/pre-commit
+Line 23565 : -++-+++++--+++++ b/.husky/pre-commit
+Line 23566 : -++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+Line 23567 : -++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 23568 : -++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+Line 23569 : -++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 23570 : -++-+++++--++-  # Define the output path for the scanner report
+Line 23571 : -++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 23572 : -++-+++++--+++  # Define the output path for the scanner report in CSV format
+Line 23573 : -++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 23574 : -++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 23575 : -++-+++++--++-  # Run the SFDX scanner on the file and generate the report
+Line 23576 : -++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 23577 : -++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 23578 : -++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 23579 : -++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+Line 23580 : -++-+++++--++-  # Filter the scanner report based on the changed line numbers
+Line 23581 : -++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+Line 23582 : -++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 23583 : -++-+++++--++-  jq --arg lines "$line_numbers" '
+Line 23584 : -++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 23585 : -++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23586 : -++-+++++--+++  awk -v lines="$line_numbers" '
+Line 23587 : -++-+++++--+++  BEGIN {
+Line 23588 : -++-+++++--+++    FS=OFS=",";
+Line 23589 : -++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 23590 : -++-+++++--+++    for (i in arr) {
+Line 23591 : -++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 23592 : -++-+++++--+++    }
+Line 23593 : -++-+++++--+++  }
+Line 23594 : -++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 23595 : -++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23596 : -++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+Line 23597 : -++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 23598 : -++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 23599 : -++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+Line 23600 : -++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23601 : -++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23602 : -++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+Line 23603 : -++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 23604 : -++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 23605 : -++-+++++--++@@ -95,2 +102,4 @@ fi
+Line 23606 : -++-+++++--++-# Combine all filtered reports into one final report
+Line 23607 : -++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 23608 : -++-+++++--+++# Combine all filtered reports into one final report (optional)
+Line 23609 : -++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 23610 : -++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 23611 : -++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 23612 : -++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 23613 : -++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 23614 : -++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 23615 : -++-+++++--+++echo "Final filtered scanner report:"
+Line 23616 : -++-+++++--+++cat "$final_report"
+Line 23617 : -++-+++++--+++
+Line 23618 : -++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 23619 : -++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23620 : -++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 23621 : -++-+++++--++index 1ec7a54..870d508 100644
+Line 23622 : -++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 23623 : -++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 23624 : -++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 23625 : -++-+++++--++-          System.debug('Hi');
+Line 23626 : -++-+++++--+++          System.debug('Hi Hello');
+Line 23627 : -++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 23628 : -++-+++++---index 1ec7a54..870d508 100644
+Line 23629 : -++-+++++--+index 870d508..1ec7a54 100644
+Line 23630 : -++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 23631 : -++-+++++----          System.debug('Hi');
+Line 23632 : -++-+++++---+          System.debug('Hi Hello');
+Line 23633 : -++-+++++--+-          System.debug('Hi Hello');
+Line 23634 : -++-+++++--++          System.debug('Hi');
+Line 23635 : -++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 23636 : -++-+++++--+new file mode 100644
+Line 23637 : -++-+++++--+index 0000000..5a3a1ac
+Line 23638 : -++-+++++--+--- /dev/null
+Line 23639 : -++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 23640 : -++-+++++--+@@ -0,0 +1 @@
+Line 23641 : -++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23642 : -++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 23643 : -++-+++++--+new file mode 100644
+Line 23644 : -++-+++++--+index 0000000..5a3a1ac
+Line 23645 : -++-+++++--+--- /dev/null
+Line 23646 : -++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 23647 : -++-+++++--+@@ -0,0 +1 @@
+Line 23648 : -++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23649 : -++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 23650 : -++-+++++--+new file mode 100644
+Line 23651 : -++-+++++--+index 0000000..e1ef0f0
+Line 23652 : -++-+++++--+--- /dev/null
+Line 23653 : -++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 23654 : -++-+++++--+@@ -0,0 +1,5 @@
+Line 23655 : -++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23656 : -++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 23657 : -++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 23658 : -++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 23659 : -++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 23660 : -++-+++++-+-index 525d43a..aa6762f 100644
+Line 23661 : -++-+++++-++index aa6762f..586962b 100644
+Line 23662 : -++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+Line 23663 : -++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+Line 23664 : -++-+++++-+--    FS=OFS=",";
+Line 23665 : -++-+++++-+-+    FS=OFS=",";  # Define CSV format
+Line 23666 : -++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+Line 23667 : -++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 23668 : -++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 23669 : -++-+++++-+-@@ -111 +111 @@ cat "$final_report"
+Line 23670 : -++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23671 : -++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23672 : -++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+Line 23673 : -++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 23674 : -++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 23675 : -++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 23676 : -++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+Line 23677 : -++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 23678 : -++-+++++-+++  # Extract line numbers as an array for filtering later
+Line 23679 : -++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 23680 : -++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+Line 23681 : -++-+++++-++-  if [ -z "$line_numbers" ]; then
+Line 23682 : -++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 23683 : -++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 23684 : -++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+Line 23685 : -++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 23686 : -++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
+Line 23687 : -++-+++++-+++
+Line 23688 : -++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+Line 23689 : -++-+++++-++-  awk -v lines="$line_numbers" '
+Line 23690 : -++-+++++-+++  awk -v lines="$lines_for_filter" '
+Line 23691 : -++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+Line 23692 : -++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 23693 : -++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 23694 : -++-+++++-++@@ -111 +115 @@ cat "$final_report"
+Line 23695 : -++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23696 : -++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 23697 : -++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 23698 : -++-+++++-+-new file mode 100644
+Line 23699 : -++-+++++-+-index 0000000..0e43eee
+Line 23700 : -++-+++++-+---- /dev/null
+Line 23701 : -++-+++++-++index 0e43eee..a206584 100644
+Line 23702 : -++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 23703 : -++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+Line 23704 : -++-+++++-+-@@ -0,0 +1 @@
+Line 23705 : -++-+++++-+-+70 :           System.debug('Hi Hello');
+Line 23706 : -++-+++++-++@@ -1 +1,6 @@
+Line 23707 : -++-+++++-++-70 :           System.debug('Hi Hello');
+Line 23708 : -++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 23709 : -++-+++++-+++1 : index 1ec7a54..870d508 100644
+Line 23710 : -++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 23711 : -++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 23712 : -++-+++++-+++4 : -          System.debug('Hi');
+Line 23713 : -++-+++++-+++70 :           System.debug('Hi');
+Line 23714 : -++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+Line 23715 : -++-+++++-+-new file mode 100644
+Line 23716 : -++-+++++-+-index 0000000..760971b
+Line 23717 : -++-+++++-+---- /dev/null
+Line 23718 : -++-+++++-++index 760971b..3dfa538 100644
+Line 23719 : -++-+++++-++--- a/changes.diff
+Line 23720 : -++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+Line 23721 : -++-+++++-+-@@ -0,0 +1,65 @@
+Line 23722 : -++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23723 : -++-+++++-+-+index 255a037..525d43a 100644
+Line 23724 : -++-+++++-+-+--- a/.husky/pre-commit
+Line 23725 : -++-+++++-+-++++ b/.husky/pre-commit
+Line 23726 : -++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+Line 23727 : -++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 23728 : -++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+Line 23729 : -++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 23730 : -++-+++++-+-+-  # Define the output path for the scanner report
+Line 23731 : -++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 23732 : -++-+++++-+-++  # Define the output path for the scanner report in CSV format
+Line 23733 : -++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 23734 : -++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 23735 : -++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+Line 23736 : -++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 23737 : -++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 23738 : -++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 23739 : -++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+Line 23740 : -++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
+Line 23741 : -++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+Line 23742 : -++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 23743 : -++-+++++-+-+-  jq --arg lines "$line_numbers" '
+Line 23744 : -++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 23745 : -++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23746 : -++-+++++-+-++  awk -v lines="$line_numbers" '
+Line 23747 : -++-+++++-+-++  BEGIN {
+Line 23748 : -++-+++++-+-++    FS=OFS=",";
+Line 23749 : -++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 23750 : -++-+++++-+-++    for (i in arr) {
+Line 23751 : -++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 23752 : -++-+++++-+-++    }
+Line 23753 : -++-+++++-+-++  }
+Line 23754 : -++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 23755 : -++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23756 : -++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+Line 23757 : -++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 23758 : -++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 23759 : -++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+Line 23760 : -++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23761 : -++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23762 : -++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+Line 23763 : -++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 23764 : -++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 23765 : -++-+++++-+-+@@ -95,2 +102,4 @@ fi
+Line 23766 : -++-+++++-+-+-# Combine all filtered reports into one final report
+Line 23767 : -++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 23768 : -++-+++++-+-++# Combine all filtered reports into one final report (optional)
+Line 23769 : -++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 23770 : -++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 23771 : -++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 23772 : -++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 23773 : -++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+Line 23774 : -++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 23775 : -++-+++++-+-++echo "Final filtered scanner report:"
+Line 23776 : -++-+++++-+-++cat "$final_report"
+Line 23777 : -++-+++++-+-++
+Line 23778 : -++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 23779 : -++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23780 : -++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 23781 : -++-+++++-+-+index 1ec7a54..870d508 100644
+Line 23782 : -++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 23783 : -++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 23784 : -++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 23785 : -++-+++++-+-+-          System.debug('Hi');
+Line 23786 : -++-+++++-+-++          System.debug('Hi Hello');
+Line 23787 : -++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23788 : -++-+++++-++-index 255a037..525d43a 100644
+Line 23789 : -++-+++++-+++index 525d43a..aa6762f 100644
+Line 23790 : -++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 23791 : -++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+Line 23792 : -++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 23793 : -++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+Line 23794 : -++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 23795 : -++-+++++-++--  # Define the output path for the scanner report
+Line 23796 : -++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 23797 : -++-+++++-++-+  # Define the output path for the scanner report in CSV format
+Line 23798 : -++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 23799 : -++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 23800 : -++-+++++-++--  # Run the SFDX scanner on the file and generate the report
+Line 23801 : -++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 23802 : -++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 23803 : -++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 23804 : -++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+Line 23805 : -++-+++++-++--  # Filter the scanner report based on the changed line numbers
+Line 23806 : -++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+Line 23807 : -++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 23808 : -++-+++++-++--  jq --arg lines "$line_numbers" '
+Line 23809 : -++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 23810 : -++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23811 : -++-+++++-++-+  awk -v lines="$line_numbers" '
+Line 23812 : -++-+++++-++-+  BEGIN {
+Line 23813 : -++-+++++-++-+    FS=OFS=",";
+Line 23814 : -++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 23815 : -++-+++++-++-+    for (i in arr) {
+Line 23816 : -++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 23817 : -++-+++++-++-+    }
+Line 23818 : -++-+++++-++-+  }
+Line 23819 : -++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 23820 : -++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23821 : -++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+Line 23822 : -++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 23823 : -++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 23824 : -++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+Line 23825 : -++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23826 : -++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23827 : -++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+Line 23828 : -++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 23829 : -++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 23830 : -++-+++++-++-@@ -95,2 +102,4 @@ fi
+Line 23831 : -++-+++++-++--# Combine all filtered reports into one final report
+Line 23832 : -++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 23833 : -++-+++++-++-+# Combine all filtered reports into one final report (optional)
+Line 23834 : -++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 23835 : -++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 23836 : -++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 23837 : -++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 23838 : -++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+Line 23839 : -++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 23840 : -++-+++++-++-+echo "Final filtered scanner report:"
+Line 23841 : -++-+++++-++-+cat "$final_report"
+Line 23842 : -++-+++++-++-+
+Line 23843 : -++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 23844 : -++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23845 : -++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+Line 23846 : -++-+++++-+++-    FS=OFS=",";
+Line 23847 : -++-+++++-++++    FS=OFS=",";  # Define CSV format
+Line 23848 : -++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+Line 23849 : -++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 23850 : -++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 23851 : -++-+++++-+++@@ -111 +111 @@ cat "$final_report"
+Line 23852 : -++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23853 : -++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23854 : -++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 23855 : -++-+++++-+++new file mode 100644
+Line 23856 : -++-+++++-+++index 0000000..0e43eee
+Line 23857 : -++-+++++-+++--- /dev/null
+Line 23858 : -++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 23859 : -++-+++++-+++@@ -0,0 +1 @@
+Line 23860 : -++-+++++-++++70 :           System.debug('Hi Hello');
+Line 23861 : -++-+++++-+++diff --git a/changes.diff b/changes.diff
+Line 23862 : -++-+++++-+++new file mode 100644
+Line 23863 : -++-+++++-+++index 0000000..760971b
+Line 23864 : -++-+++++-+++--- /dev/null
+Line 23865 : -++-+++++-++++++ b/changes.diff
+Line 23866 : -++-+++++-+++@@ -0,0 +1,65 @@
+Line 23867 : -++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 23868 : -++-+++++-++++index 255a037..525d43a 100644
+Line 23869 : -++-+++++-++++--- a/.husky/pre-commit
+Line 23870 : -++-+++++-+++++++ b/.husky/pre-commit
+Line 23871 : -++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+Line 23872 : -++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 23873 : -++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+Line 23874 : -++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 23875 : -++-+++++-++++-  # Define the output path for the scanner report
+Line 23876 : -++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 23877 : -++-+++++-+++++  # Define the output path for the scanner report in CSV format
+Line 23878 : -++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 23879 : -++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 23880 : -++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
+Line 23881 : -++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 23882 : -++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 23883 : -++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 23884 : -++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+Line 23885 : -++-+++++-++++-  # Filter the scanner report based on the changed line numbers
+Line 23886 : -++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+Line 23887 : -++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 23888 : -++-+++++-++++-  jq --arg lines "$line_numbers" '
+Line 23889 : -++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 23890 : -++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23891 : -++-+++++-+++++  awk -v lines="$line_numbers" '
+Line 23892 : -++-+++++-+++++  BEGIN {
+Line 23893 : -++-+++++-+++++    FS=OFS=",";
+Line 23894 : -++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 23895 : -++-+++++-+++++    for (i in arr) {
+Line 23896 : -++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 23897 : -++-+++++-+++++    }
+Line 23898 : -++-+++++-+++++  }
+Line 23899 : -++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 23900 : -++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23901 : -++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+Line 23902 : -++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 23903 : -++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 23904 : -++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+Line 23905 : -++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 23906 : -++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 23907 : -++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+Line 23908 : -++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 23909 : -++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 23910 : -++-+++++-++++@@ -95,2 +102,4 @@ fi
+Line 23911 : -++-+++++-++++-# Combine all filtered reports into one final report
+Line 23912 : -++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 23913 : -++-+++++-+++++# Combine all filtered reports into one final report (optional)
+Line 23914 : -++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 23915 : -++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 23916 : -++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 23917 : -++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 23918 : -++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 23919 : -++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 23920 : -++-+++++-+++++echo "Final filtered scanner report:"
+Line 23921 : -++-+++++-+++++cat "$final_report"
+Line 23922 : -++-+++++-+++++
+Line 23923 : -++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 23924 : -++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 23925 : -++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 23926 : -++-+++++-++++index 1ec7a54..870d508 100644
+Line 23927 : -++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 23928 : -++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 23929 : -++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 23930 : -++-+++++-++++-          System.debug('Hi');
+Line 23931 : -++-+++++-+++++          System.debug('Hi Hello');
+Line 23932 : -++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 23933 : -++-+++++-++-index 1ec7a54..870d508 100644
+Line 23934 : -++-+++++-+++index 870d508..1ec7a54 100644
+Line 23935 : -++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 23936 : -++-+++++-++--          System.debug('Hi');
+Line 23937 : -++-+++++-++-+          System.debug('Hi Hello');
+Line 23938 : -++-+++++-+++-          System.debug('Hi Hello');
+Line 23939 : -++-+++++-++++          System.debug('Hi');
+Line 23940 : -++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 23941 : -++-+++++-+++new file mode 100644
+Line 23942 : -++-+++++-+++index 0000000..5a3a1ac
+Line 23943 : -++-+++++-+++--- /dev/null
+Line 23944 : -++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 23945 : -++-+++++-+++@@ -0,0 +1 @@
+Line 23946 : -++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23947 : -++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 23948 : -++-+++++-+++new file mode 100644
+Line 23949 : -++-+++++-+++index 0000000..5a3a1ac
+Line 23950 : -++-+++++-+++--- /dev/null
+Line 23951 : -++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 23952 : -++-+++++-+++@@ -0,0 +1 @@
+Line 23953 : -++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23954 : -++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 23955 : -++-+++++-+++new file mode 100644
+Line 23956 : -++-+++++-+++index 0000000..e1ef0f0
+Line 23957 : -++-+++++-+++--- /dev/null
+Line 23958 : -++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 23959 : -++-+++++-+++@@ -0,0 +1,5 @@
+Line 23960 : -++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23961 : -++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 23962 : -++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 23963 : -++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 23964 : -++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 23965 : -++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 23966 : -++-+++++-+-index 870d508..1ec7a54 100644
+Line 23967 : -++-+++++-++index 1ec7a54..870d508 100644
+Line 23968 : -++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+Line 23969 : -++-+++++-+--          System.debug('Hi Hello');
+Line 23970 : -++-+++++-+-+          System.debug('Hi');
+Line 23971 : -++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 23972 : -++-+++++-+-new file mode 100644
+Line 23973 : -++-+++++-+-index 0000000..5a3a1ac
+Line 23974 : -++-+++++-+---- /dev/null
+Line 23975 : -++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 23976 : -++-+++++-+-@@ -0,0 +1 @@
+Line 23977 : -++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23978 : -++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 23979 : -++-+++++-+-new file mode 100644
+Line 23980 : -++-+++++-+-index 0000000..5a3a1ac
+Line 23981 : -++-+++++-+---- /dev/null
+Line 23982 : -++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 23983 : -++-+++++-+-@@ -0,0 +1 @@
+Line 23984 : -++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23985 : -++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 23986 : -++-+++++-+-new file mode 100644
+Line 23987 : -++-+++++-+-index 0000000..e1ef0f0
+Line 23988 : -++-+++++-+---- /dev/null
+Line 23989 : -++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 23990 : -++-+++++-+-@@ -0,0 +1,5 @@
+Line 23991 : -++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 23992 : -++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 23993 : -++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 23994 : -++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 23995 : -++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 23996 : -++-+++++-++-          System.debug('Hi');
+Line 23997 : -++-+++++-+++          System.debug('Hi Hello');
+Line 23998 : -++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 23999 : -++-+++++--index 1ec7a54..870d508 100644
+Line 24000 : -++-+++++-+index 870d508..5eafcac 100644
+Line 24001 : -++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+Line 24002 : -++-+++++---          System.debug('Hi');
+Line 24003 : -++-+++++--+          System.debug('Hi Hello');
+Line 24004 : -++-+++++-+-          System.debug('Hi Hello');
+Line 24005 : -++-+++++-++          System.debug('Happy');
+Line 24006 : -++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 24007 : -++-+++++-index 5eafcac..1ec7a54 100644
+Line 24008 : -++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
+Line 24009 : -++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+Line 24010 : -++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 24011 : -++-+++++--          System.debug('Happy');
+Line 24012 : -++-+++++-+          System.debug('Hi');
+Line 24013 : -++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 24014 : -++-+++++index 73696e2..9e21e88 100644
+Line 24015 : -++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 24016 : -++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 24017 : -++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 24018 : -++-+++++-          System.debug('Hello and Hi');
+Line 24019 : -++-++++++          System.debug('Hi AND');
+Line 24020 : -++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 24021 : -++-+++++deleted file mode 100644
+Line 24022 : -++-+++++index 5a3a1ac..0000000
+Line 24023 : -++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 24024 : -++-++++++++ /dev/null
+Line 24025 : -++-+++++@@ -1 +0,0 @@
+Line 24026 : -++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 24027 : -++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 24028 : -++-+++++new file mode 100644
+Line 24029 : -++-+++++index 0000000..ebc3aa5
+Line 24030 : -++-+++++--- /dev/null
+Line 24031 : -++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 24032 : -++-+++++@@ -0,0 +1,30 @@
+Line 24033 : -++-++++++[
+Line 24034 : -++-++++++  {
+Line 24035 : -++-++++++    "engine": "pmd",
+Line 24036 : -++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 24037 : -++-++++++    "violations": [
+Line 24038 : -++-++++++      {
+Line 24039 : -++-++++++        "line": 70,
+Line 24040 : -++-++++++        "column": 11,
+Line 24041 : -++-++++++        "endLine": 70,
+Line 24042 : -++-++++++        "endColumn": 29,
+Line 24043 : -++-++++++        "severity": 3,
+Line 24044 : -++-++++++        "ruleName": "AvoidDebugStatements",
+Line 24045 : -++-++++++        "category": "Performance",
+Line 24046 : -++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 24047 : -++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 24048 : -++-++++++      },
+Line 24049 : -++-++++++      {
+Line 24050 : -++-++++++        "line": 70,
+Line 24051 : -++-++++++        "column": 11,
+Line 24052 : -++-++++++        "endLine": 70,
+Line 24053 : -++-++++++        "endColumn": 29,
+Line 24054 : -++-++++++        "severity": 3,
+Line 24055 : -++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 24056 : -++-++++++        "category": "Best Practices",
+Line 24057 : -++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 24058 : -++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 24059 : -++-++++++      }
+Line 24060 : -++-++++++    ]
+Line 24061 : -++-++++++  }
+Line 24062 : -++-++++++]
+Line 24063 : -++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 24064 : -++-+++++deleted file mode 100644
+Line 24065 : -++-+++++index 5a3a1ac..0000000
+Line 24066 : -++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+Line 24067 : -++-++++++++ /dev/null
+Line 24068 : -++-+++++@@ -1 +0,0 @@
+Line 24069 : -++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 24070 : -++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 24071 : -++-+++++new file mode 100644
+Line 24072 : -++-+++++index 0000000..ebc3aa5
+Line 24073 : -++-+++++--- /dev/null
+Line 24074 : -++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 24075 : -++-+++++@@ -0,0 +1,30 @@
+Line 24076 : -++-++++++[
+Line 24077 : -++-++++++  {
+Line 24078 : -++-++++++    "engine": "pmd",
+Line 24079 : -++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 24080 : -++-++++++    "violations": [
+Line 24081 : -++-++++++      {
+Line 24082 : -++-++++++        "line": 70,
+Line 24083 : -++-++++++        "column": 11,
+Line 24084 : -++-++++++        "endLine": 70,
+Line 24085 : -++-++++++        "endColumn": 29,
+Line 24086 : -++-++++++        "severity": 3,
+Line 24087 : -++-++++++        "ruleName": "AvoidDebugStatements",
+Line 24088 : -++-++++++        "category": "Performance",
+Line 24089 : -++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 24090 : -++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 24091 : -++-++++++      },
+Line 24092 : -++-++++++      {
+Line 24093 : -++-++++++        "line": 70,
+Line 24094 : -++-++++++        "column": 11,
+Line 24095 : -++-++++++        "endLine": 70,
+Line 24096 : -++-++++++        "endColumn": 29,
+Line 24097 : -++-++++++        "severity": 3,
+Line 24098 : -++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 24099 : -++-++++++        "category": "Best Practices",
+Line 24100 : -++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 24101 : -++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 24102 : -++-++++++      }
+Line 24103 : -++-++++++    ]
+Line 24104 : -++-++++++  }
+Line 24105 : -++-++++++]
+Line 24106 : -++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 24107 : -++-+++++deleted file mode 100644
+Line 24108 : -++-+++++index e1ef0f0..0000000
+Line 24109 : -++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 24110 : -++-++++++++ /dev/null
+Line 24111 : -++-+++++@@ -1,5 +0,0 @@
+Line 24112 : -++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 24113 : -++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 24114 : -++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 24115 : -++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 24116 : -++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 24117 : -++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 24118 : -++-+++++new file mode 100644
+Line 24119 : -++-+++++index 0000000..c973918
+Line 24120 : -++-+++++--- /dev/null
+Line 24121 : -++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 24122 : -++-+++++@@ -0,0 +1 @@
+Line 24123 : -++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 24124 : -++-+++++\ No newline at end of file
+Line 24125 : -++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 24126 : -++-++++index 9e21e88..800635e 100644
+Line 24127 : -++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 24128 : -++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 24129 : -++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 24130 : -++-++++-          System.debug('Hi AND');
+Line 24131 : -++-+++++          System.debug('Hi AND Hello');
+Line 24132 : -++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 24133 : -++-++++index ebc3aa5..fe51488 100644
+Line 24134 : -++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 24135 : -++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 24136 : -++-++++@@ -1,30 +1 @@
+Line 24137 : -++-++++-[
+Line 24138 : -++-++++-  {
+Line 24139 : -++-++++-    "engine": "pmd",
+Line 24140 : -++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 24141 : -++-++++-    "violations": [
+Line 24142 : -++-++++-      {
+Line 24143 : -++-++++-        "line": 70,
+Line 24144 : -++-++++-        "column": 11,
+Line 24145 : -++-++++-        "endLine": 70,
+Line 24146 : -++-++++-        "endColumn": 29,
+Line 24147 : -++-++++-        "severity": 3,
+Line 24148 : -++-++++-        "ruleName": "AvoidDebugStatements",
+Line 24149 : -++-++++-        "category": "Performance",
+Line 24150 : -++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 24151 : -++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 24152 : -++-++++-      },
+Line 24153 : -++-++++-      {
+Line 24154 : -++-++++-        "line": 70,
+Line 24155 : -++-++++-        "column": 11,
+Line 24156 : -++-++++-        "endLine": 70,
+Line 24157 : -++-++++-        "endColumn": 29,
+Line 24158 : -++-++++-        "severity": 3,
+Line 24159 : -++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 24160 : -++-++++-        "category": "Best Practices",
+Line 24161 : -++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 24162 : -++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 24163 : -++-++++-      }
+Line 24164 : -++-++++-    ]
+Line 24165 : -++-++++-  }
+Line 24166 : -++-++++-]
+Line 24167 : -++-+++++[]
+Line 24168 : -++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 24169 : -++-++++index ebc3aa5..fe51488 100644
+Line 24170 : -++-++++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 24171 : -++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 24172 : -++-++++@@ -1,30 +1 @@
+Line 24173 : -++-++++-[
+Line 24174 : -++-++++-  {
+Line 24175 : -++-++++-    "engine": "pmd",
+Line 24176 : -++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 24177 : -++-++++-    "violations": [
+Line 24178 : -++-++++-      {
+Line 24179 : -++-++++-        "line": 70,
+Line 24180 : -++-++++-        "column": 11,
+Line 24181 : -++-++++-        "endLine": 70,
+Line 24182 : -++-++++-        "endColumn": 29,
+Line 24183 : -++-++++-        "severity": 3,
+Line 24184 : -++-++++-        "ruleName": "AvoidDebugStatements",
+Line 24185 : -++-++++-        "category": "Performance",
+Line 24186 : -++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 24187 : -++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 24188 : -++-++++-      },
+Line 24189 : -++-++++-      {
+Line 24190 : -++-++++-        "line": 70,
+Line 24191 : -++-++++-        "column": 11,
+Line 24192 : -++-++++-        "endLine": 70,
+Line 24193 : -++-++++-        "endColumn": 29,
+Line 24194 : -++-++++-        "severity": 3,
+Line 24195 : -++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 24196 : -++-++++-        "category": "Best Practices",
+Line 24197 : -++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 24198 : -++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 24199 : -++-++++-      }
+Line 24200 : -++-++++-    ]
+Line 24201 : -++-++++-  }
+Line 24202 : -++-++++-]
+Line 24203 : -++-+++++[]
+Line 24204 : -++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 24205 : -++-++++index c973918..a14d61d 100644
+Line 24206 : -++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 24207 : -++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 24208 : -++-++++@@ -1 +1 @@
+Line 24209 : -++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 24210 : -++-++++\ No newline at end of file
+Line 24211 : -++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 24212 : -++-++++\ No newline at end of file
+Line 24213 : -++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 24214 : -++-+++index 9e21e88..1ec7a54 100644
+Line 24215 : -++-+++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 24216 : -++-++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 24217 : -++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 24218 : -++-+++-          System.debug('Hi AND');
+Line 24219 : -++-++++          System.debug('Hi');
+Line 24220 : -++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 24221 : -++-+++index ebc3aa5..bb2caee 100644
+Line 24222 : -++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 24223 : -++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 24224 : -++-+++@@ -5,0 +6,22 @@
+Line 24225 : -++-++++      {
+Line 24226 : -++-++++        "line": 20,
+Line 24227 : -++-++++        "column": 11,
+Line 24228 : -++-++++        "endLine": 20,
+Line 24229 : -++-++++        "endColumn": 35,
+Line 24230 : -++-++++        "severity": 3,
+Line 24231 : -++-++++        "ruleName": "AvoidDebugStatements",
+Line 24232 : -++-++++        "category": "Performance",
+Line 24233 : -++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 24234 : -++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 24235 : -++-++++      },
+Line 24236 : -++-++++      {
+Line 24237 : -++-++++        "line": 20,
+Line 24238 : -++-++++        "column": 11,
+Line 24239 : -++-++++        "endLine": 20,
+Line 24240 : -++-++++        "endColumn": 35,
+Line 24241 : -++-++++        "severity": 3,
+Line 24242 : -++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 24243 : -++-++++        "category": "Best Practices",
+Line 24244 : -++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 24245 : -++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 24246 : -++-++++      },
+Line 24247 : -++-+++@@ -10 +32 @@
+Line 24248 : -+++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24249 : -+++-index daf61a1..3603bae 100644
+Line 24250 : -++++index 1328704..5ea091f 100644
+Line 24251 : -+++@@ -5,12 +5,5 @@ index daf61a1..3603bae 100644
+Line 24252 : -+++-@@ -16 +16 @@ mkdir -p scanner-reports
+Line 24253 : -+++--git diff --unified=0 --cached > changes.diff
+Line 24254 : -+++-+git diff --cached --unified=0 > changes.diff
+Line 24255 : -+++-@@ -25 +25 @@ while IFS= read -r file; do
+Line 24256 : -+++--  # Extract only the changed line numbers for the file
+Line 24257 : -+++-+  # Extract only the added or modified lines for .cls and .lwc files
+Line 24258 : -+++-@@ -32 +32 @@ while IFS= read -r file; do
+Line 24259 : -+++--  ' changes.diff)
+Line 24260 : -+++-+  ' changes.diff | uniq)
+Line 24261 : -+++-@@ -61 +61 @@ while IFS= read -r file; do
+Line 24262 : -+++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 24263 : -+++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 24264 : -++++@@ -30,2 +30,2 @@ while IFS= read -r file; do
+Line 24265 : -++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+Line 24266 : -++++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+Line 24267 : -+++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+Line 24268 : -+++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}
+Line 24269 : -+++@@ -18,3 +11,2 @@ diff --git a/changes.diff b/changes.diff
+Line 24270 : -+++-new file mode 100644
+Line 24271 : -+++-index 0000000..a6452b3
+Line 24272 : -+++---- /dev/null
+Line 24273 : -++++index 1f4c0b2..4035686 100644
+Line 24274 : -++++--- a/changes.diff
+Line 24275 : -+++@@ -22,1188 +14,3438 @@ index 0000000..a6452b3
+Line 24276 : -+++-@@ -0,0 +1,1262 @@
+Line 24277 : -+++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24278 : -+++-+index daf61a1..3603bae 100644
+Line 24279 : -+++-+--- a/.husky/pre-commit
+Line 24280 : -+++-++++ b/.husky/pre-commit
+Line 24281 : -+++-+@@ -16 +16 @@ mkdir -p scanner-reports
+Line 24282 : -+++-+-git diff --unified=0 --cached > changes.diff
+Line 24283 : -+++-++git diff --cached --unified=0 > changes.diff
+Line 24284 : -+++-+@@ -25 +25 @@ while IFS= read -r file; do
+Line 24285 : -+++-+-  # Extract only the changed line numbers for the file
+Line 24286 : -+++-++  # Extract only the added or modified lines for .cls and .lwc files
+Line 24287 : -+++-+@@ -32 +32 @@ while IFS= read -r file; do
+Line 24288 : -+++-+-  ' changes.diff)
+Line 24289 : -+++-++  ' changes.diff | uniq)
+Line 24290 : -+++-+@@ -61 +61 @@ while IFS= read -r file; do
+Line 24291 : -+++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 24292 : -+++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 24293 : -+++-+diff --git a/changes.diff b/changes.diff
+Line 24294 : -+++-+new file mode 100644
+Line 24295 : -+++-+index 0000000..1831031
+Line 24296 : -+++-+--- /dev/null
+Line 24297 : -+++-++++ b/changes.diff
+Line 24298 : -+++-+@@ -0,0 +1,1158 @@
+Line 24299 : -+++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24300 : -+++-++index daf61a1..d6ae40b 100644
+Line 24301 : -+++-++--- a/.husky/pre-commit
+Line 24302 : -+++-+++++ b/.husky/pre-commit
+Line 24303 : -+++-++@@ -25 +25 @@ while IFS= read -r file; do
+Line 24304 : -+++-++-  # Extract only the changed line numbers for the file
+Line 24305 : -+++-+++  # Extract only the added or modified lines for .cls and .lwc files
+Line 24306 : -+++-++@@ -32 +32 @@ while IFS= read -r file; do
+Line 24307 : -+++-++-  ' changes.diff)
+Line 24308 : -+++-+++  ' changes.diff | uniq)
+Line 24309 : -+++-++@@ -61 +61 @@ while IFS= read -r file; do
+Line 24310 : -+++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 24311 : -+++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 24312 : -+++-++diff --git a/changes.diff b/changes.diff
+Line 24313 : -+++-++new file mode 100644
+Line 24314 : -+++-++index 0000000..47b6c1c
+Line 24315 : -+++-++--- /dev/null
+Line 24316 : -+++-+++++ b/changes.diff
+Line 24317 : -+++-++@@ -0,0 +1,1078 @@
+Line 24318 : -+++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24319 : -+++-+++index daf61a1..d6ae40b 100644
+Line 24320 : -+++-+++--- a/.husky/pre-commit
+Line 24321 : -+++-++++++ b/.husky/pre-commit
+Line 24322 : -+++-+++@@ -25 +25 @@ while IFS= read -r file; do
+Line 24323 : -+++-+++-  # Extract only the changed line numbers for the file
+Line 24324 : -+++-++++  # Extract only the added or modified lines for .cls and .lwc files
+Line 24325 : -+++-+++@@ -32 +32 @@ while IFS= read -r file; do
+Line 24326 : -+++-+++-  ' changes.diff)
+Line 24327 : -+++-++++  ' changes.diff | uniq)
+Line 24328 : -+++-+++@@ -61 +61 @@ while IFS= read -r file; do
+Line 24329 : -+++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 24330 : -+++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 24331 : -+++-+++diff --git a/changes.diff b/changes.diff
+Line 24332 : -+++-+++new file mode 100644
+Line 24333 : -+++-+++index 0000000..8cd4f1a
+Line 24334 : -+++-+++--- /dev/null
+Line 24335 : -+++-++++++ b/changes.diff
+Line 24336 : -+++-+++@@ -0,0 +1,977 @@
+Line 24337 : -+++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24338 : -+++-++++index daf61a1..73bb862 100644
+Line 24339 : -+++-++++--- a/.husky/pre-commit
+Line 24340 : -+++-+++++++ b/.husky/pre-commit
+Line 24341 : -+++-++++@@ -61 +61 @@ while IFS= read -r file; do
+Line 24342 : -+++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 24343 : -+++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 24344 : -+++-++++diff --git a/changes.diff b/changes.diff
+Line 24345 : -+++-++++new file mode 100644
+Line 24346 : -+++-++++index 0000000..f9d24dc
+Line 24347 : -+++-++++--- /dev/null
+Line 24348 : -+++-+++++++ b/changes.diff
+Line 24349 : -+++-++++@@ -0,0 +1,876 @@
+Line 24350 : -+++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24351 : -+++-+++++index 19cfdbc..daf61a1 100644
+Line 24352 : -+++-+++++--- a/.husky/pre-commit
+Line 24353 : -+++-++++++++ b/.husky/pre-commit
+Line 24354 : -+++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+Line 24355 : -+++-+++++-  # Define the output path for the scanner report in CSV format
+Line 24356 : -+++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 24357 : -+++-++++++  # Extract only the changed line numbers for the file
+Line 24358 : -+++-++++++  line_numbers=$(awk -v file="$file" '
+Line 24359 : -+++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+Line 24360 : -+++-++++++    /^diff --git/ {inside=0}
+Line 24361 : -+++-++++++    $0 ~ file {inside=1}
+Line 24362 : -+++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+Line 24363 : -+++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 24364 : -+++-++++++  ' changes.diff)
+Line 24365 : -+++-++++++
+Line 24366 : -+++-++++++  # If no changed lines are found for this file, skip it
+Line 24367 : -+++-++++++  if [ -z "$line_numbers" ]; then
+Line 24368 : -+++-++++++    echo "No changed lines found in $file"
+Line 24369 : -+++-++++++    continue
+Line 24370 : -+++-++++++  fi
+Line 24371 : -+++-++++++
+Line 24372 : -+++-++++++  # Convert the line numbers to a JSON array format for jq filtering
+Line 24373 : -+++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+Line 24374 : -+++-++++++
+Line 24375 : -+++-++++++  echo "Changed lines for $file: $line_numbers_array"
+Line 24376 : -+++-++++++
+Line 24377 : -+++-++++++  # Define the output path for the scanner report in JSON format
+Line 24378 : -+++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 24379 : -+++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+Line 24380 : -+++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 24381 : -+++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 24382 : -+++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+Line 24383 : -+++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 24384 : -+++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+Line 24385 : -+++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+Line 24386 : -+++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
+Line 24387 : -+++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 24388 : -+++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+Line 24389 : -+++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+Line 24390 : -+++-++++++  jq --argjson lines "$line_numbers_array" '
+Line 24391 : -+++-++++++    [.[] | 
+Line 24392 : -+++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 24393 : -+++-++++++      select(.violations | length > 0)]
+Line 24394 : -+++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 24395 : -+++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+Line 24396 : -+++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 24397 : -+++-+++++-    echo "No issues found for line '70' in $file"
+Line 24398 : -+++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 24399 : -+++-++++++    echo "No issues found for changed lines in $file"
+Line 24400 : -+++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+Line 24401 : -+++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
+Line 24402 : -+++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 24403 : -+++-++++++  echo "Filtered scanner report for $file (Changed lines):"
+Line 24404 : -+++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 24405 : -+++-+++++@@ -53 +77 @@ done <<< "$changed_files"
+Line 24406 : -+++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 24407 : -+++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 24408 : -+++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+Line 24409 : -+++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+Line 24410 : -+++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+Line 24411 : -+++-+++++@@ -60,2 +84,2 @@ fi
+Line 24412 : -+++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 24413 : -+++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 24414 : -+++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+Line 24415 : -+++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+Line 24416 : -+++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 24417 : -+++-+++++-echo "Final filtered scanner report (Line '70'):"
+Line 24418 : -+++-++++++echo "Final filtered scanner report (Changed lines):"
+Line 24419 : -+++-+++++@@ -67 +91 @@ cat "$final_report"
+Line 24420 : -+++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+Line 24421 : -+++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+Line 24422 : -+++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+Line 24423 : -+++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+Line 24424 : -+++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+Line 24425 : -+++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+Line 24426 : -+++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+Line 24427 : -+++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+Line 24428 : -+++-+++++@@ -77 +101 @@ else
+Line 24429 : -+++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+Line 24430 : -+++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+Line 24431 : -+++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 24432 : -+++-+++++deleted file mode 100644
+Line 24433 : -+++-+++++index 9d692ac..0000000
+Line 24434 : -+++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 24435 : -+++-++++++++ /dev/null
+Line 24436 : -+++-+++++@@ -1,24 +0,0 @@
+Line 24437 : -+++-+++++-0
+Line 24438 : -+++-+++++-1
+Line 24439 : -+++-+++++-2
+Line 24440 : -+++-+++++-3
+Line 24441 : -+++-+++++-4
+Line 24442 : -+++-+++++-5
+Line 24443 : -+++-+++++-60
+Line 24444 : -+++-+++++-642
+Line 24445 : -+++-+++++-643
+Line 24446 : -+++-+++++-644
+Line 24447 : -+++-+++++-645
+Line 24448 : -+++-+++++-646
+Line 24449 : -+++-+++++-647
+Line 24450 : -+++-+++++-648
+Line 24451 : -+++-+++++-649
+Line 24452 : -+++-+++++-650
+Line 24453 : -+++-+++++-651
+Line 24454 : -+++-+++++-652
+Line 24455 : -+++-+++++-653
+Line 24456 : -+++-+++++-654
+Line 24457 : -+++-+++++-655
+Line 24458 : -+++-+++++-656
+Line 24459 : -+++-+++++-657
+Line 24460 : -+++-+++++-70
+Line 24461 : -+++-+++++diff --git a/changes.diff b/changes.diff
+Line 24462 : -+++-+++++deleted file mode 100644
+Line 24463 : -+++-+++++index 61d162d..0000000
+Line 24464 : -+++-+++++--- a/changes.diff
+Line 24465 : -+++-++++++++ /dev/null
+Line 24466 : -+++-+++++@@ -1,647 +0,0 @@
+Line 24467 : -+++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24468 : -+++-+++++-index 5b262e4..8c05f52 100644
+Line 24469 : -+++-+++++---- a/.husky/pre-commit
+Line 24470 : -+++-+++++-+++ b/.husky/pre-commit
+Line 24471 : -+++-+++++-@@ -113 +113 @@ cat "$final_report"
+Line 24472 : -+++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 24473 : -+++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+Line 24474 : -+++-+++++-diff --git a/changes.diff b/changes.diff
+Line 24475 : -+++-+++++-index 9a218e6..4fe1995 100644
+Line 24476 : -+++-+++++---- a/changes.diff
+Line 24477 : -+++-+++++-+++ b/changes.diff
+Line 24478 : -+++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24479 : -+++-+++++--index aa6762f..586962b 100644
+Line 24480 : -+++-+++++-+index 586962b..5b262e4 100644
+Line 24481 : -+++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+Line 24482 : -+++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
+Line 24483 : -+++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 24484 : -+++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 24485 : -+++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 24486 : -+++-+++++---  # Extract line numbers as a comma-separated string for filtering later
+Line 24487 : -+++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 24488 : -+++-+++++--+  # Extract line numbers as an array for filtering later
+Line 24489 : -+++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 24490 : -+++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
+Line 24491 : -+++-+++++---  if [ -z "$line_numbers" ]; then
+Line 24492 : -+++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 24493 : -+++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 24494 : -+++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
+Line 24495 : -+++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 24496 : -+++-+++++--+  lines_for_filter="${lines_for_filter:1}"
+Line 24497 : -+++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+Line 24498 : -+++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+Line 24499 : -+++-+++++-+-  awk -v file="$file" '
+Line 24500 : -+++-+++++-++  # Extract only the changed line numbers for the file
+Line 24501 : -+++-+++++-++  line_numbers=$(awk -v file="$file" '
+Line 24502 : -+++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+Line 24503 : -+++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+Line 24504 : -+++-+++++-++  ' changes.diff)
+Line 24505 : -+++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+Line 24506 : -+++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+Line 24507 : -+++-+++++-++  if [ -z "$line_numbers" ]; then
+Line 24508 : -+++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+Line 24509 : -+++-+++++-+-  # Extract line numbers as an array for filtering later
+Line 24510 : -+++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 24511 : -+++-+++++-++  # Convert the line numbers to a comma-separated string for matching
+Line 24512 : -+++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+Line 24513 : -+++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+Line 24514 : -+++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
+Line 24515 : -+++-+++++---  awk -v lines="$line_numbers" '
+Line 24516 : -+++-+++++--+  awk -v lines="$lines_for_filter" '
+Line 24517 : -+++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
+Line 24518 : -+++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 24519 : -+++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 24520 : -+++-+++++--@@ -111 +115 @@ cat "$final_report"
+Line 24521 : -+++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24522 : -+++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 24523 : -+++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
+Line 24524 : -+++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+Line 24525 : -+++-+++++-+-  # Ensure that line_numbers is not empty
+Line 24526 : -+++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 24527 : -+++-+++++-++  # Ensure that line_numbers_string is not empty
+Line 24528 : -+++-+++++-++  if [ -z "$line_numbers_string" ]; then
+Line 24529 : -+++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+Line 24530 : -+++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+Line 24531 : -+++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 24532 : -+++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
+Line 24533 : -+++-+++++-+-
+Line 24534 : -+++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+Line 24535 : -+++-+++++-+-  awk -v lines="$lines_for_filter" '
+Line 24536 : -+++-+++++-++  awk -v lines="$line_numbers_string" '
+Line 24537 : -+++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 24538 : -+++-+++++--index 0e43eee..a206584 100644
+Line 24539 : -+++-+++++-+index a206584..9d692ac 100644
+Line 24540 : -+++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+Line 24541 : -+++-+++++--@@ -1 +1,6 @@
+Line 24542 : -+++-+++++---70 :           System.debug('Hi Hello');
+Line 24543 : -+++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 24544 : -+++-+++++--+1 : index 1ec7a54..870d508 100644
+Line 24545 : -+++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 24546 : -+++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 24547 : -+++-+++++--+4 : -          System.debug('Hi');
+Line 24548 : -+++-+++++--+70 :           System.debug('Hi');
+Line 24549 : -+++-+++++-+@@ -1,6 +1,24 @@
+Line 24550 : -+++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 24551 : -+++-+++++-+-1 : index 1ec7a54..870d508 100644
+Line 24552 : -+++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 24553 : -+++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 24554 : -+++-+++++-+-4 : -          System.debug('Hi');
+Line 24555 : -+++-+++++-+-70 :           System.debug('Hi');
+Line 24556 : -+++-+++++-++0
+Line 24557 : -+++-+++++-++1
+Line 24558 : -+++-+++++-++2
+Line 24559 : -+++-+++++-++3
+Line 24560 : -+++-+++++-++4
+Line 24561 : -+++-+++++-++5
+Line 24562 : -+++-+++++-++60
+Line 24563 : -+++-+++++-++642
+Line 24564 : -+++-+++++-++643
+Line 24565 : -+++-+++++-++644
+Line 24566 : -+++-+++++-++645
+Line 24567 : -+++-+++++-++646
+Line 24568 : -+++-+++++-++647
+Line 24569 : -+++-+++++-++648
+Line 24570 : -+++-+++++-++649
+Line 24571 : -+++-+++++-++650
+Line 24572 : -+++-+++++-++651
+Line 24573 : -+++-+++++-++652
+Line 24574 : -+++-+++++-++653
+Line 24575 : -+++-+++++-++654
+Line 24576 : -+++-+++++-++655
+Line 24577 : -+++-+++++-++656
+Line 24578 : -+++-+++++-++657
+Line 24579 : -+++-+++++-++70
+Line 24580 : -+++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+Line 24581 : -+++-+++++--index 760971b..3dfa538 100644
+Line 24582 : -+++-+++++-+index 3dfa538..9a218e6 100644
+Line 24583 : -+++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+Line 24584 : -+++-+++++---index 255a037..525d43a 100644
+Line 24585 : -+++-+++++--+index 525d43a..aa6762f 100644
+Line 24586 : -+++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 24587 : -+++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
+Line 24588 : -+++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 24589 : -+++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
+Line 24590 : -+++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 24591 : -+++-+++++----  # Define the output path for the scanner report
+Line 24592 : -+++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 24593 : -+++-+++++---+  # Define the output path for the scanner report in CSV format
+Line 24594 : -+++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 24595 : -+++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 24596 : -+++-+++++----  # Run the SFDX scanner on the file and generate the report
+Line 24597 : -+++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 24598 : -+++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 24599 : -+++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 24600 : -+++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
+Line 24601 : -+++-+++++----  # Filter the scanner report based on the changed line numbers
+Line 24602 : -+++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
+Line 24603 : -+++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 24604 : -+++-+++++----  jq --arg lines "$line_numbers" '
+Line 24605 : -+++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 24606 : -+++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 24607 : -+++-+++++---+  awk -v lines="$line_numbers" '
+Line 24608 : -+++-+++++---+  BEGIN {
+Line 24609 : -+++-+++++---+    FS=OFS=",";
+Line 24610 : -+++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 24611 : -+++-+++++---+    for (i in arr) {
+Line 24612 : -+++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 24613 : -+++-+++++---+    }
+Line 24614 : -+++-+++++---+  }
+Line 24615 : -+++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 24616 : -+++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 24617 : -+++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
+Line 24618 : -+++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 24619 : -+++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 24620 : -+++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
+Line 24621 : -+++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 24622 : -+++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 24623 : -+++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
+Line 24624 : -+++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 24625 : -+++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 24626 : -+++-+++++---@@ -95,2 +102,4 @@ fi
+Line 24627 : -+++-+++++----# Combine all filtered reports into one final report
+Line 24628 : -+++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 24629 : -+++-+++++---+# Combine all filtered reports into one final report (optional)
+Line 24630 : -+++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 24631 : -+++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 24632 : -+++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 24633 : -+++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 24634 : -+++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
+Line 24635 : -+++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 24636 : -+++-+++++---+echo "Final filtered scanner report:"
+Line 24637 : -+++-+++++---+cat "$final_report"
+Line 24638 : -+++-+++++---+
+Line 24639 : -+++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 24640 : -+++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24641 : -+++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+Line 24642 : -+++-+++++--+-    FS=OFS=",";
+Line 24643 : -+++-+++++--++    FS=OFS=",";  # Define CSV format
+Line 24644 : -+++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+Line 24645 : -+++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 24646 : -+++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 24647 : -+++-+++++--+@@ -111 +111 @@ cat "$final_report"
+Line 24648 : -+++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24649 : -+++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24650 : -+++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 24651 : -+++-+++++--+new file mode 100644
+Line 24652 : -+++-+++++--+index 0000000..0e43eee
+Line 24653 : -+++-+++++--+--- /dev/null
+Line 24654 : -+++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 24655 : -+++-+++++--+@@ -0,0 +1 @@
+Line 24656 : -+++-+++++--++70 :           System.debug('Hi Hello');
+Line 24657 : -+++-+++++--+diff --git a/changes.diff b/changes.diff
+Line 24658 : -+++-+++++--+new file mode 100644
+Line 24659 : -+++-+++++--+index 0000000..760971b
+Line 24660 : -+++-+++++--+--- /dev/null
+Line 24661 : -+++-+++++--++++ b/changes.diff
+Line 24662 : -+++-+++++--+@@ -0,0 +1,65 @@
+Line 24663 : -+++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24664 : -+++-+++++--++index 255a037..525d43a 100644
+Line 24665 : -+++-+++++--++--- a/.husky/pre-commit
+Line 24666 : -+++-+++++--+++++ b/.husky/pre-commit
+Line 24667 : -+++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+Line 24668 : -+++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 24669 : -+++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+Line 24670 : -+++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 24671 : -+++-+++++--++-  # Define the output path for the scanner report
+Line 24672 : -+++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 24673 : -+++-+++++--+++  # Define the output path for the scanner report in CSV format
+Line 24674 : -+++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 24675 : -+++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 24676 : -+++-+++++--++-  # Run the SFDX scanner on the file and generate the report
+Line 24677 : -+++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 24678 : -+++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 24679 : -+++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 24680 : -+++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+Line 24681 : -+++-+++++--++-  # Filter the scanner report based on the changed line numbers
+Line 24682 : -+++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+Line 24683 : -+++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 24684 : -+++-+++++--++-  jq --arg lines "$line_numbers" '
+Line 24685 : -+++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 24686 : -+++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 24687 : -+++-+++++--+++  awk -v lines="$line_numbers" '
+Line 24688 : -+++-+++++--+++  BEGIN {
+Line 24689 : -+++-+++++--+++    FS=OFS=",";
+Line 24690 : -+++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 24691 : -+++-+++++--+++    for (i in arr) {
+Line 24692 : -+++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 24693 : -+++-+++++--+++    }
+Line 24694 : -+++-+++++--+++  }
+Line 24695 : -+++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 24696 : -+++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 24697 : -+++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+Line 24698 : -+++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 24699 : -+++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 24700 : -+++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+Line 24701 : -+++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 24702 : -+++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 24703 : -+++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+Line 24704 : -+++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 24705 : -+++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 24706 : -+++-+++++--++@@ -95,2 +102,4 @@ fi
+Line 24707 : -+++-+++++--++-# Combine all filtered reports into one final report
+Line 24708 : -+++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 24709 : -+++-+++++--+++# Combine all filtered reports into one final report (optional)
+Line 24710 : -+++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 24711 : -+++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 24712 : -+++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 24713 : -+++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 24714 : -+++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 24715 : -+++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 24716 : -+++-+++++--+++echo "Final filtered scanner report:"
+Line 24717 : -+++-+++++--+++cat "$final_report"
+Line 24718 : -+++-+++++--+++
+Line 24719 : -+++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 24720 : -+++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24721 : -+++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 24722 : -+++-+++++--++index 1ec7a54..870d508 100644
+Line 24723 : -+++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 24724 : -+++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 24725 : -+++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 24726 : -+++-+++++--++-          System.debug('Hi');
+Line 24727 : -+++-+++++--+++          System.debug('Hi Hello');
+Line 24728 : -+++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 24729 : -+++-+++++---index 1ec7a54..870d508 100644
+Line 24730 : -+++-+++++--+index 870d508..1ec7a54 100644
+Line 24731 : -+++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 24732 : -+++-+++++----          System.debug('Hi');
+Line 24733 : -+++-+++++---+          System.debug('Hi Hello');
+Line 24734 : -+++-+++++--+-          System.debug('Hi Hello');
+Line 24735 : -+++-+++++--++          System.debug('Hi');
+Line 24736 : -+++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 24737 : -+++-+++++--+new file mode 100644
+Line 24738 : -+++-+++++--+index 0000000..5a3a1ac
+Line 24739 : -+++-+++++--+--- /dev/null
+Line 24740 : -+++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 24741 : -+++-+++++--+@@ -0,0 +1 @@
+Line 24742 : -+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 24743 : -+++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 24744 : -+++-+++++--+new file mode 100644
+Line 24745 : -+++-+++++--+index 0000000..5a3a1ac
+Line 24746 : -+++-+++++--+--- /dev/null
+Line 24747 : -+++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 24748 : -+++-+++++--+@@ -0,0 +1 @@
+Line 24749 : -+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 24750 : -+++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 24751 : -+++-+++++--+new file mode 100644
+Line 24752 : -+++-+++++--+index 0000000..e1ef0f0
+Line 24753 : -+++-+++++--+--- /dev/null
+Line 24754 : -+++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 24755 : -+++-+++++--+@@ -0,0 +1,5 @@
+Line 24756 : -+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 24757 : -+++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 24758 : -+++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 24759 : -+++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 24760 : -+++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 24761 : -+++-+++++-+-index 525d43a..aa6762f 100644
+Line 24762 : -+++-+++++-++index aa6762f..586962b 100644
+Line 24763 : -+++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+Line 24764 : -+++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+Line 24765 : -+++-+++++-+--    FS=OFS=",";
+Line 24766 : -+++-+++++-+-+    FS=OFS=",";  # Define CSV format
+Line 24767 : -+++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+Line 24768 : -+++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 24769 : -+++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 24770 : -+++-+++++-+-@@ -111 +111 @@ cat "$final_report"
+Line 24771 : -+++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24772 : -+++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24773 : -+++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+Line 24774 : -+++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 24775 : -+++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 24776 : -+++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 24777 : -+++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+Line 24778 : -+++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 24779 : -+++-+++++-+++  # Extract line numbers as an array for filtering later
+Line 24780 : -+++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 24781 : -+++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+Line 24782 : -+++-+++++-++-  if [ -z "$line_numbers" ]; then
+Line 24783 : -+++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 24784 : -+++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 24785 : -+++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+Line 24786 : -+++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 24787 : -+++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
+Line 24788 : -+++-+++++-+++
+Line 24789 : -+++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+Line 24790 : -+++-+++++-++-  awk -v lines="$line_numbers" '
+Line 24791 : -+++-+++++-+++  awk -v lines="$lines_for_filter" '
+Line 24792 : -+++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+Line 24793 : -+++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 24794 : -+++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 24795 : -+++-+++++-++@@ -111 +115 @@ cat "$final_report"
+Line 24796 : -+++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24797 : -+++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 24798 : -+++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 24799 : -+++-+++++-+-new file mode 100644
+Line 24800 : -+++-+++++-+-index 0000000..0e43eee
+Line 24801 : -+++-+++++-+---- /dev/null
+Line 24802 : -+++-+++++-++index 0e43eee..a206584 100644
+Line 24803 : -+++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 24804 : -+++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+Line 24805 : -+++-+++++-+-@@ -0,0 +1 @@
+Line 24806 : -+++-+++++-+-+70 :           System.debug('Hi Hello');
+Line 24807 : -+++-+++++-++@@ -1 +1,6 @@
+Line 24808 : -+++-+++++-++-70 :           System.debug('Hi Hello');
+Line 24809 : -+++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 24810 : -+++-+++++-+++1 : index 1ec7a54..870d508 100644
+Line 24811 : -+++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 24812 : -+++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 24813 : -+++-+++++-+++4 : -          System.debug('Hi');
+Line 24814 : -+++-+++++-+++70 :           System.debug('Hi');
+Line 24815 : -+++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+Line 24816 : -+++-+++++-+-new file mode 100644
+Line 24817 : -+++-+++++-+-index 0000000..760971b
+Line 24818 : -+++-+++++-+---- /dev/null
+Line 24819 : -+++-+++++-++index 760971b..3dfa538 100644
+Line 24820 : -+++-+++++-++--- a/changes.diff
+Line 24821 : -+++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+Line 24822 : -+++-+++++-+-@@ -0,0 +1,65 @@
+Line 24823 : -+++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24824 : -+++-+++++-+-+index 255a037..525d43a 100644
+Line 24825 : -+++-+++++-+-+--- a/.husky/pre-commit
+Line 24826 : -+++-+++++-+-++++ b/.husky/pre-commit
+Line 24827 : -+++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+Line 24828 : -+++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 24829 : -+++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+Line 24830 : -+++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 24831 : -+++-+++++-+-+-  # Define the output path for the scanner report
+Line 24832 : -+++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 24833 : -+++-+++++-+-++  # Define the output path for the scanner report in CSV format
+Line 24834 : -+++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 24835 : -+++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 24836 : -+++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+Line 24837 : -+++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 24838 : -+++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 24839 : -+++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 24840 : -+++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+Line 24841 : -+++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
+Line 24842 : -+++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+Line 24843 : -+++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 24844 : -+++-+++++-+-+-  jq --arg lines "$line_numbers" '
+Line 24845 : -+++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 24846 : -+++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 24847 : -+++-+++++-+-++  awk -v lines="$line_numbers" '
+Line 24848 : -+++-+++++-+-++  BEGIN {
+Line 24849 : -+++-+++++-+-++    FS=OFS=",";
+Line 24850 : -+++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 24851 : -+++-+++++-+-++    for (i in arr) {
+Line 24852 : -+++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 24853 : -+++-+++++-+-++    }
+Line 24854 : -+++-+++++-+-++  }
+Line 24855 : -+++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 24856 : -+++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 24857 : -+++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+Line 24858 : -+++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 24859 : -+++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 24860 : -+++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+Line 24861 : -+++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 24862 : -+++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 24863 : -+++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+Line 24864 : -+++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 24865 : -+++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 24866 : -+++-+++++-+-+@@ -95,2 +102,4 @@ fi
+Line 24867 : -+++-+++++-+-+-# Combine all filtered reports into one final report
+Line 24868 : -+++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 24869 : -+++-+++++-+-++# Combine all filtered reports into one final report (optional)
+Line 24870 : -+++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 24871 : -+++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 24872 : -+++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 24873 : -+++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 24874 : -+++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+Line 24875 : -+++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 24876 : -+++-+++++-+-++echo "Final filtered scanner report:"
+Line 24877 : -+++-+++++-+-++cat "$final_report"
+Line 24878 : -+++-+++++-+-++
+Line 24879 : -+++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 24880 : -+++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24881 : -+++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 24882 : -+++-+++++-+-+index 1ec7a54..870d508 100644
+Line 24883 : -+++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 24884 : -+++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 24885 : -+++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 24886 : -+++-+++++-+-+-          System.debug('Hi');
+Line 24887 : -+++-+++++-+-++          System.debug('Hi Hello');
+Line 24888 : -+++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24889 : -+++-+++++-++-index 255a037..525d43a 100644
+Line 24890 : -+++-+++++-+++index 525d43a..aa6762f 100644
+Line 24891 : -+++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 24892 : -+++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+Line 24893 : -+++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 24894 : -+++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+Line 24895 : -+++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 24896 : -+++-+++++-++--  # Define the output path for the scanner report
+Line 24897 : -+++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 24898 : -+++-+++++-++-+  # Define the output path for the scanner report in CSV format
+Line 24899 : -+++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 24900 : -+++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 24901 : -+++-+++++-++--  # Run the SFDX scanner on the file and generate the report
+Line 24902 : -+++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 24903 : -+++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 24904 : -+++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 24905 : -+++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+Line 24906 : -+++-+++++-++--  # Filter the scanner report based on the changed line numbers
+Line 24907 : -+++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+Line 24908 : -+++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 24909 : -+++-+++++-++--  jq --arg lines "$line_numbers" '
+Line 24910 : -+++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 24911 : -+++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 24912 : -+++-+++++-++-+  awk -v lines="$line_numbers" '
+Line 24913 : -+++-+++++-++-+  BEGIN {
+Line 24914 : -+++-+++++-++-+    FS=OFS=",";
+Line 24915 : -+++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 24916 : -+++-+++++-++-+    for (i in arr) {
+Line 24917 : -+++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 24918 : -+++-+++++-++-+    }
+Line 24919 : -+++-+++++-++-+  }
+Line 24920 : -+++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 24921 : -+++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 24922 : -+++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+Line 24923 : -+++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 24924 : -+++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 24925 : -+++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+Line 24926 : -+++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 24927 : -+++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 24928 : -+++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+Line 24929 : -+++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 24930 : -+++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 24931 : -+++-+++++-++-@@ -95,2 +102,4 @@ fi
+Line 24932 : -+++-+++++-++--# Combine all filtered reports into one final report
+Line 24933 : -+++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 24934 : -+++-+++++-++-+# Combine all filtered reports into one final report (optional)
+Line 24935 : -+++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 24936 : -+++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 24937 : -+++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 24938 : -+++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 24939 : -+++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+Line 24940 : -+++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 24941 : -+++-+++++-++-+echo "Final filtered scanner report:"
+Line 24942 : -+++-+++++-++-+cat "$final_report"
+Line 24943 : -+++-+++++-++-+
+Line 24944 : -+++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 24945 : -+++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24946 : -+++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+Line 24947 : -+++-+++++-+++-    FS=OFS=",";
+Line 24948 : -+++-+++++-++++    FS=OFS=",";  # Define CSV format
+Line 24949 : -+++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+Line 24950 : -+++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 24951 : -+++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 24952 : -+++-+++++-+++@@ -111 +111 @@ cat "$final_report"
+Line 24953 : -+++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24954 : -+++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 24955 : -+++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 24956 : -+++-+++++-+++new file mode 100644
+Line 24957 : -+++-+++++-+++index 0000000..0e43eee
+Line 24958 : -+++-+++++-+++--- /dev/null
+Line 24959 : -+++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 24960 : -+++-+++++-+++@@ -0,0 +1 @@
+Line 24961 : -+++-+++++-++++70 :           System.debug('Hi Hello');
+Line 24962 : -+++-+++++-+++diff --git a/changes.diff b/changes.diff
+Line 24963 : -+++-+++++-+++new file mode 100644
+Line 24964 : -+++-+++++-+++index 0000000..760971b
+Line 24965 : -+++-+++++-+++--- /dev/null
+Line 24966 : -+++-+++++-++++++ b/changes.diff
+Line 24967 : -+++-+++++-+++@@ -0,0 +1,65 @@
+Line 24968 : -+++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 24969 : -+++-+++++-++++index 255a037..525d43a 100644
+Line 24970 : -+++-+++++-++++--- a/.husky/pre-commit
+Line 24971 : -+++-+++++-+++++++ b/.husky/pre-commit
+Line 24972 : -+++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+Line 24973 : -+++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 24974 : -+++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+Line 24975 : -+++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 24976 : -+++-+++++-++++-  # Define the output path for the scanner report
+Line 24977 : -+++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 24978 : -+++-+++++-+++++  # Define the output path for the scanner report in CSV format
+Line 24979 : -+++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 24980 : -+++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 24981 : -+++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
+Line 24982 : -+++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 24983 : -+++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 24984 : -+++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 24985 : -+++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+Line 24986 : -+++-+++++-++++-  # Filter the scanner report based on the changed line numbers
+Line 24987 : -+++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+Line 24988 : -+++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 24989 : -+++-+++++-++++-  jq --arg lines "$line_numbers" '
+Line 24990 : -+++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 24991 : -+++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 24992 : -+++-+++++-+++++  awk -v lines="$line_numbers" '
+Line 24993 : -+++-+++++-+++++  BEGIN {
+Line 24994 : -+++-+++++-+++++    FS=OFS=",";
+Line 24995 : -+++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 24996 : -+++-+++++-+++++    for (i in arr) {
+Line 24997 : -+++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 24998 : -+++-+++++-+++++    }
+Line 24999 : -+++-+++++-+++++  }
+Line 25000 : -+++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 25001 : -+++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 25002 : -+++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+Line 25003 : -+++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 25004 : -+++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 25005 : -+++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+Line 25006 : -+++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 25007 : -+++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 25008 : -+++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+Line 25009 : -+++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 25010 : -+++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 25011 : -+++-+++++-++++@@ -95,2 +102,4 @@ fi
+Line 25012 : -+++-+++++-++++-# Combine all filtered reports into one final report
+Line 25013 : -+++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 25014 : -+++-+++++-+++++# Combine all filtered reports into one final report (optional)
+Line 25015 : -+++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 25016 : -+++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 25017 : -+++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 25018 : -+++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 25019 : -+++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 25020 : -+++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 25021 : -+++-+++++-+++++echo "Final filtered scanner report:"
+Line 25022 : -+++-+++++-+++++cat "$final_report"
+Line 25023 : -+++-+++++-+++++
+Line 25024 : -+++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 25025 : -+++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 25026 : -+++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 25027 : -+++-+++++-++++index 1ec7a54..870d508 100644
+Line 25028 : -+++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 25029 : -+++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 25030 : -+++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 25031 : -+++-+++++-++++-          System.debug('Hi');
+Line 25032 : -+++-+++++-+++++          System.debug('Hi Hello');
+Line 25033 : -+++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 25034 : -+++-+++++-++-index 1ec7a54..870d508 100644
+Line 25035 : -+++-+++++-+++index 870d508..1ec7a54 100644
+Line 25036 : -+++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 25037 : -+++-+++++-++--          System.debug('Hi');
+Line 25038 : -+++-+++++-++-+          System.debug('Hi Hello');
+Line 25039 : -+++-+++++-+++-          System.debug('Hi Hello');
+Line 25040 : -+++-+++++-++++          System.debug('Hi');
+Line 25041 : -+++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 25042 : -+++-+++++-+++new file mode 100644
+Line 25043 : -+++-+++++-+++index 0000000..5a3a1ac
+Line 25044 : -+++-+++++-+++--- /dev/null
+Line 25045 : -+++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 25046 : -+++-+++++-+++@@ -0,0 +1 @@
+Line 25047 : -+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 25048 : -+++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 25049 : -+++-+++++-+++new file mode 100644
+Line 25050 : -+++-+++++-+++index 0000000..5a3a1ac
+Line 25051 : -+++-+++++-+++--- /dev/null
+Line 25052 : -+++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 25053 : -+++-+++++-+++@@ -0,0 +1 @@
+Line 25054 : -+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 25055 : -+++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 25056 : -+++-+++++-+++new file mode 100644
+Line 25057 : -+++-+++++-+++index 0000000..e1ef0f0
+Line 25058 : -+++-+++++-+++--- /dev/null
+Line 25059 : -+++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 25060 : -+++-+++++-+++@@ -0,0 +1,5 @@
+Line 25061 : -+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 25062 : -+++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 25063 : -+++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 25064 : -+++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 25065 : -+++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 25066 : -+++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 25067 : -+++-+++++-+-index 870d508..1ec7a54 100644
+Line 25068 : -+++-+++++-++index 1ec7a54..870d508 100644
+Line 25069 : -+++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+Line 25070 : -+++-+++++-+--          System.debug('Hi Hello');
+Line 25071 : -+++-+++++-+-+          System.debug('Hi');
+Line 25072 : -+++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 25073 : -+++-+++++-+-new file mode 100644
+Line 25074 : -+++-+++++-+-index 0000000..5a3a1ac
+Line 25075 : -+++-+++++-+---- /dev/null
+Line 25076 : -+++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 25077 : -+++-+++++-+-@@ -0,0 +1 @@
+Line 25078 : -+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 25079 : -+++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 25080 : -+++-+++++-+-new file mode 100644
+Line 25081 : -+++-+++++-+-index 0000000..5a3a1ac
+Line 25082 : -+++-+++++-+---- /dev/null
+Line 25083 : -+++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 25084 : -+++-+++++-+-@@ -0,0 +1 @@
+Line 25085 : -+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 25086 : -+++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 25087 : -+++-+++++-+-new file mode 100644
+Line 25088 : -+++-+++++-+-index 0000000..e1ef0f0
+Line 25089 : -+++-+++++-+---- /dev/null
+Line 25090 : -+++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 25091 : -+++-+++++-+-@@ -0,0 +1,5 @@
+Line 25092 : -+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 25093 : -+++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 25094 : -+++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 25095 : -+++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 25096 : -+++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 25097 : -+++-+++++-++-          System.debug('Hi');
+Line 25098 : -+++-+++++-+++          System.debug('Hi Hello');
+Line 25099 : -+++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 25100 : -+++-+++++--index 1ec7a54..870d508 100644
+Line 25101 : -+++-+++++-+index 870d508..5eafcac 100644
+Line 25102 : -+++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+Line 25103 : -+++-+++++---          System.debug('Hi');
+Line 25104 : -+++-+++++--+          System.debug('Hi Hello');
+Line 25105 : -+++-+++++-+-          System.debug('Hi Hello');
+Line 25106 : -+++-+++++-++          System.debug('Happy');
+Line 25107 : -+++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 25108 : -+++-+++++-index 5eafcac..1ec7a54 100644
+Line 25109 : -+++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
+Line 25110 : -+++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+Line 25111 : -+++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 25112 : -+++-+++++--          System.debug('Happy');
+Line 25113 : -+++-+++++-+          System.debug('Hi');
+Line 25114 : -+++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 25115 : -+++-+++++index 73696e2..9e21e88 100644
+Line 25116 : -+++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 25117 : -+++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 25118 : -+++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 25119 : -+++-+++++-          System.debug('Hello and Hi');
+Line 25120 : -+++-++++++          System.debug('Hi AND');
+Line 25121 : -+++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 25122 : -+++-+++++deleted file mode 100644
+Line 25123 : -+++-+++++index 5a3a1ac..0000000
+Line 25124 : -+++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 25125 : -+++-++++++++ /dev/null
+Line 25126 : -+++-+++++@@ -1 +0,0 @@
+Line 25127 : -+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 25128 : -+++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 25129 : -+++-+++++new file mode 100644
+Line 25130 : -+++-+++++index 0000000..ebc3aa5
+Line 25131 : -+++-+++++--- /dev/null
+Line 25132 : -+++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 25133 : -+++-+++++@@ -0,0 +1,30 @@
+Line 25134 : -+++-++++++[
+Line 25135 : -+++-++++++  {
+Line 25136 : -+++-++++++    "engine": "pmd",
+Line 25137 : -+++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 25138 : -+++-++++++    "violations": [
+Line 25139 : -+++-++++++      {
+Line 25140 : -+++-++++++        "line": 70,
+Line 25141 : -+++-++++++        "column": 11,
+Line 25142 : -+++-++++++        "endLine": 70,
+Line 25143 : -+++-++++++        "endColumn": 29,
+Line 25144 : -+++-++++++        "severity": 3,
+Line 25145 : -+++-++++++        "ruleName": "AvoidDebugStatements",
+Line 25146 : -+++-++++++        "category": "Performance",
+Line 25147 : -+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 25148 : -+++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 25149 : -+++-++++++      },
+Line 25150 : -+++-++++++      {
+Line 25151 : -+++-++++++        "line": 70,
+Line 25152 : -+++-++++++        "column": 11,
+Line 25153 : -+++-++++++        "endLine": 70,
+Line 25154 : -+++-++++++        "endColumn": 29,
+Line 25155 : -+++-++++++        "severity": 3,
+Line 25156 : -+++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 25157 : -+++-++++++        "category": "Best Practices",
+Line 25158 : -+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 25159 : -+++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 25160 : -+++-++++++      }
+Line 25161 : -+++-++++++    ]
+Line 25162 : -+++-++++++  }
+Line 25163 : -+++-++++++]
+Line 25164 : -+++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 25165 : -+++-+++++deleted file mode 100644
+Line 25166 : -+++-+++++index 5a3a1ac..0000000
+Line 25167 : -+++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+Line 25168 : -+++-++++++++ /dev/null
+Line 25169 : -+++-+++++@@ -1 +0,0 @@
+Line 25170 : -+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 25171 : -+++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 25172 : -+++-+++++new file mode 100644
+Line 25173 : -+++-+++++index 0000000..ebc3aa5
+Line 25174 : -+++-+++++--- /dev/null
+Line 25175 : -+++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 25176 : -+++-+++++@@ -0,0 +1,30 @@
+Line 25177 : -+++-++++++[
+Line 25178 : -+++-++++++  {
+Line 25179 : -+++-++++++    "engine": "pmd",
+Line 25180 : -+++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 25181 : -+++-++++++    "violations": [
+Line 25182 : -+++-++++++      {
+Line 25183 : -+++-++++++        "line": 70,
+Line 25184 : -+++-++++++        "column": 11,
+Line 25185 : -+++-++++++        "endLine": 70,
+Line 25186 : -+++-++++++        "endColumn": 29,
+Line 25187 : -+++-++++++        "severity": 3,
+Line 25188 : -+++-++++++        "ruleName": "AvoidDebugStatements",
+Line 25189 : -+++-++++++        "category": "Performance",
+Line 25190 : -+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 25191 : -+++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 25192 : -+++-++++++      },
+Line 25193 : -+++-++++++      {
+Line 25194 : -+++-++++++        "line": 70,
+Line 25195 : -+++-++++++        "column": 11,
+Line 25196 : -+++-++++++        "endLine": 70,
+Line 25197 : -+++-++++++        "endColumn": 29,
+Line 25198 : -+++-++++++        "severity": 3,
+Line 25199 : -+++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 25200 : -+++-++++++        "category": "Best Practices",
+Line 25201 : -+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 25202 : -+++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 25203 : -+++-++++++      }
+Line 25204 : -+++-++++++    ]
+Line 25205 : -+++-++++++  }
+Line 25206 : -+++-++++++]
+Line 25207 : -+++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 25208 : -+++-+++++deleted file mode 100644
+Line 25209 : -+++-+++++index e1ef0f0..0000000
+Line 25210 : -+++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 25211 : -+++-++++++++ /dev/null
+Line 25212 : -+++-+++++@@ -1,5 +0,0 @@
+Line 25213 : -+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 25214 : -+++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 25215 : -+++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 25216 : -+++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 25217 : -+++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 25218 : -+++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 25219 : -+++-+++++new file mode 100644
+Line 25220 : -+++-+++++index 0000000..c973918
+Line 25221 : -+++-+++++--- /dev/null
+Line 25222 : -+++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 25223 : -+++-+++++@@ -0,0 +1 @@
+Line 25224 : -+++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 25225 : -+++-+++++\ No newline at end of file
+Line 25226 : -+++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 25227 : -+++-++++index 9e21e88..800635e 100644
+Line 25228 : -+++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 25229 : -+++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 25230 : -+++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 25231 : -+++-++++-          System.debug('Hi AND');
+Line 25232 : -+++-+++++          System.debug('Hi AND Hello');
+Line 25233 : -+++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 25234 : -+++-++++index ebc3aa5..fe51488 100644
+Line 25235 : -+++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 25236 : -+++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 25237 : -+++-++++@@ -1,30 +1 @@
+Line 25238 : -+++-++++-[
+Line 25239 : -+++-++++-  {
+Line 25240 : -+++-++++-    "engine": "pmd",
+Line 25241 : -+++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 25242 : -+++-++++-    "violations": [
+Line 25243 : -+++-++++-      {
+Line 25244 : -+++-++++-        "line": 70,
+Line 25245 : -+++-++++-        "column": 11,
+Line 25246 : -+++-++++-        "endLine": 70,
+Line 25247 : -+++-++++-        "endColumn": 29,
+Line 25248 : -+++-++++-        "severity": 3,
+Line 25249 : -+++-++++-        "ruleName": "AvoidDebugStatements",
+Line 25250 : -+++-++++-        "category": "Performance",
+Line 25251 : -+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 25252 : -+++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 25253 : -+++-++++-      },
+Line 25254 : -+++-++++-      {
+Line 25255 : -+++-++++-        "line": 70,
+Line 25256 : -+++-++++-        "column": 11,
+Line 25257 : -+++-++++-        "endLine": 70,
+Line 25258 : -+++-++++-        "endColumn": 29,
+Line 25259 : -+++-++++-        "severity": 3,
+Line 25260 : -+++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 25261 : -+++-++++-        "category": "Best Practices",
+Line 25262 : -+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 25263 : -+++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 25264 : -+++-++++-      }
+Line 25265 : -+++-++++-    ]
+Line 25266 : -+++-++++-  }
+Line 25267 : -+++-++++-]
+Line 25268 : -+++-+++++[]
+Line 25269 : -+++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 25270 : -+++-++++index ebc3aa5..fe51488 100644
+Line 25271 : -+++-++++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 25272 : -+++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 25273 : -+++-++++@@ -1,30 +1 @@
+Line 25274 : -+++-++++-[
+Line 25275 : -+++-++++-  {
+Line 25276 : -+++-++++-    "engine": "pmd",
+Line 25277 : -+++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 25278 : -+++-++++-    "violations": [
+Line 25279 : -+++-++++-      {
+Line 25280 : -+++-++++-        "line": 70,
+Line 25281 : -+++-++++-        "column": 11,
+Line 25282 : -+++-++++-        "endLine": 70,
+Line 25283 : -+++-++++-        "endColumn": 29,
+Line 25284 : -+++-++++-        "severity": 3,
+Line 25285 : -+++-++++-        "ruleName": "AvoidDebugStatements",
+Line 25286 : -+++-++++-        "category": "Performance",
+Line 25287 : -+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 25288 : -+++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 25289 : -+++-++++-      },
+Line 25290 : -+++-++++-      {
+Line 25291 : -+++-++++-        "line": 70,
+Line 25292 : -+++-++++-        "column": 11,
+Line 25293 : -+++-++++-        "endLine": 70,
+Line 25294 : -+++-++++-        "endColumn": 29,
+Line 25295 : -+++-++++-        "severity": 3,
+Line 25296 : -+++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 25297 : -+++-++++-        "category": "Best Practices",
+Line 25298 : -+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 25299 : -+++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 25300 : -+++-++++-      }
+Line 25301 : -+++-++++-    ]
+Line 25302 : -+++-++++-  }
+Line 25303 : -+++-++++-]
+Line 25304 : -+++-+++++[]
+Line 25305 : -+++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 25306 : -+++-++++index c973918..a14d61d 100644
+Line 25307 : -+++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 25308 : -+++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 25309 : -+++-++++@@ -1 +1 @@
+Line 25310 : -+++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 25311 : -+++-++++\ No newline at end of file
+Line 25312 : -+++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 25313 : -+++-++++\ No newline at end of file
+Line 25314 : -+++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 25315 : -+++-+++index 9e21e88..1ec7a54 100644
+Line 25316 : -+++-+++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 25317 : -+++-++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 25318 : -+++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 25319 : -+++-+++-          System.debug('Hi AND');
+Line 25320 : -+++-++++          System.debug('Hi');
+Line 25321 : -+++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 25322 : -+++-+++index ebc3aa5..bb2caee 100644
+Line 25323 : -+++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 25324 : -+++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 25325 : -+++-+++@@ -5,0 +6,22 @@
+Line 25326 : -+++-++++      {
+Line 25327 : -+++-++++        "line": 20,
+Line 25328 : -+++-++++        "column": 11,
+Line 25329 : -+++-++++        "endLine": 20,
+Line 25330 : -+++-++++        "endColumn": 35,
+Line 25331 : -+++-++++        "severity": 3,
+Line 25332 : -+++-++++        "ruleName": "AvoidDebugStatements",
+Line 25333 : -+++-++++        "category": "Performance",
+Line 25334 : -+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 25335 : -+++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 25336 : -+++-++++      },
+Line 25337 : -+++-++++      {
+Line 25338 : -+++-++++        "line": 20,
+Line 25339 : -+++-++++        "column": 11,
+Line 25340 : -+++-++++        "endLine": 20,
+Line 25341 : -+++-++++        "endColumn": 35,
+Line 25342 : -+++-++++        "severity": 3,
+Line 25343 : -+++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 25344 : -+++-++++        "category": "Best Practices",
+Line 25345 : -+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 25346 : -+++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 25347 : -+++-++++      },
+Line 25348 : -+++-+++@@ -10 +32 @@
+Line 25349 : -+++-+++-        "endColumn": 29,
+Line 25350 : -+++-++++        "endColumn": 39,
+Line 25351 : -+++-+++@@ -21 +43 @@
+Line 25352 : -+++-+++-        "endColumn": 29,
+Line 25353 : -+++-++++        "endColumn": 39,
+Line 25354 : -+++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 25355 : -+++-+++index ebc3aa5..bb2caee 100644
+Line 25356 : -+++-+++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 25357 : -+++-++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 25358 : -+++-+++@@ -5,0 +6,22 @@
+Line 25359 : -+++-++++      {
+Line 25360 : -+++-++++        "line": 20,
+Line 25361 : -+++-++++        "column": 11,
+Line 25362 : -+++-++++        "endLine": 20,
+Line 25363 : -+++-++++        "endColumn": 35,
+Line 25364 : -+++-++++        "severity": 3,
+Line 25365 : -+++-++++        "ruleName": "AvoidDebugStatements",
+Line 25366 : -+++-++++        "category": "Performance",
+Line 25367 : -+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 25368 : -+++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 25369 : -+++-++++      },
+Line 25370 : -+++-++++      {
+Line 25371 : -+++-++++        "line": 20,
+Line 25372 : -+++-++++        "column": 11,
+Line 25373 : -+++-++++        "endLine": 20,
+Line 25374 : -+++-++++        "endColumn": 35,
+Line 25375 : -+++-++++        "severity": 3,
+Line 25376 : -+++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 25377 : -+++-++++        "category": "Best Practices",
+Line 25378 : -+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 25379 : -+++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 25380 : -+++-++++      },
+Line 25381 : -+++-+++@@ -10 +32 @@
+Line 25382 : -+++-+++-        "endColumn": 29,
+Line 25383 : -+++-++++        "endColumn": 39,
+Line 25384 : -+++-+++@@ -21 +43 @@
+Line 25385 : -+++-+++-        "endColumn": 29,
+Line 25386 : -+++-++++        "endColumn": 39,
+Line 25387 : -+++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 25388 : -+++-+++index c973918..866c0b7 100644
+Line 25389 : -+++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 25390 : -+++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 25391 : -+++-+++@@ -1 +1 @@
+Line 25392 : -+++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 25393 : -+++-+++\ No newline at end of file
+Line 25394 : -+++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 25395 : -+++-+++\ No newline at end of file
+Line 25396 : -+++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 25397 : -+++-++index 9e21e88..9a5148a 100644
+Line 25398 : -+++-++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 25399 : -+++-+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 25400 : -+++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 25401 : -+++-++-          System.debug('Hi AND');
+Line 25402 : -+++-+++          System.debug('Hello');
+Line 25403 : -+++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 25404 : -+++-++index ebc3aa5..b33da59 100644
+Line 25405 : -+++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 25406 : -+++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 25407 : -+++-++@@ -5,0 +6,22 @@
+Line 25408 : -+++-+++      {
+Line 25409 : -+++-+++        "line": 20,
+Line 25410 : -+++-+++        "column": 11,
+Line 25411 : -+++-+++        "endLine": 20,
+Line 25412 : -+++-+++        "endColumn": 35,
+Line 25413 : -+++-+++        "severity": 3,
+Line 25414 : -+++-+++        "ruleName": "AvoidDebugStatements",
+Line 25415 : -+++-+++        "category": "Performance",
+Line 25416 : -+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 25417 : -+++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 25418 : -+++-+++      },
+Line 25419 : -+++-+++      {
+Line 25420 : -+++-+++        "line": 20,
+Line 25421 : -+++-+++        "column": 11,
+Line 25422 : -+++-+++        "endLine": 20,
+Line 25423 : -+++-+++        "endColumn": 35,
+Line 25424 : -+++-+++        "severity": 3,
+Line 25425 : -+++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 25426 : -+++-+++        "category": "Best Practices",
+Line 25427 : -+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 25428 : -+++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 25429 : -+++-+++      },
+Line 25430 : -+++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 25431 : -+++-++index ebc3aa5..b33da59 100644
+Line 25432 : -+++-++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 25433 : -+++-+++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 25434 : -+++-++@@ -5,0 +6,22 @@
+Line 25435 : -+++-+++      {
+Line 25436 : -+++-+++        "line": 20,
+Line 25437 : -+++-+++        "column": 11,
+Line 25438 : -+++-+++        "endLine": 20,
+Line 25439 : -+++-+++        "endColumn": 35,
+Line 25440 : -+++-+++        "severity": 3,
+Line 25441 : -+++-+++        "ruleName": "AvoidDebugStatements",
+Line 25442 : -+++-+++        "category": "Performance",
+Line 25443 : -+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 25444 : -+++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 25445 : -+++-+++      },
+Line 25446 : -+++-+++      {
+Line 25447 : -+++-+++        "line": 20,
+Line 25448 : -+++-+++        "column": 11,
+Line 25449 : -+++-+++        "endLine": 20,
+Line 25450 : -+++-+++        "endColumn": 35,
+Line 25451 : -+++-+++        "severity": 3,
+Line 25452 : -+++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 25453 : -+++-+++        "category": "Best Practices",
+Line 25454 : -+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 25455 : -+++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 25456 : -+++-+++      },
+Line 25457 : -+++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 25458 : -+++-+index 9e21e88..1ec7a54 100644
+Line 25459 : -+++-+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 25460 : -+++-++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 25461 : -+++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 25462 : -+++-+-          System.debug('Hi AND');
+Line 25463 : -+++-++          System.debug('Hi');
+Line 25464 : -++++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 25465 : -++++-index daf61a1..3603bae 100644
+Line 25466 : -+++++index 1328704..5ea091f 100644
+Line 25467 : -++++@@ -5,12 +5,5 @@ index daf61a1..3603bae 100644
+Line 25468 : -++++-@@ -16 +16 @@ mkdir -p scanner-reports
+Line 25469 : -++++--git diff --unified=0 --cached > changes.diff
+Line 25470 : -++++-+git diff --cached --unified=0 > changes.diff
+Line 25471 : -++++-@@ -25 +25 @@ while IFS= read -r file; do
+Line 25472 : -++++--  # Extract only the changed line numbers for the file
+Line 25473 : -++++-+  # Extract only the added or modified lines for .cls and .lwc files
+Line 25474 : -++++-@@ -32 +32 @@ while IFS= read -r file; do
+Line 25475 : -++++--  ' changes.diff)
+Line 25476 : -++++-+  ' changes.diff | uniq)
+Line 25477 : -++++-@@ -61 +61 @@ while IFS= read -r file; do
+Line 25478 : -++++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 25479 : -++++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 25480 : -+++++@@ -30,2 +30,2 @@ while IFS= read -r file; do
+Line 25481 : -+++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+Line 25482 : -+++++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+Line 146101 : -++++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}
+Line 146102 : -++++@@ -18,3 +11,2 @@ diff --git a/changes.diff b/changes.diff
+Line 146103 : -++++-new file mode 100644
+Line 146104 : -++++-index 0000000..a6452b3
+Line 146105 : -++++---- /dev/null
+Line 146106 : -+++++index 1f4c0b2..1b1df18 100644
+Line 248575 : -++++@@ -22,863 +14,1913 @@ index 0000000..a6452b3
+Line 248576 : -++++-@@ -0,0 +1,1262 @@
+Line 248577 : -++++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 248578 : -++++-+index daf61a1..3603bae 100644
+Line 248579 : -++++-+--- a/.husky/pre-commit
+Line 248580 : -++++-++++ b/.husky/pre-commit
+Line 248581 : -++++-+@@ -16 +16 @@ mkdir -p scanner-reports
+Line 248582 : -++++-+-git diff --unified=0 --cached > changes.diff
+Line 248583 : -++++-++git diff --cached --unified=0 > changes.diff
+Line 248584 : -++++-+@@ -25 +25 @@ while IFS= read -r file; do
+Line 248585 : -++++-+-  # Extract only the changed line numbers for the file
+Line 248586 : -++++-++  # Extract only the added or modified lines for .cls and .lwc files
+Line 248587 : -++++-+@@ -32 +32 @@ while IFS= read -r file; do
+Line 248588 : -++++-+-  ' changes.diff)
+Line 248589 : -++++-++  ' changes.diff | uniq)
+Line 248590 : -++++-+@@ -61 +61 @@ while IFS= read -r file; do
+Line 248591 : -++++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 248592 : -++++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 248593 : -++++-+diff --git a/changes.diff b/changes.diff
+Line 248594 : -++++-+new file mode 100644
+Line 248595 : -++++-+index 0000000..1831031
+Line 248596 : -++++-+--- /dev/null
+Line 248597 : -++++-++++ b/changes.diff
+Line 248598 : -++++-+@@ -0,0 +1,1158 @@
+Line 248599 : -++++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 248600 : -++++-++index daf61a1..d6ae40b 100644
+Line 248601 : -++++-++--- a/.husky/pre-commit
+Line 248602 : -++++-+++++ b/.husky/pre-commit
+Line 248603 : -++++-++@@ -25 +25 @@ while IFS= read -r file; do
+Line 248604 : -++++-++-  # Extract only the changed line numbers for the file
+Line 248605 : -++++-+++  # Extract only the added or modified lines for .cls and .lwc files
+Line 248606 : -++++-++@@ -32 +32 @@ while IFS= read -r file; do
+Line 248607 : -++++-++-  ' changes.diff)
+Line 248608 : -++++-+++  ' changes.diff | uniq)
+Line 248609 : -++++-++@@ -61 +61 @@ while IFS= read -r file; do
+Line 248610 : -++++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 248611 : -++++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 248612 : -++++-++diff --git a/changes.diff b/changes.diff
+Line 248613 : -++++-++new file mode 100644
+Line 248614 : -++++-++index 0000000..47b6c1c
+Line 248615 : -++++-++--- /dev/null
+Line 248616 : -++++-+++++ b/changes.diff
+Line 248617 : -++++-++@@ -0,0 +1,1078 @@
+Line 248618 : -++++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 248619 : -++++-+++index daf61a1..d6ae40b 100644
+Line 248620 : -++++-+++--- a/.husky/pre-commit
+Line 248621 : -++++-++++++ b/.husky/pre-commit
+Line 248622 : -++++-+++@@ -25 +25 @@ while IFS= read -r file; do
+Line 248623 : -++++-+++-  # Extract only the changed line numbers for the file
+Line 248624 : -++++-++++  # Extract only the added or modified lines for .cls and .lwc files
+Line 248625 : -++++-+++@@ -32 +32 @@ while IFS= read -r file; do
+Line 248626 : -++++-+++-  ' changes.diff)
+Line 248627 : -++++-++++  ' changes.diff | uniq)
+Line 248628 : -++++-+++@@ -61 +61 @@ while IFS= read -r file; do
+Line 248629 : -++++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 248630 : -++++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 248631 : -++++-+++diff --git a/changes.diff b/changes.diff
+Line 248632 : -++++-+++new file mode 100644
+Line 248633 : -++++-+++index 0000000..8cd4f1a
+Line 248634 : -++++-+++--- /dev/null
+Line 248635 : -++++-++++++ b/changes.diff
+Line 248636 : -++++-+++@@ -0,0 +1,977 @@
+Line 248637 : -++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 248638 : -++++-++++index daf61a1..73bb862 100644
+Line 248639 : -++++-++++--- a/.husky/pre-commit
+Line 248640 : -++++-+++++++ b/.husky/pre-commit
+Line 248641 : -++++-++++@@ -61 +61 @@ while IFS= read -r file; do
+Line 248642 : -++++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 248643 : -++++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 248644 : -++++-++++diff --git a/changes.diff b/changes.diff
+Line 248645 : -++++-++++new file mode 100644
+Line 248646 : -++++-++++index 0000000..f9d24dc
+Line 248647 : -++++-++++--- /dev/null
+Line 248648 : -++++-+++++++ b/changes.diff
+Line 248649 : -++++-++++@@ -0,0 +1,876 @@
+Line 248650 : -++++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 248651 : -++++-+++++index 19cfdbc..daf61a1 100644
+Line 248652 : -++++-+++++--- a/.husky/pre-commit
+Line 248653 : -++++-++++++++ b/.husky/pre-commit
+Line 248654 : -++++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+Line 248655 : -++++-+++++-  # Define the output path for the scanner report in CSV format
+Line 248656 : -++++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 248657 : -++++-++++++  # Extract only the changed line numbers for the file
+Line 248658 : -++++-++++++  line_numbers=$(awk -v file="$file" '
+Line 248659 : -++++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+Line 248660 : -++++-++++++    /^diff --git/ {inside=0}
+Line 248661 : -++++-++++++    $0 ~ file {inside=1}
+Line 248662 : -++++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+Line 248663 : -++++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 248664 : -++++-++++++  ' changes.diff)
+Line 248665 : -++++-++++++
+Line 248666 : -++++-++++++  # If no changed lines are found for this file, skip it
+Line 248667 : -++++-++++++  if [ -z "$line_numbers" ]; then
+Line 248668 : -++++-++++++    echo "No changed lines found in $file"
+Line 248669 : -++++-++++++    continue
+Line 248670 : -++++-++++++  fi
+Line 248671 : -++++-++++++
+Line 248672 : -++++-++++++  # Convert the line numbers to a JSON array format for jq filtering
+Line 248673 : -++++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+Line 248674 : -++++-++++++
+Line 248675 : -++++-++++++  echo "Changed lines for $file: $line_numbers_array"
+Line 248676 : -++++-++++++
+Line 248677 : -++++-++++++  # Define the output path for the scanner report in JSON format
+Line 248678 : -++++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 248679 : -++++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+Line 248680 : -++++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 248681 : -++++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 248682 : -++++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+Line 248683 : -++++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 248684 : -++++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+Line 248685 : -++++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+Line 248686 : -++++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
+Line 248687 : -++++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 248688 : -++++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+Line 248689 : -++++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+Line 248690 : -++++-++++++  jq --argjson lines "$line_numbers_array" '
+Line 248691 : -++++-++++++    [.[] | 
+Line 248692 : -++++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 248693 : -++++-++++++      select(.violations | length > 0)]
+Line 248694 : -++++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 248695 : -++++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+Line 248696 : -++++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 248697 : -++++-+++++-    echo "No issues found for line '70' in $file"
+Line 248698 : -++++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 248699 : -++++-++++++    echo "No issues found for changed lines in $file"
+Line 248700 : -++++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+Line 248701 : -++++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
+Line 248702 : -++++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 248703 : -++++-++++++  echo "Filtered scanner report for $file (Changed lines):"
+Line 248704 : -++++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 248705 : -++++-+++++@@ -53 +77 @@ done <<< "$changed_files"
+Line 248706 : -++++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 248707 : -++++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 248708 : -++++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+Line 248709 : -++++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+Line 248710 : -++++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+Line 248711 : -++++-+++++@@ -60,2 +84,2 @@ fi
+Line 248712 : -++++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 248713 : -++++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 248714 : -++++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+Line 248715 : -++++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+Line 248716 : -++++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 248717 : -++++-+++++-echo "Final filtered scanner report (Line '70'):"
+Line 248718 : -++++-++++++echo "Final filtered scanner report (Changed lines):"
+Line 248719 : -++++-+++++@@ -67 +91 @@ cat "$final_report"
+Line 248720 : -++++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+Line 248721 : -++++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+Line 248722 : -++++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+Line 248723 : -++++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+Line 248724 : -++++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+Line 248725 : -++++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+Line 248726 : -++++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+Line 248727 : -++++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+Line 248728 : -++++-+++++@@ -77 +101 @@ else
+Line 248729 : -++++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+Line 248730 : -++++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+Line 248731 : -++++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 248732 : -++++-+++++deleted file mode 100644
+Line 248733 : -++++-+++++index 9d692ac..0000000
+Line 248734 : -++++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 248735 : -++++-++++++++ /dev/null
+Line 248736 : -++++-+++++@@ -1,24 +0,0 @@
+Line 248737 : -++++-+++++-0
+Line 248738 : -++++-+++++-1
+Line 248739 : -++++-+++++-2
+Line 248740 : -++++-+++++-3
+Line 248741 : -++++-+++++-4
+Line 248742 : -++++-+++++-5
+Line 248743 : -++++-+++++-60
+Line 248744 : -++++-+++++-642
+Line 248745 : -++++-+++++-643
+Line 248746 : -++++-+++++-644
+Line 248747 : -++++-+++++-645
+Line 248748 : -++++-+++++-646
+Line 248749 : -++++-+++++-647
+Line 248750 : -++++-+++++-648
+Line 248751 : -++++-+++++-649
+Line 248752 : -++++-+++++-650
+Line 248753 : -++++-+++++-651
+Line 248754 : -++++-+++++-652
+Line 248755 : -++++-+++++-653
+Line 248756 : -++++-+++++-654
+Line 248757 : -++++-+++++-655
+Line 248758 : -++++-+++++-656
+Line 248759 : -++++-+++++-657
+Line 248760 : -++++-+++++-70
+Line 248761 : -++++-+++++diff --git a/changes.diff b/changes.diff
+Line 248762 : -++++-+++++deleted file mode 100644
+Line 248763 : -++++-+++++index 61d162d..0000000
+Line 248764 : -++++-+++++--- a/changes.diff
+Line 248765 : -++++-++++++++ /dev/null
+Line 248766 : -++++-+++++@@ -1,647 +0,0 @@
+Line 248767 : -++++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 248768 : -++++-+++++-index 5b262e4..8c05f52 100644
+Line 248769 : -++++-+++++---- a/.husky/pre-commit
+Line 248770 : -++++-+++++-+++ b/.husky/pre-commit
+Line 248771 : -++++-+++++-@@ -113 +113 @@ cat "$final_report"
+Line 248772 : -++++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 248773 : -++++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+Line 248774 : -++++-+++++-diff --git a/changes.diff b/changes.diff
+Line 248775 : -++++-+++++-index 9a218e6..4fe1995 100644
+Line 248776 : -++++-+++++---- a/changes.diff
+Line 248777 : -++++-+++++-+++ b/changes.diff
+Line 248778 : -++++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 248779 : -++++-+++++--index aa6762f..586962b 100644
+Line 248780 : -++++-+++++-+index 586962b..5b262e4 100644
+Line 248781 : -++++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+Line 248782 : -++++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
+Line 248783 : -++++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 248784 : -++++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 248785 : -++++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 248786 : -++++-+++++---  # Extract line numbers as a comma-separated string for filtering later
+Line 248787 : -++++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 248788 : -++++-+++++--+  # Extract line numbers as an array for filtering later
+Line 248789 : -++++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 248790 : -++++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
+Line 248791 : -++++-+++++---  if [ -z "$line_numbers" ]; then
+Line 248792 : -++++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 248793 : -++++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 248794 : -++++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
+Line 248795 : -++++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 248796 : -++++-+++++--+  lines_for_filter="${lines_for_filter:1}"
+Line 248797 : -++++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+Line 248798 : -++++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+Line 248799 : -++++-+++++-+-  awk -v file="$file" '
+Line 248800 : -++++-+++++-++  # Extract only the changed line numbers for the file
+Line 248801 : -++++-+++++-++  line_numbers=$(awk -v file="$file" '
+Line 248802 : -++++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+Line 248803 : -++++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+Line 248804 : -++++-+++++-++  ' changes.diff)
+Line 248805 : -++++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+Line 248806 : -++++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+Line 248807 : -++++-+++++-++  if [ -z "$line_numbers" ]; then
+Line 248808 : -++++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+Line 248809 : -++++-+++++-+-  # Extract line numbers as an array for filtering later
+Line 248810 : -++++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 248811 : -++++-+++++-++  # Convert the line numbers to a comma-separated string for matching
+Line 248812 : -++++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+Line 248813 : -++++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+Line 248814 : -++++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
+Line 248815 : -++++-+++++---  awk -v lines="$line_numbers" '
+Line 248816 : -++++-+++++--+  awk -v lines="$lines_for_filter" '
+Line 248817 : -++++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
+Line 248818 : -++++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 248819 : -++++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 248820 : -++++-+++++--@@ -111 +115 @@ cat "$final_report"
+Line 248821 : -++++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 248822 : -++++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 248823 : -++++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
+Line 248824 : -++++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+Line 248825 : -++++-+++++-+-  # Ensure that line_numbers is not empty
+Line 248826 : -++++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 248827 : -++++-+++++-++  # Ensure that line_numbers_string is not empty
+Line 248828 : -++++-+++++-++  if [ -z "$line_numbers_string" ]; then
+Line 248829 : -++++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+Line 248830 : -++++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+Line 248831 : -++++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 248832 : -++++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
+Line 248833 : -++++-+++++-+-
+Line 248834 : -++++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+Line 248835 : -++++-+++++-+-  awk -v lines="$lines_for_filter" '
+Line 248836 : -++++-+++++-++  awk -v lines="$line_numbers_string" '
+Line 248837 : -++++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 248838 : -++++-+++++--index 0e43eee..a206584 100644
+Line 248839 : -++++-+++++-+index a206584..9d692ac 100644
+Line 248840 : -++++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+Line 248841 : -++++-+++++--@@ -1 +1,6 @@
+Line 248842 : -++++-+++++---70 :           System.debug('Hi Hello');
+Line 248843 : -++++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 248844 : -++++-+++++--+1 : index 1ec7a54..870d508 100644
+Line 248845 : -++++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 248846 : -++++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 248847 : -++++-+++++--+4 : -          System.debug('Hi');
+Line 248848 : -++++-+++++--+70 :           System.debug('Hi');
+Line 248849 : -++++-+++++-+@@ -1,6 +1,24 @@
+Line 248850 : -++++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 248851 : -++++-+++++-+-1 : index 1ec7a54..870d508 100644
+Line 248852 : -++++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 248853 : -++++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 248854 : -++++-+++++-+-4 : -          System.debug('Hi');
+Line 248855 : -++++-+++++-+-70 :           System.debug('Hi');
+Line 248856 : -++++-+++++-++0
+Line 248857 : -++++-+++++-++1
+Line 248858 : -++++-+++++-++2
+Line 248859 : -++++-+++++-++3
+Line 248860 : -++++-+++++-++4
+Line 248861 : -++++-+++++-++5
+Line 248862 : -++++-+++++-++60
+Line 248863 : -++++-+++++-++642
+Line 248864 : -++++-+++++-++643
+Line 248865 : -++++-+++++-++644
+Line 248866 : -++++-+++++-++645
+Line 248867 : -++++-+++++-++646
+Line 248868 : -++++-+++++-++647
+Line 248869 : -++++-+++++-++648
+Line 248870 : -++++-+++++-++649
+Line 248871 : -++++-+++++-++650
+Line 248872 : -++++-+++++-++651
+Line 248873 : -++++-+++++-++652
+Line 248874 : -++++-+++++-++653
+Line 248875 : -++++-+++++-++654
+Line 248876 : -++++-+++++-++655
+Line 248877 : -++++-+++++-++656
+Line 248878 : -++++-+++++-++657
+Line 248879 : -++++-+++++-++70
+Line 248880 : -++++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+Line 248881 : -++++-+++++--index 760971b..3dfa538 100644
+Line 248882 : -++++-+++++-+index 3dfa538..9a218e6 100644
+Line 248883 : -++++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+Line 248884 : -++++-+++++---index 255a037..525d43a 100644
+Line 248885 : -++++-+++++--+index 525d43a..aa6762f 100644
+Line 248886 : -++++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 248887 : -++++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
+Line 248888 : -++++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 248889 : -++++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
+Line 248890 : -++++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 248891 : -++++-+++++----  # Define the output path for the scanner report
+Line 248892 : -++++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 248893 : -++++-+++++---+  # Define the output path for the scanner report in CSV format
+Line 248894 : -++++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 248895 : -++++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 248896 : -++++-+++++----  # Run the SFDX scanner on the file and generate the report
+Line 248897 : -++++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 248898 : -++++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 248899 : -++++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 248900 : -++++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
+Line 248901 : -++++-+++++----  # Filter the scanner report based on the changed line numbers
+Line 248902 : -++++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
+Line 248903 : -++++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 248904 : -++++-+++++----  jq --arg lines "$line_numbers" '
+Line 248905 : -++++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 248906 : -++++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 248907 : -++++-+++++---+  awk -v lines="$line_numbers" '
+Line 248908 : -++++-+++++---+  BEGIN {
+Line 248909 : -++++-+++++---+    FS=OFS=",";
+Line 248910 : -++++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 248911 : -++++-+++++---+    for (i in arr) {
+Line 248912 : -++++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 248913 : -++++-+++++---+    }
+Line 248914 : -++++-+++++---+  }
+Line 248915 : -++++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 248916 : -++++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 248917 : -++++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
+Line 248918 : -++++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 248919 : -++++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 248920 : -++++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
+Line 248921 : -++++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 248922 : -++++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 248923 : -++++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
+Line 248924 : -++++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 248925 : -++++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 248926 : -++++-+++++---@@ -95,2 +102,4 @@ fi
+Line 248927 : -++++-+++++----# Combine all filtered reports into one final report
+Line 248928 : -++++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 248929 : -++++-+++++---+# Combine all filtered reports into one final report (optional)
+Line 248930 : -++++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 248931 : -++++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 248932 : -++++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 248933 : -++++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 248934 : -++++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
+Line 248935 : -++++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 248936 : -++++-+++++---+echo "Final filtered scanner report:"
+Line 248937 : -++++-+++++---+cat "$final_report"
+Line 248938 : -++++-+++++---+
+Line 248939 : -++++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 248940 : -++++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 248941 : -++++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+Line 248942 : -++++-+++++--+-    FS=OFS=",";
+Line 248943 : -++++-+++++--++    FS=OFS=",";  # Define CSV format
+Line 248944 : -++++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+Line 248945 : -++++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 248946 : -++++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 248947 : -++++-+++++--+@@ -111 +111 @@ cat "$final_report"
+Line 248948 : -++++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 248949 : -++++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 248950 : -++++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 248951 : -++++-+++++--+new file mode 100644
+Line 248952 : -++++-+++++--+index 0000000..0e43eee
+Line 248953 : -++++-+++++--+--- /dev/null
+Line 248954 : -++++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 248955 : -++++-+++++--+@@ -0,0 +1 @@
+Line 248956 : -++++-+++++--++70 :           System.debug('Hi Hello');
+Line 248957 : -++++-+++++--+diff --git a/changes.diff b/changes.diff
+Line 248958 : -++++-+++++--+new file mode 100644
+Line 248959 : -++++-+++++--+index 0000000..760971b
+Line 248960 : -++++-+++++--+--- /dev/null
+Line 248961 : -++++-+++++--++++ b/changes.diff
+Line 248962 : -++++-+++++--+@@ -0,0 +1,65 @@
+Line 248963 : -++++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 248964 : -++++-+++++--++index 255a037..525d43a 100644
+Line 248965 : -++++-+++++--++--- a/.husky/pre-commit
+Line 248966 : -++++-+++++--+++++ b/.husky/pre-commit
+Line 248967 : -++++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+Line 248968 : -++++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 248969 : -++++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+Line 248970 : -++++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 248971 : -++++-+++++--++-  # Define the output path for the scanner report
+Line 248972 : -++++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 248973 : -++++-+++++--+++  # Define the output path for the scanner report in CSV format
+Line 248974 : -++++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 248975 : -++++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 248976 : -++++-+++++--++-  # Run the SFDX scanner on the file and generate the report
+Line 248977 : -++++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 248978 : -++++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 248979 : -++++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 248980 : -++++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+Line 248981 : -++++-+++++--++-  # Filter the scanner report based on the changed line numbers
+Line 248982 : -++++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+Line 248983 : -++++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 248984 : -++++-+++++--++-  jq --arg lines "$line_numbers" '
+Line 248985 : -++++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 248986 : -++++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 248987 : -++++-+++++--+++  awk -v lines="$line_numbers" '
+Line 248988 : -++++-+++++--+++  BEGIN {
+Line 248989 : -++++-+++++--+++    FS=OFS=",";
+Line 248990 : -++++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 248991 : -++++-+++++--+++    for (i in arr) {
+Line 248992 : -++++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 248993 : -++++-+++++--+++    }
+Line 248994 : -++++-+++++--+++  }
+Line 248995 : -++++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 248996 : -++++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 248997 : -++++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+Line 248998 : -++++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 248999 : -++++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 249000 : -++++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+Line 249001 : -++++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249002 : -++++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249003 : -++++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+Line 249004 : -++++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 249005 : -++++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 249006 : -++++-+++++--++@@ -95,2 +102,4 @@ fi
+Line 249007 : -++++-+++++--++-# Combine all filtered reports into one final report
+Line 249008 : -++++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 249009 : -++++-+++++--+++# Combine all filtered reports into one final report (optional)
+Line 249010 : -++++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 249011 : -++++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 249012 : -++++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 249013 : -++++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 249014 : -++++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 249015 : -++++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 249016 : -++++-+++++--+++echo "Final filtered scanner report:"
+Line 249017 : -++++-+++++--+++cat "$final_report"
+Line 249018 : -++++-+++++--+++
+Line 249019 : -++++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 249020 : -++++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249021 : -++++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 249022 : -++++-+++++--++index 1ec7a54..870d508 100644
+Line 249023 : -++++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 249024 : -++++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 249025 : -++++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 249026 : -++++-+++++--++-          System.debug('Hi');
+Line 249027 : -++++-+++++--+++          System.debug('Hi Hello');
+Line 249028 : -++++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 249029 : -++++-+++++---index 1ec7a54..870d508 100644
+Line 249030 : -++++-+++++--+index 870d508..1ec7a54 100644
+Line 249031 : -++++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 249032 : -++++-+++++----          System.debug('Hi');
+Line 249033 : -++++-+++++---+          System.debug('Hi Hello');
+Line 249034 : -++++-+++++--+-          System.debug('Hi Hello');
+Line 249035 : -++++-+++++--++          System.debug('Hi');
+Line 249036 : -++++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 249037 : -++++-+++++--+new file mode 100644
+Line 249038 : -++++-+++++--+index 0000000..5a3a1ac
+Line 249039 : -++++-+++++--+--- /dev/null
+Line 249040 : -++++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 249041 : -++++-+++++--+@@ -0,0 +1 @@
+Line 249042 : -++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249043 : -++++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 249044 : -++++-+++++--+new file mode 100644
+Line 249045 : -++++-+++++--+index 0000000..5a3a1ac
+Line 249046 : -++++-+++++--+--- /dev/null
+Line 249047 : -++++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 249048 : -++++-+++++--+@@ -0,0 +1 @@
+Line 249049 : -++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249050 : -++++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 249051 : -++++-+++++--+new file mode 100644
+Line 249052 : -++++-+++++--+index 0000000..e1ef0f0
+Line 249053 : -++++-+++++--+--- /dev/null
+Line 249054 : -++++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 249055 : -++++-+++++--+@@ -0,0 +1,5 @@
+Line 249056 : -++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249057 : -++++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 249058 : -++++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 249059 : -++++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 249060 : -++++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 249061 : -++++-+++++-+-index 525d43a..aa6762f 100644
+Line 249062 : -++++-+++++-++index aa6762f..586962b 100644
+Line 249063 : -++++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+Line 249064 : -++++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+Line 249065 : -++++-+++++-+--    FS=OFS=",";
+Line 249066 : -++++-+++++-+-+    FS=OFS=",";  # Define CSV format
+Line 249067 : -++++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+Line 249068 : -++++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 249069 : -++++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 249070 : -++++-+++++-+-@@ -111 +111 @@ cat "$final_report"
+Line 249071 : -++++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249072 : -++++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249073 : -++++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+Line 249074 : -++++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 249075 : -++++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 249076 : -++++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 249077 : -++++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+Line 249078 : -++++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 249079 : -++++-+++++-+++  # Extract line numbers as an array for filtering later
+Line 249080 : -++++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 249081 : -++++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+Line 249082 : -++++-+++++-++-  if [ -z "$line_numbers" ]; then
+Line 249083 : -++++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 249084 : -++++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 249085 : -++++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+Line 249086 : -++++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 249087 : -++++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
+Line 249088 : -++++-+++++-+++
+Line 249089 : -++++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+Line 249090 : -++++-+++++-++-  awk -v lines="$line_numbers" '
+Line 249091 : -++++-+++++-+++  awk -v lines="$lines_for_filter" '
+Line 249092 : -++++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+Line 249093 : -++++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 249094 : -++++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 249095 : -++++-+++++-++@@ -111 +115 @@ cat "$final_report"
+Line 249096 : -++++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249097 : -++++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 249098 : -++++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 249099 : -++++-+++++-+-new file mode 100644
+Line 249100 : -++++-+++++-+-index 0000000..0e43eee
+Line 249101 : -++++-+++++-+---- /dev/null
+Line 249102 : -++++-+++++-++index 0e43eee..a206584 100644
+Line 249103 : -++++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 249104 : -++++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+Line 249105 : -++++-+++++-+-@@ -0,0 +1 @@
+Line 249106 : -++++-+++++-+-+70 :           System.debug('Hi Hello');
+Line 249107 : -++++-+++++-++@@ -1 +1,6 @@
+Line 249108 : -++++-+++++-++-70 :           System.debug('Hi Hello');
+Line 249109 : -++++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 249110 : -++++-+++++-+++1 : index 1ec7a54..870d508 100644
+Line 249111 : -++++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 249112 : -++++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 249113 : -++++-+++++-+++4 : -          System.debug('Hi');
+Line 249114 : -++++-+++++-+++70 :           System.debug('Hi');
+Line 249115 : -++++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+Line 249116 : -++++-+++++-+-new file mode 100644
+Line 249117 : -++++-+++++-+-index 0000000..760971b
+Line 249118 : -++++-+++++-+---- /dev/null
+Line 249119 : -++++-+++++-++index 760971b..3dfa538 100644
+Line 249120 : -++++-+++++-++--- a/changes.diff
+Line 249121 : -++++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+Line 249122 : -++++-+++++-+-@@ -0,0 +1,65 @@
+Line 249123 : -++++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 249124 : -++++-+++++-+-+index 255a037..525d43a 100644
+Line 249125 : -++++-+++++-+-+--- a/.husky/pre-commit
+Line 249126 : -++++-+++++-+-++++ b/.husky/pre-commit
+Line 249127 : -++++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+Line 249128 : -++++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 249129 : -++++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+Line 249130 : -++++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 249131 : -++++-+++++-+-+-  # Define the output path for the scanner report
+Line 249132 : -++++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 249133 : -++++-+++++-+-++  # Define the output path for the scanner report in CSV format
+Line 249134 : -++++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 249135 : -++++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 249136 : -++++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+Line 249137 : -++++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 249138 : -++++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 249139 : -++++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 249140 : -++++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+Line 249141 : -++++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
+Line 249142 : -++++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+Line 249143 : -++++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 249144 : -++++-+++++-+-+-  jq --arg lines "$line_numbers" '
+Line 249145 : -++++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 249146 : -++++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249147 : -++++-+++++-+-++  awk -v lines="$line_numbers" '
+Line 249148 : -++++-+++++-+-++  BEGIN {
+Line 249149 : -++++-+++++-+-++    FS=OFS=",";
+Line 249150 : -++++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 249151 : -++++-+++++-+-++    for (i in arr) {
+Line 249152 : -++++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 249153 : -++++-+++++-+-++    }
+Line 249154 : -++++-+++++-+-++  }
+Line 249155 : -++++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 249156 : -++++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249157 : -++++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+Line 249158 : -++++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 249159 : -++++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 249160 : -++++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+Line 249161 : -++++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249162 : -++++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249163 : -++++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+Line 249164 : -++++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 249165 : -++++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 249166 : -++++-+++++-+-+@@ -95,2 +102,4 @@ fi
+Line 249167 : -++++-+++++-+-+-# Combine all filtered reports into one final report
+Line 249168 : -++++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 249169 : -++++-+++++-+-++# Combine all filtered reports into one final report (optional)
+Line 249170 : -++++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 249171 : -++++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 249172 : -++++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 249173 : -++++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 249174 : -++++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+Line 249175 : -++++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 249176 : -++++-+++++-+-++echo "Final filtered scanner report:"
+Line 249177 : -++++-+++++-+-++cat "$final_report"
+Line 249178 : -++++-+++++-+-++
+Line 249179 : -++++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 249180 : -++++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249181 : -++++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 249182 : -++++-+++++-+-+index 1ec7a54..870d508 100644
+Line 249183 : -++++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 249184 : -++++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 249185 : -++++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 249186 : -++++-+++++-+-+-          System.debug('Hi');
+Line 249187 : -++++-+++++-+-++          System.debug('Hi Hello');
+Line 249188 : -++++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 249189 : -++++-+++++-++-index 255a037..525d43a 100644
+Line 249190 : -++++-+++++-+++index 525d43a..aa6762f 100644
+Line 249191 : -++++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 249192 : -++++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+Line 249193 : -++++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 249194 : -++++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+Line 249195 : -++++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 249196 : -++++-+++++-++--  # Define the output path for the scanner report
+Line 249197 : -++++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 249198 : -++++-+++++-++-+  # Define the output path for the scanner report in CSV format
+Line 249199 : -++++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 249200 : -++++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 249201 : -++++-+++++-++--  # Run the SFDX scanner on the file and generate the report
+Line 249202 : -++++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 249203 : -++++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 249204 : -++++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 249205 : -++++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+Line 249206 : -++++-+++++-++--  # Filter the scanner report based on the changed line numbers
+Line 249207 : -++++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+Line 249208 : -++++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 249209 : -++++-+++++-++--  jq --arg lines "$line_numbers" '
+Line 249210 : -++++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 249211 : -++++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249212 : -++++-+++++-++-+  awk -v lines="$line_numbers" '
+Line 249213 : -++++-+++++-++-+  BEGIN {
+Line 249214 : -++++-+++++-++-+    FS=OFS=",";
+Line 249215 : -++++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 249216 : -++++-+++++-++-+    for (i in arr) {
+Line 249217 : -++++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 249218 : -++++-+++++-++-+    }
+Line 249219 : -++++-+++++-++-+  }
+Line 249220 : -++++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 249221 : -++++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249222 : -++++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+Line 249223 : -++++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 249224 : -++++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 249225 : -++++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+Line 249226 : -++++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249227 : -++++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249228 : -++++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+Line 249229 : -++++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 249230 : -++++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 249231 : -++++-+++++-++-@@ -95,2 +102,4 @@ fi
+Line 249232 : -++++-+++++-++--# Combine all filtered reports into one final report
+Line 249233 : -++++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 249234 : -++++-+++++-++-+# Combine all filtered reports into one final report (optional)
+Line 249235 : -++++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 249236 : -++++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 249237 : -++++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 249238 : -++++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 249239 : -++++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+Line 249240 : -++++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 249241 : -++++-+++++-++-+echo "Final filtered scanner report:"
+Line 249242 : -++++-+++++-++-+cat "$final_report"
+Line 249243 : -++++-+++++-++-+
+Line 249244 : -++++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 249245 : -++++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249246 : -++++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+Line 249247 : -++++-+++++-+++-    FS=OFS=",";
+Line 249248 : -++++-+++++-++++    FS=OFS=",";  # Define CSV format
+Line 249249 : -++++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+Line 249250 : -++++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 249251 : -++++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 249252 : -++++-+++++-+++@@ -111 +111 @@ cat "$final_report"
+Line 249253 : -++++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249254 : -++++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249255 : -++++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 249256 : -++++-+++++-+++new file mode 100644
+Line 249257 : -++++-+++++-+++index 0000000..0e43eee
+Line 249258 : -++++-+++++-+++--- /dev/null
+Line 249259 : -++++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 249260 : -++++-+++++-+++@@ -0,0 +1 @@
+Line 249261 : -++++-+++++-++++70 :           System.debug('Hi Hello');
+Line 249262 : -++++-+++++-+++diff --git a/changes.diff b/changes.diff
+Line 249263 : -++++-+++++-+++new file mode 100644
+Line 249264 : -++++-+++++-+++index 0000000..760971b
+Line 249265 : -++++-+++++-+++--- /dev/null
+Line 249266 : -++++-+++++-++++++ b/changes.diff
+Line 249267 : -++++-+++++-+++@@ -0,0 +1,65 @@
+Line 249268 : -++++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 249269 : -++++-+++++-++++index 255a037..525d43a 100644
+Line 249270 : -++++-+++++-++++--- a/.husky/pre-commit
+Line 249271 : -++++-+++++-+++++++ b/.husky/pre-commit
+Line 249272 : -++++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+Line 249273 : -++++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 249274 : -++++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+Line 249275 : -++++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 249276 : -++++-+++++-++++-  # Define the output path for the scanner report
+Line 249277 : -++++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 249278 : -++++-+++++-+++++  # Define the output path for the scanner report in CSV format
+Line 249279 : -++++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 249280 : -++++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 249281 : -++++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
+Line 249282 : -++++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 249283 : -++++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 249284 : -++++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 249285 : -++++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+Line 249286 : -++++-+++++-++++-  # Filter the scanner report based on the changed line numbers
+Line 249287 : -++++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+Line 249288 : -++++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 249289 : -++++-+++++-++++-  jq --arg lines "$line_numbers" '
+Line 249290 : -++++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 249291 : -++++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249292 : -++++-+++++-+++++  awk -v lines="$line_numbers" '
+Line 249293 : -++++-+++++-+++++  BEGIN {
+Line 249294 : -++++-+++++-+++++    FS=OFS=",";
+Line 249295 : -++++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 249296 : -++++-+++++-+++++    for (i in arr) {
+Line 249297 : -++++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 249298 : -++++-+++++-+++++    }
+Line 249299 : -++++-+++++-+++++  }
+Line 249300 : -++++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 249301 : -++++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249302 : -++++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+Line 249303 : -++++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 249304 : -++++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 249305 : -++++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+Line 249306 : -++++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249307 : -++++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249308 : -++++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+Line 249309 : -++++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 249310 : -++++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 249311 : -++++-+++++-++++@@ -95,2 +102,4 @@ fi
+Line 249312 : -++++-+++++-++++-# Combine all filtered reports into one final report
+Line 249313 : -++++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 249314 : -++++-+++++-+++++# Combine all filtered reports into one final report (optional)
+Line 249315 : -++++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 249316 : -++++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 249317 : -++++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 249318 : -++++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 249319 : -++++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 249320 : -++++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 249321 : -++++-+++++-+++++echo "Final filtered scanner report:"
+Line 249322 : -++++-+++++-+++++cat "$final_report"
+Line 249323 : -++++-+++++-+++++
+Line 249324 : -++++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 249325 : -++++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249326 : -++++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 249327 : -++++-+++++-++++index 1ec7a54..870d508 100644
+Line 249328 : -++++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 249329 : -++++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 249330 : -++++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 249331 : -++++-+++++-++++-          System.debug('Hi');
+Line 249332 : -++++-+++++-+++++          System.debug('Hi Hello');
+Line 249333 : -++++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 249334 : -++++-+++++-++-index 1ec7a54..870d508 100644
+Line 249335 : -++++-+++++-+++index 870d508..1ec7a54 100644
+Line 249336 : -++++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 249337 : -++++-+++++-++--          System.debug('Hi');
+Line 249338 : -++++-+++++-++-+          System.debug('Hi Hello');
+Line 249339 : -++++-+++++-+++-          System.debug('Hi Hello');
+Line 249340 : -++++-+++++-++++          System.debug('Hi');
+Line 249341 : -++++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 249342 : -++++-+++++-+++new file mode 100644
+Line 249343 : -++++-+++++-+++index 0000000..5a3a1ac
+Line 249344 : -++++-+++++-+++--- /dev/null
+Line 249345 : -++++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 249346 : -++++-+++++-+++@@ -0,0 +1 @@
+Line 249347 : -++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249348 : -++++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 249349 : -++++-+++++-+++new file mode 100644
+Line 249350 : -++++-+++++-+++index 0000000..5a3a1ac
+Line 249351 : -++++-+++++-+++--- /dev/null
+Line 249352 : -++++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 249353 : -++++-+++++-+++@@ -0,0 +1 @@
+Line 249354 : -++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249355 : -++++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 249356 : -++++-+++++-+++new file mode 100644
+Line 249357 : -++++-+++++-+++index 0000000..e1ef0f0
+Line 249358 : -++++-+++++-+++--- /dev/null
+Line 249359 : -++++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 249360 : -++++-+++++-+++@@ -0,0 +1,5 @@
+Line 249361 : -++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249362 : -++++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 249363 : -++++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 249364 : -++++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 249365 : -++++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 249366 : -++++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 249367 : -++++-+++++-+-index 870d508..1ec7a54 100644
+Line 249368 : -++++-+++++-++index 1ec7a54..870d508 100644
+Line 249369 : -++++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+Line 249370 : -++++-+++++-+--          System.debug('Hi Hello');
+Line 249371 : -++++-+++++-+-+          System.debug('Hi');
+Line 249372 : -++++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 249373 : -++++-+++++-+-new file mode 100644
+Line 249374 : -++++-+++++-+-index 0000000..5a3a1ac
+Line 249375 : -++++-+++++-+---- /dev/null
+Line 249376 : -++++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 249377 : -++++-+++++-+-@@ -0,0 +1 @@
+Line 249378 : -++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249379 : -++++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 249380 : -++++-+++++-+-new file mode 100644
+Line 249381 : -++++-+++++-+-index 0000000..5a3a1ac
+Line 249382 : -++++-+++++-+---- /dev/null
+Line 249383 : -++++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 249384 : -++++-+++++-+-@@ -0,0 +1 @@
+Line 249385 : -++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249386 : -++++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 249387 : -++++-+++++-+-new file mode 100644
+Line 249388 : -++++-+++++-+-index 0000000..e1ef0f0
+Line 249389 : -++++-+++++-+---- /dev/null
+Line 249390 : -++++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 249391 : -++++-+++++-+-@@ -0,0 +1,5 @@
+Line 249392 : -++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249393 : -++++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 249394 : -++++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 249395 : -++++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 249396 : -++++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 249397 : -++++-+++++-++-          System.debug('Hi');
+Line 249398 : -++++-+++++-+++          System.debug('Hi Hello');
+Line 249399 : -++++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 249400 : -++++-+++++--index 1ec7a54..870d508 100644
+Line 249401 : -++++-+++++-+index 870d508..5eafcac 100644
+Line 249402 : -++++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+Line 249403 : -++++-+++++---          System.debug('Hi');
+Line 249404 : -++++-+++++--+          System.debug('Hi Hello');
+Line 249405 : -++++-+++++-+-          System.debug('Hi Hello');
+Line 249406 : -++++-+++++-++          System.debug('Happy');
+Line 249407 : -++++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 249408 : -++++-+++++-index 5eafcac..1ec7a54 100644
+Line 249409 : -++++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
+Line 249410 : -++++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+Line 249411 : -++++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 249412 : -++++-+++++--          System.debug('Happy');
+Line 249413 : -++++-+++++-+          System.debug('Hi');
+Line 249414 : -++++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 249415 : -++++-+++++index 73696e2..9e21e88 100644
+Line 249416 : -++++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 249417 : -++++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 249418 : -++++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 249419 : -++++-+++++-          System.debug('Hello and Hi');
+Line 249420 : -++++-++++++          System.debug('Hi AND');
+Line 249421 : -++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 249422 : -++++-+++++deleted file mode 100644
+Line 249423 : -++++-+++++index 5a3a1ac..0000000
+Line 249424 : -++++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 249425 : -++++-++++++++ /dev/null
+Line 249426 : -++++-+++++@@ -1 +0,0 @@
+Line 249427 : -++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249428 : -++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 249429 : -++++-+++++new file mode 100644
+Line 249430 : -++++-+++++index 0000000..ebc3aa5
+Line 249431 : -++++-+++++--- /dev/null
+Line 249432 : -++++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 249433 : -++++-+++++@@ -0,0 +1,30 @@
+Line 249434 : -++++-++++++[
+Line 249435 : -++++-++++++  {
+Line 249436 : -++++-++++++    "engine": "pmd",
+Line 249437 : -++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 249438 : -++++-++++++    "violations": [
+Line 249439 : -+++++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 249440 : -+++++-index daf61a1..3603bae 100644
+Line 249441 : -++++++index daf61a1..1328704 100644
+Line 249442 : -+++++@@ -11 +11,3 @@ index daf61a1..3603bae 100644
+Line 249443 : -+++++-@@ -32 +32 @@ while IFS= read -r file; do
+Line 249444 : -++++++@@ -30,3 +30,3 @@ while IFS= read -r file; do
+Line 249445 : -++++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+Line 249446 : -++++++-    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 249447 : -+++++@@ -12,0 +15,2 @@ index daf61a1..3603bae 100644
+Line 249448 : -+++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+Line 249449 : -+++++++    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+Line 249450 : -+++++@@ -19 +23 @@ new file mode 100644
+Line 249451 : -+++++-index 0000000..a6452b3
+Line 249452 : -++++++index 0000000..1f4c0b2
+Line 249453 : -+++++@@ -22 +26 @@ index 0000000..a6452b3
+Line 249454 : -+++++-@@ -0,0 +1,1262 @@
+Line 249455 : -++++++@@ -0,0 +1,1293 @@
+Line 249456 : -+++++@@ -41 +45 @@ index 0000000..a6452b3
+Line 249457 : -+++++-+index 0000000..1831031
+Line 249458 : -+++++++index 0000000..a6452b3
+Line 249459 : -+++++@@ -44 +48 @@ index 0000000..a6452b3
+Line 249460 : -+++++-+@@ -0,0 +1,1158 @@
+Line 249461 : -+++++++@@ -0,0 +1,1262 @@
+Line 249462 : -+++++@@ -46 +50 @@ index 0000000..a6452b3
+Line 249463 : -+++++-++index daf61a1..d6ae40b 100644
+Line 249464 : -++++++++index daf61a1..3603bae 100644
+Line 249465 : -+++++@@ -48,0 +53,3 @@ index 0000000..a6452b3
+Line 249466 : -++++++++@@ -16 +16 @@ mkdir -p scanner-reports
+Line 249467 : -++++++++-git diff --unified=0 --cached > changes.diff
+Line 249468 : -+++++++++git diff --cached --unified=0 > changes.diff
+Line 249469 : -+++++@@ -60 +67 @@ index 0000000..a6452b3
+Line 249470 : -+++++-++index 0000000..47b6c1c
+Line 249471 : -++++++++index 0000000..1831031
+Line 249472 : -+++++@@ -63 +70 @@ index 0000000..a6452b3
+Line 249473 : -+++++-++@@ -0,0 +1,1078 @@
+Line 249474 : -++++++++@@ -0,0 +1,1158 @@
+Line 249475 : -+++++@@ -79 +86 @@ index 0000000..a6452b3
+Line 249476 : -+++++-+++index 0000000..8cd4f1a
+Line 249477 : -+++++++++index 0000000..47b6c1c
+Line 249478 : -+++++@@ -82 +89 @@ index 0000000..a6452b3
+Line 249479 : -+++++-+++@@ -0,0 +1,977 @@
+Line 249480 : -+++++++++@@ -0,0 +1,1078 @@
+Line 249481 : -+++++@@ -84 +91 @@ index 0000000..a6452b3
+Line 249482 : -+++++-++++index daf61a1..73bb862 100644
+Line 249483 : -++++++++++index daf61a1..d6ae40b 100644
+Line 249484 : -+++++@@ -86,0 +94,6 @@ index 0000000..a6452b3
+Line 249485 : -++++++++++@@ -25 +25 @@ while IFS= read -r file; do
+Line 249486 : -++++++++++-  # Extract only the changed line numbers for the file
+Line 249487 : -+++++++++++  # Extract only the added or modified lines for .cls and .lwc files
+Line 249488 : -++++++++++@@ -32 +32 @@ while IFS= read -r file; do
+Line 249489 : -++++++++++-  ' changes.diff)
+Line 249490 : -+++++++++++  ' changes.diff | uniq)
+Line 249491 : -+++++@@ -92 +105 @@ index 0000000..a6452b3
+Line 249492 : -+++++-++++index 0000000..f9d24dc
+Line 249493 : -++++++++++index 0000000..8cd4f1a
+Line 249494 : -+++++@@ -95 +108 @@ index 0000000..a6452b3
+Line 249495 : -+++++-++++@@ -0,0 +1,876 @@
+Line 249496 : -++++++++++@@ -0,0 +1,977 @@
+Line 249497 : -+++++@@ -97 +110 @@ index 0000000..a6452b3
+Line 249498 : -+++++-+++++index 19cfdbc..daf61a1 100644
+Line 249499 : -+++++++++++index daf61a1..73bb862 100644
+Line 249500 : -+++++@@ -100,107 +113,3 @@ index 0000000..a6452b3
+Line 249501 : -+++++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+Line 249502 : -+++++-+++++-  # Define the output path for the scanner report in CSV format
+Line 249503 : -+++++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 249504 : -+++++-++++++  # Extract only the changed line numbers for the file
+Line 249505 : -+++++-++++++  line_numbers=$(awk -v file="$file" '
+Line 249506 : -+++++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+Line 249507 : -+++++-++++++    /^diff --git/ {inside=0}
+Line 249508 : -+++++-++++++    $0 ~ file {inside=1}
+Line 249509 : -+++++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+Line 249510 : -+++++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 249511 : -+++++-++++++  ' changes.diff)
+Line 249512 : -+++++-++++++
+Line 249513 : -+++++-++++++  # If no changed lines are found for this file, skip it
+Line 249514 : -+++++-++++++  if [ -z "$line_numbers" ]; then
+Line 249515 : -+++++-++++++    echo "No changed lines found in $file"
+Line 249516 : -+++++-++++++    continue
+Line 249517 : -+++++-++++++  fi
+Line 249518 : -+++++-++++++
+Line 249519 : -+++++-++++++  # Convert the line numbers to a JSON array format for jq filtering
+Line 249520 : -+++++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+Line 249521 : -+++++-++++++
+Line 249522 : -+++++-++++++  echo "Changed lines for $file: $line_numbers_array"
+Line 249523 : -+++++-++++++
+Line 249524 : -+++++-++++++  # Define the output path for the scanner report in JSON format
+Line 249525 : -+++++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 249526 : -+++++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+Line 249527 : -+++++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 249528 : -+++++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 249529 : -+++++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+Line 249530 : -+++++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 249531 : -+++++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+Line 249532 : -+++++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+Line 249533 : -+++++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
+Line 249534 : -+++++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249535 : -+++++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+Line 249536 : -+++++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+Line 249537 : -+++++-++++++  jq --argjson lines "$line_numbers_array" '
+Line 249538 : -+++++-++++++    [.[] | 
+Line 249539 : -+++++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 249540 : -+++++-++++++      select(.violations | length > 0)]
+Line 249541 : -+++++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249542 : -+++++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+Line 249543 : -+++++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 249544 : -+++++-+++++-    echo "No issues found for line '70' in $file"
+Line 249545 : -+++++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 249546 : -+++++-++++++    echo "No issues found for changed lines in $file"
+Line 249547 : -+++++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+Line 249548 : -+++++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
+Line 249549 : -+++++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249550 : -+++++-++++++  echo "Filtered scanner report for $file (Changed lines):"
+Line 249551 : -+++++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249552 : -+++++-+++++@@ -53 +77 @@ done <<< "$changed_files"
+Line 249553 : -+++++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 249554 : -+++++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 249555 : -+++++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+Line 249556 : -+++++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+Line 249557 : -+++++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+Line 249558 : -+++++-+++++@@ -60,2 +84,2 @@ fi
+Line 249559 : -+++++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 249560 : -+++++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 249561 : -+++++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+Line 249562 : -+++++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+Line 249563 : -+++++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 249564 : -+++++-+++++-echo "Final filtered scanner report (Line '70'):"
+Line 249565 : -+++++-++++++echo "Final filtered scanner report (Changed lines):"
+Line 249566 : -+++++-+++++@@ -67 +91 @@ cat "$final_report"
+Line 249567 : -+++++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+Line 249568 : -+++++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+Line 249569 : -+++++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+Line 249570 : -+++++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+Line 249571 : -+++++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+Line 249572 : -+++++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+Line 249573 : -+++++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+Line 249574 : -+++++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+Line 249575 : -+++++-+++++@@ -77 +101 @@ else
+Line 249576 : -+++++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+Line 249577 : -+++++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+Line 249578 : -+++++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 249579 : -+++++-+++++deleted file mode 100644
+Line 249580 : -+++++-+++++index 9d692ac..0000000
+Line 249581 : -+++++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 249582 : -+++++-++++++++ /dev/null
+Line 249583 : -+++++-+++++@@ -1,24 +0,0 @@
+Line 249584 : -+++++-+++++-0
+Line 249585 : -+++++-+++++-1
+Line 249586 : -+++++-+++++-2
+Line 249587 : -+++++-+++++-3
+Line 249588 : -+++++-+++++-4
+Line 249589 : -+++++-+++++-5
+Line 249590 : -+++++-+++++-60
+Line 249591 : -+++++-+++++-642
+Line 249592 : -+++++-+++++-643
+Line 249593 : -+++++-+++++-644
+Line 249594 : -+++++-+++++-645
+Line 249595 : -+++++-+++++-646
+Line 249596 : -+++++-+++++-647
+Line 249597 : -+++++-+++++-648
+Line 249598 : -+++++-+++++-649
+Line 249599 : -+++++-+++++-650
+Line 249600 : -+++++-+++++-651
+Line 249601 : -+++++-+++++-652
+Line 249602 : -+++++-+++++-653
+Line 249603 : -+++++-+++++-654
+Line 249604 : -+++++-+++++-655
+Line 249605 : -+++++-+++++-656
+Line 249606 : -+++++-+++++-657
+Line 249607 : -+++++-+++++-70
+Line 249608 : -+++++++++++@@ -61 +61 @@ while IFS= read -r file; do
+Line 249609 : -+++++++++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 249610 : -++++++++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+Line 249611 : -+++++@@ -208,652 +117,881 @@ index 0000000..a6452b3
+Line 249612 : -+++++-+++++deleted file mode 100644
+Line 249613 : -+++++-+++++index 61d162d..0000000
+Line 249614 : -+++++-+++++--- a/changes.diff
+Line 249615 : -+++++-++++++++ /dev/null
+Line 249616 : -+++++-+++++@@ -1,647 +0,0 @@
+Line 249617 : -+++++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 249618 : -+++++-+++++-index 5b262e4..8c05f52 100644
+Line 249619 : -+++++-+++++---- a/.husky/pre-commit
+Line 249620 : -+++++-+++++-+++ b/.husky/pre-commit
+Line 249621 : -+++++-+++++-@@ -113 +113 @@ cat "$final_report"
+Line 249622 : -+++++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 249623 : -+++++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+Line 249624 : -+++++-+++++-diff --git a/changes.diff b/changes.diff
+Line 249625 : -+++++-+++++-index 9a218e6..4fe1995 100644
+Line 249626 : -+++++-+++++---- a/changes.diff
+Line 249627 : -+++++-+++++-+++ b/changes.diff
+Line 249628 : -+++++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 249629 : -+++++-+++++--index aa6762f..586962b 100644
+Line 249630 : -+++++-+++++-+index 586962b..5b262e4 100644
+Line 249631 : -+++++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+Line 249632 : -+++++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
+Line 249633 : -+++++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 249634 : -+++++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 249635 : -+++++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 249636 : -+++++-+++++---  # Extract line numbers as a comma-separated string for filtering later
+Line 249637 : -+++++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 249638 : -+++++-+++++--+  # Extract line numbers as an array for filtering later
+Line 249639 : -+++++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 249640 : -+++++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
+Line 249641 : -+++++-+++++---  if [ -z "$line_numbers" ]; then
+Line 249642 : -+++++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 249643 : -+++++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 249644 : -+++++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
+Line 249645 : -+++++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 249646 : -+++++-+++++--+  lines_for_filter="${lines_for_filter:1}"
+Line 249647 : -+++++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+Line 249648 : -+++++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+Line 249649 : -+++++-+++++-+-  awk -v file="$file" '
+Line 249650 : -+++++-+++++-++  # Extract only the changed line numbers for the file
+Line 249651 : -+++++-+++++-++  line_numbers=$(awk -v file="$file" '
+Line 249652 : -+++++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+Line 249653 : -+++++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+Line 249654 : -+++++-+++++-++  ' changes.diff)
+Line 249655 : -+++++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+Line 249656 : -+++++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+Line 249657 : -+++++-+++++-++  if [ -z "$line_numbers" ]; then
+Line 249658 : -+++++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+Line 249659 : -+++++-+++++-+-  # Extract line numbers as an array for filtering later
+Line 249660 : -+++++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 249661 : -+++++-+++++-++  # Convert the line numbers to a comma-separated string for matching
+Line 249662 : -+++++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+Line 249663 : -+++++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+Line 249664 : -+++++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
+Line 249665 : -+++++-+++++---  awk -v lines="$line_numbers" '
+Line 249666 : -+++++-+++++--+  awk -v lines="$lines_for_filter" '
+Line 249667 : -+++++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
+Line 249668 : -+++++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 249669 : -+++++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 249670 : -+++++-+++++--@@ -111 +115 @@ cat "$final_report"
+Line 249671 : -+++++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249672 : -+++++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 249673 : -+++++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
+Line 249674 : -+++++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+Line 249675 : -+++++-+++++-+-  # Ensure that line_numbers is not empty
+Line 249676 : -+++++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 249677 : -+++++-+++++-++  # Ensure that line_numbers_string is not empty
+Line 249678 : -+++++-+++++-++  if [ -z "$line_numbers_string" ]; then
+Line 249679 : -+++++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+Line 249680 : -+++++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+Line 249681 : -+++++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 249682 : -+++++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
+Line 249683 : -+++++-+++++-+-
+Line 249684 : -+++++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+Line 249685 : -+++++-+++++-+-  awk -v lines="$lines_for_filter" '
+Line 249686 : -+++++-+++++-++  awk -v lines="$line_numbers_string" '
+Line 249687 : -+++++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 249688 : -+++++-+++++--index 0e43eee..a206584 100644
+Line 249689 : -+++++-+++++-+index a206584..9d692ac 100644
+Line 249690 : -+++++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+Line 249691 : -+++++-+++++--@@ -1 +1,6 @@
+Line 249692 : -+++++-+++++---70 :           System.debug('Hi Hello');
+Line 249693 : -+++++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 249694 : -+++++-+++++--+1 : index 1ec7a54..870d508 100644
+Line 249695 : -+++++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 249696 : -+++++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 249697 : -+++++-+++++--+4 : -          System.debug('Hi');
+Line 249698 : -+++++-+++++--+70 :           System.debug('Hi');
+Line 249699 : -+++++-+++++-+@@ -1,6 +1,24 @@
+Line 249700 : -+++++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 249701 : -+++++-+++++-+-1 : index 1ec7a54..870d508 100644
+Line 249702 : -+++++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 249703 : -+++++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 249704 : -+++++-+++++-+-4 : -          System.debug('Hi');
+Line 249705 : -+++++-+++++-+-70 :           System.debug('Hi');
+Line 249706 : -+++++-+++++-++0
+Line 249707 : -+++++-+++++-++1
+Line 249708 : -+++++-+++++-++2
+Line 249709 : -+++++-+++++-++3
+Line 249710 : -+++++-+++++-++4
+Line 249711 : -+++++-+++++-++5
+Line 249712 : -+++++-+++++-++60
+Line 249713 : -+++++-+++++-++642
+Line 249714 : -+++++-+++++-++643
+Line 249715 : -+++++-+++++-++644
+Line 249716 : -+++++-+++++-++645
+Line 249717 : -+++++-+++++-++646
+Line 249718 : -+++++-+++++-++647
+Line 249719 : -+++++-+++++-++648
+Line 249720 : -+++++-+++++-++649
+Line 249721 : -+++++-+++++-++650
+Line 249722 : -+++++-+++++-++651
+Line 249723 : -+++++-+++++-++652
+Line 249724 : -+++++-+++++-++653
+Line 249725 : -+++++-+++++-++654
+Line 249726 : -+++++-+++++-++655
+Line 249727 : -+++++-+++++-++656
+Line 249728 : -+++++-+++++-++657
+Line 249729 : -+++++-+++++-++70
+Line 249730 : -+++++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+Line 249731 : -+++++-+++++--index 760971b..3dfa538 100644
+Line 249732 : -+++++-+++++-+index 3dfa538..9a218e6 100644
+Line 249733 : -+++++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+Line 249734 : -+++++-+++++---index 255a037..525d43a 100644
+Line 249735 : -+++++-+++++--+index 525d43a..aa6762f 100644
+Line 249736 : -+++++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 249737 : -+++++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
+Line 249738 : -+++++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 249739 : -+++++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
+Line 249740 : -+++++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 249741 : -+++++-+++++----  # Define the output path for the scanner report
+Line 249742 : -+++++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 249743 : -+++++-+++++---+  # Define the output path for the scanner report in CSV format
+Line 249744 : -+++++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 249745 : -+++++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 249746 : -+++++-+++++----  # Run the SFDX scanner on the file and generate the report
+Line 249747 : -+++++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 249748 : -+++++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 249749 : -+++++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 249750 : -+++++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
+Line 249751 : -+++++-+++++----  # Filter the scanner report based on the changed line numbers
+Line 249752 : -+++++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
+Line 249753 : -+++++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 249754 : -+++++-+++++----  jq --arg lines "$line_numbers" '
+Line 249755 : -+++++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 249756 : -+++++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249757 : -+++++-+++++---+  awk -v lines="$line_numbers" '
+Line 249758 : -+++++-+++++---+  BEGIN {
+Line 249759 : -+++++-+++++---+    FS=OFS=",";
+Line 249760 : -+++++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 249761 : -+++++-+++++---+    for (i in arr) {
+Line 249762 : -+++++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 249763 : -+++++-+++++---+    }
+Line 249764 : -+++++-+++++---+  }
+Line 249765 : -+++++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 249766 : -+++++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249767 : -+++++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
+Line 249768 : -+++++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 249769 : -+++++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 249770 : -+++++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
+Line 249771 : -+++++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249772 : -+++++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249773 : -+++++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
+Line 249774 : -+++++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 249775 : -+++++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 249776 : -+++++-+++++---@@ -95,2 +102,4 @@ fi
+Line 249777 : -+++++-+++++----# Combine all filtered reports into one final report
+Line 249778 : -+++++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 249779 : -+++++-+++++---+# Combine all filtered reports into one final report (optional)
+Line 249780 : -+++++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 249781 : -+++++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 249782 : -+++++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 249783 : -+++++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 249784 : -+++++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
+Line 249785 : -+++++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 249786 : -+++++-+++++---+echo "Final filtered scanner report:"
+Line 249787 : -+++++-+++++---+cat "$final_report"
+Line 249788 : -+++++-+++++---+
+Line 249789 : -+++++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 249790 : -+++++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249791 : -+++++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+Line 249792 : -+++++-+++++--+-    FS=OFS=",";
+Line 249793 : -+++++-+++++--++    FS=OFS=",";  # Define CSV format
+Line 249794 : -+++++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+Line 249795 : -+++++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 249796 : -+++++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 249797 : -+++++-+++++--+@@ -111 +111 @@ cat "$final_report"
+Line 249798 : -+++++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249799 : -+++++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249800 : -+++++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 249801 : -+++++-+++++--+new file mode 100644
+Line 249802 : -+++++-+++++--+index 0000000..0e43eee
+Line 249803 : -+++++-+++++--+--- /dev/null
+Line 249804 : -+++++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 249805 : -+++++-+++++--+@@ -0,0 +1 @@
+Line 249806 : -+++++-+++++--++70 :           System.debug('Hi Hello');
+Line 249807 : -+++++-+++++--+diff --git a/changes.diff b/changes.diff
+Line 249808 : -+++++-+++++--+new file mode 100644
+Line 249809 : -+++++-+++++--+index 0000000..760971b
+Line 249810 : -+++++-+++++--+--- /dev/null
+Line 249811 : -+++++-+++++--++++ b/changes.diff
+Line 249812 : -+++++-+++++--+@@ -0,0 +1,65 @@
+Line 249813 : -+++++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 249814 : -+++++-+++++--++index 255a037..525d43a 100644
+Line 249815 : -+++++-+++++--++--- a/.husky/pre-commit
+Line 249816 : -+++++-+++++--+++++ b/.husky/pre-commit
+Line 249817 : -+++++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+Line 249818 : -+++++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 249819 : -+++++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+Line 249820 : -+++++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 249821 : -+++++-+++++--++-  # Define the output path for the scanner report
+Line 249822 : -+++++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 249823 : -+++++-+++++--+++  # Define the output path for the scanner report in CSV format
+Line 249824 : -+++++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 249825 : -+++++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 249826 : -+++++-+++++--++-  # Run the SFDX scanner on the file and generate the report
+Line 249827 : -+++++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 249828 : -+++++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 249829 : -+++++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 249830 : -+++++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+Line 249831 : -+++++-+++++--++-  # Filter the scanner report based on the changed line numbers
+Line 249832 : -+++++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+Line 249833 : -+++++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 249834 : -+++++-+++++--++-  jq --arg lines "$line_numbers" '
+Line 249835 : -+++++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 249836 : -+++++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249837 : -+++++-+++++--+++  awk -v lines="$line_numbers" '
+Line 249838 : -+++++-+++++--+++  BEGIN {
+Line 249839 : -+++++-+++++--+++    FS=OFS=",";
+Line 249840 : -+++++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 249841 : -+++++-+++++--+++    for (i in arr) {
+Line 249842 : -+++++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 249843 : -+++++-+++++--+++    }
+Line 249844 : -+++++-+++++--+++  }
+Line 249845 : -+++++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 249846 : -+++++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249847 : -+++++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+Line 249848 : -+++++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 249849 : -+++++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 249850 : -+++++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+Line 249851 : -+++++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249852 : -+++++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 249853 : -+++++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+Line 249854 : -+++++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 249855 : -+++++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 249856 : -+++++-+++++--++@@ -95,2 +102,4 @@ fi
+Line 249857 : -+++++-+++++--++-# Combine all filtered reports into one final report
+Line 249858 : -+++++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 249859 : -+++++-+++++--+++# Combine all filtered reports into one final report (optional)
+Line 249860 : -+++++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 249861 : -+++++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 249862 : -+++++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 249863 : -+++++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 249864 : -+++++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 249865 : -+++++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 249866 : -+++++-+++++--+++echo "Final filtered scanner report:"
+Line 249867 : -+++++-+++++--+++cat "$final_report"
+Line 249868 : -+++++-+++++--+++
+Line 249869 : -+++++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 249870 : -+++++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249871 : -+++++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 249872 : -+++++-+++++--++index 1ec7a54..870d508 100644
+Line 249873 : -+++++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 249874 : -+++++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 249875 : -+++++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 249876 : -+++++-+++++--++-          System.debug('Hi');
+Line 249877 : -+++++-+++++--+++          System.debug('Hi Hello');
+Line 249878 : -+++++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 249879 : -+++++-+++++---index 1ec7a54..870d508 100644
+Line 249880 : -+++++-+++++--+index 870d508..1ec7a54 100644
+Line 249881 : -+++++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 249882 : -+++++-+++++----          System.debug('Hi');
+Line 249883 : -+++++-+++++---+          System.debug('Hi Hello');
+Line 249884 : -+++++-+++++--+-          System.debug('Hi Hello');
+Line 249885 : -+++++-+++++--++          System.debug('Hi');
+Line 249886 : -+++++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 249887 : -+++++-+++++--+new file mode 100644
+Line 249888 : -+++++-+++++--+index 0000000..5a3a1ac
+Line 249889 : -+++++-+++++--+--- /dev/null
+Line 249890 : -+++++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 249891 : -+++++-+++++--+@@ -0,0 +1 @@
+Line 249892 : -+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249893 : -+++++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 249894 : -+++++-+++++--+new file mode 100644
+Line 249895 : -+++++-+++++--+index 0000000..5a3a1ac
+Line 249896 : -+++++-+++++--+--- /dev/null
+Line 249897 : -+++++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 249898 : -+++++-+++++--+@@ -0,0 +1 @@
+Line 249899 : -+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249900 : -+++++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 249901 : -+++++-+++++--+new file mode 100644
+Line 249902 : -+++++-+++++--+index 0000000..e1ef0f0
+Line 249903 : -+++++-+++++--+--- /dev/null
+Line 249904 : -+++++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 249905 : -+++++-+++++--+@@ -0,0 +1,5 @@
+Line 249906 : -+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 249907 : -+++++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 249908 : -+++++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 249909 : -+++++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 249910 : -+++++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 249911 : -+++++-+++++-+-index 525d43a..aa6762f 100644
+Line 249912 : -+++++-+++++-++index aa6762f..586962b 100644
+Line 249913 : -+++++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+Line 249914 : -+++++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+Line 249915 : -+++++-+++++-+--    FS=OFS=",";
+Line 249916 : -+++++-+++++-+-+    FS=OFS=",";  # Define CSV format
+Line 249917 : -+++++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+Line 249918 : -+++++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 249919 : -+++++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 249920 : -+++++-+++++-+-@@ -111 +111 @@ cat "$final_report"
+Line 249921 : -+++++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249922 : -+++++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249923 : -+++++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+Line 249924 : -+++++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 249925 : -+++++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 249926 : -+++++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 249927 : -+++++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+Line 249928 : -+++++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 249929 : -+++++-+++++-+++  # Extract line numbers as an array for filtering later
+Line 249930 : -+++++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 249931 : -+++++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+Line 249932 : -+++++-+++++-++-  if [ -z "$line_numbers" ]; then
+Line 249933 : -+++++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 249934 : -+++++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 249935 : -+++++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+Line 249936 : -+++++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 249937 : -+++++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
+Line 249938 : -+++++-+++++-+++
+Line 249939 : -+++++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+Line 249940 : -+++++-+++++-++-  awk -v lines="$line_numbers" '
+Line 249941 : -+++++-+++++-+++  awk -v lines="$lines_for_filter" '
+Line 249942 : -+++++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+Line 249943 : -+++++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 249944 : -+++++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 249945 : -+++++-+++++-++@@ -111 +115 @@ cat "$final_report"
+Line 249946 : -+++++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 249947 : -+++++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 249948 : -+++++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 249949 : -+++++-+++++-+-new file mode 100644
+Line 249950 : -+++++-+++++-+-index 0000000..0e43eee
+Line 249951 : -+++++-+++++-+---- /dev/null
+Line 249952 : -+++++-+++++-++index 0e43eee..a206584 100644
+Line 249953 : -+++++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 249954 : -+++++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+Line 249955 : -+++++-+++++-+-@@ -0,0 +1 @@
+Line 249956 : -+++++-+++++-+-+70 :           System.debug('Hi Hello');
+Line 249957 : -+++++-+++++-++@@ -1 +1,6 @@
+Line 249958 : -+++++-+++++-++-70 :           System.debug('Hi Hello');
+Line 249959 : -+++++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 249960 : -+++++-+++++-+++1 : index 1ec7a54..870d508 100644
+Line 249961 : -+++++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 249962 : -+++++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 249963 : -+++++-+++++-+++4 : -          System.debug('Hi');
+Line 249964 : -+++++-+++++-+++70 :           System.debug('Hi');
+Line 249965 : -+++++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+Line 249966 : -+++++-+++++-+-new file mode 100644
+Line 249967 : -+++++-+++++-+-index 0000000..760971b
+Line 249968 : -+++++-+++++-+---- /dev/null
+Line 249969 : -+++++-+++++-++index 760971b..3dfa538 100644
+Line 249970 : -+++++-+++++-++--- a/changes.diff
+Line 249971 : -+++++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+Line 249972 : -+++++-+++++-+-@@ -0,0 +1,65 @@
+Line 249973 : -+++++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 249974 : -+++++-+++++-+-+index 255a037..525d43a 100644
+Line 249975 : -+++++-+++++-+-+--- a/.husky/pre-commit
+Line 249976 : -+++++-+++++-+-++++ b/.husky/pre-commit
+Line 249977 : -+++++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+Line 249978 : -+++++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 249979 : -+++++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+Line 249980 : -+++++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 249981 : -+++++-+++++-+-+-  # Define the output path for the scanner report
+Line 249982 : -+++++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 249983 : -+++++-+++++-+-++  # Define the output path for the scanner report in CSV format
+Line 249984 : -+++++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 249985 : -+++++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 249986 : -+++++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+Line 249987 : -+++++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 249988 : -+++++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 249989 : -+++++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 249990 : -+++++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+Line 249991 : -+++++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
+Line 249992 : -+++++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+Line 249993 : -+++++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 249994 : -+++++-+++++-+-+-  jq --arg lines "$line_numbers" '
+Line 249995 : -+++++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 249996 : -+++++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 249997 : -+++++-+++++-+-++  awk -v lines="$line_numbers" '
+Line 249998 : -+++++-+++++-+-++  BEGIN {
+Line 249999 : -+++++-+++++-+-++    FS=OFS=",";
+Line 250000 : -+++++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 250001 : -+++++-+++++-+-++    for (i in arr) {
+Line 250002 : -+++++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 250003 : -+++++-+++++-+-++    }
+Line 250004 : -+++++-+++++-+-++  }
+Line 250005 : -+++++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250006 : -+++++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250007 : -+++++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+Line 250008 : -+++++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 250009 : -+++++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 250010 : -+++++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+Line 250011 : -+++++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250012 : -+++++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250013 : -+++++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+Line 250014 : -+++++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 250015 : -+++++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 250016 : -+++++-+++++-+-+@@ -95,2 +102,4 @@ fi
+Line 250017 : -+++++-+++++-+-+-# Combine all filtered reports into one final report
+Line 250018 : -+++++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 250019 : -+++++-+++++-+-++# Combine all filtered reports into one final report (optional)
+Line 250020 : -+++++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 250021 : -+++++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 250022 : -+++++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 250023 : -+++++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 250024 : -+++++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+Line 250025 : -+++++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 250026 : -+++++-+++++-+-++echo "Final filtered scanner report:"
+Line 250027 : -+++++-+++++-+-++cat "$final_report"
+Line 250028 : -+++++-+++++-+-++
+Line 250029 : -+++++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 250030 : -+++++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250031 : -+++++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 250032 : -+++++-+++++-+-+index 1ec7a54..870d508 100644
+Line 250033 : -+++++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 250034 : -+++++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 250035 : -+++++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 250036 : -+++++-+++++-+-+-          System.debug('Hi');
+Line 250037 : -+++++-+++++-+-++          System.debug('Hi Hello');
+Line 250038 : -+++++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 250039 : -+++++-+++++-++-index 255a037..525d43a 100644
+Line 250040 : -+++++-+++++-+++index 525d43a..aa6762f 100644
+Line 250041 : -+++++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 250042 : -+++++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+Line 250043 : -+++++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 250044 : -+++++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+Line 250045 : -+++++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 250046 : -+++++-+++++-++--  # Define the output path for the scanner report
+Line 250047 : -+++++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 250048 : -+++++-+++++-++-+  # Define the output path for the scanner report in CSV format
+Line 250049 : -+++++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 250050 : -+++++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 250051 : -+++++-+++++-++--  # Run the SFDX scanner on the file and generate the report
+Line 250052 : -+++++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 250053 : -+++++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 250054 : -+++++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 250055 : -+++++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+Line 250056 : -+++++-+++++-++--  # Filter the scanner report based on the changed line numbers
+Line 250057 : -+++++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+Line 250058 : -+++++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 250059 : -+++++-+++++-++--  jq --arg lines "$line_numbers" '
+Line 250060 : -+++++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 250061 : -+++++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250062 : -+++++-+++++-++-+  awk -v lines="$line_numbers" '
+Line 250063 : -+++++-+++++-++-+  BEGIN {
+Line 250064 : -+++++-+++++-++-+    FS=OFS=",";
+Line 250065 : -+++++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 250066 : -+++++-+++++-++-+    for (i in arr) {
+Line 250067 : -+++++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 250068 : -+++++-+++++-++-+    }
+Line 250069 : -+++++-+++++-++-+  }
+Line 250070 : -+++++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250071 : -+++++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250072 : -+++++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+Line 250073 : -+++++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 250074 : -+++++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 250075 : -+++++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+Line 250076 : -+++++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250077 : -+++++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250078 : -+++++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+Line 250079 : -+++++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 250080 : -+++++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 250081 : -+++++-+++++-++-@@ -95,2 +102,4 @@ fi
+Line 250082 : -+++++-+++++-++--# Combine all filtered reports into one final report
+Line 250083 : -+++++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 250084 : -+++++-+++++-++-+# Combine all filtered reports into one final report (optional)
+Line 250085 : -+++++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 250086 : -+++++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 250087 : -+++++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 250088 : -+++++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 250089 : -+++++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+Line 250090 : -+++++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 250091 : -+++++-+++++-++-+echo "Final filtered scanner report:"
+Line 250092 : -+++++-+++++-++-+cat "$final_report"
+Line 250093 : -+++++-+++++-++-+
+Line 250094 : -+++++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 250095 : -+++++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250096 : -+++++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+Line 250097 : -+++++-+++++-+++-    FS=OFS=",";
+Line 250098 : -+++++-+++++-++++    FS=OFS=",";  # Define CSV format
+Line 250099 : -+++++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+Line 250100 : -+++++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250101 : -+++++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 250102 : -+++++-+++++-+++@@ -111 +111 @@ cat "$final_report"
+Line 250103 : -+++++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250104 : -+++++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250105 : -+++++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 250106 : -+++++-+++++-+++new file mode 100644
+Line 250107 : -+++++-+++++-+++index 0000000..0e43eee
+Line 250108 : -+++++-+++++-+++--- /dev/null
+Line 250109 : -+++++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 250110 : -+++++-+++++-+++@@ -0,0 +1 @@
+Line 250111 : -+++++-+++++-++++70 :           System.debug('Hi Hello');
+Line 250112 : -+++++-+++++-+++diff --git a/changes.diff b/changes.diff
+Line 250113 : -+++++-+++++-+++new file mode 100644
+Line 250114 : -+++++-+++++-+++index 0000000..760971b
+Line 250115 : -+++++-+++++-+++--- /dev/null
+Line 250116 : -+++++-+++++-++++++ b/changes.diff
+Line 250117 : -+++++-+++++-+++@@ -0,0 +1,65 @@
+Line 250118 : -+++++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 250119 : -+++++-+++++-++++index 255a037..525d43a 100644
+Line 250120 : -+++++-+++++-++++--- a/.husky/pre-commit
+Line 250121 : -+++++-+++++-+++++++ b/.husky/pre-commit
+Line 250122 : -+++++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+Line 250123 : -+++++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 250124 : -+++++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+Line 250125 : -+++++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 250126 : -+++++-+++++-++++-  # Define the output path for the scanner report
+Line 250127 : -+++++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 250128 : -+++++-+++++-+++++  # Define the output path for the scanner report in CSV format
+Line 250129 : -+++++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 250130 : -+++++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 250131 : -+++++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
+Line 250132 : -+++++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 250133 : -+++++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 250134 : -+++++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 250135 : -+++++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+Line 250136 : -+++++-+++++-++++-  # Filter the scanner report based on the changed line numbers
+Line 250137 : -+++++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+Line 250138 : -+++++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 250139 : -+++++-+++++-++++-  jq --arg lines "$line_numbers" '
+Line 250140 : -+++++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 250141 : -+++++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250142 : -+++++-+++++-+++++  awk -v lines="$line_numbers" '
+Line 250143 : -+++++-+++++-+++++  BEGIN {
+Line 250144 : -+++++-+++++-+++++    FS=OFS=",";
+Line 250145 : -+++++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 250146 : -+++++-+++++-+++++    for (i in arr) {
+Line 250147 : -+++++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 250148 : -+++++-+++++-+++++    }
+Line 250149 : -+++++-+++++-+++++  }
+Line 250150 : -+++++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250151 : -+++++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250152 : -+++++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+Line 250153 : -+++++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 250154 : -+++++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 250155 : -+++++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+Line 250156 : -+++++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250157 : -+++++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250158 : -+++++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+Line 250159 : -+++++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 250160 : -+++++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 250161 : -+++++-+++++-++++@@ -95,2 +102,4 @@ fi
+Line 250162 : -+++++-+++++-++++-# Combine all filtered reports into one final report
+Line 250163 : -+++++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 250164 : -+++++-+++++-+++++# Combine all filtered reports into one final report (optional)
+Line 250165 : -+++++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 250166 : -+++++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 250167 : -+++++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 250168 : -+++++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 250169 : -+++++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 250170 : -+++++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 250171 : -+++++-+++++-+++++echo "Final filtered scanner report:"
+Line 250172 : -+++++-+++++-+++++cat "$final_report"
+Line 250173 : -+++++-+++++-+++++
+Line 250174 : -+++++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 250175 : -+++++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250176 : -+++++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 250177 : -+++++-+++++-++++index 1ec7a54..870d508 100644
+Line 250178 : -+++++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 250179 : -+++++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 250180 : -+++++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 250181 : -+++++-+++++-++++-          System.debug('Hi');
+Line 250182 : -+++++-+++++-+++++          System.debug('Hi Hello');
+Line 250183 : -+++++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 250184 : -+++++-+++++-++-index 1ec7a54..870d508 100644
+Line 250185 : -+++++-+++++-+++index 870d508..1ec7a54 100644
+Line 250186 : -+++++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 250187 : -+++++-+++++-++--          System.debug('Hi');
+Line 250188 : -+++++-+++++-++-+          System.debug('Hi Hello');
+Line 250189 : -+++++-+++++-+++-          System.debug('Hi Hello');
+Line 250190 : -+++++-+++++-++++          System.debug('Hi');
+Line 250191 : -+++++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 250192 : -+++++-+++++-+++new file mode 100644
+Line 250193 : -+++++-+++++-+++index 0000000..5a3a1ac
+Line 250194 : -+++++-+++++-+++--- /dev/null
+Line 250195 : -+++++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 250196 : -+++++-+++++-+++@@ -0,0 +1 @@
+Line 250197 : -+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250198 : -+++++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 250199 : -+++++-+++++-+++new file mode 100644
+Line 250200 : -+++++-+++++-+++index 0000000..5a3a1ac
+Line 250201 : -+++++-+++++-+++--- /dev/null
+Line 250202 : -+++++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 250203 : -+++++-+++++-+++@@ -0,0 +1 @@
+Line 250204 : -+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250205 : -+++++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 250206 : -+++++-+++++-+++new file mode 100644
+Line 250207 : -+++++-+++++-+++index 0000000..e1ef0f0
+Line 250208 : -+++++-+++++-+++--- /dev/null
+Line 250209 : -+++++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 250210 : -+++++-+++++-+++@@ -0,0 +1,5 @@
+Line 250211 : -+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250212 : -+++++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 250213 : -+++++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 250214 : -+++++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 250215 : -+++++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 250216 : -+++++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 250217 : -+++++-+++++-+-index 870d508..1ec7a54 100644
+Line 250218 : -+++++-+++++-++index 1ec7a54..870d508 100644
+Line 250219 : -+++++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+Line 250220 : -+++++-+++++-+--          System.debug('Hi Hello');
+Line 250221 : -+++++-+++++-+-+          System.debug('Hi');
+Line 250222 : -+++++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 250223 : -+++++-+++++-+-new file mode 100644
+Line 250224 : -+++++-+++++-+-index 0000000..5a3a1ac
+Line 250225 : -+++++-+++++-+---- /dev/null
+Line 250226 : -+++++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 250227 : -+++++-+++++-+-@@ -0,0 +1 @@
+Line 250228 : -+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250229 : -+++++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 250230 : -+++++-+++++-+-new file mode 100644
+Line 250231 : -+++++-+++++-+-index 0000000..5a3a1ac
+Line 250232 : -+++++-+++++-+---- /dev/null
+Line 250233 : -+++++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 250234 : -+++++-+++++-+-@@ -0,0 +1 @@
+Line 250235 : -+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250236 : -+++++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 250237 : -+++++-+++++-+-new file mode 100644
+Line 250238 : -+++++-+++++-+-index 0000000..e1ef0f0
+Line 250239 : -+++++-+++++-+---- /dev/null
+Line 250240 : -+++++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 250241 : -+++++-+++++-+-@@ -0,0 +1,5 @@
+Line 250242 : -+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250243 : -+++++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 250244 : -+++++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 250245 : -+++++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 250246 : -+++++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 250247 : -+++++-+++++-++-          System.debug('Hi');
+Line 250248 : -+++++-+++++-+++          System.debug('Hi Hello');
+Line 250249 : -+++++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 250250 : -+++++-+++++--index 1ec7a54..870d508 100644
+Line 250251 : -+++++-+++++-+index 870d508..5eafcac 100644
+Line 250252 : -+++++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+Line 250253 : -+++++-+++++---          System.debug('Hi');
+Line 250254 : -+++++-+++++--+          System.debug('Hi Hello');
+Line 250255 : -+++++-+++++-+-          System.debug('Hi Hello');
+Line 250256 : -+++++-+++++-++          System.debug('Happy');
+Line 250257 : -+++++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 250258 : -+++++-+++++-index 5eafcac..1ec7a54 100644
+Line 250259 : -+++++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
+Line 250260 : -+++++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+Line 250261 : -+++++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 250262 : -+++++-+++++--          System.debug('Happy');
+Line 250263 : -+++++-+++++-+          System.debug('Hi');
+Line 250264 : -+++++++++++new file mode 100644
+Line 250265 : -+++++++++++index 0000000..f9d24dc
+Line 250266 : -+++++++++++--- /dev/null
+Line 250267 : -++++++++++++++ b/changes.diff
+Line 250268 : -+++++++++++@@ -0,0 +1,876 @@
+Line 250269 : -++++++++++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 250270 : -++++++++++++index 19cfdbc..daf61a1 100644
+Line 250271 : -++++++++++++--- a/.husky/pre-commit
+Line 250272 : -+++++++++++++++ b/.husky/pre-commit
+Line 250273 : -++++++++++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+Line 250274 : -++++++++++++-  # Define the output path for the scanner report in CSV format
+Line 250275 : -++++++++++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 250276 : -+++++++++++++  # Extract only the changed line numbers for the file
+Line 250277 : -+++++++++++++  line_numbers=$(awk -v file="$file" '
+Line 250278 : -+++++++++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+Line 250279 : -+++++++++++++    /^diff --git/ {inside=0}
+Line 250280 : -+++++++++++++    $0 ~ file {inside=1}
+Line 250281 : -+++++++++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+Line 250282 : -+++++++++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 250283 : -+++++++++++++  ' changes.diff)
+Line 250284 : -+++++++++++++
+Line 250285 : -+++++++++++++  # If no changed lines are found for this file, skip it
+Line 250286 : -+++++++++++++  if [ -z "$line_numbers" ]; then
+Line 250287 : -+++++++++++++    echo "No changed lines found in $file"
+Line 250288 : -+++++++++++++    continue
+Line 250289 : -+++++++++++++  fi
+Line 250290 : -+++++++++++++
+Line 250291 : -+++++++++++++  # Convert the line numbers to a JSON array format for jq filtering
+Line 250292 : -+++++++++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+Line 250293 : -+++++++++++++
+Line 250294 : -+++++++++++++  echo "Changed lines for $file: $line_numbers_array"
+Line 250295 : -+++++++++++++
+Line 250296 : -+++++++++++++  # Define the output path for the scanner report in JSON format
+Line 250297 : -+++++++++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 250298 : -++++++++++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+Line 250299 : -++++++++++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 250300 : -++++++++++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 250301 : -+++++++++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+Line 250302 : -+++++++++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 250303 : -++++++++++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+Line 250304 : -++++++++++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+Line 250305 : -++++++++++++-  echo "Filtering scanner report for $file for Line '70'..."
+Line 250306 : -++++++++++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250307 : -+++++++++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+Line 250308 : -+++++++++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+Line 250309 : -+++++++++++++  jq --argjson lines "$line_numbers_array" '
+Line 250310 : -+++++++++++++    [.[] | 
+Line 250311 : -+++++++++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+Line 250312 : -+++++++++++++      select(.violations | length > 0)]
+Line 250313 : -+++++++++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250314 : -++++++++++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+Line 250315 : -++++++++++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 250316 : -++++++++++++-    echo "No issues found for line '70' in $file"
+Line 250317 : -+++++++++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 250318 : -+++++++++++++    echo "No issues found for changed lines in $file"
+Line 250319 : -++++++++++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+Line 250320 : -++++++++++++-  echo "Filtered scanner report for $file (Line '70'):"
+Line 250321 : -++++++++++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250322 : -+++++++++++++  echo "Filtered scanner report for $file (Changed lines):"
+Line 250323 : -+++++++++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250324 : -++++++++++++@@ -53 +77 @@ done <<< "$changed_files"
+Line 250325 : -++++++++++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 250326 : -+++++++++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 250327 : -++++++++++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+Line 250328 : -++++++++++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+Line 250329 : -+++++++++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+Line 250330 : -++++++++++++@@ -60,2 +84,2 @@ fi
+Line 250331 : -++++++++++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 250332 : -++++++++++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 250333 : -+++++++++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+Line 250334 : -+++++++++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+Line 250335 : -++++++++++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 250336 : -++++++++++++-echo "Final filtered scanner report (Line '70'):"
+Line 250337 : -+++++++++++++echo "Final filtered scanner report (Changed lines):"
+Line 250338 : -++++++++++++@@ -67 +91 @@ cat "$final_report"
+Line 250339 : -++++++++++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+Line 250340 : -+++++++++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+Line 250341 : -++++++++++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+Line 250342 : -++++++++++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+Line 250343 : -+++++++++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+Line 250344 : -++++++++++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+Line 250345 : -++++++++++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+Line 250346 : -+++++++++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+Line 250347 : -++++++++++++@@ -77 +101 @@ else
+Line 250348 : -++++++++++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+Line 250349 : -+++++++++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+Line 250350 : -++++++++++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 250351 : -++++++++++++deleted file mode 100644
+Line 250352 : -++++++++++++index 9d692ac..0000000
+Line 250353 : -++++++++++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 250354 : -+++++++++++++++ /dev/null
+Line 250355 : -++++++++++++@@ -1,24 +0,0 @@
+Line 250356 : -++++++++++++-0
+Line 250357 : -++++++++++++-1
+Line 250358 : -++++++++++++-2
+Line 250359 : -++++++++++++-3
+Line 250360 : -++++++++++++-4
+Line 250361 : -++++++++++++-5
+Line 250362 : -++++++++++++-60
+Line 250363 : -++++++++++++-642
+Line 250364 : -++++++++++++-643
+Line 250365 : -++++++++++++-644
+Line 250366 : -++++++++++++-645
+Line 250367 : -++++++++++++-646
+Line 250368 : -++++++++++++-647
+Line 250369 : -++++++++++++-648
+Line 250370 : -++++++++++++-649
+Line 250371 : -++++++++++++-650
+Line 250372 : -++++++++++++-651
+Line 250373 : -++++++++++++-652
+Line 250374 : -++++++++++++-653
+Line 250375 : -++++++++++++-654
+Line 250376 : -++++++++++++-655
+Line 250377 : -++++++++++++-656
+Line 250378 : -++++++++++++-657
+Line 250379 : -++++++++++++-70
+Line 250380 : -++++++++++++diff --git a/changes.diff b/changes.diff
+Line 250381 : -++++++++++++deleted file mode 100644
+Line 250382 : -++++++++++++index 61d162d..0000000
+Line 250383 : -++++++++++++--- a/changes.diff
+Line 250384 : -+++++++++++++++ /dev/null
+Line 250385 : -++++++++++++@@ -1,647 +0,0 @@
+Line 250386 : -++++++++++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 250387 : -++++++++++++-index 5b262e4..8c05f52 100644
+Line 250388 : -++++++++++++---- a/.husky/pre-commit
+Line 250389 : -++++++++++++-+++ b/.husky/pre-commit
+Line 250390 : -++++++++++++-@@ -113 +113 @@ cat "$final_report"
+Line 250391 : -++++++++++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 250392 : -++++++++++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+Line 250393 : -++++++++++++-diff --git a/changes.diff b/changes.diff
+Line 250394 : -++++++++++++-index 9a218e6..4fe1995 100644
+Line 250395 : -++++++++++++---- a/changes.diff
+Line 250396 : -++++++++++++-+++ b/changes.diff
+Line 250397 : -++++++++++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 250398 : -++++++++++++--index aa6762f..586962b 100644
+Line 250399 : -++++++++++++-+index 586962b..5b262e4 100644
+Line 250400 : -++++++++++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+Line 250401 : -++++++++++++--@@ -41 +41 @@ while IFS= read -r file; do
+Line 250402 : -++++++++++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 250403 : -++++++++++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 250404 : -++++++++++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 250405 : -++++++++++++---  # Extract line numbers as a comma-separated string for filtering later
+Line 250406 : -++++++++++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 250407 : -++++++++++++--+  # Extract line numbers as an array for filtering later
+Line 250408 : -++++++++++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 250409 : -++++++++++++--@@ -66 +66 @@ while IFS= read -r file; do
+Line 250410 : -++++++++++++---  if [ -z "$line_numbers" ]; then
+Line 250411 : -++++++++++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 250412 : -++++++++++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 250413 : -++++++++++++--+  # Convert the array of line numbers into a format that can be used by awk
+Line 250414 : -++++++++++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 250415 : -++++++++++++--+  lines_for_filter="${lines_for_filter:1}"
+Line 250416 : -++++++++++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+Line 250417 : -++++++++++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+Line 250418 : -++++++++++++-+-  awk -v file="$file" '
+Line 250419 : -++++++++++++-++  # Extract only the changed line numbers for the file
+Line 250420 : -++++++++++++-++  line_numbers=$(awk -v file="$file" '
+Line 250421 : -++++++++++++-+@@ -42 +42 @@ while IFS= read -r file; do
+Line 250422 : -++++++++++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+Line 250423 : -++++++++++++-++  ' changes.diff)
+Line 250424 : -++++++++++++-+@@ -45 +45 @@ while IFS= read -r file; do
+Line 250425 : -++++++++++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+Line 250426 : -++++++++++++-++  if [ -z "$line_numbers" ]; then
+Line 250427 : -++++++++++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+Line 250428 : -++++++++++++-+-  # Extract line numbers as an array for filtering later
+Line 250429 : -++++++++++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 250430 : -++++++++++++-++  # Convert the line numbers to a comma-separated string for matching
+Line 250431 : -++++++++++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+Line 250432 : -++++++++++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+Line 250433 : -++++++++++++--@@ -73 +77 @@ while IFS= read -r file; do
+Line 250434 : -++++++++++++---  awk -v lines="$line_numbers" '
+Line 250435 : -++++++++++++--+  awk -v lines="$lines_for_filter" '
+Line 250436 : -++++++++++++--@@ -81 +85 @@ while IFS= read -r file; do
+Line 250437 : -++++++++++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 250438 : -++++++++++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 250439 : -++++++++++++--@@ -111 +115 @@ cat "$final_report"
+Line 250440 : -++++++++++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250441 : -++++++++++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 250442 : -++++++++++++-++  echo "Changed lines for $file: $line_numbers_string"
+Line 250443 : -++++++++++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+Line 250444 : -++++++++++++-+-  # Ensure that line_numbers is not empty
+Line 250445 : -++++++++++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 250446 : -++++++++++++-++  # Ensure that line_numbers_string is not empty
+Line 250447 : -++++++++++++-++  if [ -z "$line_numbers_string" ]; then
+Line 250448 : -++++++++++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+Line 250449 : -++++++++++++-+-  # Convert the array of line numbers into a format that can be used by awk
+Line 250450 : -++++++++++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 250451 : -++++++++++++-+-  lines_for_filter="${lines_for_filter:1}"
+Line 250452 : -++++++++++++-+-
+Line 250453 : -++++++++++++-+@@ -77 +75 @@ while IFS= read -r file; do
+Line 250454 : -++++++++++++-+-  awk -v lines="$lines_for_filter" '
+Line 250455 : -++++++++++++-++  awk -v lines="$line_numbers_string" '
+Line 250456 : -++++++++++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 250457 : -++++++++++++--index 0e43eee..a206584 100644
+Line 250458 : -++++++++++++-+index a206584..9d692ac 100644
+Line 250459 : -++++++++++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+Line 250460 : -++++++++++++--@@ -1 +1,6 @@
+Line 250461 : -++++++++++++---70 :           System.debug('Hi Hello');
+Line 250462 : -++++++++++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 250463 : -++++++++++++--+1 : index 1ec7a54..870d508 100644
+Line 250464 : -++++++++++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 250465 : -++++++++++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 250466 : -++++++++++++--+4 : -          System.debug('Hi');
+Line 250467 : -++++++++++++--+70 :           System.debug('Hi');
+Line 250468 : -++++++++++++-+@@ -1,6 +1,24 @@
+Line 250469 : -++++++++++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 250470 : -++++++++++++-+-1 : index 1ec7a54..870d508 100644
+Line 250471 : -++++++++++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 250472 : -++++++++++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 250473 : -++++++++++++-+-4 : -          System.debug('Hi');
+Line 250474 : -++++++++++++-+-70 :           System.debug('Hi');
+Line 250475 : -++++++++++++-++0
+Line 250476 : -++++++++++++-++1
+Line 250477 : -++++++++++++-++2
+Line 250478 : -++++++++++++-++3
+Line 250479 : -++++++++++++-++4
+Line 250480 : -++++++++++++-++5
+Line 250481 : -++++++++++++-++60
+Line 250482 : -++++++++++++-++642
+Line 250483 : -++++++++++++-++643
+Line 250484 : -++++++++++++-++644
+Line 250485 : -++++++++++++-++645
+Line 250486 : -++++++++++++-++646
+Line 250487 : -++++++++++++-++647
+Line 250488 : -++++++++++++-++648
+Line 250489 : -++++++++++++-++649
+Line 250490 : -++++++++++++-++650
+Line 250491 : -++++++++++++-++651
+Line 250492 : -++++++++++++-++652
+Line 250493 : -++++++++++++-++653
+Line 250494 : -++++++++++++-++654
+Line 250495 : -++++++++++++-++655
+Line 250496 : -++++++++++++-++656
+Line 250497 : -++++++++++++-++657
+Line 250498 : -++++++++++++-++70
+Line 250499 : -++++++++++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+Line 250500 : -++++++++++++--index 760971b..3dfa538 100644
+Line 250501 : -++++++++++++-+index 3dfa538..9a218e6 100644
+Line 250502 : -++++++++++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+Line 250503 : -++++++++++++---index 255a037..525d43a 100644
+Line 250504 : -++++++++++++--+index 525d43a..aa6762f 100644
+Line 250505 : -++++++++++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 250506 : -++++++++++++---@@ -50 +50 @@ while IFS= read -r file; do
+Line 250507 : -++++++++++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 250508 : -++++++++++++---+  # Extract line numbers as a comma-separated string for filtering later
+Line 250509 : -++++++++++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 250510 : -++++++++++++----  # Define the output path for the scanner report
+Line 250511 : -++++++++++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 250512 : -++++++++++++---+  # Define the output path for the scanner report in CSV format
+Line 250513 : -++++++++++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 250514 : -++++++++++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 250515 : -++++++++++++----  # Run the SFDX scanner on the file and generate the report
+Line 250516 : -++++++++++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 250517 : -++++++++++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 250518 : -++++++++++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 250519 : -++++++++++++---@@ -71 +71 @@ while IFS= read -r file; do
+Line 250520 : -++++++++++++----  # Filter the scanner report based on the changed line numbers
+Line 250521 : -++++++++++++---+  # Filter the CSV scanner report based on the changed line numbers
+Line 250522 : -++++++++++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 250523 : -++++++++++++----  jq --arg lines "$line_numbers" '
+Line 250524 : -++++++++++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 250525 : -++++++++++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250526 : -++++++++++++---+  awk -v lines="$line_numbers" '
+Line 250527 : -++++++++++++---+  BEGIN {
+Line 250528 : -++++++++++++---+    FS=OFS=",";
+Line 250529 : -++++++++++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 250530 : -++++++++++++---+    for (i in arr) {
+Line 250531 : -++++++++++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 250532 : -++++++++++++---+    }
+Line 250533 : -++++++++++++---+  }
+Line 250534 : -++++++++++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250535 : -++++++++++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250536 : -++++++++++++---@@ -78 +85 @@ while IFS= read -r file; do
+Line 250537 : -++++++++++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 250538 : -++++++++++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 250539 : -++++++++++++---@@ -84 +91 @@ while IFS= read -r file; do
+Line 250540 : -++++++++++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250541 : -++++++++++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250542 : -++++++++++++---@@ -89 +96 @@ done <<< "$changed_files"
+Line 250543 : -++++++++++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 250544 : -++++++++++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 250545 : -++++++++++++---@@ -95,2 +102,4 @@ fi
+Line 250546 : -++++++++++++----# Combine all filtered reports into one final report
+Line 250547 : -++++++++++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 250548 : -++++++++++++---+# Combine all filtered reports into one final report (optional)
+Line 250549 : -++++++++++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 250550 : -++++++++++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 250551 : -++++++++++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 250552 : -++++++++++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 250553 : -++++++++++++----# Parse the final filtered scanner report and check for severity 3 issues
+Line 250554 : -++++++++++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 250555 : -++++++++++++---+echo "Final filtered scanner report:"
+Line 250556 : -++++++++++++---+cat "$final_report"
+Line 250557 : -++++++++++++---+
+Line 250558 : -++++++++++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 250559 : -++++++++++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250560 : -++++++++++++--+@@ -75 +75 @@ while IFS= read -r file; do
+Line 250561 : -++++++++++++--+-    FS=OFS=",";
+Line 250562 : -++++++++++++--++    FS=OFS=",";  # Define CSV format
+Line 250563 : -++++++++++++--+@@ -81 +81 @@ while IFS= read -r file; do
+Line 250564 : -++++++++++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250565 : -++++++++++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 250566 : -++++++++++++--+@@ -111 +111 @@ cat "$final_report"
+Line 250567 : -++++++++++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250568 : -++++++++++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250569 : -++++++++++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 250570 : -++++++++++++--+new file mode 100644
+Line 250571 : -++++++++++++--+index 0000000..0e43eee
+Line 250572 : -++++++++++++--+--- /dev/null
+Line 250573 : -++++++++++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 250574 : -++++++++++++--+@@ -0,0 +1 @@
+Line 250575 : -++++++++++++--++70 :           System.debug('Hi Hello');
+Line 250576 : -++++++++++++--+diff --git a/changes.diff b/changes.diff
+Line 250577 : -++++++++++++--+new file mode 100644
+Line 250578 : -++++++++++++--+index 0000000..760971b
+Line 250579 : -++++++++++++--+--- /dev/null
+Line 250580 : -++++++++++++--++++ b/changes.diff
+Line 250581 : -++++++++++++--+@@ -0,0 +1,65 @@
+Line 250582 : -++++++++++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 250583 : -++++++++++++--++index 255a037..525d43a 100644
+Line 250584 : -++++++++++++--++--- a/.husky/pre-commit
+Line 250585 : -++++++++++++--+++++ b/.husky/pre-commit
+Line 250586 : -++++++++++++--++@@ -50 +50 @@ while IFS= read -r file; do
+Line 250587 : -++++++++++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 250588 : -++++++++++++--+++  # Extract line numbers as a comma-separated string for filtering later
+Line 250589 : -++++++++++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 250590 : -++++++++++++--++-  # Define the output path for the scanner report
+Line 250591 : -++++++++++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 250592 : -++++++++++++--+++  # Define the output path for the scanner report in CSV format
+Line 250593 : -++++++++++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 250594 : -++++++++++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 250595 : -++++++++++++--++-  # Run the SFDX scanner on the file and generate the report
+Line 250596 : -++++++++++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 250597 : -++++++++++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 250598 : -++++++++++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 250599 : -++++++++++++--++@@ -71 +71 @@ while IFS= read -r file; do
+Line 250600 : -++++++++++++--++-  # Filter the scanner report based on the changed line numbers
+Line 250601 : -++++++++++++--+++  # Filter the CSV scanner report based on the changed line numbers
+Line 250602 : -++++++++++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 250603 : -++++++++++++--++-  jq --arg lines "$line_numbers" '
+Line 250604 : -++++++++++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 250605 : -++++++++++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250606 : -++++++++++++--+++  awk -v lines="$line_numbers" '
+Line 250607 : -++++++++++++--+++  BEGIN {
+Line 250608 : -++++++++++++--+++    FS=OFS=",";
+Line 250609 : -++++++++++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 250610 : -++++++++++++--+++    for (i in arr) {
+Line 250611 : -++++++++++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 250612 : -++++++++++++--+++    }
+Line 250613 : -++++++++++++--+++  }
+Line 250614 : -++++++++++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250615 : -++++++++++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250616 : -++++++++++++--++@@ -78 +85 @@ while IFS= read -r file; do
+Line 250617 : -++++++++++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 250618 : -++++++++++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 250619 : -++++++++++++--++@@ -84 +91 @@ while IFS= read -r file; do
+Line 250620 : -++++++++++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250621 : -++++++++++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250622 : -++++++++++++--++@@ -89 +96 @@ done <<< "$changed_files"
+Line 250623 : -++++++++++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 250624 : -++++++++++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 250625 : -++++++++++++--++@@ -95,2 +102,4 @@ fi
+Line 250626 : -++++++++++++--++-# Combine all filtered reports into one final report
+Line 250627 : -++++++++++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 250628 : -++++++++++++--+++# Combine all filtered reports into one final report (optional)
+Line 250629 : -++++++++++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 250630 : -++++++++++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 250631 : -++++++++++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 250632 : -++++++++++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 250633 : -++++++++++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 250634 : -++++++++++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 250635 : -++++++++++++--+++echo "Final filtered scanner report:"
+Line 250636 : -++++++++++++--+++cat "$final_report"
+Line 250637 : -++++++++++++--+++
+Line 250638 : -++++++++++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 250639 : -++++++++++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250640 : -++++++++++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 250641 : -++++++++++++--++index 1ec7a54..870d508 100644
+Line 250642 : -++++++++++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 250643 : -++++++++++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 250644 : -++++++++++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 250645 : -++++++++++++--++-          System.debug('Hi');
+Line 250646 : -++++++++++++--+++          System.debug('Hi Hello');
+Line 250647 : -++++++++++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 250648 : -++++++++++++---index 1ec7a54..870d508 100644
+Line 250649 : -++++++++++++--+index 870d508..1ec7a54 100644
+Line 250650 : -++++++++++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 250651 : -++++++++++++----          System.debug('Hi');
+Line 250652 : -++++++++++++---+          System.debug('Hi Hello');
+Line 250653 : -++++++++++++--+-          System.debug('Hi Hello');
+Line 250654 : -++++++++++++--++          System.debug('Hi');
+Line 250655 : -++++++++++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 250656 : -++++++++++++--+new file mode 100644
+Line 250657 : -++++++++++++--+index 0000000..5a3a1ac
+Line 250658 : -++++++++++++--+--- /dev/null
+Line 250659 : -++++++++++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 250660 : -++++++++++++--+@@ -0,0 +1 @@
+Line 250661 : -++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250662 : -++++++++++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 250663 : -++++++++++++--+new file mode 100644
+Line 250664 : -++++++++++++--+index 0000000..5a3a1ac
+Line 250665 : -++++++++++++--+--- /dev/null
+Line 250666 : -++++++++++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 250667 : -++++++++++++--+@@ -0,0 +1 @@
+Line 250668 : -++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250669 : -++++++++++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 250670 : -++++++++++++--+new file mode 100644
+Line 250671 : -++++++++++++--+index 0000000..e1ef0f0
+Line 250672 : -++++++++++++--+--- /dev/null
+Line 250673 : -++++++++++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 250674 : -++++++++++++--+@@ -0,0 +1,5 @@
+Line 250675 : -++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250676 : -++++++++++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 250677 : -++++++++++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 250678 : -++++++++++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 250679 : -++++++++++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 250680 : -++++++++++++-+-index 525d43a..aa6762f 100644
+Line 250681 : -++++++++++++-++index aa6762f..586962b 100644
+Line 250682 : -++++++++++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+Line 250683 : -++++++++++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+Line 250684 : -++++++++++++-+--    FS=OFS=",";
+Line 250685 : -++++++++++++-+-+    FS=OFS=",";  # Define CSV format
+Line 250686 : -++++++++++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+Line 250687 : -++++++++++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250688 : -++++++++++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 250689 : -++++++++++++-+-@@ -111 +111 @@ cat "$final_report"
+Line 250690 : -++++++++++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250691 : -++++++++++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250692 : -++++++++++++-++@@ -41 +41 @@ while IFS= read -r file; do
+Line 250693 : -++++++++++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+Line 250694 : -++++++++++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+Line 250695 : -++++++++++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+Line 250696 : -++++++++++++-++-  # Extract line numbers as a comma-separated string for filtering later
+Line 250697 : -++++++++++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+Line 250698 : -++++++++++++-+++  # Extract line numbers as an array for filtering later
+Line 250699 : -++++++++++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+Line 250700 : -++++++++++++-++@@ -66 +66 @@ while IFS= read -r file; do
+Line 250701 : -++++++++++++-++-  if [ -z "$line_numbers" ]; then
+Line 250702 : -++++++++++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+Line 250703 : -++++++++++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+Line 250704 : -++++++++++++-+++  # Convert the array of line numbers into a format that can be used by awk
+Line 250705 : -++++++++++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+Line 250706 : -++++++++++++-+++  lines_for_filter="${lines_for_filter:1}"
+Line 250707 : -++++++++++++-+++
+Line 250708 : -++++++++++++-++@@ -73 +77 @@ while IFS= read -r file; do
+Line 250709 : -++++++++++++-++-  awk -v lines="$line_numbers" '
+Line 250710 : -++++++++++++-+++  awk -v lines="$lines_for_filter" '
+Line 250711 : -++++++++++++-++@@ -81 +85 @@ while IFS= read -r file; do
+Line 250712 : -++++++++++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 250713 : -++++++++++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+Line 250714 : -++++++++++++-++@@ -111 +115 @@ cat "$final_report"
+Line 250715 : -++++++++++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250716 : -++++++++++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+Line 250717 : -++++++++++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+Line 250718 : -++++++++++++-+-new file mode 100644
+Line 250719 : -++++++++++++-+-index 0000000..0e43eee
+Line 250720 : -++++++++++++-+---- /dev/null
+Line 250721 : -++++++++++++-++index 0e43eee..a206584 100644
+Line 250722 : -++++++++++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 250723 : -++++++++++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+Line 250724 : -++++++++++++-+-@@ -0,0 +1 @@
+Line 250725 : -++++++++++++-+-+70 :           System.debug('Hi Hello');
+Line 250726 : -++++++++++++-++@@ -1 +1,6 @@
+Line 250727 : -++++++++++++-++-70 :           System.debug('Hi Hello');
+Line 250728 : -++++++++++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 250729 : -++++++++++++-+++1 : index 1ec7a54..870d508 100644
+Line 250730 : -++++++++++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+Line 250731 : -++++++++++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 250732 : -++++++++++++-+++4 : -          System.debug('Hi');
+Line 250733 : -++++++++++++-+++70 :           System.debug('Hi');
+Line 250734 : -++++++++++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+Line 250735 : -++++++++++++-+-new file mode 100644
+Line 250736 : -++++++++++++-+-index 0000000..760971b
+Line 250737 : -++++++++++++-+---- /dev/null
+Line 250738 : -++++++++++++-++index 760971b..3dfa538 100644
+Line 250739 : -++++++++++++-++--- a/changes.diff
+Line 250740 : -++++++++++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+Line 250741 : -++++++++++++-+-@@ -0,0 +1,65 @@
+Line 250742 : -++++++++++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 250743 : -++++++++++++-+-+index 255a037..525d43a 100644
+Line 250744 : -++++++++++++-+-+--- a/.husky/pre-commit
+Line 250745 : -++++++++++++-+-++++ b/.husky/pre-commit
+Line 250746 : -++++++++++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+Line 250747 : -++++++++++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 250748 : -++++++++++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+Line 250749 : -++++++++++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 250750 : -++++++++++++-+-+-  # Define the output path for the scanner report
+Line 250751 : -++++++++++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 250752 : -++++++++++++-+-++  # Define the output path for the scanner report in CSV format
+Line 250753 : -++++++++++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 250754 : -++++++++++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 250755 : -++++++++++++-+-+-  # Run the SFDX scanner on the file and generate the report
+Line 250756 : -++++++++++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 250757 : -++++++++++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 250758 : -++++++++++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 250759 : -++++++++++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+Line 250760 : -++++++++++++-+-+-  # Filter the scanner report based on the changed line numbers
+Line 250761 : -++++++++++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+Line 250762 : -++++++++++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 250763 : -++++++++++++-+-+-  jq --arg lines "$line_numbers" '
+Line 250764 : -++++++++++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 250765 : -++++++++++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250766 : -++++++++++++-+-++  awk -v lines="$line_numbers" '
+Line 250767 : -++++++++++++-+-++  BEGIN {
+Line 250768 : -++++++++++++-+-++    FS=OFS=",";
+Line 250769 : -++++++++++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 250770 : -++++++++++++-+-++    for (i in arr) {
+Line 250771 : -++++++++++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 250772 : -++++++++++++-+-++    }
+Line 250773 : -++++++++++++-+-++  }
+Line 250774 : -++++++++++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250775 : -++++++++++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250776 : -++++++++++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+Line 250777 : -++++++++++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 250778 : -++++++++++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 250779 : -++++++++++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+Line 250780 : -++++++++++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250781 : -++++++++++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250782 : -++++++++++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+Line 250783 : -++++++++++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 250784 : -++++++++++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 250785 : -++++++++++++-+-+@@ -95,2 +102,4 @@ fi
+Line 250786 : -++++++++++++-+-+-# Combine all filtered reports into one final report
+Line 250787 : -++++++++++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 250788 : -++++++++++++-+-++# Combine all filtered reports into one final report (optional)
+Line 250789 : -++++++++++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 250790 : -++++++++++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 250791 : -++++++++++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 250792 : -++++++++++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 250793 : -++++++++++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+Line 250794 : -++++++++++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 250795 : -++++++++++++-+-++echo "Final filtered scanner report:"
+Line 250796 : -++++++++++++-+-++cat "$final_report"
+Line 250797 : -++++++++++++-+-++
+Line 250798 : -++++++++++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 250799 : -++++++++++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250800 : -++++++++++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 250801 : -++++++++++++-+-+index 1ec7a54..870d508 100644
+Line 250802 : -++++++++++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 250803 : -++++++++++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 250804 : -++++++++++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 250805 : -++++++++++++-+-+-          System.debug('Hi');
+Line 250806 : -++++++++++++-+-++          System.debug('Hi Hello');
+Line 250807 : -++++++++++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 250808 : -++++++++++++-++-index 255a037..525d43a 100644
+Line 250809 : -++++++++++++-+++index 525d43a..aa6762f 100644
+Line 250810 : -++++++++++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+Line 250811 : -++++++++++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+Line 250812 : -++++++++++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 250813 : -++++++++++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+Line 250814 : -++++++++++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 250815 : -++++++++++++-++--  # Define the output path for the scanner report
+Line 250816 : -++++++++++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 250817 : -++++++++++++-++-+  # Define the output path for the scanner report in CSV format
+Line 250818 : -++++++++++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 250819 : -++++++++++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 250820 : -++++++++++++-++--  # Run the SFDX scanner on the file and generate the report
+Line 250821 : -++++++++++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 250822 : -++++++++++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 250823 : -++++++++++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 250824 : -++++++++++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+Line 250825 : -++++++++++++-++--  # Filter the scanner report based on the changed line numbers
+Line 250826 : -++++++++++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+Line 250827 : -++++++++++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 250828 : -++++++++++++-++--  jq --arg lines "$line_numbers" '
+Line 250829 : -++++++++++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 250830 : -++++++++++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250831 : -++++++++++++-++-+  awk -v lines="$line_numbers" '
+Line 250832 : -++++++++++++-++-+  BEGIN {
+Line 250833 : -++++++++++++-++-+    FS=OFS=",";
+Line 250834 : -++++++++++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+Line 250835 : -++++++++++++-++-+    for (i in arr) {
+Line 250836 : -++++++++++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 250837 : -++++++++++++-++-+    }
+Line 250838 : -++++++++++++-++-+  }
+Line 250839 : -++++++++++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250840 : -++++++++++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250841 : -++++++++++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+Line 250842 : -++++++++++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 250843 : -++++++++++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 250844 : -++++++++++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+Line 250845 : -++++++++++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250846 : -++++++++++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250847 : -++++++++++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+Line 250848 : -++++++++++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 250849 : -++++++++++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 250850 : -++++++++++++-++-@@ -95,2 +102,4 @@ fi
+Line 250851 : -++++++++++++-++--# Combine all filtered reports into one final report
+Line 250852 : -++++++++++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 250853 : -++++++++++++-++-+# Combine all filtered reports into one final report (optional)
+Line 250854 : -++++++++++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 250855 : -++++++++++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 250856 : -++++++++++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 250857 : -++++++++++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 250858 : -++++++++++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+Line 250859 : -++++++++++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 250860 : -++++++++++++-++-+echo "Final filtered scanner report:"
+Line 250861 : -++++++++++++-++-+cat "$final_report"
+Line 250862 : -++++++++++++-++-+
+Line 250863 : -++++++++++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 250864 : -++++++++++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250865 : -++++++++++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+Line 250866 : -++++++++++++-+++-    FS=OFS=",";
+Line 250867 : -++++++++++++-++++    FS=OFS=",";  # Define CSV format
+Line 250868 : -++++++++++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+Line 250869 : -++++++++++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250870 : -++++++++++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+Line 250871 : -++++++++++++-+++@@ -111 +111 @@ cat "$final_report"
+Line 250872 : -++++++++++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250873 : -++++++++++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250874 : -++++++++++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 250875 : -++++++++++++-+++new file mode 100644
+Line 250876 : -++++++++++++-+++index 0000000..0e43eee
+Line 250877 : -++++++++++++-+++--- /dev/null
+Line 250878 : -++++++++++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+Line 250879 : -++++++++++++-+++@@ -0,0 +1 @@
+Line 250880 : -++++++++++++-++++70 :           System.debug('Hi Hello');
+Line 250881 : -++++++++++++-+++diff --git a/changes.diff b/changes.diff
+Line 250882 : -++++++++++++-+++new file mode 100644
+Line 250883 : -++++++++++++-+++index 0000000..760971b
+Line 250884 : -++++++++++++-+++--- /dev/null
+Line 250885 : -++++++++++++-++++++ b/changes.diff
+Line 250886 : -++++++++++++-+++@@ -0,0 +1,65 @@
+Line 250887 : -++++++++++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+Line 250888 : -++++++++++++-++++index 255a037..525d43a 100644
+Line 250889 : -++++++++++++-++++--- a/.husky/pre-commit
+Line 250890 : -++++++++++++-+++++++ b/.husky/pre-commit
+Line 250891 : -++++++++++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+Line 250892 : -++++++++++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+Line 250893 : -++++++++++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+Line 250894 : -++++++++++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+Line 250895 : -++++++++++++-++++-  # Define the output path for the scanner report
+Line 250896 : -++++++++++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+Line 250897 : -++++++++++++-+++++  # Define the output path for the scanner report in CSV format
+Line 250898 : -++++++++++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+Line 250899 : -++++++++++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+Line 250900 : -++++++++++++-++++-  # Run the SFDX scanner on the file and generate the report
+Line 250901 : -++++++++++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+Line 250902 : -++++++++++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+Line 250903 : -++++++++++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+Line 250904 : -++++++++++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+Line 250905 : -++++++++++++-++++-  # Filter the scanner report based on the changed line numbers
+Line 250906 : -++++++++++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+Line 250907 : -++++++++++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+Line 250908 : -++++++++++++-++++-  jq --arg lines "$line_numbers" '
+Line 250909 : -++++++++++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+Line 250910 : -++++++++++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250911 : -++++++++++++-+++++  awk -v lines="$line_numbers" '
+Line 250912 : -++++++++++++-+++++  BEGIN {
+Line 250913 : -++++++++++++-+++++    FS=OFS=",";
+Line 250914 : -++++++++++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+Line 250915 : -++++++++++++-+++++    for (i in arr) {
+Line 250916 : -++++++++++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+Line 250917 : -++++++++++++-+++++    }
+Line 250918 : -++++++++++++-+++++  }
+Line 250919 : -++++++++++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+Line 250920 : -++++++++++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250921 : -++++++++++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+Line 250922 : -++++++++++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+Line 250923 : -++++++++++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+Line 250924 : -++++++++++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+Line 250925 : -++++++++++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+Line 250926 : -++++++++++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+Line 250927 : -++++++++++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+Line 250928 : -++++++++++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+Line 250929 : -++++++++++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+Line 250930 : -++++++++++++-++++@@ -95,2 +102,4 @@ fi
+Line 250931 : -++++++++++++-++++-# Combine all filtered reports into one final report
+Line 250932 : -++++++++++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+Line 250933 : -++++++++++++-+++++# Combine all filtered reports into one final report (optional)
+Line 250934 : -++++++++++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+Line 250935 : -++++++++++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+Line 250936 : -++++++++++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+Line 250937 : -++++++++++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+Line 250938 : -++++++++++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+Line 250939 : -++++++++++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+Line 250940 : -++++++++++++-+++++echo "Final filtered scanner report:"
+Line 250941 : -++++++++++++-+++++cat "$final_report"
+Line 250942 : -++++++++++++-+++++
+Line 250943 : -++++++++++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+Line 250944 : -++++++++++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+Line 250945 : -++++++++++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 250946 : -++++++++++++-++++index 1ec7a54..870d508 100644
+Line 250947 : -++++++++++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 250948 : -++++++++++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 250949 : -++++++++++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 250950 : -++++++++++++-++++-          System.debug('Hi');
+Line 250951 : -++++++++++++-+++++          System.debug('Hi Hello');
+Line 250952 : -++++++++++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 250953 : -++++++++++++-++-index 1ec7a54..870d508 100644
+Line 250954 : -++++++++++++-+++index 870d508..1ec7a54 100644
+Line 250955 : -++++++++++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+Line 250956 : -++++++++++++-++--          System.debug('Hi');
+Line 250957 : -++++++++++++-++-+          System.debug('Hi Hello');
+Line 250958 : -++++++++++++-+++-          System.debug('Hi Hello');
+Line 250959 : -++++++++++++-++++          System.debug('Hi');
+Line 250960 : -++++++++++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 250961 : -++++++++++++-+++new file mode 100644
+Line 250962 : -++++++++++++-+++index 0000000..5a3a1ac
+Line 250963 : -++++++++++++-+++--- /dev/null
+Line 250964 : -++++++++++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 250965 : -++++++++++++-+++@@ -0,0 +1 @@
+Line 250966 : -++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250967 : -++++++++++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 250968 : -++++++++++++-+++new file mode 100644
+Line 250969 : -++++++++++++-+++index 0000000..5a3a1ac
+Line 250970 : -++++++++++++-+++--- /dev/null
+Line 250971 : -++++++++++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 250972 : -++++++++++++-+++@@ -0,0 +1 @@
+Line 250973 : -++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250974 : -++++++++++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 250975 : -++++++++++++-+++new file mode 100644
+Line 250976 : -++++++++++++-+++index 0000000..e1ef0f0
+Line 250977 : -++++++++++++-+++--- /dev/null
+Line 250978 : -++++++++++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 250979 : -++++++++++++-+++@@ -0,0 +1,5 @@
+Line 250980 : -++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250981 : -++++++++++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 250982 : -++++++++++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 250983 : -++++++++++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 250984 : -++++++++++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 250985 : -++++++++++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 250986 : -++++++++++++-+-index 870d508..1ec7a54 100644
+Line 250987 : -++++++++++++-++index 1ec7a54..870d508 100644
+Line 250988 : -++++++++++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+Line 250989 : -++++++++++++-+--          System.debug('Hi Hello');
+Line 250990 : -++++++++++++-+-+          System.debug('Hi');
+Line 250991 : -++++++++++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 250992 : -++++++++++++-+-new file mode 100644
+Line 250993 : -++++++++++++-+-index 0000000..5a3a1ac
+Line 250994 : -++++++++++++-+---- /dev/null
+Line 250995 : -++++++++++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 250996 : -++++++++++++-+-@@ -0,0 +1 @@
+Line 250997 : -++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 250998 : -++++++++++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 250999 : -++++++++++++-+-new file mode 100644
+Line 251000 : -++++++++++++-+-index 0000000..5a3a1ac
+Line 251001 : -++++++++++++-+---- /dev/null
+Line 251002 : -++++++++++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+Line 251003 : -++++++++++++-+-@@ -0,0 +1 @@
+Line 251004 : -++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 251005 : -++++++++++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 251006 : -++++++++++++-+-new file mode 100644
+Line 251007 : -++++++++++++-+-index 0000000..e1ef0f0
+Line 251008 : -++++++++++++-+---- /dev/null
+Line 251009 : -++++++++++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 251010 : -++++++++++++-+-@@ -0,0 +1,5 @@
+Line 251011 : -++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 251012 : -++++++++++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 251013 : -++++++++++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 251014 : -++++++++++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 251015 : -++++++++++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 251016 : -++++++++++++-++-          System.debug('Hi');
+Line 251017 : -++++++++++++-+++          System.debug('Hi Hello');
+Line 251018 : -++++++++++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 251019 : -++++++++++++--index 1ec7a54..870d508 100644
+Line 251020 : -++++++++++++-+index 870d508..5eafcac 100644
+Line 251021 : -++++++++++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+Line 251022 : -++++++++++++---          System.debug('Hi');
+Line 251023 : -++++++++++++--+          System.debug('Hi Hello');
+Line 251024 : -++++++++++++-+-          System.debug('Hi Hello');
+Line 251025 : -++++++++++++-++          System.debug('Happy');
+Line 251026 : -++++++++++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 251027 : -++++++++++++-index 5eafcac..1ec7a54 100644
+Line 251028 : -++++++++++++---- a/force-app/main/default/classes/Account_Insert.cls
+Line 251029 : -++++++++++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+Line 251030 : -++++++++++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 251031 : -++++++++++++--          System.debug('Happy');
+Line 251032 : -++++++++++++-+          System.debug('Hi');
+Line 251033 : -++++++++++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 251034 : -++++++++++++index 73696e2..9e21e88 100644
+Line 251035 : -++++++++++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 251036 : -+++++++++++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 251037 : -++++++++++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 251038 : -++++++++++++-          System.debug('Hello and Hi');
+Line 251039 : -+++++++++++++          System.debug('Hi AND');
+Line 251040 : -++++++++++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 251041 : -++++++++++++deleted file mode 100644
+Line 251042 : -++++++++++++index 5a3a1ac..0000000
+Line 251043 : -++++++++++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 251044 : -+++++++++++++++ /dev/null
+Line 251045 : -++++++++++++@@ -1 +0,0 @@
+Line 251046 : -++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 251047 : -++++++++++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 251048 : -++++++++++++new file mode 100644
+Line 251049 : -++++++++++++index 0000000..ebc3aa5
+Line 251050 : -++++++++++++--- /dev/null
+Line 251051 : -+++++++++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 251052 : -++++++++++++@@ -0,0 +1,30 @@
+Line 251053 : -+++++++++++++[
+Line 251054 : -+++++++++++++  {
+Line 251055 : -+++++++++++++    "engine": "pmd",
+Line 251056 : -+++++++++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 251057 : -+++++++++++++    "violations": [
+Line 251058 : -+++++++++++++      {
+Line 251059 : -+++++++++++++        "line": 70,
+Line 251060 : -+++++++++++++        "column": 11,
+Line 251061 : -+++++++++++++        "endLine": 70,
+Line 251062 : -+++++++++++++        "endColumn": 29,
+Line 251063 : -+++++++++++++        "severity": 3,
+Line 251064 : -+++++++++++++        "ruleName": "AvoidDebugStatements",
+Line 251065 : -+++++++++++++        "category": "Performance",
+Line 251066 : -+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 251067 : -+++++++++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 251068 : -+++++++++++++      },
+Line 251069 : -+++++++++++++      {
+Line 251070 : -+++++++++++++        "line": 70,
+Line 251071 : -+++++++++++++        "column": 11,
+Line 251072 : -+++++++++++++        "endLine": 70,
+Line 251073 : -+++++++++++++        "endColumn": 29,
+Line 251074 : -+++++++++++++        "severity": 3,
+Line 251075 : -+++++++++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 251076 : -+++++++++++++        "category": "Best Practices",
+Line 251077 : -+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 251078 : -+++++++++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 251079 : -+++++++++++++      }
+Line 251080 : -+++++++++++++    ]
+Line 251081 : -+++++++++++++  }
+Line 251082 : -+++++++++++++]
+Line 251083 : -++++++++++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 251084 : -++++++++++++deleted file mode 100644
+Line 251085 : -++++++++++++index 5a3a1ac..0000000
+Line 251086 : -++++++++++++--- a/scanner-reports/final-filtered-scanner-report.csv
+Line 251087 : -+++++++++++++++ /dev/null
+Line 251088 : -++++++++++++@@ -1 +0,0 @@
+Line 251089 : -++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 251090 : -++++++++++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 251091 : -++++++++++++new file mode 100644
+Line 251092 : -++++++++++++index 0000000..ebc3aa5
+Line 251093 : -++++++++++++--- /dev/null
+Line 251094 : -+++++++++++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 251095 : -++++++++++++@@ -0,0 +1,30 @@
+Line 251096 : -+++++++++++++[
+Line 251097 : -+++++++++++++  {
+Line 251098 : -+++++++++++++    "engine": "pmd",
+Line 251099 : -+++++++++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 251100 : -+++++++++++++    "violations": [
+Line 251101 : -+++++++++++++      {
+Line 251102 : -+++++++++++++        "line": 70,
+Line 251103 : -+++++++++++++        "column": 11,
+Line 251104 : -+++++++++++++        "endLine": 70,
+Line 251105 : -+++++++++++++        "endColumn": 29,
+Line 251106 : -+++++++++++++        "severity": 3,
+Line 251107 : -+++++++++++++        "ruleName": "AvoidDebugStatements",
+Line 251108 : -+++++++++++++        "category": "Performance",
+Line 251109 : -+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 251110 : -+++++++++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 251111 : -+++++++++++++      },
+Line 251112 : -+++++++++++++      {
+Line 251113 : -+++++++++++++        "line": 70,
+Line 251114 : -+++++++++++++        "column": 11,
+Line 251115 : -+++++++++++++        "endLine": 70,
+Line 251116 : -+++++++++++++        "endColumn": 29,
+Line 251117 : -+++++++++++++        "severity": 3,
+Line 251118 : -+++++++++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 251119 : -+++++++++++++        "category": "Best Practices",
+Line 251120 : -+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 251121 : -+++++++++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 251122 : -+++++++++++++      }
+Line 251123 : -+++++++++++++    ]
+Line 251124 : -+++++++++++++  }
+Line 251125 : -+++++++++++++]
+Line 251126 : -++++++++++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 251127 : -++++++++++++deleted file mode 100644
+Line 251128 : -++++++++++++index e1ef0f0..0000000
+Line 251129 : -++++++++++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 251130 : -+++++++++++++++ /dev/null
+Line 251131 : -++++++++++++@@ -1,5 +0,0 @@
+Line 251132 : -++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 251133 : -++++++++++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 251134 : -++++++++++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 251135 : -++++++++++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 251136 : -++++++++++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 251137 : -++++++++++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 251138 : -++++++++++++new file mode 100644
+Line 251139 : -++++++++++++index 0000000..c973918
+Line 251140 : -++++++++++++--- /dev/null
+Line 251141 : -+++++++++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 251142 : -++++++++++++@@ -0,0 +1 @@
+Line 251143 : -+++++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 251144 : -++++++++++++\ No newline at end of file
+Line 251145 : -+++++@@ -861 +999 @@ index 0000000..a6452b3
+Line 251146 : -+++++-+++++index 73696e2..9e21e88 100644
+Line 251147 : -+++++++++++index 9e21e88..800635e 100644
+Line 251148 : -+++++@@ -865,9 +1003,2 @@ index 0000000..a6452b3
+Line 251149 : -+++++-+++++-          System.debug('Hello and Hi');
+Line 251150 : -+++++-++++++          System.debug('Hi AND');
+Line 251151 : -+++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 251152 : -+++++-+++++deleted file mode 100644
+Line 251153 : -+++++-+++++index 5a3a1ac..0000000
+Line 251154 : -+++++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+Line 251155 : -+++++-++++++++ /dev/null
+Line 251156 : -+++++-+++++@@ -1 +0,0 @@
+Line 251157 : -+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 251158 : -+++++++++++-          System.debug('Hi AND');
+Line 251159 : -++++++++++++          System.debug('Hi AND Hello');
+Line 251160 : -+++++@@ -875,3 +1006,2 @@ index 0000000..a6452b3
+Line 251161 : -+++++-+++++new file mode 100644
+Line 251162 : -+++++-+++++index 0000000..ebc3aa5
+Line 251163 : -+++++-+++++--- /dev/null
+Line 251164 : -+++++++++++index ebc3aa5..fe51488 100644
+Line 251165 : -+++++++++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 251166 : -+++++@@ -879,38 +1009,32 @@ index 0000000..a6452b3
+Line 251167 : -+++++-+++++@@ -0,0 +1,30 @@
+Line 251168 : -+++++-++++++[
+Line 251169 : -+++++-++++++  {
+Line 251170 : -+++++-++++++    "engine": "pmd",
+Line 251171 : -+++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 251172 : -+++++-++++++    "violations": [
+Line 251173 : -+++++-++++++      {
+Line 251174 : -+++++-++++++        "line": 70,
+Line 251175 : -+++++-++++++        "column": 11,
+Line 251176 : -+++++-++++++        "endLine": 70,
+Line 251177 : -+++++-++++++        "endColumn": 29,
+Line 251178 : -+++++-++++++        "severity": 3,
+Line 251179 : -+++++-++++++        "ruleName": "AvoidDebugStatements",
+Line 251180 : -+++++-++++++        "category": "Performance",
+Line 251181 : -+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 251182 : -+++++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 251183 : -+++++-++++++      },
+Line 251184 : -+++++-++++++      {
+Line 251185 : -+++++-++++++        "line": 70,
+Line 251186 : -+++++-++++++        "column": 11,
+Line 251187 : -+++++-++++++        "endLine": 70,
+Line 251188 : -+++++-++++++        "endColumn": 29,
+Line 251189 : -+++++-++++++        "severity": 3,
+Line 251190 : -+++++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 251191 : -+++++-++++++        "category": "Best Practices",
+Line 251192 : -+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 251193 : -+++++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 251194 : -+++++-++++++      }
+Line 251195 : -+++++-++++++    ]
+Line 251196 : -+++++-++++++  }
+Line 251197 : -+++++-++++++]
+Line 251198 : -+++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 251199 : -+++++-+++++deleted file mode 100644
+Line 251200 : -+++++-+++++index 5a3a1ac..0000000
+Line 251201 : -+++++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+Line 251202 : -+++++-++++++++ /dev/null
+Line 251203 : -+++++-+++++@@ -1 +0,0 @@
+Line 251204 : -+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 251205 : -+++++++++++@@ -1,30 +1 @@
+Line 251206 : -+++++++++++-[
+Line 251207 : -+++++++++++-  {
+Line 251208 : -+++++++++++-    "engine": "pmd",
+Line 251209 : -+++++++++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 251210 : -+++++++++++-    "violations": [
+Line 251211 : -+++++++++++-      {
+Line 251212 : -+++++++++++-        "line": 70,
+Line 251213 : -+++++++++++-        "column": 11,
+Line 251214 : -+++++++++++-        "endLine": 70,
+Line 251215 : -+++++++++++-        "endColumn": 29,
+Line 251216 : -+++++++++++-        "severity": 3,
+Line 251217 : -+++++++++++-        "ruleName": "AvoidDebugStatements",
+Line 251218 : -+++++++++++-        "category": "Performance",
+Line 251219 : -+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 251220 : -+++++++++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 251221 : -+++++++++++-      },
+Line 251222 : -+++++++++++-      {
+Line 251223 : -+++++++++++-        "line": 70,
+Line 251224 : -+++++++++++-        "column": 11,
+Line 251225 : -+++++++++++-        "endLine": 70,
+Line 251226 : -+++++++++++-        "endColumn": 29,
+Line 251227 : -+++++++++++-        "severity": 3,
+Line 251228 : -+++++++++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 251229 : -+++++++++++-        "category": "Best Practices",
+Line 251230 : -+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 251231 : -+++++++++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 251232 : -+++++++++++-      }
+Line 251233 : -+++++++++++-    ]
+Line 251234 : -+++++++++++-  }
+Line 251235 : -+++++++++++-]
+Line 251236 : -++++++++++++[]
+Line 251237 : -+++++@@ -918,3 +1042,2 @@ index 0000000..a6452b3
+Line 251238 : -+++++-+++++new file mode 100644
+Line 251239 : -+++++-+++++index 0000000..ebc3aa5
+Line 251240 : -+++++-+++++--- /dev/null
+Line 251241 : -+++++++++++index ebc3aa5..fe51488 100644
+Line 251242 : -+++++++++++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 251243 : -+++++@@ -922,42 +1045,32 @@ index 0000000..a6452b3
+Line 251244 : -+++++-+++++@@ -0,0 +1,30 @@
+Line 251245 : -+++++-++++++[
+Line 251246 : -+++++-++++++  {
+Line 251247 : -+++++-++++++    "engine": "pmd",
+Line 251248 : -+++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 251249 : -+++++-++++++    "violations": [
+Line 251250 : -+++++-++++++      {
+Line 251251 : -+++++-++++++        "line": 70,
+Line 251252 : -+++++-++++++        "column": 11,
+Line 251253 : -+++++-++++++        "endLine": 70,
+Line 251254 : -+++++-++++++        "endColumn": 29,
+Line 251255 : -+++++-++++++        "severity": 3,
+Line 251256 : -+++++-++++++        "ruleName": "AvoidDebugStatements",
+Line 251257 : -+++++-++++++        "category": "Performance",
+Line 251258 : -+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 251259 : -+++++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 251260 : -+++++-++++++      },
+Line 251261 : -+++++-++++++      {
+Line 251262 : -+++++-++++++        "line": 70,
+Line 251263 : -+++++-++++++        "column": 11,
+Line 251264 : -+++++-++++++        "endLine": 70,
+Line 251265 : -+++++-++++++        "endColumn": 29,
+Line 251266 : -+++++-++++++        "severity": 3,
+Line 251267 : -+++++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 251268 : -+++++-++++++        "category": "Best Practices",
+Line 251269 : -+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 251270 : -+++++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 251271 : -+++++-++++++      }
+Line 251272 : -+++++-++++++    ]
+Line 251273 : -+++++-++++++  }
+Line 251274 : -+++++-++++++]
+Line 251275 : -+++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 251276 : -+++++-+++++deleted file mode 100644
+Line 251277 : -+++++-+++++index e1ef0f0..0000000
+Line 251278 : -+++++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 251279 : -+++++-++++++++ /dev/null
+Line 251280 : -+++++-+++++@@ -1,5 +0,0 @@
+Line 251281 : -+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 251282 : -+++++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 251283 : -+++++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 251284 : -+++++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 251285 : -+++++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 251286 : -+++++++++++@@ -1,30 +1 @@
+Line 251287 : -+++++++++++-[
+Line 251288 : -+++++++++++-  {
+Line 251289 : -+++++++++++-    "engine": "pmd",
+Line 251290 : -+++++++++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 251291 : -+++++++++++-    "violations": [
+Line 251292 : -+++++++++++-      {
+Line 251293 : -+++++++++++-        "line": 70,
+Line 251294 : -+++++++++++-        "column": 11,
+Line 251295 : -+++++++++++-        "endLine": 70,
+Line 251296 : -+++++++++++-        "endColumn": 29,
+Line 251297 : -+++++++++++-        "severity": 3,
+Line 251298 : -+++++++++++-        "ruleName": "AvoidDebugStatements",
+Line 251299 : -+++++++++++-        "category": "Performance",
+Line 251300 : -+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 251301 : -+++++++++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 251302 : -+++++++++++-      },
+Line 251303 : -+++++++++++-      {
+Line 251304 : -+++++++++++-        "line": 70,
+Line 251305 : -+++++++++++-        "column": 11,
+Line 251306 : -+++++++++++-        "endLine": 70,
+Line 251307 : -+++++++++++-        "endColumn": 29,
+Line 251308 : -+++++++++++-        "severity": 3,
+Line 251309 : -+++++++++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 251310 : -+++++++++++-        "category": "Best Practices",
+Line 251311 : -+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 251312 : -+++++++++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 251313 : -+++++++++++-      }
+Line 251314 : -+++++++++++-    ]
+Line 251315 : -+++++++++++-  }
+Line 251316 : -+++++++++++-]
+Line 251317 : -++++++++++++[]
+Line 251318 : -+++++@@ -965,3 +1078,2 @@ index 0000000..a6452b3
+Line 251319 : -+++++-+++++new file mode 100644
+Line 251320 : -+++++-+++++index 0000000..c973918
+Line 251321 : -+++++-+++++--- /dev/null
+Line 251322 : -+++++++++++index c973918..a14d61d 100644
+Line 251323 : -+++++++++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 251324 : -+++++@@ -969,2 +1081,4 @@ index 0000000..a6452b3
+Line 251325 : -+++++-+++++@@ -0,0 +1 @@
+Line 251326 : -+++++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 251327 : -+++++++++++@@ -1 +1 @@
+Line 251328 : -+++++++++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 251329 : -+++++++++++\ No newline at end of file
+Line 251330 : -++++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 251331 : -+++++@@ -973 +1087 @@ index 0000000..a6452b3
+Line 251332 : -+++++-++++index 9e21e88..800635e 100644
+Line 251333 : -++++++++++index 9e21e88..1ec7a54 100644
+Line 251334 : -+++++@@ -978 +1092 @@ index 0000000..a6452b3
+Line 251335 : -+++++-+++++          System.debug('Hi AND Hello');
+Line 251336 : -+++++++++++          System.debug('Hi');
+Line 251337 : -+++++@@ -980 +1094 @@ index 0000000..a6452b3
+Line 251338 : -+++++-++++index ebc3aa5..fe51488 100644
+Line 251339 : -++++++++++index ebc3aa5..bb2caee 100644
+Line 251340 : -+++++@@ -983,10 +1097,24 @@ index 0000000..a6452b3
+Line 251341 : -+++++-++++@@ -1,30 +1 @@
+Line 251342 : -+++++-++++-[
+Line 251343 : -+++++-++++-  {
+Line 251344 : -+++++-++++-    "engine": "pmd",
+Line 251345 : -+++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 251346 : -+++++-++++-    "violations": [
+Line 251347 : -+++++-++++-      {
+Line 251348 : -+++++-++++-        "line": 70,
+Line 251349 : -+++++-++++-        "column": 11,
+Line 251350 : -+++++-++++-        "endLine": 70,
+Line 251351 : -++++++++++@@ -5,0 +6,22 @@
+Line 251352 : -++++@@ -886 +1928 @@ index 0000000..a6452b3
+Line 251353 : -++++-++++++        "line": 70,
+Line 251354 : -+++++++++++        "line": 20,
+Line 251355 : -++++@@ -888,2 +1930,2 @@ index 0000000..a6452b3
+Line 251356 : -++++-++++++        "endLine": 70,
+Line 251357 : -++++-++++++        "endColumn": 29,
+Line 251358 : -+++++++++++        "endLine": 20,
+Line 251359 : -+++++++++++        "endColumn": 35,
+Line 251360 : -++++@@ -897 +1939 @@ index 0000000..a6452b3
+Line 251361 : -++++-++++++        "line": 70,
+Line 251362 : -+++++++++++        "line": 20,
+Line 251363 : -++++@@ -899,2 +1941,2 @@ index 0000000..a6452b3
+Line 251364 : -++++-++++++        "endLine": 70,
+Line 251365 : -++++-++++++        "endColumn": 29,
+Line 251366 : -+++++++++++        "endLine": 20,
+Line 251367 : -+++++++++++        "endColumn": 35,
+Line 251368 : -++++@@ -906,22 +1948,42 @@ index 0000000..a6452b3
+Line 251369 : -++++-++++++      }
+Line 251370 : -++++-++++++    ]
+Line 251371 : -++++-++++++  }
+Line 251372 : -++++-++++++]
+Line 251373 : -++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+Line 251374 : -++++-+++++deleted file mode 100644
+Line 251375 : -++++-+++++index 5a3a1ac..0000000
+Line 251376 : -++++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+Line 251377 : -++++-++++++++ /dev/null
+Line 251378 : -++++-+++++@@ -1 +0,0 @@
+Line 251379 : -++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 251380 : -++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 251381 : -++++-+++++new file mode 100644
+Line 251382 : -++++-+++++index 0000000..ebc3aa5
+Line 251383 : -++++-+++++--- /dev/null
+Line 251384 : -++++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 251385 : -++++-+++++@@ -0,0 +1,30 @@
+Line 251386 : -++++-++++++[
+Line 251387 : -++++-++++++  {
+Line 251388 : -++++-++++++    "engine": "pmd",
+Line 251389 : -++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 251390 : -++++-++++++    "violations": [
+Line 251391 : -+++++++++++      },
+Line 251392 : -++++++++++@@ -10 +32 @@
+Line 251393 : -+++++@@ -994,10 +1122,2 @@ index 0000000..a6452b3
+Line 251394 : -+++++-++++-        "severity": 3,
+Line 251395 : -+++++-++++-        "ruleName": "AvoidDebugStatements",
+Line 251396 : -+++++-++++-        "category": "Performance",
+Line 251397 : -+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 251398 : -+++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 251399 : -+++++-++++-      },
+Line 251400 : -+++++-++++-      {
+Line 251401 : -+++++-++++-        "line": 70,
+Line 251402 : -+++++-++++-        "column": 11,
+Line 251403 : -+++++-++++-        "endLine": 70,
+Line 251404 : -+++++++++++        "endColumn": 39,
+Line 251405 : -++++++++++@@ -21 +43 @@
+Line 251406 : -+++++@@ -1005,10 +1125 @@ index 0000000..a6452b3
+Line 251407 : -+++++-++++-        "severity": 3,
+Line 251408 : -+++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 251409 : -+++++-++++-        "category": "Best Practices",
+Line 251410 : -+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 251411 : -+++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 251412 : -+++++-++++-      }
+Line 251413 : -+++++-++++-    ]
+Line 251414 : -+++++-++++-  }
+Line 251415 : -+++++-++++-]
+Line 251416 : -+++++-+++++[]
+Line 251417 : -+++++++++++        "endColumn": 39,
+Line 251418 : -+++++@@ -1016 +1127 @@ index 0000000..a6452b3
+Line 251419 : -+++++-++++index ebc3aa5..fe51488 100644
+Line 251420 : -++++++++++index ebc3aa5..bb2caee 100644
+Line 251421 : -+++++@@ -1019,10 +1130,24 @@ index 0000000..a6452b3
+Line 251422 : -+++++-++++@@ -1,30 +1 @@
+Line 251423 : -+++++-++++-[
+Line 251424 : -+++++-++++-  {
+Line 251425 : -+++++-++++-    "engine": "pmd",
+Line 251426 : -+++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 251427 : -+++++-++++-    "violations": [
+Line 251428 : -+++++-++++-      {
+Line 251429 : -+++++-++++-        "line": 70,
+Line 251430 : -+++++-++++-        "column": 11,
+Line 251431 : -+++++-++++-        "endLine": 70,
+Line 251432 : -++++++++++@@ -5,0 +6,22 @@
+Line 251433 : -++++@@ -929 +1991 @@ index 0000000..a6452b3
+Line 251434 : -++++-++++++        "line": 70,
+Line 251435 : -+++++++++++        "line": 20,
+Line 251436 : -++++@@ -931,2 +1993,2 @@ index 0000000..a6452b3
+Line 251437 : -++++-++++++        "endLine": 70,
+Line 251438 : -++++-++++++        "endColumn": 29,
+Line 251439 : -+++++++++++        "endLine": 20,
+Line 251440 : -+++++++++++        "endColumn": 35,
+Line 251441 : -++++@@ -940 +2002 @@ index 0000000..a6452b3
+Line 251442 : -++++-++++++        "line": 70,
+Line 251443 : -+++++++++++        "line": 20,
+Line 251444 : -++++@@ -942,2 +2004,2 @@ index 0000000..a6452b3
+Line 251445 : -++++-++++++        "endLine": 70,
+Line 251446 : -++++-++++++        "endColumn": 29,
+Line 251447 : -+++++++++++        "endLine": 20,
+Line 251448 : -+++++++++++        "endColumn": 35,
+Line 251449 : -++++@@ -949,112 +2011,70 @@ index 0000000..a6452b3
+Line 251450 : -++++-++++++      }
+Line 251451 : -++++-++++++    ]
+Line 251452 : -++++-++++++  }
+Line 251453 : -++++-++++++]
+Line 251454 : -++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 251455 : -++++-+++++deleted file mode 100644
+Line 251456 : -++++-+++++index e1ef0f0..0000000
+Line 251457 : -++++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+Line 251458 : -++++-++++++++ /dev/null
+Line 251459 : -++++-+++++@@ -1,5 +0,0 @@
+Line 251460 : -++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+Line 251461 : -++++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 251462 : -++++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 251463 : -++++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+Line 251464 : -++++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+Line 251465 : -++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 251466 : -++++-+++++new file mode 100644
+Line 251467 : -++++-+++++index 0000000..c973918
+Line 251468 : -++++-+++++--- /dev/null
+Line 251469 : -++++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 251470 : -++++-+++++@@ -0,0 +1 @@
+Line 251471 : -++++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 251472 : -++++-+++++\ No newline at end of file
+Line 251473 : -++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 251474 : -++++-++++index 9e21e88..800635e 100644
+Line 251475 : -++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 251476 : -++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 251477 : -++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 251478 : -++++-++++-          System.debug('Hi AND');
+Line 251479 : -++++-+++++          System.debug('Hi AND Hello');
+Line 251480 : -++++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 251481 : -++++-++++index ebc3aa5..fe51488 100644
+Line 251482 : -++++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 251483 : -++++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 251484 : -++++-++++@@ -1,30 +1 @@
+Line 251485 : -++++-++++-[
+Line 251486 : -++++-++++-  {
+Line 251487 : -++++-++++-    "engine": "pmd",
+Line 251488 : -++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 251489 : -++++-++++-    "violations": [
+Line 251490 : -++++-++++-      {
+Line 251491 : -++++-++++-        "line": 70,
+Line 251492 : -++++-++++-        "column": 11,
+Line 251493 : -++++-++++-        "endLine": 70,
+Line 251494 : -++++-++++-        "endColumn": 29,
+Line 251495 : -++++-++++-        "severity": 3,
+Line 251496 : -++++-++++-        "ruleName": "AvoidDebugStatements",
+Line 251497 : -++++-++++-        "category": "Performance",
+Line 251498 : -++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 251499 : -++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 251500 : -++++-++++-      },
+Line 251501 : -++++-++++-      {
+Line 251502 : -++++-++++-        "line": 70,
+Line 251503 : -++++-++++-        "column": 11,
+Line 251504 : -++++-++++-        "endLine": 70,
+Line 251505 : -++++-++++-        "endColumn": 29,
+Line 251506 : -++++-++++-        "severity": 3,
+Line 251507 : -++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 251508 : -++++-++++-        "category": "Best Practices",
+Line 251509 : -++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 251510 : -++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 251511 : -++++-++++-      }
+Line 251512 : -++++-++++-    ]
+Line 251513 : -++++-++++-  }
+Line 251514 : -++++-++++-]
+Line 251515 : -++++-+++++[]
+Line 251516 : -++++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 251517 : -++++-++++index ebc3aa5..fe51488 100644
+Line 251518 : -++++-++++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 251519 : -++++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 251520 : -++++-++++@@ -1,30 +1 @@
+Line 251521 : -++++-++++-[
+Line 251522 : -++++-++++-  {
+Line 251523 : -++++-++++-    "engine": "pmd",
+Line 251524 : -++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 251525 : -++++-++++-    "violations": [
+Line 251526 : -++++-++++-      {
+Line 251527 : -++++-++++-        "line": 70,
+Line 251528 : -++++-++++-        "column": 11,
+Line 251529 : -++++-++++-        "endLine": 70,
+Line 251530 : -++++-++++-        "endColumn": 29,
+Line 251531 : -++++-++++-        "severity": 3,
+Line 251532 : -++++-++++-        "ruleName": "AvoidDebugStatements",
+Line 251533 : -++++-++++-        "category": "Performance",
+Line 251534 : -++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 251535 : -++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 251536 : -++++-++++-      },
+Line 251537 : -++++-++++-      {
+Line 251538 : -++++-++++-        "line": 70,
+Line 251539 : -++++-++++-        "column": 11,
+Line 251540 : -++++-++++-        "endLine": 70,
+Line 251541 : -++++-++++-        "endColumn": 29,
+Line 251542 : -++++-++++-        "severity": 3,
+Line 251543 : -++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 251544 : -++++-++++-        "category": "Best Practices",
+Line 251545 : -++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 251546 : -++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 251547 : -++++-++++-      }
+Line 251548 : -++++-++++-    ]
+Line 251549 : -++++-++++-  }
+Line 251550 : -++++-++++-]
+Line 251551 : -++++-+++++[]
+Line 251552 : -++++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 251553 : -++++-++++index c973918..a14d61d 100644
+Line 251554 : -++++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 251555 : -++++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 251556 : -++++-++++@@ -1 +1 @@
+Line 251557 : -++++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 251558 : -++++-++++\ No newline at end of file
+Line 251559 : -++++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 251560 : -++++-++++\ No newline at end of file
+Line 251561 : -++++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 251562 : -+++++++++++      },
+Line 251563 : -++++++++++@@ -10 +32 @@
+Line 251564 : -+++++@@ -1030,10 +1155,2 @@ index 0000000..a6452b3
+Line 251565 : -+++++-++++-        "severity": 3,
+Line 251566 : -+++++-++++-        "ruleName": "AvoidDebugStatements",
+Line 251567 : -+++++-++++-        "category": "Performance",
+Line 251568 : -+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 251569 : -+++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 251570 : -+++++-++++-      },
+Line 251571 : -+++++-++++-      {
+Line 251572 : -+++++-++++-        "line": 70,
+Line 251573 : -+++++-++++-        "column": 11,
+Line 251574 : -+++++-++++-        "endLine": 70,
+Line 251575 : -+++++++++++        "endColumn": 39,
+Line 251576 : -++++++++++@@ -21 +43 @@
+Line 251577 : -+++++@@ -1041,10 +1158 @@ index 0000000..a6452b3
+Line 251578 : -+++++-++++-        "severity": 3,
+Line 251579 : -+++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 251580 : -+++++-++++-        "category": "Best Practices",
+Line 251581 : -+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 251582 : -+++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 251583 : -+++++-++++-      }
+Line 251584 : -+++++-++++-    ]
+Line 251585 : -+++++-++++-  }
+Line 251586 : -+++++-++++-]
+Line 251587 : -+++++-+++++[]
+Line 251588 : -+++++++++++        "endColumn": 39,
+Line 251589 : -+++++@@ -1052 +1160 @@ index 0000000..a6452b3
+Line 251590 : -+++++-++++index c973918..a14d61d 100644
+Line 251591 : -++++++++++index c973918..866c0b7 100644
+Line 251592 : -+++++@@ -1058 +1166 @@ index 0000000..a6452b3
+Line 251593 : -+++++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 251594 : -+++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 251595 : -+++++@@ -1061 +1169 @@ index 0000000..a6452b3
+Line 251596 : -+++++-+++index 9e21e88..1ec7a54 100644
+Line 251597 : -+++++++++index 9e21e88..9a5148a 100644
+Line 251598 : -+++++@@ -1066 +1174 @@ index 0000000..a6452b3
+Line 82472 : -++++++++++          System.debug('Hello');
+Line 82473 : -+++++@@ -1068 +1176 @@ index 0000000..a6452b3
+Line 82474 : -+++++-+++index ebc3aa5..bb2caee 100644
+Line 82475 : -+++++++++index ebc3aa5..b33da59 100644
+Line 82476 : -+++++@@ -1094,6 +1201,0 @@ index 0000000..a6452b3
+Line 82477 : -+++++-+++@@ -10 +32 @@
+Line 82478 : -+++++-+++-        "endColumn": 29,
+Line 82479 : -+++++-++++        "endColumn": 39,
+Line 82480 : -+++++-+++@@ -21 +43 @@
+Line 82481 : -+++++-+++-        "endColumn": 29,
+Line 82482 : -+++++-++++        "endColumn": 39,
+Line 82483 : -+++++@@ -1101 +1203 @@ index 0000000..a6452b3
+Line 82484 : -+++++-+++index ebc3aa5..bb2caee 100644
+Line 82485 : -+++++++++index ebc3aa5..b33da59 100644
+Line 82486 : -+++++@@ -1127,15 +1228,0 @@ index 0000000..a6452b3
+Line 82487 : -+++++-+++@@ -10 +32 @@
+Line 82488 : -+++++-+++-        "endColumn": 29,
+Line 82489 : -+++++-++++        "endColumn": 39,
+Line 82490 : -+++++-+++@@ -21 +43 @@
+Line 82491 : -+++++-+++-        "endColumn": 29,
+Line 82492 : -+++++-++++        "endColumn": 39,
+Line 82493 : -+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 82494 : -+++++-+++index c973918..866c0b7 100644
+Line 82495 : -+++++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 82496 : -+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 82497 : -+++++-+++@@ -1 +1 @@
+Line 82498 : -+++++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 82499 : -+++++-+++\ No newline at end of file
+Line 82500 : -+++++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 82501 : -+++++-+++\ No newline at end of file
+Line 82502 : -+++++@@ -1143 +1230 @@ index 0000000..a6452b3
+Line 82503 : -+++++-++index 9e21e88..9a5148a 100644
+Line 82504 : -++++@@ -1062,4 +2082,2 @@ index 0000000..a6452b3
+Line 82505 : -++++-+++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 82506 : -++++-++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 82507 : -++++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 82508 : -++++-+++-          System.debug('Hi AND');
+Line 82509 : -+++++@@ -1148 +1235 @@ index 0000000..a6452b3
+Line 82510 : -+++++-+++          System.debug('Hello');
+Line 82511 : -++++@@ -1067,27 +2085,4 @@ index 0000000..a6452b3
+Line 82512 : -++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 82513 : -++++-+++index ebc3aa5..bb2caee 100644
+Line 82514 : -++++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 82515 : -++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 82516 : -++++-+++@@ -5,0 +6,22 @@
+Line 82517 : -++++-++++      {
+Line 82518 : -++++-++++        "line": 20,
+Line 82519 : -++++-++++        "column": 11,
+Line 82520 : -++++-++++        "endLine": 20,
+Line 82521 : -++++-++++        "endColumn": 35,
+Line 82522 : -++++-++++        "severity": 3,
+Line 82523 : -++++-++++        "ruleName": "AvoidDebugStatements",
+Line 82524 : -++++-++++        "category": "Performance",
+Line 82525 : -++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 82526 : -++++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 82527 : -++++-++++      },
+Line 82528 : -++++-++++      {
+Line 82529 : -++++-++++        "line": 20,
+Line 82530 : -++++-++++        "column": 11,
+Line 82531 : -++++-++++        "endLine": 20,
+Line 82532 : -++++-++++        "endColumn": 35,
+Line 82533 : -++++-++++        "severity": 3,
+Line 82534 : -++++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 82535 : -++++-++++        "category": "Best Practices",
+Line 82536 : -++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 82537 : -++++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 82538 : -++++-++++      },
+Line 82539 : -+++++@@ -1150 +1237 @@ index 0000000..a6452b3
+Line 82540 : -+++++-++index ebc3aa5..b33da59 100644
+Line 82541 : -++++++++index ebc3aa5..d4945e4 100644
+Line 82542 : -+++++@@ -1175,0 +1263,6 @@ index 0000000..a6452b3
+Line 82543 : -++++@@ -1096 +2091 @@ index 0000000..a6452b3
+Line 82544 : -++++-++++        "endColumn": 39,
+Line 82545 : -+++++++++        "endColumn": 32,
+Line 82546 : -++++@@ -1099,28 +2094,5 @@ index 0000000..a6452b3
+Line 82547 : -++++-++++        "endColumn": 39,
+Line 82548 : -++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 82549 : -++++-+++index ebc3aa5..bb2caee 100644
+Line 82550 : -++++-+++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 82551 : -++++-++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 82552 : -++++-+++@@ -5,0 +6,22 @@
+Line 82553 : -++++-++++      {
+Line 82554 : -++++-++++        "line": 20,
+Line 82555 : -++++-++++        "column": 11,
+Line 82556 : -++++-++++        "endLine": 20,
+Line 82557 : -++++-++++        "endColumn": 35,
+Line 82558 : -++++-++++        "severity": 3,
+Line 82559 : -++++-++++        "ruleName": "AvoidDebugStatements",
+Line 82560 : -++++-++++        "category": "Performance",
+Line 82561 : -++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 82562 : -++++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 82563 : -++++-++++      },
+Line 82564 : -++++-++++      {
+Line 82565 : -++++-++++        "line": 20,
+Line 82566 : -++++-++++        "column": 11,
+Line 82567 : -++++-++++        "endLine": 20,
+Line 82568 : -++++-++++        "endColumn": 35,
+Line 82569 : -++++-++++        "severity": 3,
+Line 82570 : -++++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 82571 : -++++-++++        "category": "Best Practices",
+Line 82572 : -++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 82573 : -++++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 82574 : -++++-++++      },
+Line 82575 : -+++++++++        "endColumn": 32,
+Line 82576 : -+++++@@ -1177 +1270 @@ index 0000000..a6452b3
+Line 82577 : -+++++-++index ebc3aa5..b33da59 100644
+Line 82578 : -++++++++index ebc3aa5..d4945e4 100644
+Line 82579 : -+++++@@ -1202,0 +1296,15 @@ index 0000000..a6452b3
+Line 82580 : -++++@@ -1129 +2101 @@ index 0000000..a6452b3
+Line 82581 : -++++-++++        "endColumn": 39,
+Line 82582 : -+++++++++        "endColumn": 32,
+Line 82583 : -++++@@ -1132 +2104 @@ index 0000000..a6452b3
+Line 82584 : -++++-++++        "endColumn": 39,
+Line 82585 : -+++++++++        "endColumn": 32,
+Line 82586 : -++++@@ -1134 +2106 @@ index 0000000..a6452b3
+Line 82587 : -++++-+++index c973918..866c0b7 100644
+Line 82588 : -++++++++index c973918..e670f52 100644
+Line 82589 : -++++@@ -1140 +2112 @@ index 0000000..a6452b3
+Line 82590 : -++++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 82591 : -+++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 82592 : -++++@@ -1142,68 +2114,98 @@ index 0000000..a6452b3
+Line 82593 : -++++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 82594 : -++++-++index 9e21e88..9a5148a 100644
+Line 82595 : -++++-++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 82596 : -++++-+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 82597 : -++++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 82598 : -++++-++-          System.debug('Hi AND');
+Line 82599 : -++++-+++          System.debug('Hello');
+Line 82600 : -++++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 82601 : -++++-++index ebc3aa5..b33da59 100644
+Line 82602 : -++++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 82603 : -++++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 82604 : -++++-++@@ -5,0 +6,22 @@
+Line 82605 : -++++-+++      {
+Line 82606 : -++++-+++        "line": 20,
+Line 82607 : -++++-+++        "column": 11,
+Line 82608 : -++++-+++        "endLine": 20,
+Line 82609 : -++++-+++        "endColumn": 35,
+Line 82610 : -++++-+++        "severity": 3,
+Line 82611 : -++++-+++        "ruleName": "AvoidDebugStatements",
+Line 82612 : -++++-+++        "category": "Performance",
+Line 82613 : -++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 82614 : -++++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 82615 : -++++-+++      },
+Line 82616 : -++++-+++      {
+Line 82617 : -++++-+++        "line": 20,
+Line 82618 : -++++-+++        "column": 11,
+Line 82619 : -++++-+++        "endLine": 20,
+Line 82620 : -++++-+++        "endColumn": 35,
+Line 82621 : -++++-+++        "severity": 3,
+Line 82622 : -++++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 82623 : -++++-+++        "category": "Best Practices",
+Line 82624 : -++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 82625 : -++++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 82626 : -++++-+++      },
+Line 82627 : -++++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 82628 : -++++-++index ebc3aa5..b33da59 100644
+Line 82629 : -++++-++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 82630 : -++++-+++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 82631 : -++++-++@@ -5,0 +6,22 @@
+Line 82632 : -++++-+++      {
+Line 82633 : -++++-+++        "line": 20,
+Line 82634 : -++++-+++        "column": 11,
+Line 82635 : -++++-+++        "endLine": 20,
+Line 82636 : -++++-+++        "endColumn": 35,
+Line 82637 : -++++-+++        "severity": 3,
+Line 82638 : -++++-+++        "ruleName": "AvoidDebugStatements",
+Line 82639 : -++++-+++        "category": "Performance",
+Line 82640 : -++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 82641 : -++++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 82642 : -++++-+++      },
+Line 82643 : -++++-+++      {
+Line 82644 : -++++-+++        "line": 20,
+Line 82645 : -++++-+++        "column": 11,
+Line 82646 : -++++-+++        "endLine": 20,
+Line 82647 : -++++-+++        "endColumn": 35,
+Line 82648 : -++++-+++        "severity": 3,
+Line 82649 : -++++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 82650 : -++++-+++        "category": "Best Practices",
+Line 82651 : -++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 82652 : -++++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 82653 : -++++-+++      },
+Line 82654 : -++++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 82655 : -++++-+index 9e21e88..1ec7a54 100644
+Line 82656 : -++++-+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 82657 : -++++-++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 82658 : -++++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 82659 : -++++-+-          System.debug('Hi AND');
+Line 82660 : -++++-++          System.debug('Hi');
+Line 82661 : -+++++@@ -1204 +1312 @@ index 0000000..a6452b3
+Line 82662 : -+++++-+index 9e21e88..1ec7a54 100644
+Line 82663 : -+++++++index 9e21e88..d522ad0 100644
+Line 82664 : -+++++@@ -1207 +1315,3 @@ index 0000000..a6452b3
+Line 82665 : -+++++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 82666 : -+++++++@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+Line 82667 : -++++++++        System.debug('Happy');
+Line 82668 : -+++++++@@ -70 +71 @@ public with sharing class AccountInsertClass {
+Line 82669 : -+++++@@ -1210,75 +1319,0 @@ index 0000000..a6452b3
+Line 82670 : -+++++-+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 82671 : -+++++-+index ebc3aa5..d4945e4 100644
+Line 82672 : -+++++-+--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 82673 : -+++++-++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 82674 : -+++++-+@@ -5,0 +6,22 @@
+Line 82675 : -+++++-++      {
+Line 82676 : -+++++-++        "line": 20,
+Line 82677 : -+++++-++        "column": 11,
+Line 82678 : -+++++-++        "endLine": 20,
+Line 82679 : -+++++-++        "endColumn": 35,
+Line 82680 : -+++++-++        "severity": 3,
+Line 82681 : -+++++-++        "ruleName": "AvoidDebugStatements",
+Line 82682 : -+++++-++        "category": "Performance",
+Line 82683 : -+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 82684 : -+++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 82685 : -+++++-++      },
+Line 82686 : -+++++-++      {
+Line 82687 : -+++++-++        "line": 20,
+Line 82688 : -+++++-++        "column": 11,
+Line 82689 : -+++++-++        "endLine": 20,
+Line 82690 : -+++++-++        "endColumn": 35,
+Line 82691 : -+++++-++        "severity": 3,
+Line 82692 : -+++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 82693 : -+++++-++        "category": "Best Practices",
+Line 82694 : -+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 82695 : -+++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 82696 : -+++++-++      },
+Line 82697 : -+++++-+@@ -10 +32 @@
+Line 82698 : -+++++-+-        "endColumn": 29,
+Line 82699 : -+++++-++        "endColumn": 32,
+Line 82700 : -+++++-+@@ -21 +43 @@
+Line 82701 : -+++++-+-        "endColumn": 29,
+Line 82702 : -+++++-++        "endColumn": 32,
+Line 82703 : -+++++-+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 82704 : -+++++-+index ebc3aa5..d4945e4 100644
+Line 82705 : -+++++-+--- a/scanner-reports/final-filtered-scanner-report.json
+Line 82706 : -+++++-++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 82707 : -+++++-+@@ -5,0 +6,22 @@
+Line 82708 : -+++++-++      {
+Line 82709 : -+++++-++        "line": 20,
+Line 82710 : -+++++-++        "column": 11,
+Line 82711 : -+++++-++        "endLine": 20,
+Line 82712 : -+++++-++        "endColumn": 35,
+Line 82713 : -+++++-++        "severity": 3,
+Line 82714 : -+++++-++        "ruleName": "AvoidDebugStatements",
+Line 82715 : -+++++-++        "category": "Performance",
+Line 82716 : -+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 82717 : -+++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 82718 : -+++++-++      },
+Line 82719 : -+++++-++      {
+Line 82720 : -+++++-++        "line": 20,
+Line 82721 : -+++++-++        "column": 11,
+Line 82722 : -+++++-++        "endLine": 20,
+Line 82723 : -+++++-++        "endColumn": 35,
+Line 82724 : -+++++-++        "severity": 3,
+Line 82725 : -+++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 82726 : -+++++-++        "category": "Best Practices",
+Line 82727 : -+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 82728 : -+++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 82729 : -+++++-++      },
+Line 82730 : -+++++-+@@ -10 +32 @@
+Line 82731 : -+++++-+-        "endColumn": 29,
+Line 82732 : -+++++-++        "endColumn": 32,
+Line 82733 : -+++++-+@@ -21 +43 @@
+Line 82734 : -+++++-+-        "endColumn": 29,
+Line 82735 : -+++++-++        "endColumn": 32,
+Line 82736 : -+++++-+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 82737 : -+++++-+index c973918..e670f52 100644
+Line 82738 : -+++++-+--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 82739 : -+++++-++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 82740 : -+++++-+@@ -1 +1 @@
+Line 82741 : -+++++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 82742 : -+++++-+\ No newline at end of file
+Line 82743 : -+++++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 82744 : -+++++-+\ No newline at end of file
+Line 82745 : -+++++@@ -1286 +1321 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 82746 : -+++++-index 9e21e88..d522ad0 100644
+Line 82747 : -++++++index 9e21e88..add3f8c 100644
+Line 82748 : -+++++@@ -1289,3 +1324,5 @@ index 9e21e88..d522ad0 100644
+Line 82749 : -+++++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+Line 82750 : -+++++-+        System.debug('Happy');
+Line 82751 : -+++++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
+Line 82752 : -++++++@@ -16,0 +17 @@ public with sharing class AccountInsertClass {
+Line 82753 : -+++++++          System.debug('Happy');
+Line 82754 : -++++++@@ -20 +20,0 @@ public with sharing class AccountInsertClass {
+Line 82755 : -++++++-          System.debug('Hello Hi');
+Line 82756 : -++++++@@ -70 +69,0 @@ public with sharing class AccountInsertClass {
+Line 82757 : -+++++@@ -1293 +1330,49 @@ index 9e21e88..d522ad0 100644
+Line 8977344 : -++++@@ -1211 +2213 @@ index 0000000..a6452b3
+Line 8977345 : -++++-+index ebc3aa5..d4945e4 100644
+Line 8977346 : -++++++index ebc3aa5..3c0aa8c 100644
+Line 8977347 : -++++@@ -1214,2 +2216,2 @@ index 0000000..a6452b3
+Line 8977348 : -++++-+@@ -5,0 +6,22 @@
+Line 8977349 : -++++-++      {
+Line 8977350 : -++++++@@ -7 +7 @@
+Line 8977351 : -+@@ -991 +5686,3 @@ index 0000000..a6452b3
+Line 8977352 : -+-++++-        "column": 11,
+Line 8977353 : -++++@@ -1217 +2219,3 @@ index 0000000..a6452b3
+Line 8977354 : -++++-++        "column": 11,
+Line 8977355 : -++++++@@ -9,2 +9,2 @@
+Line 8977356 : -+@@ -993,8 +5690,12 @@ index 0000000..a6452b3
+Line 8977357 : -+-++++-        "endColumn": 29,
+Line 8977358 : -+-++++-        "severity": 3,
+Line 8977359 : -+-++++-        "ruleName": "AvoidDebugStatements",
+Line 8977360 : -+-++++-        "category": "Performance",
+Line 8977361 : -+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977362 : -+-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977363 : -+-++++-      },
+Line 8977364 : -+-++++-      {
+Line 8977365 : -++@@ -1096,2 +4586,14 @@ index 0000000..a6452b3
+Line 8977366 : -++-++++        "endColumn": 39,
+Line 8977367 : -++-+++@@ -21 +43 @@
+Line 8977368 : -++++@@ -1220,7 +2224,2 @@ index 0000000..a6452b3
+Line 8977369 : -++++-++        "severity": 3,
+Line 8977370 : -++++-++        "ruleName": "AvoidDebugStatements",
+Line 8977371 : -++++-++        "category": "Performance",
+Line 8977372 : -++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977373 : -++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977374 : -++++-++      },
+Line 8977375 : -++++-++      {
+Line 8977376 : -++++++@@ -18 +18 @@
+Line 8977377 : -+@@ -1002 +5703,3 @@ index 0000000..a6452b3
+Line 8977378 : -+-++++-        "column": 11,
+Line 8977379 : -++++@@ -1228 +2227,3 @@ index 0000000..a6452b3
+Line 8977380 : -++++-++        "column": 11,
+Line 8977381 : -++++++@@ -20,2 +20,2 @@
+Line 8977382 : -+@@ -1004,22 +5707,50 @@ index 0000000..a6452b3
+Line 8977383 : -+-++++-        "endColumn": 29,
+Line 8977384 : -+-++++-        "severity": 3,
+Line 8977385 : -+-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977386 : -+-++++-        "category": "Best Practices",
+Line 8977387 : -+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977388 : -+-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977389 : -+-++++-      }
+Line 8977390 : -+-++++-    ]
+Line 8977391 : -+-++++-  }
+Line 8977392 : -+-++++-]
+Line 8977393 : -+-+++++[]
+Line 8977394 : -+-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 8977395 : -+-++++index ebc3aa5..fe51488 100644
+Line 8977396 : -+-++++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 8977397 : -+-+++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 8977398 : -+-++++@@ -1,30 +1 @@
+Line 8977399 : -+-++++-[
+Line 8977400 : -+-++++-  {
+Line 8977401 : -+-++++-    "engine": "pmd",
+Line 8977402 : -+-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+Line 8977403 : -+-++++-    "violations": [
+Line 8977404 : -+-++++-      {
+Line 8977405 : -++@@ -1099,29 +4601,25 @@ index 0000000..a6452b3
+Line 8977406 : -++-++++        "endColumn": 39,
+Line 8977407 : -++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 8977408 : -++-+++index ebc3aa5..bb2caee 100644
+Line 8977409 : -++-+++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 8977410 : -++-++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 8977411 : -++-+++@@ -5,0 +6,22 @@
+Line 8977412 : -++-++++      {
+Line 8977413 : -++-++++        "line": 20,
+Line 8977414 : -++-++++        "column": 11,
+Line 8977415 : -++-++++        "endLine": 20,
+Line 8977416 : -++-++++        "endColumn": 35,
+Line 8977417 : -++-++++        "severity": 3,
+Line 8977418 : -++-++++        "ruleName": "AvoidDebugStatements",
+Line 8977419 : -++-++++        "category": "Performance",
+Line 8977420 : -++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977421 : -++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977422 : -++-++++      },
+Line 8977423 : -++-++++      {
+Line 8977424 : -++-++++        "line": 20,
+Line 8977425 : -++-++++        "column": 11,
+Line 8977426 : -++-++++        "endLine": 20,
+Line 8977427 : -++-++++        "endColumn": 35,
+Line 8977428 : -++-++++        "severity": 3,
+Line 8977429 : -++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977430 : -++-++++        "category": "Best Practices",
+Line 8977431 : -++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977432 : -++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977433 : -++-++++      },
+Line 8977434 : -++-+++@@ -10 +32 @@
+Line 8977435 : -++++@@ -1231,12 +2231,0 @@ index 0000000..a6452b3
+Line 8977436 : -++++-++        "severity": 3,
+Line 8977437 : -++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977438 : -++++-++        "category": "Best Practices",
+Line 8977439 : -++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977440 : -++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977441 : -++++-++      },
+Line 8977442 : -++++-+@@ -10 +32 @@
+Line 8977443 : -++++-+-        "endColumn": 29,
+Line 8977444 : -++++-++        "endColumn": 32,
+Line 8977445 : -++++-+@@ -21 +43 @@
+Line 8977446 : -++++-+-        "endColumn": 29,
+Line 8977447 : -++++-++        "endColumn": 32,
+Line 8977448 : -++++@@ -1244 +2233 @@ index 0000000..a6452b3
+Line 8977449 : -++++-+index ebc3aa5..d4945e4 100644
+Line 8977450 : -++++++index ebc3aa5..3c0aa8c 100644
+Line 8977451 : -++++@@ -1247,2 +2236,2 @@ index 0000000..a6452b3
+Line 8977452 : -++++-+@@ -5,0 +6,22 @@
+Line 8977453 : -++++-++      {
+Line 8977454 : -++++++@@ -7 +7 @@
+Line 8977455 : -+@@ -1027 +5758,3 @@ index 0000000..a6452b3
+Line 8977456 : -+-++++-        "column": 11,
+Line 8977457 : -++++@@ -1250 +2239,3 @@ index 0000000..a6452b3
+Line 8977458 : -++++-++        "column": 11,
+Line 8977459 : -++++++@@ -9,2 +9,2 @@
+Line 8977460 : -+@@ -1029,8 +5762,12 @@ index 0000000..a6452b3
+Line 8977461 : -+-++++-        "endColumn": 29,
+Line 8977462 : -+-++++-        "severity": 3,
+Line 8977463 : -+-++++-        "ruleName": "AvoidDebugStatements",
+Line 8977464 : -+-++++-        "category": "Performance",
+Line 8977465 : -+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977466 : -+-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977467 : -+-++++-      },
+Line 8977468 : -+-++++-      {
+Line 8977469 : -++@@ -1129,2 +4627,14 @@ index 0000000..a6452b3
+Line 8977470 : -++-++++        "endColumn": 39,
+Line 8977471 : -++-+++@@ -21 +43 @@
+Line 8977472 : -++++@@ -1253,7 +2244,2 @@ index 0000000..a6452b3
+Line 8977473 : -++++-++        "severity": 3,
+Line 8977474 : -++++-++        "ruleName": "AvoidDebugStatements",
+Line 8977475 : -++++-++        "category": "Performance",
+Line 8977476 : -++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977477 : -++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977478 : -++++-++      },
+Line 8977479 : -++++-++      {
+Line 8977480 : -++++++@@ -18 +18 @@
+Line 8977481 : -+@@ -1038 +5775,3 @@ index 0000000..a6452b3
+Line 8977482 : -+-++++-        "column": 11,
+Line 8977483 : -++++@@ -1261 +2247,3 @@ index 0000000..a6452b3
+Line 8977484 : -++++-++        "column": 11,
+Line 8977485 : -++++++@@ -20,2 +20,2 @@
+Line 8977486 : -+@@ -1040,108 +5779,260 @@ index 0000000..a6452b3
+Line 8977487 : -+-++++-        "endColumn": 29,
+Line 8977488 : -+-++++-        "severity": 3,
+Line 8977489 : -+-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977490 : -+-++++-        "category": "Best Practices",
+Line 8977491 : -+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977492 : -+-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977493 : -+-++++-      }
+Line 8977494 : -+-++++-    ]
+Line 8977495 : -+-++++-  }
+Line 8977496 : -+-++++-]
+Line 8977497 : -+-+++++[]
+Line 8977498 : -+-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977499 : -+-++++index c973918..a14d61d 100644
+Line 8977500 : -+-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977501 : -+-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977502 : -+-++++@@ -1 +1 @@
+Line 8977503 : -+-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977504 : -+-++++\ No newline at end of file
+Line 8977505 : -+-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977506 : -+-++++\ No newline at end of file
+Line 8977507 : -+-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 8977508 : -+-+++index 9e21e88..1ec7a54 100644
+Line 8977509 : -+-+++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 8977510 : -+-++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 8977511 : -+-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 8977512 : -+-+++-          System.debug('Hi AND');
+Line 8977513 : -+-++++          System.debug('Hi');
+Line 8977514 : -+-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977515 : -+-+++index ebc3aa5..bb2caee 100644
+Line 8977516 : -+-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977517 : -+-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977518 : -+-+++@@ -5,0 +6,22 @@
+Line 8977519 : -+-++++      {
+Line 8977520 : -+-++++        "line": 20,
+Line 8977521 : -+-++++        "column": 11,
+Line 8977522 : -+-++++        "endLine": 20,
+Line 8977523 : -+-++++        "endColumn": 35,
+Line 8977524 : -+-++++        "severity": 3,
+Line 8977525 : -+-++++        "ruleName": "AvoidDebugStatements",
+Line 8977526 : -+-++++        "category": "Performance",
+Line 8977527 : -+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977528 : -+-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977529 : -+-++++      },
+Line 8977530 : -+-++++      {
+Line 8977531 : -+-++++        "line": 20,
+Line 8977532 : -+-++++        "column": 11,
+Line 8977533 : -+-++++        "endLine": 20,
+Line 8977534 : -+-++++        "endColumn": 35,
+Line 8977535 : -+-++++        "severity": 3,
+Line 8977536 : -+-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977537 : -+-++++        "category": "Best Practices",
+Line 8977538 : -+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977539 : -+-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977540 : -+-++++      },
+Line 8977541 : -+-+++@@ -10 +32 @@
+Line 8977542 : -+-+++-        "endColumn": 29,
+Line 8977543 : -+-++++        "endColumn": 39,
+Line 8977544 : -+-+++@@ -21 +43 @@
+Line 8977545 : -+-+++-        "endColumn": 29,
+Line 8977546 : -+-++++        "endColumn": 39,
+Line 8977547 : -+-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 8977548 : -+-+++index ebc3aa5..bb2caee 100644
+Line 8977549 : -+-+++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 8977550 : -+-++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 8977551 : -+-+++@@ -5,0 +6,22 @@
+Line 8977552 : -+-++++      {
+Line 8977553 : -+-++++        "line": 20,
+Line 8977554 : -+-++++        "column": 11,
+Line 8977555 : -+-++++        "endLine": 20,
+Line 8977556 : -+-++++        "endColumn": 35,
+Line 8977557 : -+-++++        "severity": 3,
+Line 8977558 : -+-++++        "ruleName": "AvoidDebugStatements",
+Line 8977559 : -+-++++        "category": "Performance",
+Line 8977560 : -+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977561 : -+-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977562 : -+-++++      },
+Line 8977563 : -+-++++      {
+Line 8977564 : -+-++++        "line": 20,
+Line 8977565 : -+-++++        "column": 11,
+Line 8977566 : -+-++++        "endLine": 20,
+Line 8977567 : -+-++++        "endColumn": 35,
+Line 8977568 : -+-++++        "severity": 3,
+Line 8977569 : -+-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977570 : -+-++++        "category": "Best Practices",
+Line 8977571 : -+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977572 : -+-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977573 : -+-++++      },
+Line 8977574 : -+-+++@@ -10 +32 @@
+Line 8977575 : -+-+++-        "endColumn": 29,
+Line 8977576 : -+-++++        "endColumn": 39,
+Line 8977577 : -+-+++@@ -21 +43 @@
+Line 8977578 : -+-+++-        "endColumn": 29,
+Line 8977579 : -+-++++        "endColumn": 39,
+Line 8977580 : -+-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977581 : -+-+++index c973918..866c0b7 100644
+Line 8977582 : -+-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977583 : -+-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977584 : -+-+++@@ -1 +1 @@
+Line 8977585 : -+-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977586 : -+-+++\ No newline at end of file
+Line 8977587 : -+-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977588 : -+-+++\ No newline at end of file
+Line 8977589 : -+-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 8977590 : -+-++index 9e21e88..9a5148a 100644
+Line 8977591 : -+-++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 8977592 : -+-+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 8977593 : -+-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 8977594 : -+-++-          System.debug('Hi AND');
+Line 8977595 : -++@@ -1132,78 +4642,182 @@ index 0000000..a6452b3
+Line 8977596 : -++-++++        "endColumn": 39,
+Line 8977597 : -++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977598 : -++-+++index c973918..866c0b7 100644
+Line 8977599 : -++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977600 : -++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977601 : -++-+++@@ -1 +1 @@
+Line 8977602 : -++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977603 : -++-+++\ No newline at end of file
+Line 8977604 : -++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977605 : -++-+++\ No newline at end of file
+Line 8977606 : -++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 8977607 : -++-++index 9e21e88..9a5148a 100644
+Line 8977608 : -++-++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 8977609 : -++-+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 8977610 : -++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 8977611 : -++-++-          System.debug('Hi AND');
+Line 8977612 : -++-+++          System.debug('Hello');
+Line 8977613 : -++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977614 : -++-++index ebc3aa5..b33da59 100644
+Line 8977615 : -++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977616 : -++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977617 : -++-++@@ -5,0 +6,22 @@
+Line 8977618 : -++-+++      {
+Line 8977619 : -++-+++        "line": 20,
+Line 8977620 : -++-+++        "column": 11,
+Line 8977621 : -++-+++        "endLine": 20,
+Line 8977622 : -++-+++        "endColumn": 35,
+Line 8977623 : -++-+++        "severity": 3,
+Line 8977624 : -++-+++        "ruleName": "AvoidDebugStatements",
+Line 8977625 : -++-+++        "category": "Performance",
+Line 8977626 : -++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977627 : -++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977628 : -++-+++      },
+Line 8977629 : -++-+++      {
+Line 8977630 : -++-+++        "line": 20,
+Line 8977631 : -++-+++        "column": 11,
+Line 8977632 : -++-+++        "endLine": 20,
+Line 8977633 : -++-+++        "endColumn": 35,
+Line 8977634 : -++-+++        "severity": 3,
+Line 8977635 : -++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977636 : -++-+++        "category": "Best Practices",
+Line 8977637 : -++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977638 : -++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977639 : -++-+++      },
+Line 8977640 : -++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 8977641 : -++-++index ebc3aa5..b33da59 100644
+Line 8977642 : -++-++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 8977643 : -++-+++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 8977644 : -++-++@@ -5,0 +6,22 @@
+Line 8977645 : -++-+++      {
+Line 8977646 : -++-+++        "line": 20,
+Line 8977647 : -++-+++        "column": 11,
+Line 8977648 : -++-+++        "endLine": 20,
+Line 8977649 : -++-+++        "endColumn": 35,
+Line 8977650 : -++-+++        "severity": 3,
+Line 8977651 : -++-+++        "ruleName": "AvoidDebugStatements",
+Line 8977652 : -++-+++        "category": "Performance",
+Line 8977653 : -++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977654 : -++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977655 : -++-+++      },
+Line 8977656 : -++-+++      {
+Line 8977657 : -++-+++        "line": 20,
+Line 8977658 : -++-+++        "column": 11,
+Line 8977659 : -++-+++        "endLine": 20,
+Line 8977660 : -++-+++        "endColumn": 35,
+Line 8977661 : -++-+++        "severity": 3,
+Line 8977662 : -++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977663 : -++-+++        "category": "Best Practices",
+Line 8977664 : -++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977665 : -++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977666 : -++-+++      },
+Line 8977667 : -++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 8977668 : -++-+index 9e21e88..1ec7a54 100644
+Line 8977669 : -++-+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 8977670 : -++-++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 8977671 : -++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 8977672 : -++-+-          System.debug('Hi AND');
+Line 8977673 : -++-++          System.debug('Hi');
+Line 8977674 : -++++@@ -1264,12 +2251,0 @@ index 0000000..a6452b3
+Line 8977675 : -++++-++        "severity": 3,
+Line 8977676 : -++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977677 : -++++-++        "category": "Best Practices",
+Line 8977678 : -++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977679 : -++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977680 : -++++-++      },
+Line 8977681 : -++++-+@@ -10 +32 @@
+Line 8977682 : -++++-+-        "endColumn": 29,
+Line 8977683 : -++++-++        "endColumn": 32,
+Line 8977684 : -++++-+@@ -21 +43 @@
+Line 8977685 : -++++-+-        "endColumn": 29,
+Line 8977686 : -++++-++        "endColumn": 32,
+Line 8977687 : -++++@@ -1277 +2253 @@ index 0000000..a6452b3
+Line 8977688 : -++++-+index c973918..e670f52 100644
+Line 8977689 : -++++++index c973918..343e8d0 100644
+Line 8977690 : -++++@@ -1283 +2259 @@ index 0000000..a6452b3
+Line 8977691 : -++++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977692 : -+++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977693 : -++++@@ -1286 +2262 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 8977694 : -++++-index 9e21e88..d522ad0 100644
+Line 8977695 : -+++++index add3f8c..de2575f 100644
+Line 8977696 : -++++@@ -1289,4 +2265,2 @@ index 9e21e88..d522ad0 100644
+Line 8977697 : -++++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+Line 8977698 : -++++-+        System.debug('Happy');
+Line 8977699 : -++++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
+Line 8977700 : -++++--          System.debug('Hi AND');
+Line 8977701 : -+++++@@ -17 +17 @@ public with sharing class AccountInsertClass {
+Line 8977702 : -+++++-          System.debug('Happy');
+Line 8977703 : -++++@@ -1293,0 +2268,81 @@ index 9e21e88..d522ad0 100644
+Line 8977704 : -+++@@ -1211 +3453 @@ index 0000000..a6452b3
+Line 8977705 : -+++-+index ebc3aa5..d4945e4 100644
+Line 8977706 : -+++++index 3c0aa8c..fe51488 100644
+Line 8977707 : -+++@@ -1214,29 +3456,32 @@ index 0000000..a6452b3
+Line 8977708 : -+++-+@@ -5,0 +6,22 @@
+Line 8977709 : -+++-++      {
+Line 8977710 : -+++-++        "line": 20,
+Line 8977711 : -+++-++        "column": 11,
+Line 8977712 : -+++-++        "endLine": 20,
+Line 8977713 : -+++-++        "endColumn": 35,
+Line 8977714 : -+++-++        "severity": 3,
+Line 8977715 : -+++-++        "ruleName": "AvoidDebugStatements",
+Line 8977716 : -+++-++        "category": "Performance",
+Line 8977717 : -+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977718 : -+++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977719 : -+++-++      },
+Line 8977720 : -+++-++      {
+Line 8977721 : -+++-++        "line": 20,
+Line 8977722 : -+++-++        "column": 11,
+Line 8977723 : -+++-++        "endLine": 20,
+Line 8977724 : -+++-++        "endColumn": 35,
+Line 8977725 : -+++-++        "severity": 3,
+Line 8977726 : -+++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977727 : -+++-++        "category": "Best Practices",
+Line 8977728 : -+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977729 : -+++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977730 : -+++-++      },
+Line 8977731 : -+++-+@@ -10 +32 @@
+Line 8977732 : -+++-+-        "endColumn": 29,
+Line 8977733 : -+++-++        "endColumn": 32,
+Line 8977734 : -+++-+@@ -21 +43 @@
+Line 8977735 : -+++-+-        "endColumn": 29,
+Line 8977736 : -+++-++        "endColumn": 32,
+Line 8977737 : -@@ -990 +7085 @@ index 0000000..a6452b3
+Line 8977738 : --++++-        "line": 70,
+Line 8977739 : -+++++-        "line": 20,
+Line 8977740 : -@@ -992,2 +7087,2 @@ index 0000000..a6452b3
+Line 8977741 : --++++-        "endLine": 70,
+Line 8977742 : --++++-        "endColumn": 29,
+Line 8977743 : -+++++-        "endLine": 20,
+Line 8977744 : -+++++-        "endColumn": 35,
+Line 8977745 : -@@ -1001 +7096 @@ index 0000000..a6452b3
+Line 8977746 : --++++-        "line": 70,
+Line 8977747 : -+++++-        "line": 20,
+Line 8977748 : -@@ -1003,2 +7098,2 @@ index 0000000..a6452b3
+Line 8977749 : --++++-        "endLine": 70,
+Line 8977750 : --++++-        "endColumn": 29,
+Line 8977751 : -+++++-        "endLine": 20,
+Line 8977752 : -+++++-        "endColumn": 35,
+Line 8977753 : -@@ -1015,4 +7110,33 @@ index 0000000..a6452b3
+Line 8977754 : --++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 8977755 : --++++index ebc3aa5..fe51488 100644
+Line 8977756 : --++++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 8977757 : --+++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 8977758 : -+++@@ -1244 +3489 @@ index 0000000..a6452b3
+Line 8977759 : -+++-+index ebc3aa5..d4945e4 100644
+Line 8977760 : -+++++index 3c0aa8c..fe51488 100644
+Line 8977761 : -+++@@ -1247,29 +3492,32 @@ index 0000000..a6452b3
+Line 8977762 : -+++-+@@ -5,0 +6,22 @@
+Line 8977763 : -+++-++      {
+Line 8977764 : -+++-++        "line": 20,
+Line 8977765 : -+++-++        "column": 11,
+Line 8977766 : -+++-++        "endLine": 20,
+Line 8977767 : -+++-++        "endColumn": 35,
+Line 8977768 : -+++-++        "severity": 3,
+Line 8977769 : -+++-++        "ruleName": "AvoidDebugStatements",
+Line 8977770 : -+++-++        "category": "Performance",
+Line 8977771 : -+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977772 : -+++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977773 : -+++-++      },
+Line 8977774 : -+++-++      {
+Line 8977775 : -+++-++        "line": 20,
+Line 8977776 : -+++-++        "column": 11,
+Line 8977777 : -+++-++        "endLine": 20,
+Line 8977778 : -+++-++        "endColumn": 35,
+Line 8977779 : -+++-++        "severity": 3,
+Line 8977780 : -+++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977781 : -+++-++        "category": "Best Practices",
+Line 8977782 : -+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977783 : -+++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977784 : -+++-++      },
+Line 8977785 : -+++-+@@ -10 +32 @@
+Line 8977786 : -+++-+-        "endColumn": 29,
+Line 8977787 : -+++-++        "endColumn": 32,
+Line 8977788 : -+++-+@@ -21 +43 @@
+Line 8977789 : -+++-+-        "endColumn": 29,
+Line 8977790 : -+++-++        "endColumn": 32,
+Line 8977791 : -@@ -1026 +7150 @@ index 0000000..a6452b3
+Line 8977792 : --++++-        "line": 70,
+Line 8977793 : -+++++-        "line": 20,
+Line 8977794 : -@@ -1028,2 +7152,2 @@ index 0000000..a6452b3
+Line 8977795 : --++++-        "endLine": 70,
+Line 8977796 : --++++-        "endColumn": 29,
+Line 8977797 : -+++++-        "endLine": 20,
+Line 8977798 : -+++++-        "endColumn": 35,
+Line 8977799 : -@@ -1037 +7161 @@ index 0000000..a6452b3
+Line 8977800 : --++++-        "line": 70,
+Line 8977801 : -+++++-        "line": 20,
+Line 8977802 : -@@ -1039,2 +7163,2 @@ index 0000000..a6452b3
+Line 8977803 : --++++-        "endLine": 70,
+Line 8977804 : --++++-        "endColumn": 29,
+Line 8977805 : -+++++-        "endLine": 20,
+Line 8977806 : -+++++-        "endColumn": 35,
+Line 8977807 : -@@ -1051,119 +7175,224 @@ index 0000000..a6452b3
+Line 8977808 : --++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977809 : --++++index c973918..a14d61d 100644
+Line 8977810 : --++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977811 : --+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977812 : --++++@@ -1 +1 @@
+Line 8977813 : --++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977814 : --++++\ No newline at end of file
+Line 8977815 : --+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977816 : --++++\ No newline at end of file
+Line 8977817 : --+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 8977818 : --+++index 9e21e88..1ec7a54 100644
+Line 8977819 : --+++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 8977820 : --++++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 8977821 : --+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 8977822 : --+++-          System.debug('Hi AND');
+Line 8977823 : --++++          System.debug('Hi');
+Line 8977824 : --+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977825 : --+++index ebc3aa5..bb2caee 100644
+Line 8977826 : --+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977827 : --++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977828 : --+++@@ -5,0 +6,22 @@
+Line 8977829 : --++++      {
+Line 8977830 : --++++        "line": 20,
+Line 8977831 : --++++        "column": 11,
+Line 8977832 : --++++        "endLine": 20,
+Line 8977833 : --++++        "endColumn": 35,
+Line 8977834 : --++++        "severity": 3,
+Line 8977835 : --++++        "ruleName": "AvoidDebugStatements",
+Line 8977836 : --++++        "category": "Performance",
+Line 8977837 : --++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977838 : --++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977839 : --++++      },
+Line 8977840 : --++++      {
+Line 8977841 : --++++        "line": 20,
+Line 8977842 : --++++        "column": 11,
+Line 8977843 : --++++        "endLine": 20,
+Line 8977844 : --++++        "endColumn": 35,
+Line 8977845 : --++++        "severity": 3,
+Line 8977846 : --++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977847 : --++++        "category": "Best Practices",
+Line 8977848 : --++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977849 : --++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977850 : --++++      },
+Line 8977851 : --+++@@ -10 +32 @@
+Line 8977852 : --+++-        "endColumn": 29,
+Line 8977853 : --++++        "endColumn": 39,
+Line 8977854 : --+++@@ -21 +43 @@
+Line 8977855 : --+++-        "endColumn": 29,
+Line 8977856 : --++++        "endColumn": 39,
+Line 8977857 : --+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 8977858 : --+++index ebc3aa5..bb2caee 100644
+Line 8977859 : --+++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 8977860 : --++++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 8977861 : --+++@@ -5,0 +6,22 @@
+Line 8977862 : --++++      {
+Line 8977863 : --++++        "line": 20,
+Line 8977864 : --++++        "column": 11,
+Line 8977865 : --++++        "endLine": 20,
+Line 8977866 : --++++        "endColumn": 35,
+Line 8977867 : --++++        "severity": 3,
+Line 8977868 : --++++        "ruleName": "AvoidDebugStatements",
+Line 8977869 : --++++        "category": "Performance",
+Line 8977870 : --++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977871 : --++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977872 : --++++      },
+Line 8977873 : --++++      {
+Line 8977874 : --++++        "line": 20,
+Line 8977875 : --++++        "column": 11,
+Line 8977876 : --++++        "endLine": 20,
+Line 8977877 : --++++        "endColumn": 35,
+Line 8977878 : --++++        "severity": 3,
+Line 8977879 : --++++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977880 : --++++        "category": "Best Practices",
+Line 8977881 : --++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977882 : --++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977883 : --++++      },
+Line 8977884 : --+++@@ -10 +32 @@
+Line 8977885 : --+++-        "endColumn": 29,
+Line 8977886 : --++++        "endColumn": 39,
+Line 8977887 : --+++@@ -21 +43 @@
+Line 8977888 : --+++-        "endColumn": 29,
+Line 8977889 : --++++        "endColumn": 39,
+Line 8977890 : --+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977891 : --+++index c973918..866c0b7 100644
+Line 8977892 : --+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977893 : --++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8977894 : --+++@@ -1 +1 @@
+Line 8977895 : --+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977896 : --+++\ No newline at end of file
+Line 8977897 : --++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977898 : --+++\ No newline at end of file
+Line 8977899 : --++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 8977900 : --++index 9e21e88..9a5148a 100644
+Line 8977901 : --++--- a/force-app/main/default/classes/Account_Insert.cls
+Line 8977902 : --+++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 8977903 : --++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 8977904 : --++-          System.debug('Hi AND');
+Line 8977905 : --+++          System.debug('Hello');
+Line 8977906 : --++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977907 : --++index ebc3aa5..b33da59 100644
+Line 8977908 : --++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977909 : --+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977910 : --++@@ -5,0 +6,22 @@
+Line 8977911 : --+++      {
+Line 8977912 : --+++        "line": 20,
+Line 8977913 : --+++        "column": 11,
+Line 8977914 : --+++        "endLine": 20,
+Line 8977915 : --+++        "endColumn": 35,
+Line 8977916 : --+++        "severity": 3,
+Line 8977917 : --+++        "ruleName": "AvoidDebugStatements",
+Line 8977918 : --+++        "category": "Performance",
+Line 8977919 : --+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977920 : --+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977921 : --+++      },
+Line 8977922 : --+++      {
+Line 8977923 : --+++        "line": 20,
+Line 8977924 : --+++        "column": 11,
+Line 8977925 : --+++        "endLine": 20,
+Line 8977926 : --+++        "endColumn": 35,
+Line 8977927 : -+++@@ -1277 +3525 @@ index 0000000..a6452b3
+Line 8977928 : -+++-+index c973918..e670f52 100644
+Line 8977929 : -+++++index 343e8d0..baa723d 100644
+Line 8977930 : -+++@@ -1281 +3529 @@ index 0000000..a6452b3
+Line 8977931 : -+++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977932 : -+++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977933 : -+++@@ -1283 +3531 @@ index 0000000..a6452b3
+Line 8977934 : -+++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977935 : -++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8977936 : -+++@@ -1286 +3534 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 8977937 : -+++-index 9e21e88..d522ad0 100644
+Line 8977938 : -++++index add3f8c..6d35ef2 100644
+Line 8977939 : -+++@@ -1289,4 +3537,2 @@ index 9e21e88..d522ad0 100644
+Line 8977940 : -+++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+Line 8977941 : -+++-+        System.debug('Happy');
+Line 8977942 : -+++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
+Line 8977943 : -+++--          System.debug('Hi AND');
+Line 8977944 : -++++@@ -17 +17 @@ public with sharing class AccountInsertClass {
+Line 8977945 : -++++-          System.debug('Happy');
+Line 8977946 : -+++@@ -1293,0 +3540,51 @@ index 9e21e88..d522ad0 100644
+Line 8977947 : -++++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
+Line 8977948 : -+@@ -1149,61 +6040,120 @@ index 0000000..a6452b3
+Line 8977949 : -+-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977950 : -+-++index ebc3aa5..b33da59 100644
+Line 8977951 : -+-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977952 : -+-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8977953 : -+-++@@ -5,0 +6,22 @@
+Line 8977954 : -+-+++      {
+Line 8977955 : -+-+++        "line": 20,
+Line 8977956 : -+-+++        "column": 11,
+Line 8977957 : -+-+++        "endLine": 20,
+Line 8977958 : -+-+++        "endColumn": 35,
+Line 8977959 : -+-+++        "severity": 3,
+Line 8977960 : -+-+++        "ruleName": "AvoidDebugStatements",
+Line 8977961 : -+-+++        "category": "Performance",
+Line 8977962 : -+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977963 : -+-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977964 : -+-+++      },
+Line 8977965 : -+-+++      {
+Line 8977966 : -+-+++        "line": 20,
+Line 8977967 : -+-+++        "column": 11,
+Line 8977968 : -+-+++        "endLine": 20,
+Line 8977969 : -+-+++        "endColumn": 35,
+Line 8977970 : -+-+++        "severity": 3,
+Line 8977971 : -+-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977972 : -+-+++        "category": "Best Practices",
+Line 8977973 : -+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8977974 : -+-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8977975 : -+-+++      },
+Line 8977976 : -+-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 8977977 : -+-++index ebc3aa5..b33da59 100644
+Line 8977978 : -+-++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 8977979 : -+-+++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 8977980 : -+-++@@ -5,0 +6,22 @@
+Line 8977981 : -+-+++      {
+Line 8977982 : -+-+++        "line": 20,
+Line 8977983 : -+-+++        "column": 11,
+Line 8977984 : -+-+++        "endLine": 20,
+Line 8977985 : -+-+++        "endColumn": 35,
+Line 8977986 : -+-+++        "severity": 3,
+Line 8977987 : -+-+++        "ruleName": "AvoidDebugStatements",
+Line 8977988 : -+-+++        "category": "Performance",
+Line 8977989 : -+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8977990 : -+-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8977991 : -+-+++      },
+Line 8977992 : -+-+++      {
+Line 8977993 : -+-+++        "line": 20,
+Line 8977994 : -+-+++        "column": 11,
+Line 8977995 : -+-+++        "endLine": 20,
+Line 8977996 : -+-+++        "endColumn": 35,
+Line 8977997 : -+-+++        "severity": 3,
+Line 8977998 : -+-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8977999 : -+-+++        "category": "Best Practices",
+Line 8978000 : -+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8978001 : -+-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8978002 : -+-+++      },
+Line 8978003 : -+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 8978004 : -+-+index 9e21e88..1ec7a54 100644
+Line 8978005 : -+-+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 8978006 : -+-++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 8978007 : -+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 8978008 : -+-+-          System.debug('Hi AND');
+Line 8978009 : -+-++          System.debug('Hi');
+Line 8978010 : -++@@ -1211 +4825 @@ index 0000000..a6452b3
+Line 8978011 : -++-+index ebc3aa5..d4945e4 100644
+Line 8978012 : -++++index 3c0aa8c..d9025db 100644
+Line 8978013 : -++@@ -1214,29 +4828,16 @@ index 0000000..a6452b3
+Line 8978014 : -++-+@@ -5,0 +6,22 @@
+Line 8978015 : -++-++      {
+Line 8978016 : -++-++        "line": 20,
+Line 8978017 : -++-++        "column": 11,
+Line 8978018 : -++-++        "endLine": 20,
+Line 8978019 : -++-++        "endColumn": 35,
+Line 8978020 : -++-++        "severity": 3,
+Line 8978021 : -++-++        "ruleName": "AvoidDebugStatements",
+Line 8978022 : -++-++        "category": "Performance",
+Line 8978023 : -++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8978024 : -++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8978025 : -++-++      },
+Line 8978026 : -++-++      {
+Line 8978027 : -++-++        "line": 20,
+Line 8978028 : -++-++        "column": 11,
+Line 8978029 : -++-++        "endLine": 20,
+Line 8978030 : -++-++        "endColumn": 35,
+Line 8978031 : -++-++        "severity": 3,
+Line 8978032 : -++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8978033 : -++-++        "category": "Best Practices",
+Line 8978034 : -++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8978035 : -++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8978036 : -++-++      },
+Line 8978037 : -++-+@@ -10 +32 @@
+Line 8978038 : -++-+-        "endColumn": 29,
+Line 8978039 : -++-++        "endColumn": 32,
+Line 8978040 : -++-+@@ -21 +43 @@
+Line 8978041 : -++-+-        "endColumn": 29,
+Line 8978042 : -++-++        "endColumn": 32,
+Line 8978043 : -++++@@ -7 +7 @@
+Line 8978044 : -++++-        "line": 20,
+Line 8978045 : -+++++        "line": 17,
+Line 8978046 : -++++@@ -9,2 +9,2 @@
+Line 8978047 : -++++-        "endLine": 20,
+Line 8978048 : -++++-        "endColumn": 35,
+Line 8978049 : -+++++        "endLine": 17,
+Line 8978050 : -+++++        "endColumn": 29,
+Line 8978051 : -++++@@ -18 +18 @@
+Line 8978052 : -++++-        "line": 20,
+Line 8978053 : -+++++        "line": 17,
+Line 8978054 : -++++@@ -20,2 +20,2 @@
+Line 8978055 : -++++-        "endLine": 20,
+Line 8978056 : -++++-        "endColumn": 35,
+Line 8978057 : -+++++        "endLine": 17,
+Line 8978058 : -+++++        "endColumn": 29,
+Line 8978059 : -++@@ -1244 +4845 @@ index 0000000..a6452b3
+Line 8978060 : -++-+index ebc3aa5..d4945e4 100644
+Line 8978061 : -++++index 3c0aa8c..d9025db 100644
+Line 8978062 : -++@@ -1247,29 +4848,16 @@ index 0000000..a6452b3
+Line 8978063 : -++-+@@ -5,0 +6,22 @@
+Line 8978064 : -++-++      {
+Line 8978065 : -++-++        "line": 20,
+Line 8978066 : -++-++        "column": 11,
+Line 8978067 : -++-++        "endLine": 20,
+Line 8978068 : -++-++        "endColumn": 35,
+Line 8978069 : -++-++        "severity": 3,
+Line 8978070 : -++-++        "ruleName": "AvoidDebugStatements",
+Line 8978071 : -++-++        "category": "Performance",
+Line 8978072 : -++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8978073 : -++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8978074 : -++-++      },
+Line 8978075 : -++-++      {
+Line 8978076 : -++-++        "line": 20,
+Line 8978077 : -++-++        "column": 11,
+Line 8978078 : -++-++        "endLine": 20,
+Line 8978079 : -++-++        "endColumn": 35,
+Line 8978080 : -++-++        "severity": 3,
+Line 8978081 : -++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8978082 : -++-++        "category": "Best Practices",
+Line 8978083 : -++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8978084 : -++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8978085 : -++-++      },
+Line 8978086 : -++-+@@ -10 +32 @@
+Line 8978087 : -++-+-        "endColumn": 29,
+Line 8978088 : -++-++        "endColumn": 32,
+Line 8978089 : -++-+@@ -21 +43 @@
+Line 8978090 : -++-+-        "endColumn": 29,
+Line 8978091 : -++-++        "endColumn": 32,
+Line 8978092 : -++++@@ -7 +7 @@
+Line 8978093 : -++++-        "line": 20,
+Line 8978094 : -+++++        "line": 17,
+Line 8978095 : -++++@@ -9,2 +9,2 @@
+Line 8978096 : -++++-        "endLine": 20,
+Line 8978097 : -++++-        "endColumn": 35,
+Line 8978098 : -+++++        "endLine": 17,
+Line 8978099 : -+++++        "endColumn": 29,
+Line 8978100 : -++++@@ -18 +18 @@
+Line 8978101 : -++++-        "line": 20,
+Line 8978102 : -+++++        "line": 17,
+Line 8978103 : -++++@@ -20,2 +20,2 @@
+Line 8978104 : -++++-        "endLine": 20,
+Line 8978105 : -++++-        "endColumn": 35,
+Line 8978106 : -+++++        "endLine": 17,
+Line 8978107 : -+++++        "endColumn": 29,
+Line 8978108 : -++@@ -1277 +4865 @@ index 0000000..a6452b3
+Line 8978109 : -++-+index c973918..e670f52 100644
+Line 8978110 : -++++index 343e8d0..f6cdfcc 100644
+Line 8978111 : -++@@ -1281 +4869 @@ index 0000000..a6452b3
+Line 8978112 : -++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8978113 : -++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8978114 : -++@@ -1283 +4871 @@ index 0000000..a6452b3
+Line 8978115 : -++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8978116 : -+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8978117 : -++@@ -1286 +4874 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 8978118 : -++-index 9e21e88..d522ad0 100644
+Line 8978119 : -+++index add3f8c..9179d3f 100644
+Line 8978120 : -++@@ -1289,4 +4877,2 @@ index 9e21e88..d522ad0 100644
+Line 8978121 : -++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+Line 8978122 : -++-+        System.debug('Happy');
+Line 8978123 : -++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
+Line 8978124 : -++--          System.debug('Hi AND');
+Line 8978125 : -+++@@ -17 +17 @@ public with sharing class AccountInsertClass {
+Line 8978126 : -+++-          System.debug('Happy');
+Line 8978127 : -++@@ -1293,0 +4880,95 @@ index 9e21e88..d522ad0 100644
+Line 8978128 : -+++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
+Line 8978129 : -++++          System.debug('He');
+Line 8978130 : -+@@ -1211 +6161 @@ index 0000000..a6452b3
+Line 8978131 : -+-+index ebc3aa5..d4945e4 100644
+Line 8978132 : -+++index 3c0aa8c..7785159 100644
+Line 8978133 : -+@@ -1214 +6164,22 @@ index 0000000..a6452b3
+Line 8978134 : -+-+@@ -5,0 +6,22 @@
+Line 8978135 : -+++@@ -7 +7 @@
+Line 8978136 : -+++-        "line": 20,
+Line 8978137 : -++++        "line": 17,
+Line 8978138 : -+++@@ -9,2 +9,2 @@
+Line 8978139 : -+++-        "endLine": 20,
+Line 8978140 : -+++-        "endColumn": 35,
+Line 8978141 : -++++        "endLine": 17,
+Line 8978142 : -++++        "endColumn": 29,
+Line 8978143 : -+++@@ -18 +18 @@
+Line 8978144 : -+++-        "line": 20,
+Line 8978145 : -++++        "line": 17,
+Line 8978146 : -+++@@ -20,2 +20,24 @@
+Line 8978147 : -+++-        "endLine": 20,
+Line 8978148 : -+++-        "endColumn": 35,
+Line 8978149 : -++++        "endLine": 17,
+Line 8978150 : -++++        "endColumn": 29,
+Line 8978151 : -@@ -1175,0 +7405,16 @@ index 0000000..a6452b3
+Line 8978152 : -+@@ -1216 +6187 @@ index 0000000..a6452b3
+Line 8978153 : -+-++        "line": 20,
+Line 8978154 : -++++        "line": 21,
+Line 8978155 : -+@@ -1218,2 +6189,2 @@ index 0000000..a6452b3
+Line 8978156 : -+-++        "endLine": 20,
+Line 8978157 : -+-++        "endColumn": 35,
+Line 8978158 : -++++        "endLine": 21,
+Line 8978159 : -++++        "endColumn": 32,
+Line 8978160 : -+@@ -1227 +6198 @@ index 0000000..a6452b3
+Line 8978161 : -+-++        "line": 20,
+Line 8978162 : -++++        "line": 21,
+Line 8978163 : -+@@ -1229,2 +6200,22 @@ index 0000000..a6452b3
+Line 8978164 : -+-++        "endLine": 20,
+Line 8978165 : -+-++        "endColumn": 35,
+Line 8978166 : -++++        "endLine": 21,
+Line 8978167 : -++++        "endColumn": 32,
+Line 8978168 : -@@ -1177 +7422 @@ index 0000000..a6452b3
+Line 8978169 : --++index ebc3aa5..b33da59 100644
+Line 8978170 : -+++index 3c0aa8c..7785159 100644
+Line 8978171 : -@@ -1180,30 +7425,76 @@ index 0000000..a6452b3
+Line 8978172 : --++@@ -5,0 +6,22 @@
+Line 8978173 : --+++      {
+Line 8978174 : --+++        "line": 20,
+Line 8978175 : --+++        "column": 11,
+Line 8978176 : --+++        "endLine": 20,
+Line 8978177 : --+++        "endColumn": 35,
+Line 8978178 : --+++        "severity": 3,
+Line 8978179 : --+++        "ruleName": "AvoidDebugStatements",
+Line 8978180 : --+++        "category": "Performance",
+Line 8978181 : --+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8978182 : --+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8978183 : --+++      },
+Line 8978184 : --+++      {
+Line 8978185 : --+++        "line": 20,
+Line 8978186 : --+++        "column": 11,
+Line 8978187 : --+++        "endLine": 20,
+Line 8978188 : --+++        "endColumn": 35,
+Line 8978189 : --+++        "severity": 3,
+Line 8978190 : --+++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8978191 : --+++        "category": "Best Practices",
+Line 8978192 : --+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8978193 : --+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8978194 : --+++      },
+Line 8978195 : --+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+Line 8978196 : --+index 9e21e88..1ec7a54 100644
+Line 8978197 : --+--- a/force-app/main/default/classes/Account_Insert.cls
+Line 8978198 : --++++ b/force-app/main/default/classes/Account_Insert.cls
+Line 8978199 : --+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+Line 8978200 : --+-          System.debug('Hi AND');
+Line 8978201 : --++          System.debug('Hi');
+Line 8978202 : -+++@@ -7 +7 @@
+Line 8978203 : -+++-        "line": 20,
+Line 8978204 : -++++        "line": 17,
+Line 8978205 : -+++@@ -9,2 +9,2 @@
+Line 8978206 : -+++-        "endLine": 20,
+Line 8978207 : -+++-        "endColumn": 35,
+Line 8978208 : -++++        "endLine": 17,
+Line 8978209 : -++++        "endColumn": 29,
+Line 8978210 : -+++@@ -18 +18 @@
+Line 8978211 : -+++-        "line": 20,
+Line 8978212 : -++++        "line": 17,
+Line 8978213 : -+++@@ -20,2 +20,24 @@
+Line 8978214 : -+++-        "endLine": 20,
+Line 8978215 : -+++-        "endColumn": 35,
+Line 8978216 : -++++        "endLine": 17,
+Line 8978217 : -++++        "endColumn": 29,
+Line 8978218 : -+@@ -1237,11 +6227,0 @@ index 0000000..a6452b3
+Line 8978219 : -+-+@@ -10 +32 @@
+Line 8978220 : -+-+-        "endColumn": 29,
+Line 8978221 : -+-++        "endColumn": 32,
+Line 8978222 : -+-+@@ -21 +43 @@
+Line 8978223 : -+-+-        "endColumn": 29,
+Line 8978224 : -+-++        "endColumn": 32,
+Line 8978225 : -+-+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 8978226 : -+-+index ebc3aa5..d4945e4 100644
+Line 8978227 : -+-+--- a/scanner-reports/final-filtered-scanner-report.json
+Line 8978228 : -+-++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 8978229 : -+-+@@ -5,0 +6,22 @@
+Line 8978230 : -+@@ -1249 +6229 @@ index 0000000..a6452b3
+Line 8978231 : -+-++        "line": 20,
+Line 8978232 : -++++        "line": 21,
+Line 8978233 : -+@@ -1251,2 +6231,2 @@ index 0000000..a6452b3
+Line 8978234 : -+-++        "endLine": 20,
+Line 8978235 : -+-++        "endColumn": 35,
+Line 8978236 : -++++        "endLine": 21,
+Line 8978237 : -++++        "endColumn": 32,
+Line 8978238 : -+@@ -1260 +6240 @@ index 0000000..a6452b3
+Line 8978239 : -+-++        "line": 20,
+Line 8978240 : -++++        "line": 21,
+Line 8978241 : -+@@ -1262,13 +6242 @@ index 0000000..a6452b3
+Line 8978242 : -+-++        "endLine": 20,
+Line 8978243 : -+-++        "endColumn": 35,
+Line 8978244 : -+-++        "severity": 3,
+Line 8978245 : -+-++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8978246 : -+-++        "category": "Best Practices",
+Line 8978247 : -+-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8978248 : -+-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8978249 : -+-++      },
+Line 8978250 : -+-+@@ -10 +32 @@
+Line 8978251 : -+-+-        "endColumn": 29,
+Line 8978252 : -+-++        "endColumn": 32,
+Line 8978253 : -+-+@@ -21 +43 @@
+Line 8978254 : -+-+-        "endColumn": 29,
+Line 8978255 : -++++        "endLine": 21,
+Line 8978256 : -+@@ -1277 +6245 @@ index 0000000..a6452b3
+Line 8978257 : -+-+index c973918..e670f52 100644
+Line 8978258 : -+++index 343e8d0..322e147 100644
+Line 8978259 : -+@@ -1281 +6249 @@ index 0000000..a6452b3
+Line 8978260 : -+-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8978261 : -+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8978262 : -+@@ -1283 +6251 @@ index 0000000..a6452b3
+Line 8978263 : -+-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8978264 : -++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8978265 : -+@@ -1286 +6254 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 8978266 : -+-index 9e21e88..d522ad0 100644
+Line 8978267 : -++index add3f8c..6d35ef2 100644
+Line 8978268 : -+@@ -1289,4 +6257,2 @@ index 9e21e88..d522ad0 100644
+Line 8978269 : -+-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+Line 8978270 : -+-+        System.debug('Happy');
+Line 8978271 : -+-@@ -70 +71 @@ public with sharing class AccountInsertClass {
+Line 8978272 : -+--          System.debug('Hi AND');
+Line 8978273 : -++@@ -17 +17 @@ public with sharing class AccountInsertClass {
+Line 8978274 : -++-          System.debug('Happy');
+Line 8978275 : -+@@ -1293,0 +6260,95 @@ index 9e21e88..d522ad0 100644
+Line 8978276 : -++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
+Line 8242283 : -@@ -1211 +7502 @@ index 0000000..a6452b3
+Line 8242284 : --+index ebc3aa5..d4945e4 100644
+Line 8242285 : -++index 3c0aa8c..4535f73 100644
+Line 8242286 : -@@ -1214 +7505,22 @@ index 0000000..a6452b3
+Line 8242287 : --+@@ -5,0 +6,22 @@
+Line 8242288 : -++@@ -7 +7 @@
+Line 8242289 : -++-        "line": 20,
+Line 8242290 : -+++        "line": 17,
+Line 8242291 : -++@@ -9,2 +9,2 @@
+Line 8242292 : -++-        "endLine": 20,
+Line 8242293 : -++-        "endColumn": 35,
+Line 8242294 : -+++        "endLine": 17,
+Line 8242295 : -+++        "endColumn": 29,
+Line 8242296 : -++@@ -18 +18 @@
+Line 8242297 : -++-        "line": 20,
+Line 8242298 : -+++        "line": 17,
+Line 8242299 : -++@@ -20,2 +20,24 @@
+Line 8242300 : -++-        "endLine": 20,
+Line 8242301 : -++-        "endColumn": 35,
+Line 8242302 : -+++        "endLine": 17,
+Line 8242303 : -+++        "endColumn": 29,
+Line 8531149 : -@@ -1216 +7528 @@ index 0000000..a6452b3
+Line 8531150 : --++        "line": 20,
+Line 8531151 : -+++        "line": 21,
+Line 8531152 : -@@ -1218,2 +7530,2 @@ index 0000000..a6452b3
+Line 8531153 : --++        "endLine": 20,
+Line 8531154 : --++        "endColumn": 35,
+Line 8531155 : -+++        "endLine": 21,
+Line 8531156 : -+++        "endColumn": 29,
+Line 8531157 : -@@ -1227 +7539 @@ index 0000000..a6452b3
+Line 8531158 : --++        "line": 20,
+Line 8531159 : -+++        "line": 21,
+Line 8531160 : -@@ -1229,2 +7541,22 @@ index 0000000..a6452b3
+Line 8531161 : --++        "endLine": 20,
+Line 8531162 : --++        "endColumn": 35,
+Line 8531163 : -+++        "endLine": 21,
+Line 8531164 : -+++        "endColumn": 29,
+Line 8531165 : -++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 8531166 : -++index 3c0aa8c..4535f73 100644
+Line 8531167 : -++--- a/scanner-reports/final-filtered-scanner-report.json
+Line 8531168 : -+++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 8531169 : -++@@ -7 +7 @@
+Line 8531170 : -++-        "line": 20,
+Line 8531171 : -+++        "line": 17,
+Line 8531172 : -++@@ -9,2 +9,2 @@
+Line 8531173 : -++-        "endLine": 20,
+Line 8531174 : -++-        "endColumn": 35,
+Line 8531175 : -+++        "endLine": 17,
+Line 8531176 : -+++        "endColumn": 29,
+Line 8531177 : -++@@ -18 +18 @@
+Line 8531178 : -++-        "line": 20,
+Line 8531179 : -+++        "line": 17,
+Line 8531180 : -++@@ -20,2 +20,24 @@
+Line 8531181 : -++-        "endLine": 20,
+Line 8531182 : -++-        "endColumn": 35,
+Line 8531183 : -+++        "endLine": 17,
+Line 8531184 : -+++        "endColumn": 29,
+Line 8531185 : -@@ -1237,11 +7568,0 @@ index 0000000..a6452b3
+Line 8531186 : --+@@ -10 +32 @@
+Line 8531187 : --+-        "endColumn": 29,
+Line 8531188 : --++        "endColumn": 32,
+Line 8531189 : --+@@ -21 +43 @@
+Line 8531190 : --+-        "endColumn": 29,
+Line 8531191 : --++        "endColumn": 32,
+Line 8531192 : --+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 8531193 : --+index ebc3aa5..d4945e4 100644
+Line 8531194 : --+--- a/scanner-reports/final-filtered-scanner-report.json
+Line 8531195 : --++++ b/scanner-reports/final-filtered-scanner-report.json
+Line 8531196 : --+@@ -5,0 +6,22 @@
+Line 8531197 : -@@ -1249 +7570 @@ index 0000000..a6452b3
+Line 8531198 : --++        "line": 20,
+Line 8531199 : -+++        "line": 21,
+Line 8531200 : -@@ -1251,2 +7572,2 @@ index 0000000..a6452b3
+Line 8531201 : --++        "endLine": 20,
+Line 8531202 : --++        "endColumn": 35,
+Line 8531203 : -+++        "endLine": 21,
+Line 8531204 : -+++        "endColumn": 29,
+Line 8531205 : -@@ -1260 +7581 @@ index 0000000..a6452b3
+Line 8531206 : --++        "line": 20,
+Line 8531207 : -+++        "line": 21,
+Line 8531208 : -@@ -1262,14 +7583,2 @@ index 0000000..a6452b3
+Line 8531209 : --++        "endLine": 20,
+Line 8531210 : --++        "endColumn": 35,
+Line 8531211 : --++        "severity": 3,
+Line 8531212 : --++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8531213 : --++        "category": "Best Practices",
+Line 8531214 : --++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8531215 : --++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8531216 : --++      },
+Line 8531217 : --+@@ -10 +32 @@
+Line 8531218 : --+-        "endColumn": 29,
+Line 8531219 : --++        "endColumn": 32,
+Line 8531220 : --+@@ -21 +43 @@
+Line 8531221 : --+-        "endColumn": 29,
+Line 8531222 : --++        "endColumn": 32,
+Line 8531223 : -+++        "endLine": 21,
+Line 8531224 : -+++        "endColumn": 29,
+Line 8531225 : -@@ -1277 +7586 @@ index 0000000..a6452b3
+Line 8531226 : --+index c973918..e670f52 100644
+Line 8531227 : -++index 343e8d0..1fbb2c6 100644
+Line 8531228 : -@@ -1281 +7590 @@ index 0000000..a6452b3
+Line 8531229 : --+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8531230 : -++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8531231 : -@@ -1283 +7592 @@ index 0000000..a6452b3
+Line 8531232 : --++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8531233 : -+++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8531234 : -@@ -1286 +7595 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 8531235 : --index 9e21e88..d522ad0 100644
+Line 8531236 : -+index add3f8c..90803a9 100644
+Line 8531237 : -@@ -1289,4 +7598,2 @@ index 9e21e88..d522ad0 100644
+Line 8531238 : --@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+Line 8531239 : --+        System.debug('Happy');
+Line 8531240 : --@@ -70 +71 @@ public with sharing class AccountInsertClass {
+Line 8531241 : ---          System.debug('Hi AND');
+Line 8531242 : -+@@ -17 +17 @@ public with sharing class AccountInsertClass {
+Line 8531243 : -+-          System.debug('Happy');
+Line 8531244 : -@@ -1293,0 +7601,95 @@ index 9e21e88..d522ad0 100644
+Line 8531245 : -+@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
+Line 8531246 : -++          System.debug('Hello Hi');
+Line 8531247 : -+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8531248 : -+index 3c0aa8c..7785159 100644
+Line 8531249 : -+--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8531250 : -++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8531251 : -+@@ -7 +7 @@
+Line 8531252 : -+-        "line": 20,
+Line 8531253 : -++        "line": 17,
+Line 8531254 : -+@@ -9,2 +9,2 @@
+Line 8531255 : -+-        "endLine": 20,
+Line 8531256 : -+-        "endColumn": 35,
+Line 8531257 : -++        "endLine": 17,
+Line 8531258 : -++        "endColumn": 29,
+Line 8531259 : -+@@ -18 +18 @@
+Line 8531260 : -+-        "line": 20,
+Line 8531261 : -++        "line": 17,
+Line 8531262 : -+@@ -20,2 +20,24 @@
+Line 8531263 : -+-        "endLine": 20,
+Line 8531264 : -+-        "endColumn": 35,
+Line 8531265 : -++        "endLine": 17,
+Line 8531266 : -++        "endColumn": 29,
+Line 8531267 : -++        "severity": 3,
+Line 8531268 : -++        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8531269 : -++        "category": "Best Practices",
+Line 8531270 : -++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8531271 : -++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8531272 : -++      },
+Line 8531273 : -++      {
+Line 8531274 : -++        "line": 21,
+Line 8531275 : -++        "column": 11,
+Line 8531276 : -++        "endLine": 21,
+Line 86812 : -++        "severity": 3,
+Line 86813 : -++        "ruleName": "AvoidDebugStatements",
+Line 86814 : -++        "category": "Performance",
+Line 86815 : -++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 86816 : -++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 86817 : -++      },
+Line 86818 : -++      {
+Line 86819 : -++        "line": 21,
+Line 86820 : -++        "column": 11,
+Line 86821 : -++        "endLine": 21,
+Line 8685 : -+index 3c0aa8c..7785159 100644
+Line 868815 : -+@@ -7 +7 @@
+Line 868816 : -+-        "line": 20,
+Line 868817 : -++        "line": 17,
+Line 868818 : -+@@ -9,2 +9,2 @@
+Line 868819 : -+-        "endLine": 20,
+Line 868820 : -+-        "endColumn": 35,
+Line 868821 : -++        "endLine": 17,
+Line 868822 : -++        "endColumn": 29,
+Line 868823 : -+@@ -18 +18 @@
+Line 868824 : -+-        "line": 20,
+Line 868825 : -++        "line": 17,
+Line 868826 : -+@@ -20,2 +20,24 @@
+Line 868827 : -+-        "endLine": 20,
+Line 868828 : -+-        "endColumn": 35,
+Line 868829 : -++        "endLine": 17,
+Line 868830 : -++        "endColumn": 29,
+Line 87092 : -++      {
+Line 87093 : -++        "line": 21,
+Line 87094 : -++        "column": 11,
+Line 87095 : -++        "endLine": 21,
+Line 87122 : -++        "severity": 3,
+Line 87123 : -++        "ruleName": "AvoidDebugStatements",
+Line 87124 : -++        "category": "Performance",
+Line 87125 : -++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 87126 : -++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 87127 : -++      },
+Line 87128 : -++      {
+Line 87129 : -++        "line": 21,
+Line 87130 : -++        "column": 11,
+Line 87131 : -++        "endLine": 21,
+Line 8715117 : -+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8715118 : -+index 343e8d0..322e147 100644
+Line 8715119 : -+--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8715120 : -++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8715121 : -+@@ -1 +1 @@
+Line 8715122 : -+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8715123 : -+\ No newline at end of file
+Line 8715124 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8715125 : -+\ No newline at end of file
+Line 8715126 : @@ -8833 +105 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+Line 8715127 : -index add3f8c..90803a9 100644
+Line 8715128 : @@ -8836,4 +108,2 @@ index add3f8c..90803a9 100644
+Line 8715129 : -@@ -17 +17 @@ public with sharing class AccountInsertClass {
+Line 8715130 : --          System.debug('Happy');
+Line 8715131 : -+          System.debug('Hi');
+Line 8715132 : -@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
+Line 8715133 : @@ -8841,85 +110,0 @@ index add3f8c..90803a9 100644
+Line 8715134 : -diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8715135 : -index 3c0aa8c..842139e 100644
+Line 8715136 : ---- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8715137 : -+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+Line 8715138 : -@@ -7 +7 @@
+Line 8715139 : --        "line": 20,
+Line 8715140 : -+        "line": 17,
+Line 8715141 : -@@ -9 +9,23 @@
+Line 8715142 : --        "endLine": 20,
+Line 8715143 : -+        "endLine": 17,
+Line 8715144 : -+        "endColumn": 29,
+Line 8715145 : -+        "severity": 3,
+Line 8715146 : -+        "ruleName": "AvoidDebugStatements",
+Line 8715147 : -+        "category": "Performance",
+Line 8715148 : -+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8715149 : -+        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8715150 : -+      },
+Line 8715151 : -+      {
+Line 8715152 : -+        "line": 17,
+Line 8715153 : -+        "column": 11,
+Line 8715154 : -+        "endLine": 17,
+Line 8715155 : -+        "endColumn": 29,
+Line 8715156 : -+        "severity": 3,
+Line 8715157 : -+        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8715158 : -+        "category": "Best Practices",
+Line 8715159 : -+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8715160 : -+        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8715161 : -+      },
+Line 8715162 : -+      {
+Line 8715163 : -+        "line": 21,
+Line 8715164 : -+        "column": 11,
+Line 8715165 : -+        "endLine": 21,
+Line 8715166 : -@@ -18 +40 @@
+Line 8715167 : --        "line": 20,
+Line 8715168 : -+        "line": 21,
+Line 8715169 : -@@ -20 +42 @@
+Line 8715170 : --        "endLine": 20,
+Line 8715171 : -+        "endLine": 21,
+Line 8715172 : -diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+Line 8715173 : -index 3c0aa8c..842139e 100644
+Line 8715174 : ---- a/scanner-reports/final-filtered-scanner-report.json
+Line 8715175 : -+++ b/scanner-reports/final-filtered-scanner-report.json
+Line 8715176 : -@@ -7 +7 @@
+Line 8715177 : --        "line": 20,
+Line 8715178 : -+        "line": 17,
+Line 8715179 : -@@ -9 +9,23 @@
+Line 8715180 : --        "endLine": 20,
+Line 8715181 : -+        "endLine": 17,
+Line 8715182 : -+        "endColumn": 29,
+Line 8715183 : -+        "severity": 3,
+Line 8715184 : -+        "ruleName": "AvoidDebugStatements",
+Line 8715185 : -+        "category": "Performance",
+Line 8715186 : -+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+Line 8715187 : -+        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+Line 8715188 : -+      },
+Line 8715189 : -+      {
+Line 8715190 : -+        "line": 17,
+Line 8715191 : -+        "column": 11,
+Line 8715192 : -+        "endLine": 17,
+Line 8715193 : -+        "endColumn": 29,
+Line 8715194 : -+        "severity": 3,
+Line 8715195 : -+        "ruleName": "DebugsShouldUseLoggingLevel",
+Line 8715196 : -+        "category": "Best Practices",
+Line 8715197 : -+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+Line 8715198 : -+        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+Line 8715199 : -+      },
+Line 8715200 : -+      {
+Line 8715201 : -+        "line": 21,
+Line 8715202 : -+        "column": 11,
+Line 8715203 : -+        "endLine": 21,
+Line 8715204 : -@@ -18 +40 @@
+Line 8715205 : --        "line": 20,
+Line 8715206 : -+        "line": 21,
+Line 8715207 : -@@ -20 +42 @@
+Line 8715208 : --        "endLine": 20,
+Line 8715209 : -+        "endLine": 21,
+Line 8715210 : -diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8715211 : -index 343e8d0..57e0606 100644
+Line 8715212 : ---- a/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8715213 : -+++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+Line 8715214 : -@@ -1 +1 @@
+Line 8715215 : --[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8715216 : -\ No newline at end of file
+Line 8715217 : -+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+Line 8715218 : -\ No newline at end of file
+Line 8715219 : diff --git a/filtered-scanner-report.csv b/filtered-scanner-report.csv
+Line 8715220 : new file mode 100644
+Line 8715221 : index 0000000..1edb6a3
+Line 8715222 : --- /dev/null
+Line 8715223 : @@ -0,0 +1,3 @@
+Line 8833 : index 6d35ef2..ffe89e2 100644
+Line 88364 : @@ -21 +21 @@ public with sharing class AccountInsertClass {
+Line 88365 : -          System.debug('Hello');
+Line 884185 : @@ -24,0 +25 @@ public with sharing class AccountInsertClass {
+Line 884186 : diff --git a/line_numbers.txt b/line_numbers.txt
+Line 884187 : new file mode 100644
+Line 884188 : index 0000000..31e3a7d
+Line 884189 : --- /dev/null
+Line 884190 : @@ -0,0 +1 @@
+Line 884191 : diff --git a/scanner-report.csv b/scanner-report.csv
+Line 884192 : index 5a3a1ac..841bc73 100644
+Line 884193 : --- a/scanner-report.csv
+Line 884194 : @@ -1,0 +2,4 @@
+Line 19 :           acc.Rating = 'Hotter';
diff --git a/changes.diff b/changes.diff
index f240d91..49c2bec 100644
--- a/changes.diff
+++ b/changes.diff
@@ -2,2 +2,3 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-index 1328704..af60e83 100644
---- a/.husky/pre-commit
+new file mode 100644
+index 0000000..27439b6
+--- /dev/null
@@ -5,12 +6,1070 @@ index 1328704..af60e83 100644
-@@ -25 +25 @@ while IFS= read -r file; do
--  # Extract only the added or modified lines for .cls and .lwc files
-+  # Extract only the added or modified lines and their line numbers for .cls and .lwc files
-@@ -29,4 +29,4 @@ while IFS= read -r file; do
--    $0 ~ file {inside=1}
--    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
--    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
--  ' changes.diff | uniq)
-+    $0 ~ file {inside=1}  # Start processing when the correct file section starts
-+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
-+    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only added or modified lines, excluding unchanged or deleted ones
-+  ' changes.diff | sort -n | uniq)
+@@ -0,0 +1,97 @@
++#!/bin/sh
++. "$(dirname "$0")/_/husky.sh"
++
++# Install necessary dependencies
++npm install @salesforce/cli --global
++sf plugins install @salesforce/sfdx-scanner
++
++# Check for unstaged changes and get changed files/lines
++git diff --unified=0 --cached > changes.diff || { echo "Failed to get git diff"; exit 1; }
++
++if [ ! -s changes.diff ]; then
++  echo "No changes detected."
++  exit 0
++fi
++
++# Process only .cls and .lwc files
++awk '
++  BEGIN {valid_file=0} 
++  /^diff --git/ {valid_file=0} 
++  /\.cls$|\.lwc$/ {valid_file=1} 
++  /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
++  /^[+][^+]/ && valid_file {print "Line", start + line_offset++, ":", substr($0, 2)}  
++' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
++
++if [ ! -s changed_cls_lwc_lines.txt ]; then
++  echo "No changes detected in .cls or .lwc files."
++  exit 0
++fi
++
++cat changed_cls_lwc_lines.txt
++
++# Run SFDX Scanner on changed files
++files=$(grep -E '^\+\+\+ b/.*(\.cls|\.lwc)$' changes.diff | sed 's/+++ b\///')
++if [ -z "$files" ]; then
++  echo "No changed .cls or .lwc files detected."
++  exit 0
++fi
++
++declare -a line_numbers_array=()
++
++while IFS= read -r file; do
++  echo "Processing file: $file"
++  file=$(echo "$file" | tr -d '"')
++  changed_lines=$(grep -A 1000 "$file" changes.diff | grep '^\+' | sed 's/^+//')
++  line_numbers=$(grep -A 1000 "$file" changes.diff | grep '^@@' | awk '{print $2}' | cut -d',' -f1 | sed 's/-//')
++
++  current_line_number=$(echo "$line_numbers" | head -1)
++  echo "Starting line number: $current_line_number"
++
++  while IFS= read -r line; do
++    echo "Running SFDX Scanner on file: $file at line number: $current_line_number..."
++    sf scanner:run --target "$file" --format "csv" --outfile "scanner-report.csv" || { echo "Scanner run failed or no issues found for $file, continuing with other files."; }
++    line_numbers_array+=("$current_line_number")
++    current_line_number=$((current_line_number + 1))
++  done <<< "$changed_lines"
++done <<< "$files"
++
++echo "${line_numbers_array[*]}" > line_numbers.txt
++cat line_numbers.txt
++
++# Filter Scanner Report by Line Numbers
++if [ -f scanner-report.csv ]; then
++  current_line_number_list=$(cat line_numbers.txt)
++  current_line_number_list=$(echo $current_line_number_list | xargs)
++  echo "Filtering scanner report for the following line numbers: $current_line_number_list"
++  awk -v lines="$current_line_number_list" '
++  BEGIN {
++    FPAT = "([^,]+)|(\"[^\"]+\")";
++    split(lines, arr, " ");
++    for (i in arr) {
++      valid[arr[i]] = 1;
++    }
++  }
++  NR == 1 || (substr($4, 2, length($4)-2) in valid) {
++    print $0;
++  }
++  ' scanner-report.csv > filtered-scanner-report.csv
++  cat filtered-scanner-report.csv
++else
++  echo "No scanner report generated."
++  exit 0
++fi
++
++# Block commit if severity 3 vulnerabilities are found
++if [ -f filtered-scanner-report.csv ]; then
++  severity_fail_count=$(awk -F',' '{gsub(/^ *| *$/, "", $2); if($2 == "\"3\"") count++} END {print count}' filtered-scanner-report.csv)
++  echo "Severity 3 issues count: $severity_fail_count"
++  if [ "$severity_fail_count" -gt 0 ]; then
++    echo "Blocking your commit due to severity 3 vulnerabilities found."
++    exit 1
++  else
++    echo "No severity 3 vulnerabilities found. Proceeding with commit."
++  fi
++else
++  echo "No filtered scanner report found."
++  exit 0
++fi
+diff --git a/changed_cls_lwc_lines.txt b/changed_cls_lwc_lines.txt
+index 7a04cc9..9a7c4df 100644
+--- a/changed_cls_lwc_lines.txt
++++ b/changed_cls_lwc_lines.txt
+@@ -1,960 +1,7 @@
+-a/changed_cls_lwc_lines.txt 0 : 0 : 3274 : -+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-a/changed_cls_lwc_lines.txt 1 : 1 : 3275 : -+index 1e62ed4..14cff41 100644
+-a/changed_cls_lwc_lines.txt 2 : 2 : 3276 : -+--- a/force-app/main/default/classes/Account_Insert.cls
+-a/changed_cls_lwc_lines.txt 3 : 3 : 3277 : -++++ b/force-app/main/default/classes/Account_Insert.cls
+-a/changed_cls_lwc_lines.txt 4 : 4 : 3278 : -+@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+-a/changed_cls_lwc_lines.txt 5 : 5 : 3279 : -++          System.debug('Hello Hi');
+-a/changed_cls_lwc_lines.txt 6 : 6 : 3280 : -+diff --git a/scanner-report.json b/scanner-report.json
+-a/changed_cls_lwc_lines.txt 7 : 7 : 3281 : -+new file mode 100644
+-a/changed_cls_lwc_lines.txt 8 : 8 : 3282 : -+index 0000000..8a298a1
+-a/changed_cls_lwc_lines.txt 9 : 9 : 3283 : -+--- /dev/null
+-a/changed_cls_lwc_lines.txt 10 : 10 : 3284 : -++++ b/scanner-report.json
+-a/changed_cls_lwc_lines.txt 11 : 11 : 3285 : -+@@ -0,0 +1 @@
+-a/changed_cls_lwc_lines.txt 12 : 12 : 3286 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-a/changed_cls_lwc_lines.txt 13 : 13 : 3287 : @@ -167 +323 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-a/changed_cls_lwc_lines.txt 14 : 14 : 3288 : -index 14cff41..9a5148a 100644
+-a/changed_cls_lwc_lines.txt 15 : 15 : 3289 : @@ -171,2 +327,20 @@ index 14cff41..9a5148a 100644
+-a/changed_cls_lwc_lines.txt 16 : 16 : 3290 : --          System.debug('Hello Hi');
+-a/changed_cls_lwc_lines.txt 17 : 17 : 3291 : -+          System.debug('Hello');
+-a/changed_cls_lwc_lines.txt 18 : 18 : 323 : index 1ec7a54..870d508 100644
+-a/changed_cls_lwc_lines.txt 19 : 19 : 3272 : -          System.debug('Hi');
+-a/changed_cls_lwc_lines.txt 20 : 20 : 3302 : deleted file mode 100644
+-a/changed_cls_lwc_lines.txt 21 : 21 : 3303 : index e69de29..0000000
+-a/changed_cls_lwc_lines.txt 22 : 22 : 3336 : deleted file mode 100644
+-a/changed_cls_lwc_lines.txt 23 : 23 : 3337 : index fe51488..0000000
+-a/changed_cls_lwc_lines.txt 24 : 24 : 3338 : --- a/scanner-reports/final-filtered-scanner-report.json
+-a/changed_cls_lwc_lines.txt 25 : 25 : 3339 : @@ -1 +0,0 @@
+-a/changed_cls_lwc_lines.txt 26 : 26 : 3340 : -[]
+-a/changed_cls_lwc_lines.txt 27 : 27 : 3406 : deleted file mode 100644
+-a/changed_cls_lwc_lines.txt 28 : 28 : 3407 : index e670f52..0000000
+-a/changed_cls_lwc_lines.txt 29 : 29 : 3408 : --- a/scanner-reports/scanner-report-.json
+-a/changed_cls_lwc_lines.txt 30 : 30 : 3409 : @@ -1 +0,0 @@
+-a/changed_cls_lwc_lines.txt 31 : 31 : 3410 : -[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-a/changed_cls_lwc_lines.txt 32 : 32 : 70 :           System.debug('Hi');
+-a/changed_cls_lwc_lines.txt 33 : 33 : -+@@ -52 +61 @@ while IFS= read -r file; do
+-a/changed_cls_lwc_lines.txt 34 : 34 : -+-  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+-a/changed_cls_lwc_lines.txt 35 : 35 : -++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-a/changed_cls_lwc_lines.txt 36 : 36 : -+@@ -55 +64 @@ while IFS= read -r file; do
+-a/changed_cls_lwc_lines.txt 37 : 37 : -+-  if [ ! -f "scanner-report-$file.json" ]; then
+-a/changed_cls_lwc_lines.txt 38 : 38 : -++  if [ ! -f "$output_file" ]; then
+-a/changed_cls_lwc_lines.txt 39 : 39 : -+@@ -64 +73 @@ while IFS= read -r file; do
+-a/changed_cls_lwc_lines.txt 40 : 40 : -+-  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+-a/changed_cls_lwc_lines.txt 41 : 41 : -++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-a/changed_cls_lwc_lines.txt 42 : 42 : -+@@ -67 +76 @@ while IFS= read -r file; do
+-a/changed_cls_lwc_lines.txt 43 : 43 : -+-  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+-a/changed_cls_lwc_lines.txt 44 : 44 : -++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-a/changed_cls_lwc_lines.txt 45 : 45 : -+@@ -73 +82 @@ while IFS= read -r file; do
+-a/changed_cls_lwc_lines.txt 46 : 46 : -+-  cat "filtered-scanner-report-$file.json"
+-a/changed_cls_lwc_lines.txt 47 : 47 : -++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-a/changed_cls_lwc_lines.txt 48 : 48 : -+@@ -78 +87 @@ done <<< "$changed_files"
+-a/changed_cls_lwc_lines.txt 49 : 49 : -+-filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+-a/changed_cls_lwc_lines.txt 50 : 50 : -++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-a/changed_cls_lwc_lines.txt 51 : 51 : -+@@ -85 +94 @@ fi
+-a/changed_cls_lwc_lines.txt 52 : 52 : -+-jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+-a/changed_cls_lwc_lines.txt 53 : 53 : -++jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-a/changed_cls_lwc_lines.txt 54 : 54 : -+@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+-a/changed_cls_lwc_lines.txt 55 : 55 : -+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+-a/changed_cls_lwc_lines.txt 56 : 56 : -++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-a/changed_cls_lwc_lines.txt 57 : 57 : -+diff --git a/changes.diff b/changes.diff
+-a/changed_cls_lwc_lines.txt 58 : 58 : -@@ -3 +43 @@ new file mode 100644
+-a/changed_cls_lwc_lines.txt 59 : 59 : --index 0000000..9b8d99e
+-a/changed_cls_lwc_lines.txt 60 : 60 : -+index 0000000..dd57583
+-a/changed_cls_lwc_lines.txt 61 : 61 : -@@ -5,102 +45,121 @@ index 0000000..9b8d99e
+-a/changed_cls_lwc_lines.txt 62 : 62 : --+++ b/.husky/pre-commit
+-a/changed_cls_lwc_lines.txt 63 : 63 : --@@ -0,0 +1,100 @@
+-a/changed_cls_lwc_lines.txt 64 : 64 : --+#!/bin/bash
+-a/changed_cls_lwc_lines.txt 65 : 65 : --+
+-a/changed_cls_lwc_lines.txt 66 : 66 : --+# Prevent modification of Husky files
+-a/changed_cls_lwc_lines.txt 67 : 67 : --+# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+-a/changed_cls_lwc_lines.txt 68 : 68 : --+#   echo "Error: pre-commit and post-commit files cannot be modified."
+-a/changed_cls_lwc_lines.txt 69 : 69 : --+#   exit 1
+-a/changed_cls_lwc_lines.txt 70 : 70 : --+# fi
+-a/changed_cls_lwc_lines.txt 71 : 71 : --+# chmod 544 .husky/pre-commit
+-a/changed_cls_lwc_lines.txt 72 : 72 : --+# chmod 544 .husky/post-commit
+-a/changed_cls_lwc_lines.txt 73 : 73 : --+
+-a/changed_cls_lwc_lines.txt 74 : 74 : --+# Check if Husky is installed
+-a/changed_cls_lwc_lines.txt 75 : 75 : --+if ! command -v husky &> /dev/null
+-a/changed_cls_lwc_lines.txt 76 : 76 : --+then
+-a/changed_cls_lwc_lines.txt 77 : 77 : --+    echo "Husky is not installed. Installing Husky..."
+-a/changed_cls_lwc_lines.txt 78 : 78 : --+    npm install husky --save-dev
+-a/changed_cls_lwc_lines.txt 79 : 79 : --+    npx husky install
+-a/changed_cls_lwc_lines.txt 80 : 80 : --+else
+-a/changed_cls_lwc_lines.txt 81 : 81 : --+    echo "Husky is already installed Successfully."
+-a/changed_cls_lwc_lines.txt 82 : 82 : --+fi
+-a/changed_cls_lwc_lines.txt 83 : 83 : --+
+-a/changed_cls_lwc_lines.txt 84 : 84 : --+# Get the list of changed Apex (.cls) or LWC files
+-a/changed_cls_lwc_lines.txt 85 : 85 : --+changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
+-a/changed_cls_lwc_lines.txt 86 : 86 : --+
+-a/changed_cls_lwc_lines.txt 87 : 87 : --+# Check if there are any relevant changes
+-a/changed_cls_lwc_lines.txt 88 : 88 : --+if [ -z "$changed_files" ]; then
+-a/changed_cls_lwc_lines.txt 89 : 89 : --+  echo "No relevant changes to scan in the files."
+-a/changed_cls_lwc_lines.txt 90 : 90 : --+  exit 0
+-a/changed_cls_lwc_lines.txt 91 : 91 : --+fi
+-a/changed_cls_lwc_lines.txt 92 : 92 : --+
+-a/changed_cls_lwc_lines.txt 93 : 93 : --+# Extract the changed lines and corresponding line numbers from the diff for each file
+-a/changed_cls_lwc_lines.txt 94 : 94 : --+git diff --unified=0 --cached > changes.diff
+-a/changed_cls_lwc_lines.txt 95 : 95 : --+
+-a/changed_cls_lwc_lines.txt 96 : 96 : --+# Loop through each changed file
+-a/changed_cls_lwc_lines.txt 97 : 97 : --+while IFS= read -r file; do
+-a/changed_cls_lwc_lines.txt 98 : 98 : --+  echo "Processing file: $file"
+-a/changed_cls_lwc_lines.txt 99 : 99 : --+
+-a/changed_cls_lwc_lines.txt 100 : 100 : --+  # Extract line numbers from the diff for this file
+-a/changed_cls_lwc_lines.txt 101 : 101 : --+  changed_lines=$(awk -v file="$file" '
+-a/changed_cls_lwc_lines.txt 102 : 102 : --+    BEGIN {inside=0}
+-a/changed_cls_lwc_lines.txt 103 : 103 : --+    /^diff --git/ {inside=0}
+-a/changed_cls_lwc_lines.txt 104 : 104 : --+    $0 ~ file {inside=1}
+-a/changed_cls_lwc_lines.txt 105 : 105 : --+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+-a/changed_cls_lwc_lines.txt 106 : 106 : --+  ' changes.diff)
+-a/changed_cls_lwc_lines.txt 107 : 107 : --+
+-a/changed_cls_lwc_lines.txt 108 : 108 : --+  # If no line numbers were found for this file, skip it
+-a/changed_cls_lwc_lines.txt 109 : 109 : --+  if [ -z "$changed_lines" ]; then
+-a/changed_cls_lwc_lines.txt 110 : 110 : --+    echo "No changed lines found in $file"
+-a/changed_cls_lwc_lines.txt 111 : 111 : --+    continue
+-a/changed_cls_lwc_lines.txt 112 : 112 : --+  fi
+-a/changed_cls_lwc_lines.txt 113 : 113 : --+
+-a/changed_cls_lwc_lines.txt 114 : 114 : --+  # Run the SFDX scanner on the file and generate the report
+-a/changed_cls_lwc_lines.txt 115 : 115 : --+  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+-a/changed_cls_lwc_lines.txt 116 : 116 : --+
+-a/changed_cls_lwc_lines.txt 117 : 117 : --+  # Ensure that the scanner report was generated
+-a/changed_cls_lwc_lines.txt 118 : 118 : --+  if [ ! -f "scanner-report-$file.json" ]; then
+-a/changed_cls_lwc_lines.txt 119 : 119 : --+    echo "Scanner report for $file not found."
+-a/changed_cls_lwc_lines.txt 120 : 120 : --+    continue
+-a/changed_cls_lwc_lines.txt 121 : 121 : --+  fi
+-a/changed_cls_lwc_lines.txt 122 : 122 : @@ -144,169 +149,25 @@ index dd57583..2bddfca 100644
+-a/changed_cls_lwc_lines.txt 123 : 123 : --+  # Filter the scanner report based on the changed lines
+-a/changed_cls_lwc_lines.txt 124 : 124 : --+  echo "Filtering scanner report for $file by changed lines..."
+-a/changed_cls_lwc_lines.txt 125 : 125 : --+  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+-a/changed_cls_lwc_lines.txt 126 : 126 : --+    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+-a/changed_cls_lwc_lines.txt 127 : 127 : --+  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+-a/changed_cls_lwc_lines.txt 128 : 128 : --+
+-a/changed_cls_lwc_lines.txt 129 : 129 : --+  # If no filtered report is found, skip
+-a/changed_cls_lwc_lines.txt 130 : 130 : --+  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+-a/changed_cls_lwc_lines.txt 131 : 131 : --+    echo "No issues found for the changed lines in $file"
+-a/changed_cls_lwc_lines.txt 132 : 132 : --+    continue
+-a/changed_cls_lwc_lines.txt 133 : 133 : --+  fi
+-a/changed_cls_lwc_lines.txt 134 : 134 : --+
+-a/changed_cls_lwc_lines.txt 135 : 135 : --+  echo "Filtered scanner report for $file:"
+-a/changed_cls_lwc_lines.txt 136 : 136 : --+  cat "filtered-scanner-report-$file.json"
+-a/changed_cls_lwc_lines.txt 137 : 137 : --+
+-a/changed_cls_lwc_lines.txt 138 : 138 : --+done <<< "$changed_files"
+-a/changed_cls_lwc_lines.txt 139 : 139 : --+
+-a/changed_cls_lwc_lines.txt 140 : 140 : --+# Check if any filtered reports were generated
+-a/changed_cls_lwc_lines.txt 141 : 141 : --+filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+-a/changed_cls_lwc_lines.txt 142 : 142 : --+if [ -z "$filtered_reports" ]; then
+-a/changed_cls_lwc_lines.txt 143 : 143 : --+  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
+-a/changed_cls_lwc_lines.txt 144 : 144 : --+  exit 0
+-a/changed_cls_lwc_lines.txt 145 : 145 : --+fi
+-a/changed_cls_lwc_lines.txt 146 : 146 : --+
+-a/changed_cls_lwc_lines.txt 147 : 147 : --+# Combine all filtered reports into one final report
+-a/changed_cls_lwc_lines.txt 148 : 148 : --+jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+-a/changed_cls_lwc_lines.txt 149 : 149 : --+
+-a/changed_cls_lwc_lines.txt 150 : 150 : --+# Parse the final filtered scanner report and check for severity 3 issues
+-a/changed_cls_lwc_lines.txt 151 : 151 : --+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+-a/changed_cls_lwc_lines.txt 152 : 152 : --+
+-a/changed_cls_lwc_lines.txt 153 : 153 : --+# Output the fail count for debugging
+-a/changed_cls_lwc_lines.txt 154 : 154 : --+echo "Severity Fail Count: $severity_fail_count"
+-a/changed_cls_lwc_lines.txt 155 : 155 : --+
+-a/changed_cls_lwc_lines.txt 156 : 156 : --+# Block commit if there are severity 3 issues
+-a/changed_cls_lwc_lines.txt 157 : 157 : --+if [ "$severity_fail_count" -gt 0 ]; then
+-a/changed_cls_lwc_lines.txt 158 : 158 : --+  echo "Blocking your commit due to vulnerabilities found with severity 3."
+-a/changed_cls_lwc_lines.txt 159 : 159 : --+  exit 1
+-a/changed_cls_lwc_lines.txt 160 : 160 : --+else
+-a/changed_cls_lwc_lines.txt 161 : 161 : --+  echo "No vulnerabilities found in changed lines. Proceeding with commit."
+-a/changed_cls_lwc_lines.txt 162 : 162 : --+  exit 0
+-a/changed_cls_lwc_lines.txt 163 : 163 : --+fi
+-a/changed_cls_lwc_lines.txt 164 : 164 : -++++ b/changes.diff
+-a/changed_cls_lwc_lines.txt 165 : 165 : -+@@ -0,0 +1,119 @@
+-a/changed_cls_lwc_lines.txt 166 : 166 : -++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-a/changed_cls_lwc_lines.txt 167 : 167 : -++new file mode 100644
+-a/changed_cls_lwc_lines.txt 168 : 168 : -++index 0000000..9b8d99e
+-a/changed_cls_lwc_lines.txt 169 : 169 : -++--- /dev/null
+-a/changed_cls_lwc_lines.txt 170 : 170 : -+++++ b/.husky/pre-commit
+-a/changed_cls_lwc_lines.txt 171 : 171 : -++@@ -0,0 +1,100 @@
+-a/changed_cls_lwc_lines.txt 172 : 172 : -+++#!/bin/bash
+-a/changed_cls_lwc_lines.txt 173 : 173 : -+++
+-a/changed_cls_lwc_lines.txt 174 : 174 : -+++# Prevent modification of Husky files
+-a/changed_cls_lwc_lines.txt 175 : 175 : -+++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+-a/changed_cls_lwc_lines.txt 176 : 176 : -+++#   echo "Error: pre-commit and post-commit files cannot be modified."
+-a/changed_cls_lwc_lines.txt 177 : 177 : -+++#   exit 1
+-a/changed_cls_lwc_lines.txt 178 : 178 : -+++# fi
+-a/changed_cls_lwc_lines.txt 179 : 179 : -+++# chmod 544 .husky/pre-commit
+-a/changed_cls_lwc_lines.txt 180 : 180 : -+++# chmod 544 .husky/post-commit
+-a/changed_cls_lwc_lines.txt 181 : 181 : -+++
+-a/changed_cls_lwc_lines.txt 182 : 182 : -+++# Check if Husky is installed
+-a/changed_cls_lwc_lines.txt 183 : 183 : -+++if ! command -v husky &> /dev/null
+-a/changed_cls_lwc_lines.txt 184 : 184 : -+++then
+-a/changed_cls_lwc_lines.txt 185 : 185 : -+++    echo "Husky is not installed. Installing Husky..."
+-a/changed_cls_lwc_lines.txt 186 : 186 : -+++    npm install husky --save-dev
+-a/changed_cls_lwc_lines.txt 187 : 187 : -+++    npx husky install
+-a/changed_cls_lwc_lines.txt 188 : 188 : -+++else
+-a/changed_cls_lwc_lines.txt 189 : 189 : -+++    echo "Husky is already installed Successfully."
+-a/changed_cls_lwc_lines.txt 190 : 190 : -+++fi
+-a/changed_cls_lwc_lines.txt 191 : 191 : -+++
+-a/changed_cls_lwc_lines.txt 192 : 192 : -+++# Get the list of changed Apex (.cls) or LWC files
+-a/changed_cls_lwc_lines.txt 193 : 193 : -+++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
+-a/changed_cls_lwc_lines.txt 194 : 194 : -+++
+-a/changed_cls_lwc_lines.txt 195 : 195 : -+++# Check if there are any relevant changes
+-a/changed_cls_lwc_lines.txt 196 : 196 : -+++if [ -z "$changed_files" ]; then
+-a/changed_cls_lwc_lines.txt 197 : 197 : -+++  echo "No relevant changes to scan in the files."
+-a/changed_cls_lwc_lines.txt 198 : 198 : -+++  exit 0
+-a/changed_cls_lwc_lines.txt 199 : 199 : -+++fi
+-a/changed_cls_lwc_lines.txt 200 : 200 : -+++
+-a/changed_cls_lwc_lines.txt 201 : 201 : -+++# Extract the changed lines and corresponding line numbers from the diff for each file
+-a/changed_cls_lwc_lines.txt 202 : 202 : -+++git diff --unified=0 --cached > changes.diff
+-a/changed_cls_lwc_lines.txt 203 : 203 : -+++
+-a/changed_cls_lwc_lines.txt 204 : 204 : -+++# Loop through each changed file
+-a/changed_cls_lwc_lines.txt 205 : 205 : -+++while IFS= read -r file; do
+-a/changed_cls_lwc_lines.txt 206 : 206 : -+++  echo "Processing file: $file"
+-a/changed_cls_lwc_lines.txt 207 : 207 : -+++
+-a/changed_cls_lwc_lines.txt 208 : 208 : -+++  # Extract line numbers from the diff for this file
+-a/changed_cls_lwc_lines.txt 209 : 209 : -+++  changed_lines=$(awk -v file="$file" '
+-a/changed_cls_lwc_lines.txt 210 : 210 : -+++    BEGIN {inside=0}
+-a/changed_cls_lwc_lines.txt 211 : 211 : -+++    /^diff --git/ {inside=0}
+-a/changed_cls_lwc_lines.txt 212 : 212 : -+++    $0 ~ file {inside=1}
+-a/changed_cls_lwc_lines.txt 213 : 213 : -+++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+-a/changed_cls_lwc_lines.txt 214 : 214 : -+++  ' changes.diff)
+-a/changed_cls_lwc_lines.txt 215 : 215 : -+++
+-a/changed_cls_lwc_lines.txt 216 : 216 : -+++  # If no line numbers were found for this file, skip it
+-a/changed_cls_lwc_lines.txt 217 : 217 : -+++  if [ -z "$changed_lines" ]; then
+-a/changed_cls_lwc_lines.txt 218 : 218 : -+++    echo "No changed lines found in $file"
+-a/changed_cls_lwc_lines.txt 219 : 219 : -+++    continue
+-a/changed_cls_lwc_lines.txt 220 : 220 : -+++  fi
+-a/changed_cls_lwc_lines.txt 221 : 221 : -+++
+-a/changed_cls_lwc_lines.txt 222 : 222 : -+++  # Run the SFDX scanner on the file and generate the report
+-a/changed_cls_lwc_lines.txt 223 : 223 : -+++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+-a/changed_cls_lwc_lines.txt 224 : 224 : -+++
+-a/changed_cls_lwc_lines.txt 225 : 225 : -+++  # Ensure that the scanner report was generated
+-a/changed_cls_lwc_lines.txt 226 : 226 : -+++  if [ ! -f "scanner-report-$file.json" ]; then
+-a/changed_cls_lwc_lines.txt 227 : 227 : -+++    echo "Scanner report for $file not found."
+-a/changed_cls_lwc_lines.txt 228 : 228 : -+++    continue
+-a/changed_cls_lwc_lines.txt 229 : 229 : -+++  fi
+-a/changed_cls_lwc_lines.txt 230 : 230 : -+++
+-a/changed_cls_lwc_lines.txt 231 : 231 : -+++  # Filter the scanner report based on the changed lines
+-a/changed_cls_lwc_lines.txt 232 : 232 : -+++  echo "Filtering scanner report for $file by changed lines..."
+-a/changed_cls_lwc_lines.txt 233 : 233 : -+++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+-a/changed_cls_lwc_lines.txt 234 : 234 : -+++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+-a/changed_cls_lwc_lines.txt 235 : 235 : -+++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+-a/changed_cls_lwc_lines.txt 236 : 236 : -+++
+-a/changed_cls_lwc_lines.txt 237 : 237 : -+++  # If no filtered report is found, skip
+-a/changed_cls_lwc_lines.txt 238 : 238 : -+++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+-a/changed_cls_lwc_lines.txt 239 : 239 : -+++    echo "No issues found for the changed lines in $file"
+-a/changed_cls_lwc_lines.txt 240 : 240 : -+++    continue
+-a/changed_cls_lwc_lines.txt 241 : 241 : -+++  fi
+-a/changed_cls_lwc_lines.txt 242 : 242 : -+++
+-a/changed_cls_lwc_lines.txt 243 : 243 : -+++  echo "Filtered scanner report for $file:"
+-a/changed_cls_lwc_lines.txt 244 : 244 : -+++  cat "filtered-scanner-report-$file.json"
+-a/changed_cls_lwc_lines.txt 245 : 245 : -+++
+-a/changed_cls_lwc_lines.txt 246 : 246 : -+++done <<< "$changed_files"
+-a/changed_cls_lwc_lines.txt 247 : 247 : -+++
+-a/changed_cls_lwc_lines.txt 248 : 248 : -+++# Check if any filtered reports were generated
+-a/changed_cls_lwc_lines.txt 249 : 249 : -+++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+-a/changed_cls_lwc_lines.txt 250 : 250 : -+++if [ -z "$filtered_reports" ]; then
+-a/changed_cls_lwc_lines.txt 251 : 251 : -+++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
+-a/changed_cls_lwc_lines.txt 252 : 252 : -+++  exit 0
+-a/changed_cls_lwc_lines.txt 253 : 253 : -+++fi
+-a/changed_cls_lwc_lines.txt 254 : 254 : -+++
+-a/changed_cls_lwc_lines.txt 255 : 255 : -+++# Combine all filtered reports into one final report
+-a/changed_cls_lwc_lines.txt 256 : 256 : -+++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+-a/changed_cls_lwc_lines.txt 257 : 257 : -+++
+-a/changed_cls_lwc_lines.txt 258 : 258 : -+++# Parse the final filtered scanner report and check for severity 3 issues
+-a/changed_cls_lwc_lines.txt 259 : 259 : -+++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+-a/changed_cls_lwc_lines.txt 260 : 260 : -+++
+-a/changed_cls_lwc_lines.txt 261 : 261 : -+++# Output the fail count for debugging
+-a/changed_cls_lwc_lines.txt 262 : 262 : -+++echo "Severity Fail Count: $severity_fail_count"
+-a/changed_cls_lwc_lines.txt 263 : 263 : -+++
+-a/changed_cls_lwc_lines.txt 264 : 264 : -+++# Block commit if there are severity 3 issues
+-a/changed_cls_lwc_lines.txt 265 : 265 : -+++if [ "$severity_fail_count" -gt 0 ]; then
+-a/changed_cls_lwc_lines.txt 266 : 266 : -+++  echo "Blocking your commit due to vulnerabilities found with severity 3."
+-a/changed_cls_lwc_lines.txt 267 : 267 : -+++  exit 1
+-a/changed_cls_lwc_lines.txt 268 : 268 : -+++else
+-a/changed_cls_lwc_lines.txt 269 : 269 : -+++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
+-a/changed_cls_lwc_lines.txt 270 : 270 : -+++  exit 0
+-a/changed_cls_lwc_lines.txt 271 : 271 : -+++fi
+-a/changed_cls_lwc_lines.txt 272 : 272 : -++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-a/changed_cls_lwc_lines.txt 273 : 273 : -++index 1e62ed4..14cff41 100644
+-a/changed_cls_lwc_lines.txt 274 : 274 : -++--- a/force-app/main/default/classes/Account_Insert.cls
+-a/changed_cls_lwc_lines.txt 275 : 275 : -+++++ b/force-app/main/default/classes/Account_Insert.cls
+-a/changed_cls_lwc_lines.txt 276 : 276 : -++@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+-a/changed_cls_lwc_lines.txt 277 : 277 : -+++          System.debug('Hello Hi');
+-a/changed_cls_lwc_lines.txt 278 : 278 : -++diff --git a/scanner-report.json b/scanner-report.json
+-a/changed_cls_lwc_lines.txt 279 : 279 : -++new file mode 100644
+-a/changed_cls_lwc_lines.txt 280 : 280 : -++index 0000000..8a298a1
+-a/changed_cls_lwc_lines.txt 281 : 281 : -++--- /dev/null
+-a/changed_cls_lwc_lines.txt 282 : 282 : -+++++ b/scanner-report.json
+-a/changed_cls_lwc_lines.txt 283 : 283 : -++@@ -0,0 +1 @@
+-a/changed_cls_lwc_lines.txt 284 : 284 : -+++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-a/changed_cls_lwc_lines.txt 285 : 285 : -@@ -108 +167 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-a/changed_cls_lwc_lines.txt 286 : 286 : --index 1e62ed4..14cff41 100644
+-a/changed_cls_lwc_lines.txt 287 : 287 : -+index 14cff41..9a5148a 100644
+-a/changed_cls_lwc_lines.txt 288 : 288 : -@@ -111,9 +170,3 @@ index 1e62ed4..14cff41 100644
+-a/changed_cls_lwc_lines.txt 289 : 289 : --@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+-a/changed_cls_lwc_lines.txt 290 : 290 : --+          System.debug('Hello Hi');
+-a/changed_cls_lwc_lines.txt 291 : 291 : --diff --git a/scanner-report.json b/scanner-report.json
+-a/changed_cls_lwc_lines.txt 292 : 292 : @@ -314 +175 @@ index dd57583..2bddfca 100644
+-a/changed_cls_lwc_lines.txt 293 : 293 : --index 0000000..8a298a1
+-a/changed_cls_lwc_lines.txt 294 : 294 : @@ -316,6 +177,429 @@ index dd57583..2bddfca 100644
+-a/changed_cls_lwc_lines.txt 295 : 295 : --+++ b/scanner-report.json
+-a/changed_cls_lwc_lines.txt 296 : 296 : --@@ -0,0 +1 @@
+-a/changed_cls_lwc_lines.txt 297 : 297 : --+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-a/changed_cls_lwc_lines.txt 298 : 298 : -+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-a/changed_cls_lwc_lines.txt 299 : 299 : -+-          System.debug('Hello Hi');
+-a/changed_cls_lwc_lines.txt 300 : 300 : -++          System.debug('Hello');
+-a/changed_cls_lwc_lines.txt 301 : 301 : @@ -323 +607 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-a/changed_cls_lwc_lines.txt 302 : 302 : -index 9a5148a..1ec7a54 100644
+-a/changed_cls_lwc_lines.txt 303 : 303 : @@ -327,2 +611,2 @@ index 9a5148a..1ec7a54 100644
+-a/changed_cls_lwc_lines.txt 304 : 304 : --          System.debug('Hello');
+-a/changed_cls_lwc_lines.txt 305 : 305 : -+          System.debug('Hi');
+-a/changed_cls_lwc_lines.txt 306 : 306 : @@ -330,2 +614,2 @@ diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/fil
+-a/changed_cls_lwc_lines.txt 307 : 307 : -new file mode 100644
+-a/changed_cls_lwc_lines.txt 308 : 308 : -index 0000000..e69de29
+-a/changed_cls_lwc_lines.txt 309 : 309 : @@ -333,6 +617,6 @@ diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-report
+-a/changed_cls_lwc_lines.txt 310 : 310 : -new file mode 100644
+-a/changed_cls_lwc_lines.txt 311 : 311 : -index 0000000..fe51488
+-a/changed_cls_lwc_lines.txt 312 : 312 : ---- /dev/null
+-a/changed_cls_lwc_lines.txt 313 : 313 : -+++ b/scanner-reports/final-filtered-scanner-report.json
+-a/changed_cls_lwc_lines.txt 314 : 314 : -@@ -0,0 +1 @@
+-a/changed_cls_lwc_lines.txt 315 : 315 : -+[]
+-a/changed_cls_lwc_lines.txt 316 : 316 : @@ -340,6 +624,6 @@ diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-repo
+-a/changed_cls_lwc_lines.txt 317 : 317 : -new file mode 100644
+-a/changed_cls_lwc_lines.txt 318 : 318 : -index 0000000..e670f52
+-a/changed_cls_lwc_lines.txt 319 : 319 : ---- /dev/null
+-a/changed_cls_lwc_lines.txt 320 : 320 : -+++ b/scanner-reports/scanner-report-.json
+-a/changed_cls_lwc_lines.txt 321 : 321 : -@@ -0,0 +1 @@
+-a/changed_cls_lwc_lines.txt 322 : 322 : -+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-a/changed_cls_lwc_lines.txt 323 : 607 : index 870d508..1ec7a54 100644
+-a/changed_cls_lwc_lines.txt 324 : 61119 : -          System.debug('Hi Hello');
+-a/changed_cls_lwc_lines.txt 325 : 61120 : diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-a/changed_cls_lwc_lines.txt 326 : 61121 : new file mode 100644
+-a/changed_cls_lwc_lines.txt 327 : 61122 : index 0000000..cd70445
+-a/changed_cls_lwc_lines.txt 328 : 61123 : --- /dev/null
+-a/changed_cls_lwc_lines.txt 329 : 61124 : @@ -0,0 +1 @@
+-a/changed_cls_lwc_lines.txt 330 : 70 :           System.debug('Hi Hello');
+-a/changes.diff 239 : index 6223d95..dfdd9f6 100644
+-a/changes.diff 24330 : -index 4433528..439f404 100644
+-a/changes.diff 24331 : @@ -5,40 +5,17 @@ index 4433528..439f404 100644
+-a/changes.diff 24332 : -@@ -4,6 +4 @@
+-a/changes.diff 24333 : --# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+-a/changes.diff 24334 : --#   echo "Error: pre-commit and post-commit files cannot be modified."
+-a/changes.diff 24335 : --#   exit 1
+-a/changes.diff 24336 : --# fi
+-a/changes.diff 24337 : --# chmod 544 .husky/pre-commit
+-a/changes.diff 24338 : --# chmod 544 .husky/post-commit
+-a/changes.diff 24339 : -+# ...
+-a/changes.diff 24340 : -@@ -12,8 +7 @@
+-a/changes.diff 24341 : --if ! command -v husky &> /dev/null
+-a/changes.diff 24342 : --then
+-a/changes.diff 24343 : --    echo "Husky is not installed. Installing Husky..."
+-a/changes.diff 24344 : --    npm install husky --save-dev
+-a/changes.diff 24345 : --    npx husky install
+-a/changes.diff 24346 : --else
+-a/changes.diff 24347 : --    echo "Husky is already installed successfully."
+-a/changes.diff 24348 : --fi
+-a/changes.diff 24349 : -+# ...
+-a/changes.diff 24350 : -@@ -36,6 +24,16 @@ git diff --unified=0 --cached > changes.diff
+-a/changes.diff 24351 : --# Loop through each changed file
+-a/changes.diff 24352 : --while IFS= read -r file; do
+-a/changes.diff 24353 : --  echo "Processing file: $file"
+-a/changes.diff 24354 : --
+-a/changes.diff 24355 : --  # Remove leading slashes to make it compatible with file path
+-a/changes.diff 24356 : --  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
+-a/changes.diff 24357 : -+# Extract and print only the changed lines and line numbers from .cls and .lwc files
+-a/changes.diff 24358 : -+echo "Processing changes for .cls and .lwc files only..."
+-a/changes.diff 24359 : -+awk '
+-a/changes.diff 24360 : -+  BEGIN {valid_file=0; file=""}
+-a/changes.diff 24361 : -+  /^diff --git/ {valid_file=0}
+-a/changes.diff 24362 : -+  /^diff --git a\/.* b\/(.*)/ {file=$3; sub(/^b\//,"",file)}
+-a/changes.diff 24363 : -+  $0 ~ /\.cls$|\.lwc$/ {valid_file=1}
+-a/changes.diff 24364 : -+  /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}
+-a/changes.diff 24365 : -+  /^[+][^+]/ && valid_file {print file, start + line_offset++, ":", substr($0, 2)}
+-a/changes.diff 24366 : -+' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
+-a/changes.diff 24367 : -+
+-a/changes.diff 24368 : -+# Check if any relevant changes were found in .cls or .lwc files
+-a/changes.diff 24369 : -+if [ ! -s changed_cls_lwc_lines.txt ]; then
+-a/changes.diff 24370 : -+  echo "No changes detected in .cls or .lwc files."
+-a/changes.diff 24371 : -+  exit 0
+-a/changes.diff 24372 : @@ -46,18 +23,19 @@ index 4433528..439f404 100644
+-a/changes.diff 24373 : -@@ -43,8 +41 @@ while IFS= read -r file; do
+-a/changes.diff 24374 : --  # Extract the changed lines and corresponding line numbers
+-a/changes.diff 24375 : --  awk '
+-a/changes.diff 24376 : --    BEGIN {valid_file=0} 
+-a/changes.diff 24377 : --    /^diff --git/ {valid_file=0} 
+-a/changes.diff 24378 : --    $0 ~ /\.cls$|\.lwc$/ {valid_file=1} 
+-a/changes.diff 24379 : --    /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
+-a/changes.diff 24380 : --    /^[+][^+]/ && valid_file {print start + line_offset++, ":", substr($0, 2)}  
+-a/changes.diff 24381 : --  ' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
+-a/changes.diff 24382 : -+cat changed_cls_lwc_lines.txt
+-a/changes.diff 24383 : -@@ -52,5 +43,5 @@ while IFS= read -r file; do
+-a/changes.diff 24384 : --  # If no lines are found for this file, skip it
+-a/changes.diff 24385 : --  if [ ! -s changed_cls_lwc_lines.txt ]; then
+-a/changes.diff 24386 : --    echo "No changed lines found in $file"
+-a/changes.diff 24387 : --    continue
+-a/changes.diff 24388 : --  fi
+-a/changes.diff 24389 : -+# Process each file
+-a/changes.diff 24390 : -+for file in $changed_files; do
+-a/changes.diff 2744 : @@ -65,7 +43,18 @@ index 4433528..439f404 100644
+-a/changes.diff 2745 : -+  clean_file=$(basename "$file")
+-a/changes.diff 2746 : -+  echo "Clean file: $clean_file"
+-a/changes.diff 2747 : -@@ -70,2 +61,10 @@ while IFS= read -r file; do
+-a/changes.diff 2748 : --  # Read the changed lines from the file for filtering
+-a/changes.diff 2749 : --  changed_lines=$(cut -d':' -f1 changed_cls_lwc_lines.txt | tr '\n' ' ')
+-a/changes.diff 2750 : -+  # Extract line numbers for this file
+-a/changes.diff 2751 : -+  line_numbers=$(grep "^$file " changed_cls_lwc_lines.txt | cut -d':' -f1 | awk '{print $2}' | tr '\n' ' ')
+-a/changes.diff 27947 : @@ -73 +62,2 @@ index 4433528..439f404 100644
+-a/changes.diff 27948 : -+  if [ -z "$line_numbers" ]; then
+-a/changes.diff 27949 : @@ -77,9 +67,8 @@ index 4433528..439f404 100644
+-a/changes.diff 27950 : -+
+-a/changes.diff 27951 : -+  # Generate the select expression for jq
+-a/changes.diff 27952 : -+  select_expression=$(echo "$line_numbers" | awk '{for(i=1;i<=NF;i++) printf ".line == %s%s", $i, (i<NF ? " or " : "")}')
+-a/changes.diff 27953 : -@@ -75,2 +74,2 @@ while IFS= read -r file; do
+-a/changes.diff 27954 : --  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+-a/changes.diff 27955 : --    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+-a/changes.diff 27956 : -+  jq '
+-a/changes.diff 27957 : -+    .[] | .violations[]? | select('"$select_expression"')
+-a/changes.diff 27958 : -@@ -87,2 +86 @@ while IFS= read -r file; do
+-a/changes.diff 32915 : @@ -87,5 +76,19 @@ index 4433528..439f404 100644
+-a/changes.diff 32916 : --done <<< "$changed_files"
+-a/changes.diff 32917 : -+done
+-a/changes.diff 32918 : -@@ -101 +99 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-a/changes.diff 32919 : --severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-a/changes.diff 32920 : -+severity_fail_count=$(jq '[.[].severity | select(. == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-a/changes.diff 345208 : @@ -93,3 +96,2 @@ diff --git a/changed_cls_lwc_lines.txt b/changed_cls_lwc_lines.txt
+-a/changes.diff 345209 : -new file mode 100644
+-a/changes.diff 345210 : -index 0000000..1210cb6
+-a/changes.diff 345211 : ---- /dev/null
+-a/changes.diff 345212 : @@ -97,5 +99,139 @@ index 0000000..1210cb6
+-a/changes.diff 345213 : -@@ -0,0 +1,4 @@
+-a/changes.diff 345214 : -+108 : index 14cff41..9a5148a 100644
+-a/changes.diff 345215 : -+1119 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-a/changes.diff 345216 : -+1120 : -          System.debug('Hello Hi');
+-a/changes.diff 345217 : -+70 :           System.debug('Hi');
+-a/changes.diff 345218 : @@ -103 +239 @@ diff --git a/changes.diff b/changes.diff
+-a/changes.diff 345219 : -index 2bddfca..b1d3858 100644
+-a/changes.diff 345220 : @@ -107,17 +243,110 @@ index 2bddfca..b1d3858 100644
+-a/changes.diff 345221 : --index 9b8d99e..d68baeb 100644
+-a/changes.diff 345222 : -+index d68baeb..4433528 100644
+-a/changes.diff 345223 : -@@ -5,3 +5,22 @@ index 9b8d99e..d68baeb 100644
+-a/changes.diff 345224 : --@@ -29,0 +30,3 @@ fi
+-a/changes.diff 345225 : --+# Create a directory for scanner reports if it doesn't exist
+-a/changes.diff 345226 : --+mkdir -p scanner-reports
+-a/changes.diff 345227 : -+@@ -18 +18 @@ else
+-a/changes.diff 345228 : -+-    echo "Husky is already installed Successfully."
+-a/changes.diff 345229 : -++    echo "Husky is already installed successfully."
+-a/changes.diff 345230 : -+@@ -43,10 +43,11 @@ while IFS= read -r file; do
+-a/changes.diff 345231 : -+-  # Extract line numbers from the diff for this file
+-a/changes.diff 345232 : -+-  changed_lines=$(awk -v file="$file" '
+-a/changes.diff 345233 : -+-    BEGIN {inside=0}
+-a/changes.diff 345234 : -+-    /^diff --git/ {inside=0}
+-a/changes.diff 345235 : -+-    $0 ~ file {inside=1}
+-a/changes.diff 345236 : -+-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+-a/changes.diff 345237 : -+-  ' changes.diff)
+-a/changes.diff 345238 : @@ -125,159 +354,26 @@ index 2bddfca..b1d3858 100644
+-a/changes.diff 345239 : -+-  # If no line numbers were found for this file, skip it
+-a/changes.diff 345240 : -+-  if [ -z "$changed_lines" ]; then
+-a/changes.diff 345241 : -++  # Extract the changed lines and corresponding line numbers
+-a/changes.diff 345242 : -++  awk '
+-a/changes.diff 345243 : -++    BEGIN {valid_file=0} 
+-a/changes.diff 345244 : -++    /^diff --git/ {valid_file=0} 
+-a/changes.diff 345245 : -++    $0 ~ /\.cls$|\.lwc$/ {valid_file=1} 
+-a/changes.diff 345246 : -++    /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
+-a/changes.diff 345247 : -++    /^[+][^+]/ && valid_file {print start + line_offset++, ":", substr($0, 2)}  
+-a/changes.diff 345248 : -++  ' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
+-a/changes.diff 345249 : -@@ -9,3 +28,5 @@ index 9b8d99e..d68baeb 100644
+-a/changes.diff 345250 : --@@ -36,0 +40,3 @@ while IFS= read -r file; do
+-a/changes.diff 345251 : --+  # Remove leading slashes to make it compatible with file path
+-a/changes.diff 345252 : --+  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
+-a/changes.diff 345253 : -++  # If no lines are found for this file, skip it
+-a/changes.diff 345254 : -++  if [ ! -s changed_cls_lwc_lines.txt ]; then
+-a/changes.diff 345255 : -+@@ -68,0 +70,3 @@ while IFS= read -r file; do
+-a/changes.diff 345256 : -++  # Read the changed lines from the file for filtering
+-a/changes.diff 345257 : -++  changed_lines=$(cut -d':' -f1 changed_cls_lwc_lines.txt | tr '\n' ' ')
+-a/changes.diff 345258 : -@@ -13,28 +33,0 @@ index 9b8d99e..d68baeb 100644
+-a/changes.diff 345259 : --@@ -50,0 +57,3 @@ while IFS= read -r file; do
+-a/changes.diff 345260 : --+  # Define the output path for the scanner report
+-a/changes.diff 345261 : --+  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-a/changes.diff 554583 : --@@ -52 +61 @@ while IFS= read -r file; do
+-a/changes.diff 554584 : ---  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+-a/changes.diff 554585 : --+  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-a/changes.diff 554586 : --@@ -55 +64 @@ while IFS= read -r file; do
+-a/changes.diff 554587 : ---  if [ ! -f "scanner-report-$file.json" ]; then
+-a/changes.diff 554588 : --+  if [ ! -f "$output_file" ]; then
+-a/changes.diff 554589 : --@@ -64 +73 @@ while IFS= read -r file; do
+-a/changes.diff 554590 : ---  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+-a/changes.diff 554591 : --+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-a/changes.diff 554592 : --@@ -67 +76 @@ while IFS= read -r file; do
+-a/changes.diff 554593 : ---  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+-a/changes.diff 554594 : --+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-a/changes.diff 554595 : --@@ -73 +82 @@ while IFS= read -r file; do
+-a/changes.diff 554596 : ---  cat "filtered-scanner-report-$file.json"
+-a/changes.diff 554597 : --+  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-a/changes.diff 554598 : --@@ -78 +87 @@ done <<< "$changed_files"
+-a/changes.diff 554599 : ---filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+-a/changes.diff 554600 : --+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-a/changes.diff 554601 : --@@ -85 +94 @@ fi
+-a/changes.diff 554602 : ---jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+-a/changes.diff 554603 : --+jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-a/changes.diff 554604 : --@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+-a/changes.diff 554605 : ---severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+-a/changes.diff 554606 : --+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-a/changes.diff 554607 : -@@ -42,3 +35,2 @@ diff --git a/changes.diff b/changes.diff
+-a/changes.diff 554608 : --new file mode 100644
+-a/changes.diff 554609 : --index 0000000..dd57583
+-a/changes.diff 554610 : ----- /dev/null
+-a/changes.diff 554611 : -+index dd57583..2bddfca 100644
+-a/changes.diff 554612 : -+--- a/changes.diff
+-a/changes.diff 554613 : -@@ -46,5 +38,3 @@ index 0000000..dd57583
+-a/changes.diff 554614 : --@@ -0,0 +1,119 @@
+-a/changes.diff 554615 : --+diff --git a/.husky/pre-commit b/.husky/pre-commit
+-a/changes.diff 554616 : --+new file mode 100644
+-a/changes.diff 554617 : --+index 0000000..9b8d99e
+-a/changes.diff 554618 : --+--- /dev/null
+-a/changes.diff 554619 : -+@@ -1,0 +2,40 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-a/changes.diff 554620 : -++index 9b8d99e..d68baeb 100644
+-a/changes.diff 554621 : -++--- a/.husky/pre-commit
+-a/changes.diff 554622 : -@@ -52,53 +42,3 @@ index 0000000..dd57583
+-a/changes.diff 554623 : --+@@ -0,0 +1,100 @@
+-a/changes.diff 554624 : --++#!/bin/bash
+-a/changes.diff 554625 : --++
+-a/changes.diff 554626 : --++# Prevent modification of Husky files
+-a/changes.diff 554627 : --++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+-a/changes.diff 554628 : --++#   echo "Error: pre-commit and post-commit files cannot be modified."
+-a/changes.diff 554629 : --++#   exit 1
+-a/changes.diff 554630 : --++# fi
+-a/changes.diff 554631 : --++# chmod 544 .husky/pre-commit
+-a/changes.diff 554632 : --++# chmod 544 .husky/post-commit
+-a/changes.diff 554633 : --++
+-a/changes.diff 554634 : --++# Check if Husky is installed
+-a/changes.diff 554635 : --++if ! command -v husky &> /dev/null
+-a/changes.diff 554636 : --++then
+-a/changes.diff 554637 : --++    echo "Husky is not installed. Installing Husky..."
+-a/changes.diff 554638 : --++    npm install husky --save-dev
+-a/changes.diff 554639 : --++    npx husky install
+-a/changes.diff 554640 : --++else
+-a/changes.diff 554641 : --++    echo "Husky is already installed Successfully."
+-a/changes.diff 554642 : --++fi
+-a/changes.diff 554643 : --++
+-a/changes.diff 554644 : --++# Get the list of changed Apex (.cls) or LWC files
+-a/changes.diff 554645 : --++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
+-a/changes.diff 554646 : --++
+-a/changes.diff 554647 : --++# Check if there are any relevant changes
+-a/changes.diff 554648 : --++if [ -z "$changed_files" ]; then
+-a/changes.diff 554649 : --++  echo "No relevant changes to scan in the files."
+-a/changes.diff 554650 : --++  exit 0
+-a/changes.diff 554651 : --++fi
+-a/changes.diff 554652 : --++
+-a/changes.diff 554653 : --++# Extract the changed lines and corresponding line numbers from the diff for each file
+-a/changes.diff 554654 : --++git diff --unified=0 --cached > changes.diff
+-a/changes.diff 554655 : --++
+-a/changes.diff 554656 : --++# Loop through each changed file
+-a/changes.diff 554657 : --++while IFS= read -r file; do
+-a/changes.diff 554658 : --++  echo "Processing file: $file"
+-a/changes.diff 554659 : --++
+-a/changes.diff 554660 : --++  # Extract line numbers from the diff for this file
+-a/changes.diff 554661 : --++  changed_lines=$(awk -v file="$file" '
+-a/changes.diff 554662 : --++    BEGIN {inside=0}
+-a/changes.diff 554663 : --++    /^diff --git/ {inside=0}
+-a/changes.diff 554664 : --++    $0 ~ file {inside=1}
+-a/changes.diff 554665 : --++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+-a/changes.diff 554666 : --++  ' changes.diff)
+-a/changes.diff 554667 : --++
+-a/changes.diff 554668 : --++  # If no line numbers were found for this file, skip it
+-a/changes.diff 554669 : --++  if [ -z "$changed_lines" ]; then
+-a/changes.diff 554670 : --++    echo "No changed lines found in $file"
+-a/changes.diff 554671 : --++    continue
+-a/changes.diff 554672 : --++  fi
+-a/changes.diff 554673 : --++
+-a/changes.diff 554674 : --++  # Run the SFDX scanner on the file and generate the report
+-a/changes.diff 554675 : --++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+-a/changes.diff 554676 : -++@@ -29,0 +30,3 @@ fi
+-a/changes.diff 554677 : -+++# Create a directory for scanner reports if it doesn't exist
+-a/changes.diff 554678 : -+++mkdir -p scanner-reports
+-a/changes.diff 554679 : -@@ -106,5 +46,3 @@ index 0000000..dd57583
+-a/changes.diff 554680 : --++  # Ensure that the scanner report was generated
+-a/changes.diff 554681 : --++  if [ ! -f "scanner-report-$file.json" ]; then
+-a/changes.diff 554682 : --++    echo "Scanner report for $file not found."
+-a/changes.diff 554683 : --++    continue
+-a/changes.diff 554684 : --++  fi
+-a/changes.diff 554685 : -++@@ -36,0 +40,3 @@ while IFS= read -r file; do
+-a/changes.diff 554686 : -+++  # Remove leading slashes to make it compatible with file path
+-a/changes.diff 554687 : -+++  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
+-a/changes.diff 554688 : -@@ -112,5 +50,3 @@ index 0000000..dd57583
+-a/changes.diff 554689 : --++  # Filter the scanner report based on the changed lines
+-a/changes.diff 554690 : --++  echo "Filtering scanner report for $file by changed lines..."
+-a/changes.diff 554691 : --++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+-a/changes.diff 554692 : --++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+-a/changes.diff 554693 : --++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+-a/changes.diff 554694 : -++@@ -50,0 +57,3 @@ while IFS= read -r file; do
+-a/changes.diff 554695 : -+++  # Define the output path for the scanner report
+-a/changes.diff 554696 : -+++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-a/changes.diff 554697 : -@@ -118,48 +54,268 @@ index 0000000..dd57583
+-a/changes.diff 554698 : --++  # If no filtered report is found, skip
+-a/changes.diff 554699 : --++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+-a/changes.diff 554700 : --++    echo "No issues found for the changed lines in $file"
+-a/changes.diff 554701 : --++    continue
+-a/changes.diff 554702 : --++  fi
+-a/changes.diff 554703 : --++
+-a/changes.diff 554704 : --++  echo "Filtered scanner report for $file:"
+-a/changes.diff 554705 : --++  cat "filtered-scanner-report-$file.json"
+-a/changes.diff 554706 : --++
+-a/changes.diff 554707 : --++done <<< "$changed_files"
+-a/changes.diff 554708 : --++
+-a/changes.diff 554709 : --++# Check if any filtered reports were generated
+-a/changes.diff 554710 : --++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+-a/changes.diff 554711 : --++if [ -z "$filtered_reports" ]; then
+-a/changes.diff 554712 : --++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
+-a/changes.diff 554713 : --++  exit 0
+-a/changes.diff 554714 : --++fi
+-a/changes.diff 554715 : --++
+-a/changes.diff 554716 : --++# Combine all filtered reports into one final report
+-a/changes.diff 554717 : --++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+-a/changes.diff 114350 : @@ -285,2 +381,3 @@ index 2bddfca..b1d3858 100644
+-a/changes.diff 114351 : --++# Parse the final filtered scanner report and check for severity 3 issues
+-a/changes.diff 114352 : --++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+-a/changes.diff 114353 : @@ -288,2 +385,3 @@ index 2bddfca..b1d3858 100644
+-a/changes.diff 114354 : --++# Output the fail count for debugging
+-a/changes.diff 114355 : --++echo "Severity Fail Count: $severity_fail_count"
+-a/changes.diff 114356 : @@ -291,315 +389,804 @@ index 2bddfca..b1d3858 100644
+-a/changes.diff 114357 : --++# Block commit if there are severity 3 issues
+-a/changes.diff 114358 : --++if [ "$severity_fail_count" -gt 0 ]; then
+-a/changes.diff 114359 : --++  echo "Blocking your commit due to vulnerabilities found with severity 3."
+-a/changes.diff 114360 : --++  exit 1
+-a/changes.diff 114361 : --++else
+-a/changes.diff 114362 : --++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
+-a/changes.diff 114363 : --++  exit 0
+-a/changes.diff 114364 : --++fi
+-a/changes.diff 114365 : --+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-a/changes.diff 114366 : --+index 1e62ed4..14cff41 100644
+-a/changes.diff 114367 : --+--- a/force-app/main/default/classes/Account_Insert.cls
+-a/changes.diff 114368 : --++++ b/force-app/main/default/classes/Account_Insert.cls
+-a/changes.diff 114369 : --+@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+-a/changes.diff 114370 : --++          System.debug('Hello Hi');
+-a/changes.diff 114371 : --+diff --git a/scanner-report.json b/scanner-report.json
+-a/changes.diff 114372 : --+new file mode 100644
+-a/changes.diff 114373 : --+index 0000000..8a298a1
+-a/changes.diff 114374 : --+--- /dev/null
+-a/changes.diff 114375 : --++++ b/scanner-report.json
+-a/changes.diff 114376 : --+@@ -0,0 +1 @@
+-a/changes.diff 114377 : --++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-a/changes.diff 114378 : -++@@ -52 +61 @@ while IFS= read -r file; do
+-a/changes.diff 114379 : -++-  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+-a/changes.diff 114380 : -+++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-a/changes.diff 114381 : -++@@ -55 +64 @@ while IFS= read -r file; do
+-a/changes.diff 114382 : -++-  if [ ! -f "scanner-report-$file.json" ]; then
+-a/changes.diff 114383 : -+++  if [ ! -f "$output_file" ]; then
+-a/changes.diff 114384 : -++@@ -64 +73 @@ while IFS= read -r file; do
+-a/changes.diff 114385 : -++-  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+-a/changes.diff 114386 : -+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-a/changes.diff 114387 : -++@@ -67 +76 @@ while IFS= read -r file; do
+-a/changes.diff 114388 : -++-  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+-a/changes.diff 114389 : -+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-a/changes.diff 114390 : -++@@ -73 +82 @@ while IFS= read -r file; do
+-a/changes.diff 114391 : -++-  cat "filtered-scanner-report-$file.json"
+-a/changes.diff 114392 : -+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-a/changes.diff 114393 : -++@@ -78 +87 @@ done <<< "$changed_files"
+-a/changes.diff 114394 : -++-filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+-a/changes.diff 114395 : -+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-a/changes.diff 114396 : -++@@ -85 +94 @@ fi
+-a/changes.diff 114397 : -++-jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+-a/changes.diff 114398 : -+++jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-a/changes.diff 114399 : -++@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+-a/changes.diff 114400 : -++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+-a/changes.diff 114401 : -+++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-a/changes.diff 114402 : -++diff --git a/changes.diff b/changes.diff
+-a/changes.diff 114403 : -+@@ -3 +43 @@ new file mode 100644
+-a/changes.diff 114404 : -+-index 0000000..9b8d99e
+-a/changes.diff 114405 : -++index 0000000..dd57583
+-a/changes.diff 114406 : -+@@ -5,102 +45,121 @@ index 0000000..9b8d99e
+-a/changes.diff 114407 : -+-+++ b/.husky/pre-commit
+-a/changes.diff 114408 : -+-@@ -0,0 +1,100 @@
+-a/changes.diff 114409 : -+-+#!/bin/bash
+-a/changes.diff 114410 : -+-+
+-a/changes.diff 114411 : -+-+# Prevent modification of Husky files
+-a/changes.diff 114412 : -+-+# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+-a/changes.diff 114413 : -+-+#   echo "Error: pre-commit and post-commit files cannot be modified."
+-a/changes.diff 114414 : -+-+#   exit 1
+-a/changes.diff 114415 : -+-+# fi
+-a/changes.diff 114416 : -+-+# chmod 544 .husky/pre-commit
+-a/changes.diff 114417 : -+-+# chmod 544 .husky/post-commit
+-a/changes.diff 114418 : -+-+
+-a/changes.diff 114419 : -+-+# Check if Husky is installed
+-a/changes.diff 114420 : -+-+if ! command -v husky &> /dev/null
+-a/changes.diff 114421 : -+-+then
+-a/changes.diff 114422 : -+-+    echo "Husky is not installed. Installing Husky..."
+-a/changes.diff 114423 : -+-+    npm install husky --save-dev
+-a/changes.diff 114424 : -+-+    npx husky install
+-a/changes.diff 114425 : -+-+else
+-a/changes.diff 114426 : -+-+    echo "Husky is already installed Successfully."
+-a/changes.diff 114427 : -+-+fi
+-a/changes.diff 114428 : -+-+
+-a/changes.diff 114429 : -+-+# Get the list of changed Apex (.cls) or LWC files
+-a/changes.diff 114430 : -+-+changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
+-a/changes.diff 114431 : -+-+
+-a/changes.diff 114432 : -+-+# Check if there are any relevant changes
+-a/changes.diff 114433 : -+-+if [ -z "$changed_files" ]; then
+-a/changes.diff 114434 : -+-+  echo "No relevant changes to scan in the files."
+-a/changes.diff 114435 : -+-+  exit 0
+-a/changes.diff 114436 : -+-+fi
+-a/changes.diff 114437 : -+-+
+-a/changes.diff 114438 : -+-+# Extract the changed lines and corresponding line numbers from the diff for each file
+-a/changes.diff 114439 : -+-+git diff --unified=0 --cached > changes.diff
+-a/changes.diff 114440 : -+-+
+-a/changes.diff 114441 : -+-+# Loop through each changed file
+-a/changes.diff 114442 : -+-+while IFS= read -r file; do
+-a/changes.diff 114443 : -+-+  echo "Processing file: $file"
+-a/changes.diff 114444 : -+-+
+-a/changes.diff 114445 : -+-+  # Extract line numbers from the diff for this file
+-a/changes.diff 114446 : -+-+  changed_lines=$(awk -v file="$file" '
+-a/changes.diff 114447 : -+-+    BEGIN {inside=0}
+-a/changes.diff 114448 : -+-+    /^diff --git/ {inside=0}
+-a/changes.diff 114449 : -+-+    $0 ~ file {inside=1}
+-a/changes.diff 114450 : -+-+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+-a/changes.diff 114451 : -+-+  ' changes.diff)
+-a/changes.diff 114452 : -+-+
+-a/changes.diff 114453 : -+-+  # If no line numbers were found for this file, skip it
+-a/changes.diff 114454 : -+-+  if [ -z "$changed_lines" ]; then
+-a/changes.diff 114455 : -+-+    echo "No changed lines found in $file"
+-a/changes.diff 114456 : -+-+    continue
+-a/changes.diff 114457 : -+-+  fi
+-a/changes.diff 114458 : -+-+
+-a/changes.diff 114459 : -+-+  # Run the SFDX scanner on the file and generate the report
+-a/changes.diff 114460 : -+-+  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+-a/changes.diff 114461 : -+-+
+-a/changes.diff 114462 : -+-+  # Ensure that the scanner report was generated
+-a/changes.diff 114463 : -+-+  if [ ! -f "scanner-report-$file.json" ]; then
+-a/changes.diff 114464 : -+-+    echo "Scanner report for $file not found."
+-a/changes.diff 114465 : -+-+    continue
+-a/changes.diff 114466 : -+-+  fi
+-a/changes.diff 114467 : -+-+
+-a/changes.diff 114468 : -+-+  # Filter the scanner report based on the changed lines
+-a/changes.diff 114469 : -+-+  echo "Filtering scanner report for $file by changed lines..."
+-a/changes.diff 114470 : -+-+  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+-a/changes.diff 114471 : -+-+    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+-a/changes.diff 114472 : -+-+  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+-a/changes.diff 114473 : -+-+
+-a/changes.diff 114474 : -+-+  # If no filtered report is found, skip
+-a/changes.diff 114475 : -+-+  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+-a/changes.diff 114476 : -+-+    echo "No issues found for the changed lines in $file"
+-a/changes.diff 114477 : -+-+    continue
+-a/changes.diff 114478 : -+-+  fi
+-a/changes.diff 114479 : -+-+
+-a/changes.diff 114480 : -+-+  echo "Filtered scanner report for $file:"
+-a/changes.diff 114481 : -+-+  cat "filtered-scanner-report-$file.json"
+-a/changes.diff 114482 : -+-+
+-a/changes.diff 114483 : -+-+done <<< "$changed_files"
+-a/changes.diff 114484 : -+-+
+-a/changes.diff 114485 : -+-+# Check if any filtered reports were generated
+-a/changes.diff 114486 : -+-+filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+-a/changes.diff 114487 : -+-+if [ -z "$filtered_reports" ]; then
+-a/changes.diff 114488 : -+-+  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
+-a/changes.diff 114489 : -+-+  exit 0
+-a/changes.diff 114490 : -+-+fi
+-a/changes.diff 114491 : -+-+
+-a/changes.diff 114492 : -+-+# Combine all filtered reports into one final report
+-a/changes.diff 114493 : -+-+jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+-a/changes.diff 114494 : -+-+
+-a/changes.diff 114495 : -+-+# Parse the final filtered scanner report and check for severity 3 issues
+-a/changes.diff 114496 : -+-+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+-a/changes.diff 114497 : -+-+
+-a/changes.diff 114498 : -+-+# Output the fail count for debugging
+-a/changes.diff 114499 : -+-+echo "Severity Fail Count: $severity_fail_count"
+-a/changes.diff 114500 : -+-+
+-a/changes.diff 114501 : -+-+# Block commit if there are severity 3 issues
+-a/changes.diff 114502 : -+-+if [ "$severity_fail_count" -gt 0 ]; then
+-a/changes.diff 114503 : -+-+  echo "Blocking your commit due to vulnerabilities found with severity 3."
+-a/changes.diff 114504 : -+-+  exit 1
+-a/changes.diff 114505 : -+-+else
+-a/changes.diff 114506 : -+-+  echo "No vulnerabilities found in changed lines. Proceeding with commit."
+-a/changes.diff 114507 : -+-+  exit 0
+-a/changes.diff 114508 : -+-+fi
+-a/changes.diff 114509 : -+++++ b/changes.diff
+-a/changes.diff 114510 : -++@@ -0,0 +1,119 @@
+-a/changes.diff 114511 : -+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-a/changes.diff 114512 : -+++new file mode 100644
+-a/changes.diff 114513 : -+++index 0000000..9b8d99e
+-a/changes.diff 114514 : -+++--- /dev/null
+-a/changes.diff 114515 : -++++++ b/.husky/pre-commit
+-a/changes.diff 114516 : -+++@@ -0,0 +1,100 @@
+-a/changes.diff 114517 : -++++#!/bin/bash
+-a/changes.diff 114518 : -++++
+-a/changes.diff 114519 : -++++# Prevent modification of Husky files
+-a/changes.diff 114520 : -++++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
+-a/changes.diff 114521 : -++++#   echo "Error: pre-commit and post-commit files cannot be modified."
+-a/changes.diff 114522 : -++++#   exit 1
+-a/changes.diff 114523 : -++++# fi
+-a/changes.diff 114524 : -++++# chmod 544 .husky/pre-commit
+-a/changes.diff 114525 : -++++# chmod 544 .husky/post-commit
+-a/changes.diff 114526 : -++++
+-a/changes.diff 114527 : -++++# Check if Husky is installed
+-a/changes.diff 114528 : -++++if ! command -v husky &> /dev/null
+-a/changes.diff 114529 : -++++then
+-a/changes.diff 114530 : -++++    echo "Husky is not installed. Installing Husky..."
+-a/changes.diff 114531 : -++++    npm install husky --save-dev
+-a/changes.diff 114532 : -++++    npx husky install
+-a/changes.diff 114533 : -++++else
+-a/changes.diff 114534 : -++++    echo "Husky is already installed Successfully."
+-a/changes.diff 114535 : -++++fi
+-a/changes.diff 114536 : -++++
+-a/changes.diff 114537 : -++++# Get the list of changed Apex (.cls) or LWC files
+-a/changes.diff 114538 : -++++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
+-a/changes.diff 114539 : -++++
+-a/changes.diff 114540 : -++++# Check if there are any relevant changes
+-a/changes.diff 114541 : -++++if [ -z "$changed_files" ]; then
+-a/changes.diff 114542 : -++++  echo "No relevant changes to scan in the files."
+-a/changes.diff 114543 : -++++  exit 0
+-a/changes.diff 114544 : -++++fi
+-a/changes.diff 114545 : -++++
+-a/changes.diff 114546 : -++++# Extract the changed lines and corresponding line numbers from the diff for each file
+-a/changes.diff 114547 : -++++git diff --unified=0 --cached > changes.diff
+-a/changes.diff 114548 : -++++
+-a/changes.diff 114549 : -++++# Loop through each changed file
+-a/changes.diff 114550 : -++++while IFS= read -r file; do
+-a/changes.diff 114551 : -++++  echo "Processing file: $file"
+-a/changes.diff 114552 : -++++
+-a/changes.diff 114553 : -++++  # Extract line numbers from the diff for this file
+-a/changes.diff 114554 : -++++  changed_lines=$(awk -v file="$file" '
+-a/changes.diff 114555 : -++++    BEGIN {inside=0}
+-a/changes.diff 114556 : -++++    /^diff --git/ {inside=0}
+-a/changes.diff 114557 : -++++    $0 ~ file {inside=1}
+-a/changes.diff 114558 : -++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
+-a/changes.diff 114559 : -++++  ' changes.diff)
+-a/changes.diff 114560 : -++++
+-a/changes.diff 114561 : -++++  # If no line numbers were found for this file, skip it
+-a/changes.diff 114562 : -++++  if [ -z "$changed_lines" ]; then
+-a/changes.diff 114563 : -++++    echo "No changed lines found in $file"
+-a/changes.diff 114564 : -++++    continue
+-a/changes.diff 114565 : -++++  fi
+-a/changes.diff 114566 : -++++
+-a/changes.diff 114567 : -++++  # Run the SFDX scanner on the file and generate the report
+-a/changes.diff 114568 : -++++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
+-a/changes.diff 114569 : -++++
+-a/changes.diff 114570 : -++++  # Ensure that the scanner report was generated
+-a/changes.diff 114571 : -++++  if [ ! -f "scanner-report-$file.json" ]; then
+-a/changes.diff 114572 : -++++    echo "Scanner report for $file not found."
+-a/changes.diff 114573 : -++++    continue
+-a/changes.diff 114574 : -++++  fi
+-a/changes.diff 114575 : -++++
+-a/changes.diff 114576 : -++++  # Filter the scanner report based on the changed lines
+-a/changes.diff 114577 : -++++  echo "Filtering scanner report for $file by changed lines..."
+-a/changes.diff 114578 : -++++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
+-a/changes.diff 114579 : -++++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
+-a/changes.diff 114580 : -++++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
+-a/changes.diff 114581 : -++++
+-a/changes.diff 114582 : -++++  # If no filtered report is found, skip
+-a/changes.diff 114583 : -++++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
+-a/changes.diff 114584 : -++++    echo "No issues found for the changed lines in $file"
+-a/changes.diff 114585 : -++++    continue
+-a/changes.diff 114586 : -++++  fi
+-a/changes.diff 114587 : -++++
+-a/changes.diff 114588 : -++++  echo "Filtered scanner report for $file:"
+-a/changes.diff 114589 : -++++  cat "filtered-scanner-report-$file.json"
+-a/changes.diff 114590 : -++++
+-a/changes.diff 114591 : -++++done <<< "$changed_files"
+-a/changes.diff 114592 : -++++
+-a/changes.diff 114593 : -++++# Check if any filtered reports were generated
+-a/changes.diff 114594 : -++++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
+-a/changes.diff 114595 : -++++if [ -z "$filtered_reports" ]; then
+-a/changes.diff 114596 : -++++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
+-a/changes.diff 114597 : -++++  exit 0
+-a/changes.diff 114598 : -++++fi
+-a/changes.diff 114599 : -++++
+-a/changes.diff 114600 : -++++# Combine all filtered reports into one final report
+-a/changes.diff 114601 : -++++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
+-a/changes.diff 114602 : -++++
+-a/changes.diff 114603 : -++++# Parse the final filtered scanner report and check for severity 3 issues
+-a/changes.diff 114604 : -++++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
+-a/changes.diff 114605 : -++++
+-a/changes.diff 114606 : -++++# Output the fail count for debugging
+-a/changes.diff 114607 : -++++echo "Severity Fail Count: $severity_fail_count"
+-a/changes.diff 114608 : -++++
+-a/changes.diff 114609 : -++++# Block commit if there are severity 3 issues
+-a/changes.diff 114610 : -++++if [ "$severity_fail_count" -gt 0 ]; then
+-a/changes.diff 114611 : -++++  echo "Blocking your commit due to vulnerabilities found with severity 3."
+-a/changes.diff 114612 : -++++  exit 1
+-a/changes.diff 114613 : -++++else
+-a/changes.diff 114614 : -++++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
+-a/changes.diff 114615 : -++++  exit 0
+-a/changes.diff 114616 : -++++fi
+-a/changes.diff 114617 : -+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-a/changes.diff 114618 : -+++index 1e62ed4..14cff41 100644
+-a/changes.diff 114619 : -+++--- a/force-app/main/default/classes/Account_Insert.cls
+-a/changes.diff 114620 : -++++++ b/force-app/main/default/classes/Account_Insert.cls
+-a/changes.diff 114621 : -+++@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+-a/changes.diff 114622 : -++++          System.debug('Hello Hi');
+-a/changes.diff 114623 : -+++diff --git a/scanner-report.json b/scanner-report.json
+-a/changes.diff 114624 : -+++new file mode 100644
+-a/changes.diff 114625 : -+++index 0000000..8a298a1
+-a/changes.diff 114626 : -+++--- /dev/null
+-a/changes.diff 114627 : -++++++ b/scanner-report.json
+-a/changes.diff 114628 : -+++@@ -0,0 +1 @@
+-a/changes.diff 114629 : -++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-a/changes.diff 114630 : -+@@ -108 +167 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-a/changes.diff 114631 : -+-index 1e62ed4..14cff41 100644
+-a/changes.diff 114632 : -++index 14cff41..9a5148a 100644
+-a/changes.diff 114633 : -+@@ -111,9 +170,3 @@ index 1e62ed4..14cff41 100644
+-a/changes.diff 114634 : -+-@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
+-a/changes.diff 114635 : -+-+          System.debug('Hello Hi');
+-a/changes.diff 114636 : -+-diff --git a/scanner-report.json b/scanner-report.json
+-a/changes.diff 114637 : -+-new file mode 100644
+-a/changes.diff 114638 : -+-index 0000000..8a298a1
+-a/changes.diff 114639 : -+---- /dev/null
+-a/changes.diff 114640 : -+-+++ b/scanner-report.json
+-a/changes.diff 114641 : -+-@@ -0,0 +1 @@
+-a/changes.diff 114642 : -+-+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-a/changes.diff 114643 : -++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-a/changes.diff 114644 : -++-          System.debug('Hello Hi');
+-a/changes.diff 114645 : -+++          System.debug('Hello');
+-a/changes.diff 114646 : -@@ -167 +323 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-a/changes.diff 114647 : --index 14cff41..9a5148a 100644
+-a/changes.diff 114648 : -+index 9a5148a..1ec7a54 100644
+-a/changes.diff 114649 : -@@ -171,2 +327,20 @@ index 14cff41..9a5148a 100644
+-a/changes.diff 114650 : ---          System.debug('Hello Hi');
+-a/changes.diff 114651 : --+          System.debug('Hello');
+-a/changes.diff 114652 : -+-          System.debug('Hello');
+-a/changes.diff 114653 : -++          System.debug('Hi');
+-a/changes.diff 114654 : -+diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/filtered-scanner-report-.json
+-a/changes.diff 114655 : -+new file mode 100644
+-a/changes.diff 114656 : -+index 0000000..e69de29
+-a/changes.diff 114657 : -+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-a/changes.diff 114658 : -+new file mode 100644
+-a/changes.diff 114659 : -+index 0000000..fe51488
+-a/changes.diff 114660 : -+--- /dev/null
+-a/changes.diff 114661 : -++++ b/scanner-reports/final-filtered-scanner-report.json
+-a/changes.diff 114662 : -+@@ -0,0 +1 @@
+-a/changes.diff 114663 : -++[]
+-a/changes.diff 114664 : -+diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-report-.json
+-a/changes.diff 114665 : -+new file mode 100644
+-a/changes.diff 114666 : -+index 0000000..e670f52
+-a/changes.diff 114667 : -+--- /dev/null
+-a/changes.diff 114668 : -++++ b/scanner-reports/scanner-report-.json
+-a/changes.diff 114669 : -+@@ -0,0 +1 @@
+-a/changes.diff 114670 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-a/changes.diff 114671 : -+\ No newline at end of file
+-a/changes.diff 114672 : @@ -607 +1194 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-a/changes.diff 114673 : -index 1ec7a54..870d508 100644
+-a/changes.diff 114674 : @@ -611,19 +1198,9 @@ index 1ec7a54..870d508 100644
+-a/changes.diff 114675 : --          System.debug('Hi');
+-a/changes.diff 114676 : -+          System.debug('Hi Hello');
+-a/changes.diff 114677 : -diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/filtered-scanner-report-.json
+-a/changes.diff 114678 : -deleted file mode 100644
+-a/changes.diff 114679 : -index e69de29..0000000
+-a/changes.diff 114680 : -diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-a/changes.diff 114681 : -deleted file mode 100644
+-a/changes.diff 114682 : -index fe51488..0000000
+-a/changes.diff 114683 : ---- a/scanner-reports/final-filtered-scanner-report.json
+-a/changes.diff 114684 : -+++ /dev/null
+-a/changes.diff 114685 : -@@ -1 +0,0 @@
+-a/changes.diff 114686 : --[]
+-a/changes.diff 114687 : -diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-report-.json
+-a/changes.diff 114688 : -deleted file mode 100644
+-a/changes.diff 114689 : -index e670f52..0000000
+-a/changes.diff 114690 : ---- a/scanner-reports/scanner-report-.json
+-a/changes.diff 114691 : -+++ /dev/null
+-a/changes.diff 114692 : -@@ -1 +0,0 @@
+-a/changes.diff 114693 : --[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-a/changes.diff 1194 : index 1ec7a54..870d508 100644
+-a/changes.diff 11982 : -          System.debug('Hi');
+-a/changes.diff 12016 : deleted file mode 100644
+-a/changes.diff 12017 : index cd70445..0000000
+-a/changes.diff 12018 : --- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-a/changes.diff 12019 : @@ -1 +0,0 @@
+-a/changes.diff 12020 : -[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-a/force-app/main/default/classes/Account_Insert.cls 70 :           System.debug('Hi');
++Line 0 : Line 21 :           System.debug('Hello Hi');
++Line 1 : @@ -0,0 +1,97 @@
++Line 8833 : index 6d35ef2..90803a9 100644
++Line 88364 : @@ -21 +21 @@ public with sharing class AccountInsertClass {
++Line 88365 : -          System.debug('Hello');
++Line 21 :           System.debug('Hello Hi');
++Line 240 :       System.debug('Hello');
@@ -18 +1077 @@ diff --git a/changes.diff b/changes.diff
-index 1f4c0b2..3afa5f1 100644
+index f240d91..87643c5 100644
@@ -21,29 +1080,66 @@ index 1f4c0b2..3afa5f1 100644
-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
--index daf61a1..3603bae 100644
-+index 1328704..8d1a279 100644
-@@ -5,3 +4,0 @@ index daf61a1..3603bae 100644
--@@ -16 +16 @@ mkdir -p scanner-reports
---git diff --unified=0 --cached > changes.diff
--+git diff --cached --unified=0 > changes.diff
-@@ -9,8 +6,15 @@ index daf61a1..3603bae 100644
---  # Extract only the changed line numbers for the file
--+  # Extract only the added or modified lines for .cls and .lwc files
--@@ -32 +32 @@ while IFS= read -r file; do
---  ' changes.diff)
--+  ' changes.diff | uniq)
--@@ -61 +61 @@ while IFS= read -r file; do
---      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
--+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+-  # Extract only the added or modified lines for .cls and .lwc files
-++  # Extract the actual changed lines and line numbers for the specific file
-+@@ -29,4 +29,4 @@ while IFS= read -r file; do
-+-    $0 ~ file {inside=1}
-+-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
-+-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
-+-  ' changes.diff | uniq)
-++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
-++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
-++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
-++  ' changes.diff | sort -n | uniq)
-+@@ -56,0 +57,3 @@ while IFS= read -r file; do
-++  # Extract and map the current line number for each changed line
+@@ -2,2 +2,3 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-index 1328704..af60e83 100644
+---- a/.husky/pre-commit
++new file mode 100644
++index 0000000..27439b6
++--- /dev/null
+@@ -5,12 +6,1064 @@ index 1328704..af60e83 100644
+-@@ -25 +25 @@ while IFS= read -r file; do
+--  # Extract only the added or modified lines for .cls and .lwc files
+-+  # Extract only the added or modified lines and their line numbers for .cls and .lwc files
+-@@ -29,4 +29,4 @@ while IFS= read -r file; do
+--    $0 ~ file {inside=1}
+--    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+--    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+--  ' changes.diff | uniq)
+-+    $0 ~ file {inside=1}  # Start processing when the correct file section starts
+-+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
+-+    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only added or modified lines, excluding unchanged or deleted ones
+-+  ' changes.diff | sort -n | uniq)
++@@ -0,0 +1,97 @@
+++#!/bin/sh
+++. "$(dirname "$0")/_/husky.sh"
+++
+++# Install necessary dependencies
+++npm install @salesforce/cli --global
+++sf plugins install @salesforce/sfdx-scanner
+++
+++# Check for unstaged changes and get changed files/lines
+++git diff --unified=0 --cached > changes.diff || { echo "Failed to get git diff"; exit 1; }
+++
+++if [ ! -s changes.diff ]; then
+++  echo "No changes detected."
+++  exit 0
+++fi
+++
+++# Process only .cls and .lwc files
+++awk '
+++  BEGIN {valid_file=0} 
+++  /^diff --git/ {valid_file=0} 
+++  /\.cls$|\.lwc$/ {valid_file=1} 
+++  /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
+++  /^[+][^+]/ && valid_file {print "Line", start + line_offset++, ":", substr($0, 2)}  
+++' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
+++
+++if [ ! -s changed_cls_lwc_lines.txt ]; then
+++  echo "No changes detected in .cls or .lwc files."
+++  exit 0
+++fi
+++
+++cat changed_cls_lwc_lines.txt
+++
+++# Run SFDX Scanner on changed files
+++files=$(grep -E '^\+\+\+ b/.*(\.cls|\.lwc)$' changes.diff | sed 's/+++ b\///')
+++if [ -z "$files" ]; then
+++  echo "No changed .cls or .lwc files detected."
+++  exit 0
+++fi
+++
+++declare -a line_numbers_array=()
+++
+++while IFS= read -r file; do
+++  echo "Processing file: $file"
+++  file=$(echo "$file" | tr -d '"')
+++  changed_lines=$(grep -A 1000 "$file" changes.diff | grep '^\+' | sed 's/^+//')
+++  line_numbers=$(grep -A 1000 "$file" changes.diff | grep '^@@' | awk '{print $2}' | cut -d',' -f1 | sed 's/-//')
+++
@@ -50,0 +1147 @@ index 1f4c0b2..3afa5f1 100644
+++  echo "Starting line number: $current_line_number"
@@ -52,93 +1149,13035 @@ index 1f4c0b2..3afa5f1 100644
-@@ -18,3 +22,2 @@ diff --git a/changes.diff b/changes.diff
--new file mode 100644
--index 0000000..a6452b3
----- /dev/null
-+index 1f4c0b2..905f973 100644
-+--- a/changes.diff
-@@ -22,961 +25,7053 @@ index 0000000..a6452b3
--@@ -0,0 +1,1262 @@
--+diff --git a/.husky/pre-commit b/.husky/pre-commit
--+index daf61a1..3603bae 100644
--+--- a/.husky/pre-commit
--++++ b/.husky/pre-commit
--+@@ -16 +16 @@ mkdir -p scanner-reports
--+-git diff --unified=0 --cached > changes.diff
--++git diff --cached --unified=0 > changes.diff
--+@@ -25 +25 @@ while IFS= read -r file; do
--+-  # Extract only the changed line numbers for the file
--++  # Extract only the added or modified lines for .cls and .lwc files
--+@@ -32 +32 @@ while IFS= read -r file; do
--+-  ' changes.diff)
--++  ' changes.diff | uniq)
--+@@ -61 +61 @@ while IFS= read -r file; do
--+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
--++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
--+diff --git a/changes.diff b/changes.diff
--+new file mode 100644
--+index 0000000..1831031
--+--- /dev/null
--++++ b/changes.diff
--+@@ -0,0 +1,1158 @@
--++diff --git a/.husky/pre-commit b/.husky/pre-commit
--++index daf61a1..d6ae40b 100644
--++--- a/.husky/pre-commit
--+++++ b/.husky/pre-commit
--++@@ -25 +25 @@ while IFS= read -r file; do
--++-  # Extract only the changed line numbers for the file
--+++  # Extract only the added or modified lines for .cls and .lwc files
--++@@ -32 +32 @@ while IFS= read -r file; do
--++-  ' changes.diff)
--+++  ' changes.diff | uniq)
--++@@ -61 +61 @@ while IFS= read -r file; do
--++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
--+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
--++diff --git a/changes.diff b/changes.diff
--++new file mode 100644
--++index 0000000..47b6c1c
--++--- /dev/null
--+++++ b/changes.diff
--++@@ -0,0 +1,1078 @@
--+++diff --git a/.husky/pre-commit b/.husky/pre-commit
--+++index daf61a1..d6ae40b 100644
--+++--- a/.husky/pre-commit
--++++++ b/.husky/pre-commit
--+++@@ -25 +25 @@ while IFS= read -r file; do
--+++-  # Extract only the changed line numbers for the file
--++++  # Extract only the added or modified lines for .cls and .lwc files
--+++@@ -32 +32 @@ while IFS= read -r file; do
--+++-  ' changes.diff)
--++++  ' changes.diff | uniq)
--+++@@ -61 +61 @@ while IFS= read -r file; do
--+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
--++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
--+++diff --git a/changes.diff b/changes.diff
--+++new file mode 100644
--+++index 0000000..8cd4f1a
--+++--- /dev/null
--++++++ b/changes.diff
--+++@@ -0,0 +1,977 @@
--++++diff --git a/.husky/pre-commit b/.husky/pre-commit
--++++index daf61a1..73bb862 100644
--++++--- a/.husky/pre-commit
--+++++++ b/.husky/pre-commit
--++++@@ -61 +61 @@ while IFS= read -r file; do
--++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
--+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
--++++diff --git a/changes.diff b/changes.diff
--++++new file mode 100644
--++++index 0000000..f9d24dc
--++++--- /dev/null
--+++++++ b/changes.diff
--++++@@ -0,0 +1,876 @@
--+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
--+++++index 19cfdbc..daf61a1 100644
--+++++--- a/.husky/pre-commit
--++++++++ b/.husky/pre-commit
--+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
--+++++-  # Define the output path for the scanner report in CSV format
--+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
--++++++  # Extract only the changed line numbers for the file
--++++++  line_numbers=$(awk -v file="$file" '
--++++++    BEGIN {inside=0; start_line=0; line_offset=0}
--++++++    /^diff --git/ {inside=0}
--++++++    $0 ~ file {inside=1}
+++  while IFS= read -r line; do
+++    echo "Running SFDX Scanner on file: $file at line number: $current_line_number..."
+++    sf scanner:run --target "$file" --format "csv" --outfile "scanner-report.csv" || { echo "Scanner run failed or no issues found for $file, continuing with other files."; }
+++    line_numbers_array+=("$current_line_number")
+++    current_line_number=$((current_line_number + 1))
+++  done <<< "$changed_lines"
+++done <<< "$files"
+++
+++echo "${line_numbers_array[*]}" > line_numbers.txt
+++cat line_numbers.txt
+++
+++# Filter Scanner Report by Line Numbers
+++if [ -f scanner-report.csv ]; then
+++  current_line_number_list=$(cat line_numbers.txt)
+++  current_line_number_list=$(echo $current_line_number_list | xargs)
+++  echo "Filtering scanner report for the following line numbers: $current_line_number_list"
+++  awk -v lines="$current_line_number_list" '
+++  BEGIN {
+++    FPAT = "([^,]+)|(\"[^\"]+\")";
+++    split(lines, arr, " ");
+++    for (i in arr) {
+++      valid[arr[i]] = 1;
+++    }
+++  }
+++  NR == 1 || (substr($4, 2, length($4)-2) in valid) {
+++    print $0;
+++  }
+++  ' scanner-report.csv > filtered-scanner-report.csv
+++  cat filtered-scanner-report.csv
+++else
+++  echo "No scanner report generated."
+++  exit 0
+++fi
+++
+++# Block commit if severity 3 vulnerabilities are found
+++if [ -f filtered-scanner-report.csv ]; then
+++  severity_fail_count=$(awk -F',' '{gsub(/^ *| *$/, "", $2); if($2 == "\"3\"") count++} END {print count}' filtered-scanner-report.csv)
+++  echo "Severity 3 issues count: $severity_fail_count"
+++  if [ "$severity_fail_count" -gt 0 ]; then
+++    echo "Blocking your commit due to severity 3 vulnerabilities found."
+++    exit 1
+++  else
+++    echo "No severity 3 vulnerabilities found. Proceeding with commit."
+++  fi
+++else
+++  echo "No filtered scanner report found."
+++  exit 0
+++fi
++diff --git a/changed_cls_lwc_lines.txt b/changed_cls_lwc_lines.txt
++index 7a04cc9..efdb04b 100644
++--- a/changed_cls_lwc_lines.txt
+++++ b/changed_cls_lwc_lines.txt
++@@ -1,960 +1 @@
++-a/changed_cls_lwc_lines.txt 0 : 0 : 3274 : -+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-a/changed_cls_lwc_lines.txt 1 : 1 : 3275 : -+index 1e62ed4..14cff41 100644
++-a/changed_cls_lwc_lines.txt 2 : 2 : 3276 : -+--- a/force-app/main/default/classes/Account_Insert.cls
++-a/changed_cls_lwc_lines.txt 3 : 3 : 3277 : -++++ b/force-app/main/default/classes/Account_Insert.cls
++-a/changed_cls_lwc_lines.txt 4 : 4 : 3278 : -+@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
++-a/changed_cls_lwc_lines.txt 5 : 5 : 3279 : -++          System.debug('Hello Hi');
++-a/changed_cls_lwc_lines.txt 6 : 6 : 3280 : -+diff --git a/scanner-report.json b/scanner-report.json
++-a/changed_cls_lwc_lines.txt 7 : 7 : 3281 : -+new file mode 100644
++-a/changed_cls_lwc_lines.txt 8 : 8 : 3282 : -+index 0000000..8a298a1
++-a/changed_cls_lwc_lines.txt 9 : 9 : 3283 : -+--- /dev/null
++-a/changed_cls_lwc_lines.txt 10 : 10 : 3284 : -++++ b/scanner-report.json
++-a/changed_cls_lwc_lines.txt 11 : 11 : 3285 : -+@@ -0,0 +1 @@
++-a/changed_cls_lwc_lines.txt 12 : 12 : 3286 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-a/changed_cls_lwc_lines.txt 13 : 13 : 3287 : @@ -167 +323 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-a/changed_cls_lwc_lines.txt 14 : 14 : 3288 : -index 14cff41..9a5148a 100644
++-a/changed_cls_lwc_lines.txt 15 : 15 : 3289 : @@ -171,2 +327,20 @@ index 14cff41..9a5148a 100644
++-a/changed_cls_lwc_lines.txt 16 : 16 : 3290 : --          System.debug('Hello Hi');
++-a/changed_cls_lwc_lines.txt 17 : 17 : 3291 : -+          System.debug('Hello');
++-a/changed_cls_lwc_lines.txt 18 : 18 : 323 : index 1ec7a54..870d508 100644
++-a/changed_cls_lwc_lines.txt 19 : 19 : 3272 : -          System.debug('Hi');
++-a/changed_cls_lwc_lines.txt 20 : 20 : 3302 : deleted file mode 100644
++-a/changed_cls_lwc_lines.txt 21 : 21 : 3303 : index e69de29..0000000
++-a/changed_cls_lwc_lines.txt 22 : 22 : 3336 : deleted file mode 100644
++-a/changed_cls_lwc_lines.txt 23 : 23 : 3337 : index fe51488..0000000
++-a/changed_cls_lwc_lines.txt 24 : 24 : 3338 : --- a/scanner-reports/final-filtered-scanner-report.json
++-a/changed_cls_lwc_lines.txt 25 : 25 : 3339 : @@ -1 +0,0 @@
++-a/changed_cls_lwc_lines.txt 26 : 26 : 3340 : -[]
++-a/changed_cls_lwc_lines.txt 27 : 27 : 3406 : deleted file mode 100644
++-a/changed_cls_lwc_lines.txt 28 : 28 : 3407 : index e670f52..0000000
++-a/changed_cls_lwc_lines.txt 29 : 29 : 3408 : --- a/scanner-reports/scanner-report-.json
++-a/changed_cls_lwc_lines.txt 30 : 30 : 3409 : @@ -1 +0,0 @@
++-a/changed_cls_lwc_lines.txt 31 : 31 : 3410 : -[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-a/changed_cls_lwc_lines.txt 32 : 32 : 70 :           System.debug('Hi');
++-a/changed_cls_lwc_lines.txt 33 : 33 : -+@@ -52 +61 @@ while IFS= read -r file; do
++-a/changed_cls_lwc_lines.txt 34 : 34 : -+-  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
++-a/changed_cls_lwc_lines.txt 35 : 35 : -++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-a/changed_cls_lwc_lines.txt 36 : 36 : -+@@ -55 +64 @@ while IFS= read -r file; do
++-a/changed_cls_lwc_lines.txt 37 : 37 : -+-  if [ ! -f "scanner-report-$file.json" ]; then
++-a/changed_cls_lwc_lines.txt 38 : 38 : -++  if [ ! -f "$output_file" ]; then
++-a/changed_cls_lwc_lines.txt 39 : 39 : -+@@ -64 +73 @@ while IFS= read -r file; do
++-a/changed_cls_lwc_lines.txt 40 : 40 : -+-  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
++-a/changed_cls_lwc_lines.txt 41 : 41 : -++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-a/changed_cls_lwc_lines.txt 42 : 42 : -+@@ -67 +76 @@ while IFS= read -r file; do
++-a/changed_cls_lwc_lines.txt 43 : 43 : -+-  if [ ! -s "filtered-scanner-report-$file.json" ]; then
++-a/changed_cls_lwc_lines.txt 44 : 44 : -++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-a/changed_cls_lwc_lines.txt 45 : 45 : -+@@ -73 +82 @@ while IFS= read -r file; do
++-a/changed_cls_lwc_lines.txt 46 : 46 : -+-  cat "filtered-scanner-report-$file.json"
++-a/changed_cls_lwc_lines.txt 47 : 47 : -++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-a/changed_cls_lwc_lines.txt 48 : 48 : -+@@ -78 +87 @@ done <<< "$changed_files"
++-a/changed_cls_lwc_lines.txt 49 : 49 : -+-filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
++-a/changed_cls_lwc_lines.txt 50 : 50 : -++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-a/changed_cls_lwc_lines.txt 51 : 51 : -+@@ -85 +94 @@ fi
++-a/changed_cls_lwc_lines.txt 52 : 52 : -+-jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
++-a/changed_cls_lwc_lines.txt 53 : 53 : -++jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-a/changed_cls_lwc_lines.txt 54 : 54 : -+@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
++-a/changed_cls_lwc_lines.txt 55 : 55 : -+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
++-a/changed_cls_lwc_lines.txt 56 : 56 : -++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-a/changed_cls_lwc_lines.txt 57 : 57 : -+diff --git a/changes.diff b/changes.diff
++-a/changed_cls_lwc_lines.txt 58 : 58 : -@@ -3 +43 @@ new file mode 100644
++-a/changed_cls_lwc_lines.txt 59 : 59 : --index 0000000..9b8d99e
++-a/changed_cls_lwc_lines.txt 60 : 60 : -+index 0000000..dd57583
++-a/changed_cls_lwc_lines.txt 61 : 61 : -@@ -5,102 +45,121 @@ index 0000000..9b8d99e
++-a/changed_cls_lwc_lines.txt 62 : 62 : --+++ b/.husky/pre-commit
++-a/changed_cls_lwc_lines.txt 63 : 63 : --@@ -0,0 +1,100 @@
++-a/changed_cls_lwc_lines.txt 64 : 64 : --+#!/bin/bash
++-a/changed_cls_lwc_lines.txt 65 : 65 : --+
++-a/changed_cls_lwc_lines.txt 66 : 66 : --+# Prevent modification of Husky files
++-a/changed_cls_lwc_lines.txt 67 : 67 : --+# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
++-a/changed_cls_lwc_lines.txt 68 : 68 : --+#   echo "Error: pre-commit and post-commit files cannot be modified."
++-a/changed_cls_lwc_lines.txt 69 : 69 : --+#   exit 1
++-a/changed_cls_lwc_lines.txt 70 : 70 : --+# fi
++-a/changed_cls_lwc_lines.txt 71 : 71 : --+# chmod 544 .husky/pre-commit
++-a/changed_cls_lwc_lines.txt 72 : 72 : --+# chmod 544 .husky/post-commit
++-a/changed_cls_lwc_lines.txt 73 : 73 : --+
++-a/changed_cls_lwc_lines.txt 74 : 74 : --+# Check if Husky is installed
++-a/changed_cls_lwc_lines.txt 75 : 75 : --+if ! command -v husky &> /dev/null
++-a/changed_cls_lwc_lines.txt 76 : 76 : --+then
++-a/changed_cls_lwc_lines.txt 77 : 77 : --+    echo "Husky is not installed. Installing Husky..."
++-a/changed_cls_lwc_lines.txt 78 : 78 : --+    npm install husky --save-dev
++-a/changed_cls_lwc_lines.txt 79 : 79 : --+    npx husky install
++-a/changed_cls_lwc_lines.txt 80 : 80 : --+else
++-a/changed_cls_lwc_lines.txt 81 : 81 : --+    echo "Husky is already installed Successfully."
++-a/changed_cls_lwc_lines.txt 82 : 82 : --+fi
++-a/changed_cls_lwc_lines.txt 83 : 83 : --+
++-a/changed_cls_lwc_lines.txt 84 : 84 : --+# Get the list of changed Apex (.cls) or LWC files
++-a/changed_cls_lwc_lines.txt 85 : 85 : --+changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
++-a/changed_cls_lwc_lines.txt 86 : 86 : --+
++-a/changed_cls_lwc_lines.txt 87 : 87 : --+# Check if there are any relevant changes
++-a/changed_cls_lwc_lines.txt 88 : 88 : --+if [ -z "$changed_files" ]; then
++-a/changed_cls_lwc_lines.txt 89 : 89 : --+  echo "No relevant changes to scan in the files."
++-a/changed_cls_lwc_lines.txt 90 : 90 : --+  exit 0
++-a/changed_cls_lwc_lines.txt 91 : 91 : --+fi
++-a/changed_cls_lwc_lines.txt 92 : 92 : --+
++-a/changed_cls_lwc_lines.txt 93 : 93 : --+# Extract the changed lines and corresponding line numbers from the diff for each file
++-a/changed_cls_lwc_lines.txt 94 : 94 : --+git diff --unified=0 --cached > changes.diff
++-a/changed_cls_lwc_lines.txt 95 : 95 : --+
++-a/changed_cls_lwc_lines.txt 96 : 96 : --+# Loop through each changed file
++-a/changed_cls_lwc_lines.txt 97 : 97 : --+while IFS= read -r file; do
++-a/changed_cls_lwc_lines.txt 98 : 98 : --+  echo "Processing file: $file"
++-a/changed_cls_lwc_lines.txt 99 : 99 : --+
++-a/changed_cls_lwc_lines.txt 100 : 100 : --+  # Extract line numbers from the diff for this file
++-a/changed_cls_lwc_lines.txt 101 : 101 : --+  changed_lines=$(awk -v file="$file" '
++-a/changed_cls_lwc_lines.txt 102 : 102 : --+    BEGIN {inside=0}
++-a/changed_cls_lwc_lines.txt 103 : 103 : --+    /^diff --git/ {inside=0}
++-a/changed_cls_lwc_lines.txt 104 : 104 : --+    $0 ~ file {inside=1}
++-a/changed_cls_lwc_lines.txt 105 : 105 : --+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
++-a/changed_cls_lwc_lines.txt 106 : 106 : --+  ' changes.diff)
++-a/changed_cls_lwc_lines.txt 107 : 107 : --+
++-a/changed_cls_lwc_lines.txt 108 : 108 : --+  # If no line numbers were found for this file, skip it
++-a/changed_cls_lwc_lines.txt 109 : 109 : --+  if [ -z "$changed_lines" ]; then
++-a/changed_cls_lwc_lines.txt 110 : 110 : --+    echo "No changed lines found in $file"
++-a/changed_cls_lwc_lines.txt 111 : 111 : --+    continue
++-a/changed_cls_lwc_lines.txt 112 : 112 : --+  fi
++-a/changed_cls_lwc_lines.txt 113 : 113 : --+
++-a/changed_cls_lwc_lines.txt 114 : 114 : --+  # Run the SFDX scanner on the file and generate the report
++-a/changed_cls_lwc_lines.txt 115 : 115 : --+  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
++-a/changed_cls_lwc_lines.txt 116 : 116 : --+
++-a/changed_cls_lwc_lines.txt 117 : 117 : --+  # Ensure that the scanner report was generated
++-a/changed_cls_lwc_lines.txt 118 : 118 : --+  if [ ! -f "scanner-report-$file.json" ]; then
++-a/changed_cls_lwc_lines.txt 119 : 119 : --+    echo "Scanner report for $file not found."
++-a/changed_cls_lwc_lines.txt 120 : 120 : --+    continue
++-a/changed_cls_lwc_lines.txt 121 : 121 : --+  fi
++-a/changed_cls_lwc_lines.txt 122 : 122 : @@ -144,169 +149,25 @@ index dd57583..2bddfca 100644
++-a/changed_cls_lwc_lines.txt 123 : 123 : --+  # Filter the scanner report based on the changed lines
++-a/changed_cls_lwc_lines.txt 124 : 124 : --+  echo "Filtering scanner report for $file by changed lines..."
++-a/changed_cls_lwc_lines.txt 125 : 125 : --+  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
++-a/changed_cls_lwc_lines.txt 126 : 126 : --+    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
++-a/changed_cls_lwc_lines.txt 127 : 127 : --+  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
++-a/changed_cls_lwc_lines.txt 128 : 128 : --+
++-a/changed_cls_lwc_lines.txt 129 : 129 : --+  # If no filtered report is found, skip
++-a/changed_cls_lwc_lines.txt 130 : 130 : --+  if [ ! -s "filtered-scanner-report-$file.json" ]; then
++-a/changed_cls_lwc_lines.txt 131 : 131 : --+    echo "No issues found for the changed lines in $file"
++-a/changed_cls_lwc_lines.txt 132 : 132 : --+    continue
++-a/changed_cls_lwc_lines.txt 133 : 133 : --+  fi
++-a/changed_cls_lwc_lines.txt 134 : 134 : --+
++-a/changed_cls_lwc_lines.txt 135 : 135 : --+  echo "Filtered scanner report for $file:"
++-a/changed_cls_lwc_lines.txt 136 : 136 : --+  cat "filtered-scanner-report-$file.json"
++-a/changed_cls_lwc_lines.txt 137 : 137 : --+
++-a/changed_cls_lwc_lines.txt 138 : 138 : --+done <<< "$changed_files"
++-a/changed_cls_lwc_lines.txt 139 : 139 : --+
++-a/changed_cls_lwc_lines.txt 140 : 140 : --+# Check if any filtered reports were generated
++-a/changed_cls_lwc_lines.txt 141 : 141 : --+filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
++-a/changed_cls_lwc_lines.txt 142 : 142 : --+if [ -z "$filtered_reports" ]; then
++-a/changed_cls_lwc_lines.txt 143 : 143 : --+  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
++-a/changed_cls_lwc_lines.txt 144 : 144 : --+  exit 0
++-a/changed_cls_lwc_lines.txt 145 : 145 : --+fi
++-a/changed_cls_lwc_lines.txt 146 : 146 : --+
++-a/changed_cls_lwc_lines.txt 147 : 147 : --+# Combine all filtered reports into one final report
++-a/changed_cls_lwc_lines.txt 148 : 148 : --+jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
++-a/changed_cls_lwc_lines.txt 149 : 149 : --+
++-a/changed_cls_lwc_lines.txt 150 : 150 : --+# Parse the final filtered scanner report and check for severity 3 issues
++-a/changed_cls_lwc_lines.txt 151 : 151 : --+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
++-a/changed_cls_lwc_lines.txt 152 : 152 : --+
++-a/changed_cls_lwc_lines.txt 153 : 153 : --+# Output the fail count for debugging
++-a/changed_cls_lwc_lines.txt 154 : 154 : --+echo "Severity Fail Count: $severity_fail_count"
++-a/changed_cls_lwc_lines.txt 155 : 155 : --+
++-a/changed_cls_lwc_lines.txt 156 : 156 : --+# Block commit if there are severity 3 issues
++-a/changed_cls_lwc_lines.txt 157 : 157 : --+if [ "$severity_fail_count" -gt 0 ]; then
++-a/changed_cls_lwc_lines.txt 158 : 158 : --+  echo "Blocking your commit due to vulnerabilities found with severity 3."
++-a/changed_cls_lwc_lines.txt 159 : 159 : --+  exit 1
++-a/changed_cls_lwc_lines.txt 160 : 160 : --+else
++-a/changed_cls_lwc_lines.txt 161 : 161 : --+  echo "No vulnerabilities found in changed lines. Proceeding with commit."
++-a/changed_cls_lwc_lines.txt 162 : 162 : --+  exit 0
++-a/changed_cls_lwc_lines.txt 163 : 163 : --+fi
++-a/changed_cls_lwc_lines.txt 164 : 164 : -++++ b/changes.diff
++-a/changed_cls_lwc_lines.txt 165 : 165 : -+@@ -0,0 +1,119 @@
++-a/changed_cls_lwc_lines.txt 166 : 166 : -++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-a/changed_cls_lwc_lines.txt 167 : 167 : -++new file mode 100644
++-a/changed_cls_lwc_lines.txt 168 : 168 : -++index 0000000..9b8d99e
++-a/changed_cls_lwc_lines.txt 169 : 169 : -++--- /dev/null
++-a/changed_cls_lwc_lines.txt 170 : 170 : -+++++ b/.husky/pre-commit
++-a/changed_cls_lwc_lines.txt 171 : 171 : -++@@ -0,0 +1,100 @@
++-a/changed_cls_lwc_lines.txt 172 : 172 : -+++#!/bin/bash
++-a/changed_cls_lwc_lines.txt 173 : 173 : -+++
++-a/changed_cls_lwc_lines.txt 174 : 174 : -+++# Prevent modification of Husky files
++-a/changed_cls_lwc_lines.txt 175 : 175 : -+++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
++-a/changed_cls_lwc_lines.txt 176 : 176 : -+++#   echo "Error: pre-commit and post-commit files cannot be modified."
++-a/changed_cls_lwc_lines.txt 177 : 177 : -+++#   exit 1
++-a/changed_cls_lwc_lines.txt 178 : 178 : -+++# fi
++-a/changed_cls_lwc_lines.txt 179 : 179 : -+++# chmod 544 .husky/pre-commit
++-a/changed_cls_lwc_lines.txt 180 : 180 : -+++# chmod 544 .husky/post-commit
++-a/changed_cls_lwc_lines.txt 181 : 181 : -+++
++-a/changed_cls_lwc_lines.txt 182 : 182 : -+++# Check if Husky is installed
++-a/changed_cls_lwc_lines.txt 183 : 183 : -+++if ! command -v husky &> /dev/null
++-a/changed_cls_lwc_lines.txt 184 : 184 : -+++then
++-a/changed_cls_lwc_lines.txt 185 : 185 : -+++    echo "Husky is not installed. Installing Husky..."
++-a/changed_cls_lwc_lines.txt 186 : 186 : -+++    npm install husky --save-dev
++-a/changed_cls_lwc_lines.txt 187 : 187 : -+++    npx husky install
++-a/changed_cls_lwc_lines.txt 188 : 188 : -+++else
++-a/changed_cls_lwc_lines.txt 189 : 189 : -+++    echo "Husky is already installed Successfully."
++-a/changed_cls_lwc_lines.txt 190 : 190 : -+++fi
++-a/changed_cls_lwc_lines.txt 191 : 191 : -+++
++-a/changed_cls_lwc_lines.txt 192 : 192 : -+++# Get the list of changed Apex (.cls) or LWC files
++-a/changed_cls_lwc_lines.txt 193 : 193 : -+++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
++-a/changed_cls_lwc_lines.txt 194 : 194 : -+++
++-a/changed_cls_lwc_lines.txt 195 : 195 : -+++# Check if there are any relevant changes
++-a/changed_cls_lwc_lines.txt 196 : 196 : -+++if [ -z "$changed_files" ]; then
++-a/changed_cls_lwc_lines.txt 197 : 197 : -+++  echo "No relevant changes to scan in the files."
++-a/changed_cls_lwc_lines.txt 198 : 198 : -+++  exit 0
++-a/changed_cls_lwc_lines.txt 199 : 199 : -+++fi
++-a/changed_cls_lwc_lines.txt 200 : 200 : -+++
++-a/changed_cls_lwc_lines.txt 201 : 201 : -+++# Extract the changed lines and corresponding line numbers from the diff for each file
++-a/changed_cls_lwc_lines.txt 202 : 202 : -+++git diff --unified=0 --cached > changes.diff
++-a/changed_cls_lwc_lines.txt 203 : 203 : -+++
++-a/changed_cls_lwc_lines.txt 204 : 204 : -+++# Loop through each changed file
++-a/changed_cls_lwc_lines.txt 205 : 205 : -+++while IFS= read -r file; do
++-a/changed_cls_lwc_lines.txt 206 : 206 : -+++  echo "Processing file: $file"
++-a/changed_cls_lwc_lines.txt 207 : 207 : -+++
++-a/changed_cls_lwc_lines.txt 208 : 208 : -+++  # Extract line numbers from the diff for this file
++-a/changed_cls_lwc_lines.txt 209 : 209 : -+++  changed_lines=$(awk -v file="$file" '
++-a/changed_cls_lwc_lines.txt 210 : 210 : -+++    BEGIN {inside=0}
++-a/changed_cls_lwc_lines.txt 211 : 211 : -+++    /^diff --git/ {inside=0}
++-a/changed_cls_lwc_lines.txt 212 : 212 : -+++    $0 ~ file {inside=1}
++-a/changed_cls_lwc_lines.txt 213 : 213 : -+++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
++-a/changed_cls_lwc_lines.txt 214 : 214 : -+++  ' changes.diff)
++-a/changed_cls_lwc_lines.txt 215 : 215 : -+++
++-a/changed_cls_lwc_lines.txt 216 : 216 : -+++  # If no line numbers were found for this file, skip it
++-a/changed_cls_lwc_lines.txt 217 : 217 : -+++  if [ -z "$changed_lines" ]; then
++-a/changed_cls_lwc_lines.txt 218 : 218 : -+++    echo "No changed lines found in $file"
++-a/changed_cls_lwc_lines.txt 219 : 219 : -+++    continue
++-a/changed_cls_lwc_lines.txt 220 : 220 : -+++  fi
++-a/changed_cls_lwc_lines.txt 221 : 221 : -+++
++-a/changed_cls_lwc_lines.txt 222 : 222 : -+++  # Run the SFDX scanner on the file and generate the report
++-a/changed_cls_lwc_lines.txt 223 : 223 : -+++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
++-a/changed_cls_lwc_lines.txt 224 : 224 : -+++
++-a/changed_cls_lwc_lines.txt 225 : 225 : -+++  # Ensure that the scanner report was generated
++-a/changed_cls_lwc_lines.txt 226 : 226 : -+++  if [ ! -f "scanner-report-$file.json" ]; then
++-a/changed_cls_lwc_lines.txt 227 : 227 : -+++    echo "Scanner report for $file not found."
++-a/changed_cls_lwc_lines.txt 228 : 228 : -+++    continue
++-a/changed_cls_lwc_lines.txt 229 : 229 : -+++  fi
++-a/changed_cls_lwc_lines.txt 230 : 230 : -+++
++-a/changed_cls_lwc_lines.txt 231 : 231 : -+++  # Filter the scanner report based on the changed lines
++-a/changed_cls_lwc_lines.txt 232 : 232 : -+++  echo "Filtering scanner report for $file by changed lines..."
++-a/changed_cls_lwc_lines.txt 233 : 233 : -+++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
++-a/changed_cls_lwc_lines.txt 234 : 234 : -+++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
++-a/changed_cls_lwc_lines.txt 235 : 235 : -+++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
++-a/changed_cls_lwc_lines.txt 236 : 236 : -+++
++-a/changed_cls_lwc_lines.txt 237 : 237 : -+++  # If no filtered report is found, skip
++-a/changed_cls_lwc_lines.txt 238 : 238 : -+++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
++-a/changed_cls_lwc_lines.txt 239 : 239 : -+++    echo "No issues found for the changed lines in $file"
++-a/changed_cls_lwc_lines.txt 240 : 240 : -+++    continue
++-a/changed_cls_lwc_lines.txt 241 : 241 : -+++  fi
++-a/changed_cls_lwc_lines.txt 242 : 242 : -+++
++-a/changed_cls_lwc_lines.txt 243 : 243 : -+++  echo "Filtered scanner report for $file:"
++-a/changed_cls_lwc_lines.txt 244 : 244 : -+++  cat "filtered-scanner-report-$file.json"
++-a/changed_cls_lwc_lines.txt 245 : 245 : -+++
++-a/changed_cls_lwc_lines.txt 246 : 246 : -+++done <<< "$changed_files"
++-a/changed_cls_lwc_lines.txt 247 : 247 : -+++
++-a/changed_cls_lwc_lines.txt 248 : 248 : -+++# Check if any filtered reports were generated
++-a/changed_cls_lwc_lines.txt 249 : 249 : -+++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
++-a/changed_cls_lwc_lines.txt 250 : 250 : -+++if [ -z "$filtered_reports" ]; then
++-a/changed_cls_lwc_lines.txt 251 : 251 : -+++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
++-a/changed_cls_lwc_lines.txt 252 : 252 : -+++  exit 0
++-a/changed_cls_lwc_lines.txt 253 : 253 : -+++fi
++-a/changed_cls_lwc_lines.txt 254 : 254 : -+++
++-a/changed_cls_lwc_lines.txt 255 : 255 : -+++# Combine all filtered reports into one final report
++-a/changed_cls_lwc_lines.txt 256 : 256 : -+++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
++-a/changed_cls_lwc_lines.txt 257 : 257 : -+++
++-a/changed_cls_lwc_lines.txt 258 : 258 : -+++# Parse the final filtered scanner report and check for severity 3 issues
++-a/changed_cls_lwc_lines.txt 259 : 259 : -+++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
++-a/changed_cls_lwc_lines.txt 260 : 260 : -+++
++-a/changed_cls_lwc_lines.txt 261 : 261 : -+++# Output the fail count for debugging
++-a/changed_cls_lwc_lines.txt 262 : 262 : -+++echo "Severity Fail Count: $severity_fail_count"
++-a/changed_cls_lwc_lines.txt 263 : 263 : -+++
++-a/changed_cls_lwc_lines.txt 264 : 264 : -+++# Block commit if there are severity 3 issues
++-a/changed_cls_lwc_lines.txt 265 : 265 : -+++if [ "$severity_fail_count" -gt 0 ]; then
++-a/changed_cls_lwc_lines.txt 266 : 266 : -+++  echo "Blocking your commit due to vulnerabilities found with severity 3."
++-a/changed_cls_lwc_lines.txt 267 : 267 : -+++  exit 1
++-a/changed_cls_lwc_lines.txt 268 : 268 : -+++else
++-a/changed_cls_lwc_lines.txt 269 : 269 : -+++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
++-a/changed_cls_lwc_lines.txt 270 : 270 : -+++  exit 0
++-a/changed_cls_lwc_lines.txt 271 : 271 : -+++fi
++-a/changed_cls_lwc_lines.txt 272 : 272 : -++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-a/changed_cls_lwc_lines.txt 273 : 273 : -++index 1e62ed4..14cff41 100644
++-a/changed_cls_lwc_lines.txt 274 : 274 : -++--- a/force-app/main/default/classes/Account_Insert.cls
++-a/changed_cls_lwc_lines.txt 275 : 275 : -+++++ b/force-app/main/default/classes/Account_Insert.cls
++-a/changed_cls_lwc_lines.txt 276 : 276 : -++@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
++-a/changed_cls_lwc_lines.txt 277 : 277 : -+++          System.debug('Hello Hi');
++-a/changed_cls_lwc_lines.txt 278 : 278 : -++diff --git a/scanner-report.json b/scanner-report.json
++-a/changed_cls_lwc_lines.txt 279 : 279 : -++new file mode 100644
++-a/changed_cls_lwc_lines.txt 280 : 280 : -++index 0000000..8a298a1
++-a/changed_cls_lwc_lines.txt 281 : 281 : -++--- /dev/null
++-a/changed_cls_lwc_lines.txt 282 : 282 : -+++++ b/scanner-report.json
++-a/changed_cls_lwc_lines.txt 283 : 283 : -++@@ -0,0 +1 @@
++-a/changed_cls_lwc_lines.txt 284 : 284 : -+++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-a/changed_cls_lwc_lines.txt 285 : 285 : -@@ -108 +167 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-a/changed_cls_lwc_lines.txt 286 : 286 : --index 1e62ed4..14cff41 100644
++-a/changed_cls_lwc_lines.txt 287 : 287 : -+index 14cff41..9a5148a 100644
++-a/changed_cls_lwc_lines.txt 288 : 288 : -@@ -111,9 +170,3 @@ index 1e62ed4..14cff41 100644
++-a/changed_cls_lwc_lines.txt 289 : 289 : --@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
++-a/changed_cls_lwc_lines.txt 290 : 290 : --+          System.debug('Hello Hi');
++-a/changed_cls_lwc_lines.txt 291 : 291 : --diff --git a/scanner-report.json b/scanner-report.json
++-a/changed_cls_lwc_lines.txt 292 : 292 : @@ -314 +175 @@ index dd57583..2bddfca 100644
++-a/changed_cls_lwc_lines.txt 293 : 293 : --index 0000000..8a298a1
++-a/changed_cls_lwc_lines.txt 294 : 294 : @@ -316,6 +177,429 @@ index dd57583..2bddfca 100644
++-a/changed_cls_lwc_lines.txt 295 : 295 : --+++ b/scanner-report.json
++-a/changed_cls_lwc_lines.txt 296 : 296 : --@@ -0,0 +1 @@
++-a/changed_cls_lwc_lines.txt 297 : 297 : --+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-a/changed_cls_lwc_lines.txt 298 : 298 : -+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-a/changed_cls_lwc_lines.txt 299 : 299 : -+-          System.debug('Hello Hi');
++-a/changed_cls_lwc_lines.txt 300 : 300 : -++          System.debug('Hello');
++-a/changed_cls_lwc_lines.txt 301 : 301 : @@ -323 +607 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-a/changed_cls_lwc_lines.txt 302 : 302 : -index 9a5148a..1ec7a54 100644
++-a/changed_cls_lwc_lines.txt 303 : 303 : @@ -327,2 +611,2 @@ index 9a5148a..1ec7a54 100644
++-a/changed_cls_lwc_lines.txt 304 : 304 : --          System.debug('Hello');
++-a/changed_cls_lwc_lines.txt 305 : 305 : -+          System.debug('Hi');
++-a/changed_cls_lwc_lines.txt 306 : 306 : @@ -330,2 +614,2 @@ diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/fil
++-a/changed_cls_lwc_lines.txt 307 : 307 : -new file mode 100644
++-a/changed_cls_lwc_lines.txt 308 : 308 : -index 0000000..e69de29
++-a/changed_cls_lwc_lines.txt 309 : 309 : @@ -333,6 +617,6 @@ diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-report
++-a/changed_cls_lwc_lines.txt 310 : 310 : -new file mode 100644
++-a/changed_cls_lwc_lines.txt 311 : 311 : -index 0000000..fe51488
++-a/changed_cls_lwc_lines.txt 312 : 312 : ---- /dev/null
++-a/changed_cls_lwc_lines.txt 313 : 313 : -+++ b/scanner-reports/final-filtered-scanner-report.json
++-a/changed_cls_lwc_lines.txt 314 : 314 : -@@ -0,0 +1 @@
++-a/changed_cls_lwc_lines.txt 315 : 315 : -+[]
++-a/changed_cls_lwc_lines.txt 316 : 316 : @@ -340,6 +624,6 @@ diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-repo
++-a/changed_cls_lwc_lines.txt 317 : 317 : -new file mode 100644
++-a/changed_cls_lwc_lines.txt 318 : 318 : -index 0000000..e670f52
++-a/changed_cls_lwc_lines.txt 319 : 319 : ---- /dev/null
++-a/changed_cls_lwc_lines.txt 320 : 320 : -+++ b/scanner-reports/scanner-report-.json
++-a/changed_cls_lwc_lines.txt 321 : 321 : -@@ -0,0 +1 @@
++-a/changed_cls_lwc_lines.txt 322 : 322 : -+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-a/changed_cls_lwc_lines.txt 323 : 607 : index 870d508..1ec7a54 100644
++-a/changed_cls_lwc_lines.txt 324 : 61119 : -          System.debug('Hi Hello');
++-a/changed_cls_lwc_lines.txt 325 : 61120 : diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-a/changed_cls_lwc_lines.txt 326 : 61121 : new file mode 100644
++-a/changed_cls_lwc_lines.txt 327 : 61122 : index 0000000..cd70445
++-a/changed_cls_lwc_lines.txt 328 : 61123 : --- /dev/null
++-a/changed_cls_lwc_lines.txt 329 : 61124 : @@ -0,0 +1 @@
++-a/changed_cls_lwc_lines.txt 330 : 70 :           System.debug('Hi Hello');
++-a/changes.diff 239 : index 6223d95..dfdd9f6 100644
++-a/changes.diff 24330 : -index 4433528..439f404 100644
++-a/changes.diff 24331 : @@ -5,40 +5,17 @@ index 4433528..439f404 100644
++-a/changes.diff 24332 : -@@ -4,6 +4 @@
++-a/changes.diff 24333 : --# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
++-a/changes.diff 24334 : --#   echo "Error: pre-commit and post-commit files cannot be modified."
++-a/changes.diff 24335 : --#   exit 1
++-a/changes.diff 24336 : --# fi
++-a/changes.diff 24337 : --# chmod 544 .husky/pre-commit
++-a/changes.diff 24338 : --# chmod 544 .husky/post-commit
++-a/changes.diff 24339 : -+# ...
++-a/changes.diff 24340 : -@@ -12,8 +7 @@
++-a/changes.diff 24341 : --if ! command -v husky &> /dev/null
++-a/changes.diff 24342 : --then
++-a/changes.diff 24343 : --    echo "Husky is not installed. Installing Husky..."
++-a/changes.diff 24344 : --    npm install husky --save-dev
++-a/changes.diff 24345 : --    npx husky install
++-a/changes.diff 24346 : --else
++-a/changes.diff 24347 : --    echo "Husky is already installed successfully."
++-a/changes.diff 24348 : --fi
++-a/changes.diff 24349 : -+# ...
++-a/changes.diff 24350 : -@@ -36,6 +24,16 @@ git diff --unified=0 --cached > changes.diff
++-a/changes.diff 24351 : --# Loop through each changed file
++-a/changes.diff 24352 : --while IFS= read -r file; do
++-a/changes.diff 24353 : --  echo "Processing file: $file"
++-a/changes.diff 24354 : --
++-a/changes.diff 24355 : --  # Remove leading slashes to make it compatible with file path
++-a/changes.diff 24356 : --  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
++-a/changes.diff 24357 : -+# Extract and print only the changed lines and line numbers from .cls and .lwc files
++-a/changes.diff 24358 : -+echo "Processing changes for .cls and .lwc files only..."
++-a/changes.diff 24359 : -+awk '
++-a/changes.diff 24360 : -+  BEGIN {valid_file=0; file=""}
++-a/changes.diff 24361 : -+  /^diff --git/ {valid_file=0}
++-a/changes.diff 24362 : -+  /^diff --git a\/.* b\/(.*)/ {file=$3; sub(/^b\//,"",file)}
++-a/changes.diff 24363 : -+  $0 ~ /\.cls$|\.lwc$/ {valid_file=1}
++-a/changes.diff 24364 : -+  /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}
++-a/changes.diff 24365 : -+  /^[+][^+]/ && valid_file {print file, start + line_offset++, ":", substr($0, 2)}
++-a/changes.diff 24366 : -+' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
++-a/changes.diff 24367 : -+
++-a/changes.diff 24368 : -+# Check if any relevant changes were found in .cls or .lwc files
++-a/changes.diff 24369 : -+if [ ! -s changed_cls_lwc_lines.txt ]; then
++-a/changes.diff 24370 : -+  echo "No changes detected in .cls or .lwc files."
++-a/changes.diff 24371 : -+  exit 0
++-a/changes.diff 24372 : @@ -46,18 +23,19 @@ index 4433528..439f404 100644
++-a/changes.diff 24373 : -@@ -43,8 +41 @@ while IFS= read -r file; do
++-a/changes.diff 24374 : --  # Extract the changed lines and corresponding line numbers
++-a/changes.diff 24375 : --  awk '
++-a/changes.diff 24376 : --    BEGIN {valid_file=0} 
++-a/changes.diff 24377 : --    /^diff --git/ {valid_file=0} 
++-a/changes.diff 24378 : --    $0 ~ /\.cls$|\.lwc$/ {valid_file=1} 
++-a/changes.diff 24379 : --    /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
++-a/changes.diff 24380 : --    /^[+][^+]/ && valid_file {print start + line_offset++, ":", substr($0, 2)}  
++-a/changes.diff 24381 : --  ' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
++-a/changes.diff 24382 : -+cat changed_cls_lwc_lines.txt
++-a/changes.diff 24383 : -@@ -52,5 +43,5 @@ while IFS= read -r file; do
++-a/changes.diff 24384 : --  # If no lines are found for this file, skip it
++-a/changes.diff 24385 : --  if [ ! -s changed_cls_lwc_lines.txt ]; then
++-a/changes.diff 24386 : --    echo "No changed lines found in $file"
++-a/changes.diff 24387 : --    continue
++-a/changes.diff 24388 : --  fi
++-a/changes.diff 24389 : -+# Process each file
++-a/changes.diff 24390 : -+for file in $changed_files; do
++-a/changes.diff 2744 : @@ -65,7 +43,18 @@ index 4433528..439f404 100644
++-a/changes.diff 2745 : -+  clean_file=$(basename "$file")
++-a/changes.diff 2746 : -+  echo "Clean file: $clean_file"
++-a/changes.diff 2747 : -@@ -70,2 +61,10 @@ while IFS= read -r file; do
++-a/changes.diff 2748 : --  # Read the changed lines from the file for filtering
++-a/changes.diff 2749 : --  changed_lines=$(cut -d':' -f1 changed_cls_lwc_lines.txt | tr '\n' ' ')
++-a/changes.diff 2750 : -+  # Extract line numbers for this file
++-a/changes.diff 2751 : -+  line_numbers=$(grep "^$file " changed_cls_lwc_lines.txt | cut -d':' -f1 | awk '{print $2}' | tr '\n' ' ')
++-a/changes.diff 27947 : @@ -73 +62,2 @@ index 4433528..439f404 100644
++-a/changes.diff 27948 : -+  if [ -z "$line_numbers" ]; then
++-a/changes.diff 27949 : @@ -77,9 +67,8 @@ index 4433528..439f404 100644
++-a/changes.diff 27950 : -+
++-a/changes.diff 27951 : -+  # Generate the select expression for jq
++-a/changes.diff 27952 : -+  select_expression=$(echo "$line_numbers" | awk '{for(i=1;i<=NF;i++) printf ".line == %s%s", $i, (i<NF ? " or " : "")}')
++-a/changes.diff 27953 : -@@ -75,2 +74,2 @@ while IFS= read -r file; do
++-a/changes.diff 27954 : --  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
++-a/changes.diff 27955 : --    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
++-a/changes.diff 27956 : -+  jq '
++-a/changes.diff 27957 : -+    .[] | .violations[]? | select('"$select_expression"')
++-a/changes.diff 27958 : -@@ -87,2 +86 @@ while IFS= read -r file; do
++-a/changes.diff 32915 : @@ -87,5 +76,19 @@ index 4433528..439f404 100644
++-a/changes.diff 32916 : --done <<< "$changed_files"
++-a/changes.diff 32917 : -+done
++-a/changes.diff 32918 : -@@ -101 +99 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-a/changes.diff 32919 : --severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-a/changes.diff 32920 : -+severity_fail_count=$(jq '[.[].severity | select(. == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-a/changes.diff 345208 : @@ -93,3 +96,2 @@ diff --git a/changed_cls_lwc_lines.txt b/changed_cls_lwc_lines.txt
++-a/changes.diff 345209 : -new file mode 100644
++-a/changes.diff 345210 : -index 0000000..1210cb6
++-a/changes.diff 345211 : ---- /dev/null
++-a/changes.diff 345212 : @@ -97,5 +99,139 @@ index 0000000..1210cb6
++-a/changes.diff 345213 : -@@ -0,0 +1,4 @@
++-a/changes.diff 345214 : -+108 : index 14cff41..9a5148a 100644
++-a/changes.diff 345215 : -+1119 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-a/changes.diff 345216 : -+1120 : -          System.debug('Hello Hi');
++-a/changes.diff 345217 : -+70 :           System.debug('Hi');
++-a/changes.diff 345218 : @@ -103 +239 @@ diff --git a/changes.diff b/changes.diff
++-a/changes.diff 345219 : -index 2bddfca..b1d3858 100644
++-a/changes.diff 345220 : @@ -107,17 +243,110 @@ index 2bddfca..b1d3858 100644
++-a/changes.diff 345221 : --index 9b8d99e..d68baeb 100644
++-a/changes.diff 345222 : -+index d68baeb..4433528 100644
++-a/changes.diff 345223 : -@@ -5,3 +5,22 @@ index 9b8d99e..d68baeb 100644
++-a/changes.diff 345224 : --@@ -29,0 +30,3 @@ fi
++-a/changes.diff 345225 : --+# Create a directory for scanner reports if it doesn't exist
++-a/changes.diff 345226 : --+mkdir -p scanner-reports
++-a/changes.diff 345227 : -+@@ -18 +18 @@ else
++-a/changes.diff 345228 : -+-    echo "Husky is already installed Successfully."
++-a/changes.diff 345229 : -++    echo "Husky is already installed successfully."
++-a/changes.diff 345230 : -+@@ -43,10 +43,11 @@ while IFS= read -r file; do
++-a/changes.diff 345231 : -+-  # Extract line numbers from the diff for this file
++-a/changes.diff 345232 : -+-  changed_lines=$(awk -v file="$file" '
++-a/changes.diff 345233 : -+-    BEGIN {inside=0}
++-a/changes.diff 345234 : -+-    /^diff --git/ {inside=0}
++-a/changes.diff 345235 : -+-    $0 ~ file {inside=1}
++-a/changes.diff 345236 : -+-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
++-a/changes.diff 345237 : -+-  ' changes.diff)
++-a/changes.diff 345238 : @@ -125,159 +354,26 @@ index 2bddfca..b1d3858 100644
++-a/changes.diff 345239 : -+-  # If no line numbers were found for this file, skip it
++-a/changes.diff 345240 : -+-  if [ -z "$changed_lines" ]; then
++-a/changes.diff 345241 : -++  # Extract the changed lines and corresponding line numbers
++-a/changes.diff 345242 : -++  awk '
++-a/changes.diff 345243 : -++    BEGIN {valid_file=0} 
++-a/changes.diff 345244 : -++    /^diff --git/ {valid_file=0} 
++-a/changes.diff 345245 : -++    $0 ~ /\.cls$|\.lwc$/ {valid_file=1} 
++-a/changes.diff 345246 : -++    /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
++-a/changes.diff 345247 : -++    /^[+][^+]/ && valid_file {print start + line_offset++, ":", substr($0, 2)}  
++-a/changes.diff 345248 : -++  ' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
++-a/changes.diff 345249 : -@@ -9,3 +28,5 @@ index 9b8d99e..d68baeb 100644
++-a/changes.diff 345250 : --@@ -36,0 +40,3 @@ while IFS= read -r file; do
++-a/changes.diff 345251 : --+  # Remove leading slashes to make it compatible with file path
++-a/changes.diff 345252 : --+  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
++-a/changes.diff 345253 : -++  # If no lines are found for this file, skip it
++-a/changes.diff 345254 : -++  if [ ! -s changed_cls_lwc_lines.txt ]; then
++-a/changes.diff 345255 : -+@@ -68,0 +70,3 @@ while IFS= read -r file; do
++-a/changes.diff 345256 : -++  # Read the changed lines from the file for filtering
++-a/changes.diff 345257 : -++  changed_lines=$(cut -d':' -f1 changed_cls_lwc_lines.txt | tr '\n' ' ')
++-a/changes.diff 345258 : -@@ -13,28 +33,0 @@ index 9b8d99e..d68baeb 100644
++-a/changes.diff 345259 : --@@ -50,0 +57,3 @@ while IFS= read -r file; do
++-a/changes.diff 345260 : --+  # Define the output path for the scanner report
++-a/changes.diff 345261 : --+  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-a/changes.diff 554583 : --@@ -52 +61 @@ while IFS= read -r file; do
++-a/changes.diff 554584 : ---  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
++-a/changes.diff 554585 : --+  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-a/changes.diff 554586 : --@@ -55 +64 @@ while IFS= read -r file; do
++-a/changes.diff 554587 : ---  if [ ! -f "scanner-report-$file.json" ]; then
++-a/changes.diff 554588 : --+  if [ ! -f "$output_file" ]; then
++-a/changes.diff 554589 : --@@ -64 +73 @@ while IFS= read -r file; do
++-a/changes.diff 554590 : ---  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
++-a/changes.diff 554591 : --+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-a/changes.diff 554592 : --@@ -67 +76 @@ while IFS= read -r file; do
++-a/changes.diff 554593 : ---  if [ ! -s "filtered-scanner-report-$file.json" ]; then
++-a/changes.diff 554594 : --+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-a/changes.diff 554595 : --@@ -73 +82 @@ while IFS= read -r file; do
++-a/changes.diff 554596 : ---  cat "filtered-scanner-report-$file.json"
++-a/changes.diff 554597 : --+  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-a/changes.diff 554598 : --@@ -78 +87 @@ done <<< "$changed_files"
++-a/changes.diff 554599 : ---filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
++-a/changes.diff 554600 : --+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-a/changes.diff 554601 : --@@ -85 +94 @@ fi
++-a/changes.diff 554602 : ---jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
++-a/changes.diff 554603 : --+jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-a/changes.diff 554604 : --@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
++-a/changes.diff 554605 : ---severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
++-a/changes.diff 554606 : --+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-a/changes.diff 554607 : -@@ -42,3 +35,2 @@ diff --git a/changes.diff b/changes.diff
++-a/changes.diff 554608 : --new file mode 100644
++-a/changes.diff 554609 : --index 0000000..dd57583
++-a/changes.diff 554610 : ----- /dev/null
++-a/changes.diff 554611 : -+index dd57583..2bddfca 100644
++-a/changes.diff 554612 : -+--- a/changes.diff
++-a/changes.diff 554613 : -@@ -46,5 +38,3 @@ index 0000000..dd57583
++-a/changes.diff 554614 : --@@ -0,0 +1,119 @@
++-a/changes.diff 554615 : --+diff --git a/.husky/pre-commit b/.husky/pre-commit
++-a/changes.diff 554616 : --+new file mode 100644
++-a/changes.diff 554617 : --+index 0000000..9b8d99e
++-a/changes.diff 554618 : --+--- /dev/null
++-a/changes.diff 554619 : -+@@ -1,0 +2,40 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-a/changes.diff 554620 : -++index 9b8d99e..d68baeb 100644
++-a/changes.diff 554621 : -++--- a/.husky/pre-commit
++-a/changes.diff 554622 : -@@ -52,53 +42,3 @@ index 0000000..dd57583
++-a/changes.diff 554623 : --+@@ -0,0 +1,100 @@
++-a/changes.diff 554624 : --++#!/bin/bash
++-a/changes.diff 554625 : --++
++-a/changes.diff 554626 : --++# Prevent modification of Husky files
++-a/changes.diff 554627 : --++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
++-a/changes.diff 554628 : --++#   echo "Error: pre-commit and post-commit files cannot be modified."
++-a/changes.diff 554629 : --++#   exit 1
++-a/changes.diff 554630 : --++# fi
++-a/changes.diff 554631 : --++# chmod 544 .husky/pre-commit
++-a/changes.diff 554632 : --++# chmod 544 .husky/post-commit
++-a/changes.diff 554633 : --++
++-a/changes.diff 554634 : --++# Check if Husky is installed
++-a/changes.diff 554635 : --++if ! command -v husky &> /dev/null
++-a/changes.diff 554636 : --++then
++-a/changes.diff 554637 : --++    echo "Husky is not installed. Installing Husky..."
++-a/changes.diff 554638 : --++    npm install husky --save-dev
++-a/changes.diff 554639 : --++    npx husky install
++-a/changes.diff 554640 : --++else
++-a/changes.diff 554641 : --++    echo "Husky is already installed Successfully."
++-a/changes.diff 554642 : --++fi
++-a/changes.diff 554643 : --++
++-a/changes.diff 554644 : --++# Get the list of changed Apex (.cls) or LWC files
++-a/changes.diff 554645 : --++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
++-a/changes.diff 554646 : --++
++-a/changes.diff 554647 : --++# Check if there are any relevant changes
++-a/changes.diff 554648 : --++if [ -z "$changed_files" ]; then
++-a/changes.diff 554649 : --++  echo "No relevant changes to scan in the files."
++-a/changes.diff 554650 : --++  exit 0
++-a/changes.diff 554651 : --++fi
++-a/changes.diff 554652 : --++
++-a/changes.diff 554653 : --++# Extract the changed lines and corresponding line numbers from the diff for each file
++-a/changes.diff 554654 : --++git diff --unified=0 --cached > changes.diff
++-a/changes.diff 554655 : --++
++-a/changes.diff 554656 : --++# Loop through each changed file
++-a/changes.diff 554657 : --++while IFS= read -r file; do
++-a/changes.diff 554658 : --++  echo "Processing file: $file"
++-a/changes.diff 554659 : --++
++-a/changes.diff 554660 : --++  # Extract line numbers from the diff for this file
++-a/changes.diff 554661 : --++  changed_lines=$(awk -v file="$file" '
++-a/changes.diff 554662 : --++    BEGIN {inside=0}
++-a/changes.diff 554663 : --++    /^diff --git/ {inside=0}
++-a/changes.diff 554664 : --++    $0 ~ file {inside=1}
++-a/changes.diff 554665 : --++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
++-a/changes.diff 554666 : --++  ' changes.diff)
++-a/changes.diff 554667 : --++
++-a/changes.diff 554668 : --++  # If no line numbers were found for this file, skip it
++-a/changes.diff 554669 : --++  if [ -z "$changed_lines" ]; then
++-a/changes.diff 554670 : --++    echo "No changed lines found in $file"
++-a/changes.diff 554671 : --++    continue
++-a/changes.diff 554672 : --++  fi
++-a/changes.diff 554673 : --++
++-a/changes.diff 554674 : --++  # Run the SFDX scanner on the file and generate the report
++-a/changes.diff 554675 : --++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
++-a/changes.diff 554676 : -++@@ -29,0 +30,3 @@ fi
++-a/changes.diff 554677 : -+++# Create a directory for scanner reports if it doesn't exist
++-a/changes.diff 554678 : -+++mkdir -p scanner-reports
++-a/changes.diff 554679 : -@@ -106,5 +46,3 @@ index 0000000..dd57583
++-a/changes.diff 554680 : --++  # Ensure that the scanner report was generated
++-a/changes.diff 554681 : --++  if [ ! -f "scanner-report-$file.json" ]; then
++-a/changes.diff 554682 : --++    echo "Scanner report for $file not found."
++-a/changes.diff 554683 : --++    continue
++-a/changes.diff 554684 : --++  fi
++-a/changes.diff 554685 : -++@@ -36,0 +40,3 @@ while IFS= read -r file; do
++-a/changes.diff 554686 : -+++  # Remove leading slashes to make it compatible with file path
++-a/changes.diff 554687 : -+++  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
++-a/changes.diff 554688 : -@@ -112,5 +50,3 @@ index 0000000..dd57583
++-a/changes.diff 554689 : --++  # Filter the scanner report based on the changed lines
++-a/changes.diff 554690 : --++  echo "Filtering scanner report for $file by changed lines..."
++-a/changes.diff 554691 : --++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
++-a/changes.diff 554692 : --++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
++-a/changes.diff 554693 : --++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
++-a/changes.diff 554694 : -++@@ -50,0 +57,3 @@ while IFS= read -r file; do
++-a/changes.diff 554695 : -+++  # Define the output path for the scanner report
++-a/changes.diff 554696 : -+++  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-a/changes.diff 554697 : -@@ -118,48 +54,268 @@ index 0000000..dd57583
++-a/changes.diff 554698 : --++  # If no filtered report is found, skip
++-a/changes.diff 554699 : --++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
++-a/changes.diff 554700 : --++    echo "No issues found for the changed lines in $file"
++-a/changes.diff 554701 : --++    continue
++-a/changes.diff 554702 : --++  fi
++-a/changes.diff 554703 : --++
++-a/changes.diff 554704 : --++  echo "Filtered scanner report for $file:"
++-a/changes.diff 554705 : --++  cat "filtered-scanner-report-$file.json"
++-a/changes.diff 554706 : --++
++-a/changes.diff 554707 : --++done <<< "$changed_files"
++-a/changes.diff 554708 : --++
++-a/changes.diff 554709 : --++# Check if any filtered reports were generated
++-a/changes.diff 554710 : --++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
++-a/changes.diff 554711 : --++if [ -z "$filtered_reports" ]; then
++-a/changes.diff 554712 : --++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
++-a/changes.diff 554713 : --++  exit 0
++-a/changes.diff 554714 : --++fi
++-a/changes.diff 554715 : --++
++-a/changes.diff 554716 : --++# Combine all filtered reports into one final report
++-a/changes.diff 554717 : --++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
++-a/changes.diff 114350 : @@ -285,2 +381,3 @@ index 2bddfca..b1d3858 100644
++-a/changes.diff 114351 : --++# Parse the final filtered scanner report and check for severity 3 issues
++-a/changes.diff 114352 : --++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
++-a/changes.diff 114353 : @@ -288,2 +385,3 @@ index 2bddfca..b1d3858 100644
++-a/changes.diff 114354 : --++# Output the fail count for debugging
++-a/changes.diff 114355 : --++echo "Severity Fail Count: $severity_fail_count"
++-a/changes.diff 114356 : @@ -291,315 +389,804 @@ index 2bddfca..b1d3858 100644
++-a/changes.diff 114357 : --++# Block commit if there are severity 3 issues
++-a/changes.diff 114358 : --++if [ "$severity_fail_count" -gt 0 ]; then
++-a/changes.diff 114359 : --++  echo "Blocking your commit due to vulnerabilities found with severity 3."
++-a/changes.diff 114360 : --++  exit 1
++-a/changes.diff 114361 : --++else
++-a/changes.diff 114362 : --++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
++-a/changes.diff 114363 : --++  exit 0
++-a/changes.diff 114364 : --++fi
++-a/changes.diff 114365 : --+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-a/changes.diff 114366 : --+index 1e62ed4..14cff41 100644
++-a/changes.diff 114367 : --+--- a/force-app/main/default/classes/Account_Insert.cls
++-a/changes.diff 114368 : --++++ b/force-app/main/default/classes/Account_Insert.cls
++-a/changes.diff 114369 : --+@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
++-a/changes.diff 114370 : --++          System.debug('Hello Hi');
++-a/changes.diff 114371 : --+diff --git a/scanner-report.json b/scanner-report.json
++-a/changes.diff 114372 : --+new file mode 100644
++-a/changes.diff 114373 : --+index 0000000..8a298a1
++-a/changes.diff 114374 : --+--- /dev/null
++-a/changes.diff 114375 : --++++ b/scanner-report.json
++-a/changes.diff 114376 : --+@@ -0,0 +1 @@
++-a/changes.diff 114377 : --++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-a/changes.diff 114378 : -++@@ -52 +61 @@ while IFS= read -r file; do
++-a/changes.diff 114379 : -++-  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
++-a/changes.diff 114380 : -+++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-a/changes.diff 114381 : -++@@ -55 +64 @@ while IFS= read -r file; do
++-a/changes.diff 114382 : -++-  if [ ! -f "scanner-report-$file.json" ]; then
++-a/changes.diff 114383 : -+++  if [ ! -f "$output_file" ]; then
++-a/changes.diff 114384 : -++@@ -64 +73 @@ while IFS= read -r file; do
++-a/changes.diff 114385 : -++-  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
++-a/changes.diff 114386 : -+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-a/changes.diff 114387 : -++@@ -67 +76 @@ while IFS= read -r file; do
++-a/changes.diff 114388 : -++-  if [ ! -s "filtered-scanner-report-$file.json" ]; then
++-a/changes.diff 114389 : -+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-a/changes.diff 114390 : -++@@ -73 +82 @@ while IFS= read -r file; do
++-a/changes.diff 114391 : -++-  cat "filtered-scanner-report-$file.json"
++-a/changes.diff 114392 : -+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-a/changes.diff 114393 : -++@@ -78 +87 @@ done <<< "$changed_files"
++-a/changes.diff 114394 : -++-filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
++-a/changes.diff 114395 : -+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-a/changes.diff 114396 : -++@@ -85 +94 @@ fi
++-a/changes.diff 114397 : -++-jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
++-a/changes.diff 114398 : -+++jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-a/changes.diff 114399 : -++@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
++-a/changes.diff 114400 : -++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
++-a/changes.diff 114401 : -+++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-a/changes.diff 114402 : -++diff --git a/changes.diff b/changes.diff
++-a/changes.diff 114403 : -+@@ -3 +43 @@ new file mode 100644
++-a/changes.diff 114404 : -+-index 0000000..9b8d99e
++-a/changes.diff 114405 : -++index 0000000..dd57583
++-a/changes.diff 114406 : -+@@ -5,102 +45,121 @@ index 0000000..9b8d99e
++-a/changes.diff 114407 : -+-+++ b/.husky/pre-commit
++-a/changes.diff 114408 : -+-@@ -0,0 +1,100 @@
++-a/changes.diff 114409 : -+-+#!/bin/bash
++-a/changes.diff 114410 : -+-+
++-a/changes.diff 114411 : -+-+# Prevent modification of Husky files
++-a/changes.diff 114412 : -+-+# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
++-a/changes.diff 114413 : -+-+#   echo "Error: pre-commit and post-commit files cannot be modified."
++-a/changes.diff 114414 : -+-+#   exit 1
++-a/changes.diff 114415 : -+-+# fi
++-a/changes.diff 114416 : -+-+# chmod 544 .husky/pre-commit
++-a/changes.diff 114417 : -+-+# chmod 544 .husky/post-commit
++-a/changes.diff 114418 : -+-+
++-a/changes.diff 114419 : -+-+# Check if Husky is installed
++-a/changes.diff 114420 : -+-+if ! command -v husky &> /dev/null
++-a/changes.diff 114421 : -+-+then
++-a/changes.diff 114422 : -+-+    echo "Husky is not installed. Installing Husky..."
++-a/changes.diff 114423 : -+-+    npm install husky --save-dev
++-a/changes.diff 114424 : -+-+    npx husky install
++-a/changes.diff 114425 : -+-+else
++-a/changes.diff 114426 : -+-+    echo "Husky is already installed Successfully."
++-a/changes.diff 114427 : -+-+fi
++-a/changes.diff 114428 : -+-+
++-a/changes.diff 114429 : -+-+# Get the list of changed Apex (.cls) or LWC files
++-a/changes.diff 114430 : -+-+changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
++-a/changes.diff 114431 : -+-+
++-a/changes.diff 114432 : -+-+# Check if there are any relevant changes
++-a/changes.diff 114433 : -+-+if [ -z "$changed_files" ]; then
++-a/changes.diff 114434 : -+-+  echo "No relevant changes to scan in the files."
++-a/changes.diff 114435 : -+-+  exit 0
++-a/changes.diff 114436 : -+-+fi
++-a/changes.diff 114437 : -+-+
++-a/changes.diff 114438 : -+-+# Extract the changed lines and corresponding line numbers from the diff for each file
++-a/changes.diff 114439 : -+-+git diff --unified=0 --cached > changes.diff
++-a/changes.diff 114440 : -+-+
++-a/changes.diff 114441 : -+-+# Loop through each changed file
++-a/changes.diff 114442 : -+-+while IFS= read -r file; do
++-a/changes.diff 114443 : -+-+  echo "Processing file: $file"
++-a/changes.diff 114444 : -+-+
++-a/changes.diff 114445 : -+-+  # Extract line numbers from the diff for this file
++-a/changes.diff 114446 : -+-+  changed_lines=$(awk -v file="$file" '
++-a/changes.diff 114447 : -+-+    BEGIN {inside=0}
++-a/changes.diff 114448 : -+-+    /^diff --git/ {inside=0}
++-a/changes.diff 114449 : -+-+    $0 ~ file {inside=1}
++-a/changes.diff 114450 : -+-+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
++-a/changes.diff 114451 : -+-+  ' changes.diff)
++-a/changes.diff 114452 : -+-+
++-a/changes.diff 114453 : -+-+  # If no line numbers were found for this file, skip it
++-a/changes.diff 114454 : -+-+  if [ -z "$changed_lines" ]; then
++-a/changes.diff 114455 : -+-+    echo "No changed lines found in $file"
++-a/changes.diff 114456 : -+-+    continue
++-a/changes.diff 114457 : -+-+  fi
++-a/changes.diff 114458 : -+-+
++-a/changes.diff 114459 : -+-+  # Run the SFDX scanner on the file and generate the report
++-a/changes.diff 114460 : -+-+  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
++-a/changes.diff 114461 : -+-+
++-a/changes.diff 114462 : -+-+  # Ensure that the scanner report was generated
++-a/changes.diff 114463 : -+-+  if [ ! -f "scanner-report-$file.json" ]; then
++-a/changes.diff 114464 : -+-+    echo "Scanner report for $file not found."
++-a/changes.diff 114465 : -+-+    continue
++-a/changes.diff 114466 : -+-+  fi
++-a/changes.diff 114467 : -+-+
++-a/changes.diff 114468 : -+-+  # Filter the scanner report based on the changed lines
++-a/changes.diff 114469 : -+-+  echo "Filtering scanner report for $file by changed lines..."
++-a/changes.diff 114470 : -+-+  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
++-a/changes.diff 114471 : -+-+    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
++-a/changes.diff 114472 : -+-+  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
++-a/changes.diff 114473 : -+-+
++-a/changes.diff 114474 : -+-+  # If no filtered report is found, skip
++-a/changes.diff 114475 : -+-+  if [ ! -s "filtered-scanner-report-$file.json" ]; then
++-a/changes.diff 114476 : -+-+    echo "No issues found for the changed lines in $file"
++-a/changes.diff 114477 : -+-+    continue
++-a/changes.diff 114478 : -+-+  fi
++-a/changes.diff 114479 : -+-+
++-a/changes.diff 114480 : -+-+  echo "Filtered scanner report for $file:"
++-a/changes.diff 114481 : -+-+  cat "filtered-scanner-report-$file.json"
++-a/changes.diff 114482 : -+-+
++-a/changes.diff 114483 : -+-+done <<< "$changed_files"
++-a/changes.diff 114484 : -+-+
++-a/changes.diff 114485 : -+-+# Check if any filtered reports were generated
++-a/changes.diff 114486 : -+-+filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
++-a/changes.diff 114487 : -+-+if [ -z "$filtered_reports" ]; then
++-a/changes.diff 114488 : -+-+  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
++-a/changes.diff 114489 : -+-+  exit 0
++-a/changes.diff 114490 : -+-+fi
++-a/changes.diff 114491 : -+-+
++-a/changes.diff 114492 : -+-+# Combine all filtered reports into one final report
++-a/changes.diff 114493 : -+-+jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
++-a/changes.diff 114494 : -+-+
++-a/changes.diff 114495 : -+-+# Parse the final filtered scanner report and check for severity 3 issues
++-a/changes.diff 114496 : -+-+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
++-a/changes.diff 114497 : -+-+
++-a/changes.diff 114498 : -+-+# Output the fail count for debugging
++-a/changes.diff 114499 : -+-+echo "Severity Fail Count: $severity_fail_count"
++-a/changes.diff 114500 : -+-+
++-a/changes.diff 114501 : -+-+# Block commit if there are severity 3 issues
++-a/changes.diff 114502 : -+-+if [ "$severity_fail_count" -gt 0 ]; then
++-a/changes.diff 114503 : -+-+  echo "Blocking your commit due to vulnerabilities found with severity 3."
++-a/changes.diff 114504 : -+-+  exit 1
++-a/changes.diff 114505 : -+-+else
++-a/changes.diff 114506 : -+-+  echo "No vulnerabilities found in changed lines. Proceeding with commit."
++-a/changes.diff 114507 : -+-+  exit 0
++-a/changes.diff 114508 : -+-+fi
++-a/changes.diff 114509 : -+++++ b/changes.diff
++-a/changes.diff 114510 : -++@@ -0,0 +1,119 @@
++-a/changes.diff 114511 : -+++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-a/changes.diff 114512 : -+++new file mode 100644
++-a/changes.diff 114513 : -+++index 0000000..9b8d99e
++-a/changes.diff 114514 : -+++--- /dev/null
++-a/changes.diff 114515 : -++++++ b/.husky/pre-commit
++-a/changes.diff 114516 : -+++@@ -0,0 +1,100 @@
++-a/changes.diff 114517 : -++++#!/bin/bash
++-a/changes.diff 114518 : -++++
++-a/changes.diff 114519 : -++++# Prevent modification of Husky files
++-a/changes.diff 114520 : -++++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
++-a/changes.diff 114521 : -++++#   echo "Error: pre-commit and post-commit files cannot be modified."
++-a/changes.diff 114522 : -++++#   exit 1
++-a/changes.diff 114523 : -++++# fi
++-a/changes.diff 114524 : -++++# chmod 544 .husky/pre-commit
++-a/changes.diff 114525 : -++++# chmod 544 .husky/post-commit
++-a/changes.diff 114526 : -++++
++-a/changes.diff 114527 : -++++# Check if Husky is installed
++-a/changes.diff 114528 : -++++if ! command -v husky &> /dev/null
++-a/changes.diff 114529 : -++++then
++-a/changes.diff 114530 : -++++    echo "Husky is not installed. Installing Husky..."
++-a/changes.diff 114531 : -++++    npm install husky --save-dev
++-a/changes.diff 114532 : -++++    npx husky install
++-a/changes.diff 114533 : -++++else
++-a/changes.diff 114534 : -++++    echo "Husky is already installed Successfully."
++-a/changes.diff 114535 : -++++fi
++-a/changes.diff 114536 : -++++
++-a/changes.diff 114537 : -++++# Get the list of changed Apex (.cls) or LWC files
++-a/changes.diff 114538 : -++++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
++-a/changes.diff 114539 : -++++
++-a/changes.diff 114540 : -++++# Check if there are any relevant changes
++-a/changes.diff 114541 : -++++if [ -z "$changed_files" ]; then
++-a/changes.diff 114542 : -++++  echo "No relevant changes to scan in the files."
++-a/changes.diff 114543 : -++++  exit 0
++-a/changes.diff 114544 : -++++fi
++-a/changes.diff 114545 : -++++
++-a/changes.diff 114546 : -++++# Extract the changed lines and corresponding line numbers from the diff for each file
++-a/changes.diff 114547 : -++++git diff --unified=0 --cached > changes.diff
++-a/changes.diff 114548 : -++++
++-a/changes.diff 114549 : -++++# Loop through each changed file
++-a/changes.diff 114550 : -++++while IFS= read -r file; do
++-a/changes.diff 114551 : -++++  echo "Processing file: $file"
++-a/changes.diff 114552 : -++++
++-a/changes.diff 114553 : -++++  # Extract line numbers from the diff for this file
++-a/changes.diff 114554 : -++++  changed_lines=$(awk -v file="$file" '
++-a/changes.diff 114555 : -++++    BEGIN {inside=0}
++-a/changes.diff 114556 : -++++    /^diff --git/ {inside=0}
++-a/changes.diff 114557 : -++++    $0 ~ file {inside=1}
++-a/changes.diff 114558 : -++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
++-a/changes.diff 114559 : -++++  ' changes.diff)
++-a/changes.diff 114560 : -++++
++-a/changes.diff 114561 : -++++  # If no line numbers were found for this file, skip it
++-a/changes.diff 114562 : -++++  if [ -z "$changed_lines" ]; then
++-a/changes.diff 114563 : -++++    echo "No changed lines found in $file"
++-a/changes.diff 114564 : -++++    continue
++-a/changes.diff 114565 : -++++  fi
++-a/changes.diff 114566 : -++++
++-a/changes.diff 114567 : -++++  # Run the SFDX scanner on the file and generate the report
++-a/changes.diff 114568 : -++++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
++-a/changes.diff 114569 : -++++
++-a/changes.diff 114570 : -++++  # Ensure that the scanner report was generated
++-a/changes.diff 114571 : -++++  if [ ! -f "scanner-report-$file.json" ]; then
++-a/changes.diff 114572 : -++++    echo "Scanner report for $file not found."
++-a/changes.diff 114573 : -++++    continue
++-a/changes.diff 114574 : -++++  fi
++-a/changes.diff 114575 : -++++
++-a/changes.diff 114576 : -++++  # Filter the scanner report based on the changed lines
++-a/changes.diff 114577 : -++++  echo "Filtering scanner report for $file by changed lines..."
++-a/changes.diff 114578 : -++++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
++-a/changes.diff 114579 : -++++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
++-a/changes.diff 114580 : -++++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
++-a/changes.diff 114581 : -++++
++-a/changes.diff 114582 : -++++  # If no filtered report is found, skip
++-a/changes.diff 114583 : -++++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
++-a/changes.diff 114584 : -++++    echo "No issues found for the changed lines in $file"
++-a/changes.diff 114585 : -++++    continue
++-a/changes.diff 114586 : -++++  fi
++-a/changes.diff 114587 : -++++
++-a/changes.diff 114588 : -++++  echo "Filtered scanner report for $file:"
++-a/changes.diff 114589 : -++++  cat "filtered-scanner-report-$file.json"
++-a/changes.diff 114590 : -++++
++-a/changes.diff 114591 : -++++done <<< "$changed_files"
++-a/changes.diff 114592 : -++++
++-a/changes.diff 114593 : -++++# Check if any filtered reports were generated
++-a/changes.diff 114594 : -++++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
++-a/changes.diff 114595 : -++++if [ -z "$filtered_reports" ]; then
++-a/changes.diff 114596 : -++++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
++-a/changes.diff 114597 : -++++  exit 0
++-a/changes.diff 114598 : -++++fi
++-a/changes.diff 114599 : -++++
++-a/changes.diff 114600 : -++++# Combine all filtered reports into one final report
++-a/changes.diff 114601 : -++++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
++-a/changes.diff 114602 : -++++
++-a/changes.diff 114603 : -++++# Parse the final filtered scanner report and check for severity 3 issues
++-a/changes.diff 114604 : -++++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
++-a/changes.diff 114605 : -++++
++-a/changes.diff 114606 : -++++# Output the fail count for debugging
++-a/changes.diff 114607 : -++++echo "Severity Fail Count: $severity_fail_count"
++-a/changes.diff 114608 : -++++
++-a/changes.diff 114609 : -++++# Block commit if there are severity 3 issues
++-a/changes.diff 114610 : -++++if [ "$severity_fail_count" -gt 0 ]; then
++-a/changes.diff 114611 : -++++  echo "Blocking your commit due to vulnerabilities found with severity 3."
++-a/changes.diff 114612 : -++++  exit 1
++-a/changes.diff 114613 : -++++else
++-a/changes.diff 114614 : -++++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
++-a/changes.diff 114615 : -++++  exit 0
++-a/changes.diff 114616 : -++++fi
++-a/changes.diff 114617 : -+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-a/changes.diff 114618 : -+++index 1e62ed4..14cff41 100644
++-a/changes.diff 114619 : -+++--- a/force-app/main/default/classes/Account_Insert.cls
++-a/changes.diff 114620 : -++++++ b/force-app/main/default/classes/Account_Insert.cls
++-a/changes.diff 114621 : -+++@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
++-a/changes.diff 114622 : -++++          System.debug('Hello Hi');
++-a/changes.diff 114623 : -+++diff --git a/scanner-report.json b/scanner-report.json
++-a/changes.diff 114624 : -+++new file mode 100644
++-a/changes.diff 114625 : -+++index 0000000..8a298a1
++-a/changes.diff 114626 : -+++--- /dev/null
++-a/changes.diff 114627 : -++++++ b/scanner-report.json
++-a/changes.diff 114628 : -+++@@ -0,0 +1 @@
++-a/changes.diff 114629 : -++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-a/changes.diff 114630 : -+@@ -108 +167 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-a/changes.diff 114631 : -+-index 1e62ed4..14cff41 100644
++-a/changes.diff 114632 : -++index 14cff41..9a5148a 100644
++-a/changes.diff 114633 : -+@@ -111,9 +170,3 @@ index 1e62ed4..14cff41 100644
++-a/changes.diff 114634 : -+-@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
++-a/changes.diff 114635 : -+-+          System.debug('Hello Hi');
++-a/changes.diff 114636 : -+-diff --git a/scanner-report.json b/scanner-report.json
++-a/changes.diff 114637 : -+-new file mode 100644
++-a/changes.diff 114638 : -+-index 0000000..8a298a1
++-a/changes.diff 114639 : -+---- /dev/null
++-a/changes.diff 114640 : -+-+++ b/scanner-report.json
++-a/changes.diff 114641 : -+-@@ -0,0 +1 @@
++-a/changes.diff 114642 : -+-+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-a/changes.diff 114643 : -++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-a/changes.diff 114644 : -++-          System.debug('Hello Hi');
++-a/changes.diff 114645 : -+++          System.debug('Hello');
++-a/changes.diff 114646 : -@@ -167 +323 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-a/changes.diff 114647 : --index 14cff41..9a5148a 100644
++-a/changes.diff 114648 : -+index 9a5148a..1ec7a54 100644
++-a/changes.diff 114649 : -@@ -171,2 +327,20 @@ index 14cff41..9a5148a 100644
++-a/changes.diff 114650 : ---          System.debug('Hello Hi');
++-a/changes.diff 114651 : --+          System.debug('Hello');
++-a/changes.diff 114652 : -+-          System.debug('Hello');
++-a/changes.diff 114653 : -++          System.debug('Hi');
++-a/changes.diff 114654 : -+diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/filtered-scanner-report-.json
++-a/changes.diff 114655 : -+new file mode 100644
++-a/changes.diff 114656 : -+index 0000000..e69de29
++-a/changes.diff 114657 : -+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-a/changes.diff 114658 : -+new file mode 100644
++-a/changes.diff 114659 : -+index 0000000..fe51488
++-a/changes.diff 114660 : -+--- /dev/null
++-a/changes.diff 114661 : -++++ b/scanner-reports/final-filtered-scanner-report.json
++-a/changes.diff 114662 : -+@@ -0,0 +1 @@
++-a/changes.diff 114663 : -++[]
++-a/changes.diff 114664 : -+diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-report-.json
++-a/changes.diff 114665 : -+new file mode 100644
++-a/changes.diff 114666 : -+index 0000000..e670f52
++-a/changes.diff 114667 : -+--- /dev/null
++-a/changes.diff 114668 : -++++ b/scanner-reports/scanner-report-.json
++-a/changes.diff 114669 : -+@@ -0,0 +1 @@
++-a/changes.diff 114670 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-a/changes.diff 114671 : -+\ No newline at end of file
++-a/changes.diff 114672 : @@ -607 +1194 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-a/changes.diff 114673 : -index 1ec7a54..870d508 100644
++-a/changes.diff 114674 : @@ -611,19 +1198,9 @@ index 1ec7a54..870d508 100644
++-a/changes.diff 114675 : --          System.debug('Hi');
++-a/changes.diff 114676 : -+          System.debug('Hi Hello');
++-a/changes.diff 114677 : -diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/filtered-scanner-report-.json
++-a/changes.diff 114678 : -deleted file mode 100644
++-a/changes.diff 114679 : -index e69de29..0000000
++-a/changes.diff 114680 : -diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-a/changes.diff 114681 : -deleted file mode 100644
++-a/changes.diff 114682 : -index fe51488..0000000
++-a/changes.diff 114683 : ---- a/scanner-reports/final-filtered-scanner-report.json
++-a/changes.diff 114684 : -+++ /dev/null
++-a/changes.diff 114685 : -@@ -1 +0,0 @@
++-a/changes.diff 114686 : --[]
++-a/changes.diff 114687 : -diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-report-.json
++-a/changes.diff 114688 : -deleted file mode 100644
++-a/changes.diff 114689 : -index e670f52..0000000
++-a/changes.diff 114690 : ---- a/scanner-reports/scanner-report-.json
++-a/changes.diff 114691 : -+++ /dev/null
++-a/changes.diff 114692 : -@@ -1 +0,0 @@
++-a/changes.diff 114693 : --[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-a/changes.diff 1194 : index 1ec7a54..870d508 100644
++-a/changes.diff 11982 : -          System.debug('Hi');
++-a/changes.diff 12016 : deleted file mode 100644
++-a/changes.diff 12017 : index cd70445..0000000
++-a/changes.diff 12018 : --- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-a/changes.diff 12019 : @@ -1 +0,0 @@
++-a/changes.diff 12020 : -[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-a/force-app/main/default/classes/Account_Insert.cls 70 :           System.debug('Hi');
+++Line 21 :           System.debug('Hello Hi');
+@@ -18 +1071 @@ diff --git a/changes.diff b/changes.diff
+-index 1f4c0b2..3afa5f1 100644
++index f240d91..ab72173 100644
+@@ -21,124 +1074,4362 @@ index 1f4c0b2..3afa5f1 100644
+-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+--index daf61a1..3603bae 100644
+-+index 1328704..8d1a279 100644
+-@@ -5,3 +4,0 @@ index daf61a1..3603bae 100644
+--@@ -16 +16 @@ mkdir -p scanner-reports
+---git diff --unified=0 --cached > changes.diff
+--+git diff --cached --unified=0 > changes.diff
+-@@ -9,8 +6,15 @@ index daf61a1..3603bae 100644
+---  # Extract only the changed line numbers for the file
+--+  # Extract only the added or modified lines for .cls and .lwc files
+--@@ -32 +32 @@ while IFS= read -r file; do
+---  ' changes.diff)
+--+  ' changes.diff | uniq)
+--@@ -61 +61 @@ while IFS= read -r file; do
+---      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+--+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+-  # Extract only the added or modified lines for .cls and .lwc files
+-++  # Extract the actual changed lines and line numbers for the specific file
+-+@@ -29,4 +29,4 @@ while IFS= read -r file; do
+-+-    $0 ~ file {inside=1}
+-+-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+-+-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+-+-  ' changes.diff | uniq)
+-++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
+-++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
+-++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
+-++  ' changes.diff | sort -n | uniq)
+-+@@ -56,0 +57,3 @@ while IFS= read -r file; do
+-++  # Extract and map the current line number for each changed line
+-++  current_line_number=$(echo "$line_numbers" | head -1)
+-++
+-@@ -18,3 +22,2 @@ diff --git a/changes.diff b/changes.diff
+--new file mode 100644
+--index 0000000..a6452b3
+----- /dev/null
+-+index 1f4c0b2..905f973 100644
+-+--- a/changes.diff
+-@@ -22,961 +25,7053 @@ index 0000000..a6452b3
+--@@ -0,0 +1,1262 @@
+--+diff --git a/.husky/pre-commit b/.husky/pre-commit
+--+index daf61a1..3603bae 100644
+--+--- a/.husky/pre-commit
+--++++ b/.husky/pre-commit
+--+@@ -16 +16 @@ mkdir -p scanner-reports
+--+-git diff --unified=0 --cached > changes.diff
+--++git diff --cached --unified=0 > changes.diff
+--+@@ -25 +25 @@ while IFS= read -r file; do
+--+-  # Extract only the changed line numbers for the file
+--++  # Extract only the added or modified lines for .cls and .lwc files
+--+@@ -32 +32 @@ while IFS= read -r file; do
+--+-  ' changes.diff)
+--++  ' changes.diff | uniq)
+--+@@ -61 +61 @@ while IFS= read -r file; do
+--+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+--++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+--+diff --git a/changes.diff b/changes.diff
+--+new file mode 100644
+--+index 0000000..1831031
+--+--- /dev/null
+--++++ b/changes.diff
+--+@@ -0,0 +1,1158 @@
+--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+--++index daf61a1..d6ae40b 100644
+--++--- a/.husky/pre-commit
+--+++++ b/.husky/pre-commit
+--++@@ -25 +25 @@ while IFS= read -r file; do
+--++-  # Extract only the changed line numbers for the file
+--+++  # Extract only the added or modified lines for .cls and .lwc files
+--++@@ -32 +32 @@ while IFS= read -r file; do
+--++-  ' changes.diff)
+--+++  ' changes.diff | uniq)
+--++@@ -61 +61 @@ while IFS= read -r file; do
+--++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+--+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+--++diff --git a/changes.diff b/changes.diff
+--++new file mode 100644
+--++index 0000000..47b6c1c
+--++--- /dev/null
+--+++++ b/changes.diff
+--++@@ -0,0 +1,1078 @@
+--+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+--+++index daf61a1..d6ae40b 100644
+--+++--- a/.husky/pre-commit
+--++++++ b/.husky/pre-commit
+--+++@@ -25 +25 @@ while IFS= read -r file; do
+--+++-  # Extract only the changed line numbers for the file
+--++++  # Extract only the added or modified lines for .cls and .lwc files
+--+++@@ -32 +32 @@ while IFS= read -r file; do
+--+++-  ' changes.diff)
+--++++  ' changes.diff | uniq)
+--+++@@ -61 +61 @@ while IFS= read -r file; do
+--+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+--++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+--+++diff --git a/changes.diff b/changes.diff
+--+++new file mode 100644
+--+++index 0000000..8cd4f1a
+--+++--- /dev/null
+--++++++ b/changes.diff
+--+++@@ -0,0 +1,977 @@
+--++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+--++++index daf61a1..73bb862 100644
+--++++--- a/.husky/pre-commit
+--+++++++ b/.husky/pre-commit
+--++++@@ -61 +61 @@ while IFS= read -r file; do
+--++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+--+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+--++++diff --git a/changes.diff b/changes.diff
+--++++new file mode 100644
+--++++index 0000000..f9d24dc
+--++++--- /dev/null
+--+++++++ b/changes.diff
+--++++@@ -0,0 +1,876 @@
+--+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+--+++++index 19cfdbc..daf61a1 100644
+--+++++--- a/.husky/pre-commit
+--++++++++ b/.husky/pre-commit
+--+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+--+++++-  # Define the output path for the scanner report in CSV format
+--+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+--++++++  # Extract only the changed line numbers for the file
+--++++++  line_numbers=$(awk -v file="$file" '
+--++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+--++++++    /^diff --git/ {inside=0}
+--++++++    $0 ~ file {inside=1}
++@@ -2,2 +2,3 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-index 1328704..af60e83 100644
++---- a/.husky/pre-commit
+++new file mode 100644
+++index 0000000..27439b6
+++--- /dev/null
++@@ -5,8827 +6,98 @@ index 1328704..af60e83 100644
++-@@ -25 +25 @@ while IFS= read -r file; do
++--  # Extract only the added or modified lines for .cls and .lwc files
++-+  # Extract only the added or modified lines and their line numbers for .cls and .lwc files
++-@@ -29,4 +29,4 @@ while IFS= read -r file; do
++--    $0 ~ file {inside=1}
++--    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
++--    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
++--  ' changes.diff | uniq)
++-+    $0 ~ file {inside=1}  # Start processing when the correct file section starts
++-+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
++-+    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only added or modified lines, excluding unchanged or deleted ones
++-+  ' changes.diff | sort -n | uniq)
++-diff --git a/changes.diff b/changes.diff
++-index 1f4c0b2..3afa5f1 100644
++---- a/changes.diff
++-+++ b/changes.diff
++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++--index daf61a1..3603bae 100644
++-+index 1328704..8d1a279 100644
++-@@ -5,3 +4,0 @@ index daf61a1..3603bae 100644
++--@@ -16 +16 @@ mkdir -p scanner-reports
++---git diff --unified=0 --cached > changes.diff
++--+git diff --cached --unified=0 > changes.diff
++-@@ -9,8 +6,15 @@ index daf61a1..3603bae 100644
++---  # Extract only the changed line numbers for the file
++--+  # Extract only the added or modified lines for .cls and .lwc files
++--@@ -32 +32 @@ while IFS= read -r file; do
++---  ' changes.diff)
++--+  ' changes.diff | uniq)
++--@@ -61 +61 @@ while IFS= read -r file; do
++---      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++--+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+-  # Extract only the added or modified lines for .cls and .lwc files
++-++  # Extract the actual changed lines and line numbers for the specific file
++-+@@ -29,4 +29,4 @@ while IFS= read -r file; do
++-+-    $0 ~ file {inside=1}
++-+-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
++-+-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
++-+-  ' changes.diff | uniq)
++-++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
++-++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
++-++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
++-++  ' changes.diff | sort -n | uniq)
++-+@@ -56,0 +57,3 @@ while IFS= read -r file; do
++-++  # Extract and map the current line number for each changed line
++-++  current_line_number=$(echo "$line_numbers" | head -1)
++-++
++-@@ -18,3 +22,2 @@ diff --git a/changes.diff b/changes.diff
++--new file mode 100644
++--index 0000000..a6452b3
++----- /dev/null
++-+index 1f4c0b2..905f973 100644
++-+--- a/changes.diff
++-@@ -22,961 +25,7053 @@ index 0000000..a6452b3
++--@@ -0,0 +1,1262 @@
++--+diff --git a/.husky/pre-commit b/.husky/pre-commit
++--+index daf61a1..3603bae 100644
++--+--- a/.husky/pre-commit
++--++++ b/.husky/pre-commit
++--+@@ -16 +16 @@ mkdir -p scanner-reports
++--+-git diff --unified=0 --cached > changes.diff
++--++git diff --cached --unified=0 > changes.diff
++--+@@ -25 +25 @@ while IFS= read -r file; do
++--+-  # Extract only the changed line numbers for the file
++--++  # Extract only the added or modified lines for .cls and .lwc files
++--+@@ -32 +32 @@ while IFS= read -r file; do
++--+-  ' changes.diff)
++--++  ' changes.diff | uniq)
++--+@@ -61 +61 @@ while IFS= read -r file; do
++--+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++--++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++--+diff --git a/changes.diff b/changes.diff
++--+new file mode 100644
++--+index 0000000..1831031
++--+--- /dev/null
++--++++ b/changes.diff
++--+@@ -0,0 +1,1158 @@
++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
++--++index daf61a1..d6ae40b 100644
++--++--- a/.husky/pre-commit
++--+++++ b/.husky/pre-commit
++--++@@ -25 +25 @@ while IFS= read -r file; do
++--++-  # Extract only the changed line numbers for the file
++--+++  # Extract only the added or modified lines for .cls and .lwc files
++--++@@ -32 +32 @@ while IFS= read -r file; do
++--++-  ' changes.diff)
++--+++  ' changes.diff | uniq)
++--++@@ -61 +61 @@ while IFS= read -r file; do
++--++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++--+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++--++diff --git a/changes.diff b/changes.diff
++--++new file mode 100644
++--++index 0000000..47b6c1c
++--++--- /dev/null
++--+++++ b/changes.diff
++--++@@ -0,0 +1,1078 @@
++--+++diff --git a/.husky/pre-commit b/.husky/pre-commit
++--+++index daf61a1..d6ae40b 100644
++--+++--- a/.husky/pre-commit
++--++++++ b/.husky/pre-commit
++--+++@@ -25 +25 @@ while IFS= read -r file; do
++--+++-  # Extract only the changed line numbers for the file
++--++++  # Extract only the added or modified lines for .cls and .lwc files
++--+++@@ -32 +32 @@ while IFS= read -r file; do
++--+++-  ' changes.diff)
++--++++  ' changes.diff | uniq)
++--+++@@ -61 +61 @@ while IFS= read -r file; do
++--+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++--++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++--+++diff --git a/changes.diff b/changes.diff
++--+++new file mode 100644
++--+++index 0000000..8cd4f1a
++--+++--- /dev/null
++--++++++ b/changes.diff
++--+++@@ -0,0 +1,977 @@
++--++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++--++++index daf61a1..73bb862 100644
++--++++--- a/.husky/pre-commit
++--+++++++ b/.husky/pre-commit
++--++++@@ -61 +61 @@ while IFS= read -r file; do
++--++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++--+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++--++++diff --git a/changes.diff b/changes.diff
++--++++new file mode 100644
++--++++index 0000000..f9d24dc
++--++++--- /dev/null
++--+++++++ b/changes.diff
++--++++@@ -0,0 +1,876 @@
++--+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++--+++++index 19cfdbc..daf61a1 100644
++--+++++--- a/.husky/pre-commit
++--++++++++ b/.husky/pre-commit
++--+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
++--+++++-  # Define the output path for the scanner report in CSV format
++--+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++--++++++  # Extract only the changed line numbers for the file
++--++++++  line_numbers=$(awk -v file="$file" '
++--++++++    BEGIN {inside=0; start_line=0; line_offset=0}
++--++++++    /^diff --git/ {inside=0}
++--++++++    $0 ~ file {inside=1}
++--++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
++--++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
++--++++++  ' changes.diff)
++--++++++
++--++++++  # If no changed lines are found for this file, skip it
++--++++++  if [ -z "$line_numbers" ]; then
++--++++++    echo "No changed lines found in $file"
++--++++++    continue
++--++++++  fi
++--++++++
++--++++++  # Convert the line numbers to a JSON array format for jq filtering
++--++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
++--++++++
++--++++++  echo "Changed lines for $file: $line_numbers_array"
++--++++++
++--++++++  # Define the output path for the scanner report in JSON format
++--++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
++--+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
++--+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
++--+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++--++++++  # Run the SFDX scanner on the file and generate the report in JSON format
++--++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++--+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
++--+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
++--+++++-  echo "Filtering scanner report for $file for Line '70'..."
++--+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
++--++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
++--++++++  jq --argjson lines "$line_numbers_array" '
++--++++++    [.[] | 
++--++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++--++++++      select(.violations | length > 0)]
++--++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
++--+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++--+++++-    echo "No issues found for line '70' in $file"
++--++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++--++++++    echo "No issues found for changed lines in $file"
++--+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
++--+++++-  echo "Filtered scanner report for $file (Line '70'):"
++--+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--++++++  echo "Filtered scanner report for $file (Changed lines):"
++--++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++@@ -53 +77 @@ done <<< "$changed_files"
++--+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++--++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++--+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
++--+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
++--++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
++--+++++@@ -60,2 +84,2 @@ fi
++--+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
++--+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++--++++++final_report="scanner-reports/final-filtered-scanner-report.json"
++--++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
++--+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++--+++++-echo "Final filtered scanner report (Line '70'):"
++--++++++echo "Final filtered scanner report (Changed lines):"
++--+++++@@ -67 +91 @@ cat "$final_report"
++--+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
++--++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
++--+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
++--+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
++--++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
++--+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
++--+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
++--++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
++--+++++@@ -77 +101 @@ else
++--+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
++--++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
++--+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++--+++++deleted file mode 100644
++--+++++index 9d692ac..0000000
++--+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++--++++++++ /dev/null
++--+++++@@ -1,24 +0,0 @@
++--+++++-0
++--+++++-1
++--+++++-2
++--+++++-3
++--+++++-4
++--+++++-5
++--+++++-60
++--+++++-642
++--+++++-643
++--+++++-644
++--+++++-645
++--+++++-646
++--+++++-647
++--+++++-648
++--+++++-649
++--+++++-650
++--+++++-651
++--+++++-652
++--+++++-653
++--+++++-654
++--+++++-655
++--+++++-656
++--+++++-657
++--+++++-70
++--+++++diff --git a/changes.diff b/changes.diff
++--+++++deleted file mode 100644
++--+++++index 61d162d..0000000
++--+++++--- a/changes.diff
++--++++++++ /dev/null
++--+++++@@ -1,647 +0,0 @@
++--+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
++--+++++-index 5b262e4..8c05f52 100644
++--+++++---- a/.husky/pre-commit
++--+++++-+++ b/.husky/pre-commit
++--+++++-@@ -113 +113 @@ cat "$final_report"
++--+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++--+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
++--+++++-diff --git a/changes.diff b/changes.diff
++--+++++-index 9a218e6..4fe1995 100644
++--+++++---- a/changes.diff
++--+++++-+++ b/changes.diff
++--+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++--+++++--index aa6762f..586962b 100644
++--+++++-+index 586962b..5b262e4 100644
++--+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
++--+++++--@@ -41 +41 @@ while IFS= read -r file; do
++--+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++--+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
++--+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
++--+++++---  # Extract line numbers as a comma-separated string for filtering later
++--+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++--+++++--+  # Extract line numbers as an array for filtering later
++--+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++--+++++--@@ -66 +66 @@ while IFS= read -r file; do
++--+++++---  if [ -z "$line_numbers" ]; then
++--+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
++--+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
++--+++++--+  # Convert the array of line numbers into a format that can be used by awk
++--+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++--+++++--+  lines_for_filter="${lines_for_filter:1}"
++--+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
++--+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
++--+++++-+-  awk -v file="$file" '
++--+++++-++  # Extract only the changed line numbers for the file
++--+++++-++  line_numbers=$(awk -v file="$file" '
++--+++++-+@@ -42 +42 @@ while IFS= read -r file; do
++--+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
++--+++++-++  ' changes.diff)
++--+++++-+@@ -45 +45 @@ while IFS= read -r file; do
++--+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
++--+++++-++  if [ -z "$line_numbers" ]; then
++--+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
++--+++++-+-  # Extract line numbers as an array for filtering later
++--+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++--+++++-++  # Convert the line numbers to a comma-separated string for matching
++--+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
++--+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
++--+++++--@@ -73 +77 @@ while IFS= read -r file; do
++--+++++---  awk -v lines="$line_numbers" '
++--+++++--+  awk -v lines="$lines_for_filter" '
++--+++++--@@ -81 +85 @@ while IFS= read -r file; do
++--+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++--+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++--+++++--@@ -111 +115 @@ cat "$final_report"
++--+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++--+++++-++  echo "Changed lines for $file: $line_numbers_string"
++--+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
++--+++++-+-  # Ensure that line_numbers is not empty
++--+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
++--+++++-++  # Ensure that line_numbers_string is not empty
++--+++++-++  if [ -z "$line_numbers_string" ]; then
++--+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
++--+++++-+-  # Convert the array of line numbers into a format that can be used by awk
++--+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++--+++++-+-  lines_for_filter="${lines_for_filter:1}"
++--+++++-+-
++--+++++-+@@ -77 +75 @@ while IFS= read -r file; do
++--+++++-+-  awk -v lines="$lines_for_filter" '
++--+++++-++  awk -v lines="$line_numbers_string" '
++--+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++--+++++--index 0e43eee..a206584 100644
++--+++++-+index a206584..9d692ac 100644
++--+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
++--+++++--@@ -1 +1,6 @@
++--+++++---70 :           System.debug('Hi Hello');
++--+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--+++++--+1 : index 1ec7a54..870d508 100644
++--+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
++--+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++--+++++--+4 : -          System.debug('Hi');
++--+++++--+70 :           System.debug('Hi');
++--+++++-+@@ -1,6 +1,24 @@
++--+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--+++++-+-1 : index 1ec7a54..870d508 100644
++--+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
++--+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++--+++++-+-4 : -          System.debug('Hi');
++--+++++-+-70 :           System.debug('Hi');
++--+++++-++0
++--+++++-++1
++--+++++-++2
++--+++++-++3
++--+++++-++4
++--+++++-++5
++--+++++-++60
++--+++++-++642
++--+++++-++643
++--+++++-++644
++--+++++-++645
++--+++++-++646
++--+++++-++647
++--+++++-++648
++--+++++-++649
++--+++++-++650
++--+++++-++651
++--+++++-++652
++--+++++-++653
++--+++++-++654
++--+++++-++655
++--+++++-++656
++--+++++-++657
++--+++++-++70
++--+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
++--+++++--index 760971b..3dfa538 100644
++--+++++-+index 3dfa538..9a218e6 100644
++--+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
++--+++++---index 255a037..525d43a 100644
++--+++++--+index 525d43a..aa6762f 100644
++--+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++--+++++---@@ -50 +50 @@ while IFS= read -r file; do
++--+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
++--+++++---+  # Extract line numbers as a comma-separated string for filtering later
++--+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
++--+++++----  # Define the output path for the scanner report
++--+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
++--+++++---+  # Define the output path for the scanner report in CSV format
++--+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++--+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
++--+++++----  # Run the SFDX scanner on the file and generate the report
++--+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++--+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
++--+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++--+++++---@@ -71 +71 @@ while IFS= read -r file; do
++--+++++----  # Filter the scanner report based on the changed line numbers
++--+++++---+  # Filter the CSV scanner report based on the changed line numbers
++--+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
++--+++++----  jq --arg lines "$line_numbers" '
++--+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++--+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++---+  awk -v lines="$line_numbers" '
++--+++++---+  BEGIN {
++--+++++---+    FS=OFS=",";
++--+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
++--+++++---+    for (i in arr) {
++--+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++--+++++---+    }
++--+++++---+  }
++--+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++--+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--+++++---@@ -78 +85 @@ while IFS= read -r file; do
++--+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++--+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++--+++++---@@ -84 +91 @@ while IFS= read -r file; do
++--+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--+++++---@@ -89 +96 @@ done <<< "$changed_files"
++--+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++--+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++--+++++---@@ -95,2 +102,4 @@ fi
++--+++++----# Combine all filtered reports into one final report
++--+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++--+++++---+# Combine all filtered reports into one final report (optional)
++--+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++--+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
++--+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++--+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++--+++++----# Parse the final filtered scanner report and check for severity 3 issues
++--+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++--+++++---+echo "Final filtered scanner report:"
++--+++++---+cat "$final_report"
++--+++++---+
++--+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++--+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++--+@@ -75 +75 @@ while IFS= read -r file; do
++--+++++--+-    FS=OFS=",";
++--+++++--++    FS=OFS=",";  # Define CSV format
++--+++++--+@@ -81 +81 @@ while IFS= read -r file; do
++--+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++--+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++--+++++--+@@ -111 +111 @@ cat "$final_report"
++--+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++--+++++--+new file mode 100644
++--+++++--+index 0000000..0e43eee
++--+++++--+--- /dev/null
++--+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++--+++++--+@@ -0,0 +1 @@
++--+++++--++70 :           System.debug('Hi Hello');
++--+++++--+diff --git a/changes.diff b/changes.diff
++--+++++--+new file mode 100644
++--+++++--+index 0000000..760971b
++--+++++--+--- /dev/null
++--+++++--++++ b/changes.diff
++--+++++--+@@ -0,0 +1,65 @@
++--+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
++--+++++--++index 255a037..525d43a 100644
++--+++++--++--- a/.husky/pre-commit
++--+++++--+++++ b/.husky/pre-commit
++--+++++--++@@ -50 +50 @@ while IFS= read -r file; do
++--+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
++--+++++--+++  # Extract line numbers as a comma-separated string for filtering later
++--+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++--+++++--++-  # Define the output path for the scanner report
++--+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++--+++++--+++  # Define the output path for the scanner report in CSV format
++--+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++--+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++--+++++--++-  # Run the SFDX scanner on the file and generate the report
++--+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++--+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
++--+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++--+++++--++@@ -71 +71 @@ while IFS= read -r file; do
++--+++++--++-  # Filter the scanner report based on the changed line numbers
++--+++++--+++  # Filter the CSV scanner report based on the changed line numbers
++--+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++--+++++--++-  jq --arg lines "$line_numbers" '
++--+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++--+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++--+++  awk -v lines="$line_numbers" '
++--+++++--+++  BEGIN {
++--+++++--+++    FS=OFS=",";
++--+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
++--+++++--+++    for (i in arr) {
++--+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++--+++++--+++    }
++--+++++--+++  }
++--+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++--+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--+++++--++@@ -78 +85 @@ while IFS= read -r file; do
++--+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++--+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++--+++++--++@@ -84 +91 @@ while IFS= read -r file; do
++--+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--+++++--++@@ -89 +96 @@ done <<< "$changed_files"
++--+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++--+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++--+++++--++@@ -95,2 +102,4 @@ fi
++--+++++--++-# Combine all filtered reports into one final report
++--+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++--+++++--+++# Combine all filtered reports into one final report (optional)
++--+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++--+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
++--+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++--+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++--+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
++--+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++--+++++--+++echo "Final filtered scanner report:"
++--+++++--+++cat "$final_report"
++--+++++--+++
++--+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++--+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--+++++--++index 1ec7a54..870d508 100644
++--+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
++--+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
++--+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++--+++++--++-          System.debug('Hi');
++--+++++--+++          System.debug('Hi Hello');
++--+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++--+++++---index 1ec7a54..870d508 100644
++--+++++--+index 870d508..1ec7a54 100644
++--+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++--+++++----          System.debug('Hi');
++--+++++---+          System.debug('Hi Hello');
++--+++++--+-          System.debug('Hi Hello');
++--+++++--++          System.debug('Hi');
++--+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++--+++++--+new file mode 100644
++--+++++--+index 0000000..5a3a1ac
++--+++++--+--- /dev/null
++--+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++--+++++--+@@ -0,0 +1 @@
++--+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++--+++++--+new file mode 100644
++--+++++--+index 0000000..5a3a1ac
++--+++++--+--- /dev/null
++--+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
++--+++++--+@@ -0,0 +1 @@
++--+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++--+++++--+new file mode 100644
++--+++++--+index 0000000..e1ef0f0
++--+++++--+--- /dev/null
++--+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++--+++++--+@@ -0,0 +1,5 @@
++--+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++--+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++--+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++--+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++--+++++-+-index 525d43a..aa6762f 100644
++--+++++-++index aa6762f..586962b 100644
++--+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
++--+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
++--+++++-+--    FS=OFS=",";
++--+++++-+-+    FS=OFS=",";  # Define CSV format
++--+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
++--+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++--+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++--+++++-+-@@ -111 +111 @@ cat "$final_report"
++--+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++-++@@ -41 +41 @@ while IFS= read -r file; do
++--+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++--+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
++--+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
++--+++++-++-  # Extract line numbers as a comma-separated string for filtering later
++--+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++--+++++-+++  # Extract line numbers as an array for filtering later
++--+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++--+++++-++@@ -66 +66 @@ while IFS= read -r file; do
++--+++++-++-  if [ -z "$line_numbers" ]; then
++--+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
++--+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
++--+++++-+++  # Convert the array of line numbers into a format that can be used by awk
++--+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++--+++++-+++  lines_for_filter="${lines_for_filter:1}"
++--+++++-+++
++--+++++-++@@ -73 +77 @@ while IFS= read -r file; do
++--+++++-++-  awk -v lines="$line_numbers" '
++--+++++-+++  awk -v lines="$lines_for_filter" '
++--+++++-++@@ -81 +85 @@ while IFS= read -r file; do
++--+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++--+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++--+++++-++@@ -111 +115 @@ cat "$final_report"
++--+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++--+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++--+++++-+-new file mode 100644
++--+++++-+-index 0000000..0e43eee
++--+++++-+---- /dev/null
++--+++++-++index 0e43eee..a206584 100644
++--+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++--+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
++--+++++-+-@@ -0,0 +1 @@
++--+++++-+-+70 :           System.debug('Hi Hello');
++--+++++-++@@ -1 +1,6 @@
++--+++++-++-70 :           System.debug('Hi Hello');
++--+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--+++++-+++1 : index 1ec7a54..870d508 100644
++--+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
++--+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++--+++++-+++4 : -          System.debug('Hi');
++--+++++-+++70 :           System.debug('Hi');
++--+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
++--+++++-+-new file mode 100644
++--+++++-+-index 0000000..760971b
++--+++++-+---- /dev/null
++--+++++-++index 760971b..3dfa538 100644
++--+++++-++--- a/changes.diff
++--+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
++--+++++-+-@@ -0,0 +1,65 @@
++--+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
++--+++++-+-+index 255a037..525d43a 100644
++--+++++-+-+--- a/.husky/pre-commit
++--+++++-+-++++ b/.husky/pre-commit
++--+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
++--+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
++--+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
++--+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
++--+++++-+-+-  # Define the output path for the scanner report
++--+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++--+++++-+-++  # Define the output path for the scanner report in CSV format
++--+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++--+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
++--+++++-+-+-  # Run the SFDX scanner on the file and generate the report
++--+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++--+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
++--+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++--+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
++--+++++-+-+-  # Filter the scanner report based on the changed line numbers
++--+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
++--+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
++--+++++-+-+-  jq --arg lines "$line_numbers" '
++--+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++--+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++-+-++  awk -v lines="$line_numbers" '
++--+++++-+-++  BEGIN {
++--+++++-+-++    FS=OFS=",";
++--+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
++--+++++-+-++    for (i in arr) {
++--+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++--+++++-+-++    }
++--+++++-+-++  }
++--+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++--+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
++--+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++--+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++--+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
++--+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
++--+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++--+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++--+++++-+-+@@ -95,2 +102,4 @@ fi
++--+++++-+-+-# Combine all filtered reports into one final report
++--+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++--+++++-+-++# Combine all filtered reports into one final report (optional)
++--+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++--+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
++--+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++--+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++--+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
++--+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++--+++++-+-++echo "Final filtered scanner report:"
++--+++++-+-++cat "$final_report"
++--+++++-+-++
++--+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++--+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--+++++-+-+index 1ec7a54..870d508 100644
++--+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
++--+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
++--+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++--+++++-+-+-          System.debug('Hi');
++--+++++-+-++          System.debug('Hi Hello');
++--+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++--+++++-++-index 255a037..525d43a 100644
++--+++++-+++index 525d43a..aa6762f 100644
++--+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++--+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
++--+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
++--+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
++--+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
++--+++++-++--  # Define the output path for the scanner report
++--+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
++--+++++-++-+  # Define the output path for the scanner report in CSV format
++--+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++--+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
++--+++++-++--  # Run the SFDX scanner on the file and generate the report
++--+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++--+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
++--+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++--+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
++--+++++-++--  # Filter the scanner report based on the changed line numbers
++--+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
++--+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
++--+++++-++--  jq --arg lines "$line_numbers" '
++--+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++--+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++-++-+  awk -v lines="$line_numbers" '
++--+++++-++-+  BEGIN {
++--+++++-++-+    FS=OFS=",";
++--+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
++--+++++-++-+    for (i in arr) {
++--+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++--+++++-++-+    }
++--+++++-++-+  }
++--+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++--+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
++--+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++--+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++--+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
++--+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
++--+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++--+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++--+++++-++-@@ -95,2 +102,4 @@ fi
++--+++++-++--# Combine all filtered reports into one final report
++--+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++--+++++-++-+# Combine all filtered reports into one final report (optional)
++--+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++--+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
++--+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++--+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++--+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
++--+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++--+++++-++-+echo "Final filtered scanner report:"
++--+++++-++-+cat "$final_report"
++--+++++-++-+
++--+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++--+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
++--+++++-+++-    FS=OFS=",";
++--+++++-++++    FS=OFS=",";  # Define CSV format
++--+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
++--+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++--+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++--+++++-+++@@ -111 +111 @@ cat "$final_report"
++--+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++--+++++-+++new file mode 100644
++--+++++-+++index 0000000..0e43eee
++--+++++-+++--- /dev/null
++--+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++--+++++-+++@@ -0,0 +1 @@
++--+++++-++++70 :           System.debug('Hi Hello');
++--+++++-+++diff --git a/changes.diff b/changes.diff
++--+++++-+++new file mode 100644
++--+++++-+++index 0000000..760971b
++--+++++-+++--- /dev/null
++--+++++-++++++ b/changes.diff
++--+++++-+++@@ -0,0 +1,65 @@
++--+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++--+++++-++++index 255a037..525d43a 100644
++--+++++-++++--- a/.husky/pre-commit
++--+++++-+++++++ b/.husky/pre-commit
++--+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
++--+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
++--+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
++--+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++--+++++-++++-  # Define the output path for the scanner report
++--+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++--+++++-+++++  # Define the output path for the scanner report in CSV format
++--+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++--+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++--+++++-++++-  # Run the SFDX scanner on the file and generate the report
++--+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++--+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
++--+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++--+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
++--+++++-++++-  # Filter the scanner report based on the changed line numbers
++--+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
++--+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++--+++++-++++-  jq --arg lines "$line_numbers" '
++--+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++--+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++-+++++  awk -v lines="$line_numbers" '
++--+++++-+++++  BEGIN {
++--+++++-+++++    FS=OFS=",";
++--+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
++--+++++-+++++    for (i in arr) {
++--+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++--+++++-+++++    }
++--+++++-+++++  }
++--+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++--+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
++--+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++--+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++--+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
++--+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++--+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++--+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
++--+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++--+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++--+++++-++++@@ -95,2 +102,4 @@ fi
++--+++++-++++-# Combine all filtered reports into one final report
++--+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++--+++++-+++++# Combine all filtered reports into one final report (optional)
++--+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++--+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
++--+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++--+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++--+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
++--+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++--+++++-+++++echo "Final filtered scanner report:"
++--+++++-+++++cat "$final_report"
++--+++++-+++++
++--+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++--+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++--+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--+++++-++++index 1ec7a54..870d508 100644
++--+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
++--+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
++--+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++--+++++-++++-          System.debug('Hi');
++--+++++-+++++          System.debug('Hi Hello');
++--+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++--+++++-++-index 1ec7a54..870d508 100644
++--+++++-+++index 870d508..1ec7a54 100644
++--+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++--+++++-++--          System.debug('Hi');
++--+++++-++-+          System.debug('Hi Hello');
++--+++++-+++-          System.debug('Hi Hello');
++--+++++-++++          System.debug('Hi');
++--+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++--+++++-+++new file mode 100644
++--+++++-+++index 0000000..5a3a1ac
++--+++++-+++--- /dev/null
++--+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++--+++++-+++@@ -0,0 +1 @@
++--+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++--+++++-+++new file mode 100644
++--+++++-+++index 0000000..5a3a1ac
++--+++++-+++--- /dev/null
++--+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
++--+++++-+++@@ -0,0 +1 @@
++--+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++--+++++-+++new file mode 100644
++--+++++-+++index 0000000..e1ef0f0
++--+++++-+++--- /dev/null
++--+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++--+++++-+++@@ -0,0 +1,5 @@
++--+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++--+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++--+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++--+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++--+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++--+++++-+-index 870d508..1ec7a54 100644
++--+++++-++index 1ec7a54..870d508 100644
++--+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
++--+++++-+--          System.debug('Hi Hello');
++--+++++-+-+          System.debug('Hi');
++--+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++--+++++-+-new file mode 100644
++--+++++-+-index 0000000..5a3a1ac
++--+++++-+---- /dev/null
++--+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++--+++++-+-@@ -0,0 +1 @@
++--+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++--+++++-+-new file mode 100644
++--+++++-+-index 0000000..5a3a1ac
++--+++++-+---- /dev/null
++--+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
++--+++++-+-@@ -0,0 +1 @@
++--+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++--+++++-+-new file mode 100644
++--+++++-+-index 0000000..e1ef0f0
++--+++++-+---- /dev/null
++--+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++--+++++-+-@@ -0,0 +1,5 @@
++--+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++--+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++--+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++--+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++--+++++-++-          System.debug('Hi');
++--+++++-+++          System.debug('Hi Hello');
++--+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++--+++++--index 1ec7a54..870d508 100644
++--+++++-+index 870d508..5eafcac 100644
++--+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
++--+++++---          System.debug('Hi');
++--+++++--+          System.debug('Hi Hello');
++--+++++-+-          System.debug('Hi Hello');
++--+++++-++          System.debug('Happy');
++--+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--+++++-index 5eafcac..1ec7a54 100644
++--+++++---- a/force-app/main/default/classes/Account_Insert.cls
++--+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
++--+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
++--+++++--          System.debug('Happy');
++--+++++-+          System.debug('Hi');
++--+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--+++++index 73696e2..9e21e88 100644
++--+++++--- a/force-app/main/default/classes/Account_Insert.cls
++--++++++++ b/force-app/main/default/classes/Account_Insert.cls
++--+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++--+++++-          System.debug('Hello and Hi');
++--++++++          System.debug('Hi AND');
++--+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++--+++++deleted file mode 100644
++--+++++index 5a3a1ac..0000000
++--+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++--++++++++ /dev/null
++--+++++@@ -1 +0,0 @@
++--+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++--+++++new file mode 100644
++--+++++index 0000000..ebc3aa5
++--+++++--- /dev/null
++--++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++--+++++@@ -0,0 +1,30 @@
++--++++++[
++--++++++  {
++--++++++    "engine": "pmd",
++--++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++--++++++    "violations": [
++--++++++      {
++--++++++        "line": 70,
++--++++++        "column": 11,
++--++++++        "endLine": 70,
++--++++++        "endColumn": 29,
++--++++++        "severity": 3,
++--++++++        "ruleName": "AvoidDebugStatements",
++--++++++        "category": "Performance",
++--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++--++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++--++++++      },
++--++++++      {
++--++++++        "line": 70,
++--++++++        "column": 11,
++--++++++        "endLine": 70,
++--++++++        "endColumn": 29,
++--++++++        "severity": 3,
++--++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++--++++++        "category": "Best Practices",
++--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++--++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++--++++++      }
++--++++++    ]
++--++++++  }
++--++++++]
++--+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++--+++++deleted file mode 100644
++--+++++index 5a3a1ac..0000000
++--+++++--- a/scanner-reports/final-filtered-scanner-report.csv
++--++++++++ /dev/null
++--+++++@@ -1 +0,0 @@
++--+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++--+++++new file mode 100644
++--+++++index 0000000..ebc3aa5
++--+++++--- /dev/null
++--++++++++ b/scanner-reports/final-filtered-scanner-report.json
++--+++++@@ -0,0 +1,30 @@
++--++++++[
++--++++++  {
++--++++++    "engine": "pmd",
++--++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++--++++++    "violations": [
++--++++++      {
++--++++++        "line": 70,
++--++++++        "column": 11,
++--++++++        "endLine": 70,
++--++++++        "endColumn": 29,
++--++++++        "severity": 3,
++--++++++        "ruleName": "AvoidDebugStatements",
++--++++++        "category": "Performance",
++--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++--++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++--++++++      },
++--++++++      {
++--++++++        "line": 70,
++--++++++        "column": 11,
++--++++++        "endLine": 70,
++--++++++        "endColumn": 29,
++--++++++        "severity": 3,
++--++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++--++++++        "category": "Best Practices",
++--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++--++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++--++++++      }
++--++++++    ]
++--++++++  }
++--++++++]
++--+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++--+++++deleted file mode 100644
++--+++++index e1ef0f0..0000000
++--+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
++--++++++++ /dev/null
++--+++++@@ -1,5 +0,0 @@
++--+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++--+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++--+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++--+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++--+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++--+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++--+++++new file mode 100644
++--+++++index 0000000..c973918
++--+++++--- /dev/null
++--++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++--+++++@@ -0,0 +1 @@
++--++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++--+++++\ No newline at end of file
++--++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--++++index 9e21e88..800635e 100644
++--++++--- a/force-app/main/default/classes/Account_Insert.cls
++--+++++++ b/force-app/main/default/classes/Account_Insert.cls
++--++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++--++++-          System.debug('Hi AND');
++--+++++          System.debug('Hi AND Hello');
++--++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++--++++index ebc3aa5..fe51488 100644
++--++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++--+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-index daf61a1..3603bae 100644
++-++index 1328704..8004c80 100644
++-+@@ -5,12 +5,9 @@ index daf61a1..3603bae 100644
++-+-@@ -16 +16 @@ mkdir -p scanner-reports
++-+--git diff --unified=0 --cached > changes.diff
++-+-+git diff --cached --unified=0 > changes.diff
++-+-@@ -25 +25 @@ while IFS= read -r file; do
++-+--  # Extract only the changed line numbers for the file
++-+-+  # Extract only the added or modified lines for .cls and .lwc files
++-+-@@ -32 +32 @@ while IFS= read -r file; do
++-+--  ' changes.diff)
++-+-+  ' changes.diff | uniq)
++-+-@@ -61 +61 @@ while IFS= read -r file; do
++-+--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-++@@ -29,4 +29,4 @@ while IFS= read -r file; do
++-++-    $0 ~ file {inside=1}
++-++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
++-++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
++-++-  ' changes.diff | uniq)
++-+++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
++-+++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
++-+++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
++-+++  ' changes.diff | sort -n | uniq)
++-+@@ -18,3 +15,2 @@ diff --git a/changes.diff b/changes.diff
++-+-new file mode 100644
++-+-index 0000000..a6452b3
++-+---- /dev/null
++-++index 1f4c0b2..eb6e437 100644
++-++--- a/changes.diff
++-+@@ -22,968 +18,5667 @@ index 0000000..a6452b3
++-+-@@ -0,0 +1,1262 @@
++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-+index daf61a1..3603bae 100644
++-+-+--- a/.husky/pre-commit
++-+-++++ b/.husky/pre-commit
++-+-+@@ -16 +16 @@ mkdir -p scanner-reports
++-+-+-git diff --unified=0 --cached > changes.diff
++-+-++git diff --cached --unified=0 > changes.diff
++-+-+@@ -25 +25 @@ while IFS= read -r file; do
++-+-+-  # Extract only the changed line numbers for the file
++-+-++  # Extract only the added or modified lines for .cls and .lwc files
++-+-+@@ -32 +32 @@ while IFS= read -r file; do
++-+-+-  ' changes.diff)
++-+-++  ' changes.diff | uniq)
++-+-+@@ -61 +61 @@ while IFS= read -r file; do
++-+-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+-+diff --git a/changes.diff b/changes.diff
++-+-+new file mode 100644
++-+-+index 0000000..1831031
++-+-+--- /dev/null
++-+-++++ b/changes.diff
++-+-+@@ -0,0 +1,1158 @@
++-+-++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-++index daf61a1..d6ae40b 100644
++-+-++--- a/.husky/pre-commit
++-+-+++++ b/.husky/pre-commit
++-+-++@@ -25 +25 @@ while IFS= read -r file; do
++-+-++-  # Extract only the changed line numbers for the file
++-+-+++  # Extract only the added or modified lines for .cls and .lwc files
++-+-++@@ -32 +32 @@ while IFS= read -r file; do
++-+-++-  ' changes.diff)
++-+-+++  ' changes.diff | uniq)
++-+-++@@ -61 +61 @@ while IFS= read -r file; do
++-+-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+-++diff --git a/changes.diff b/changes.diff
++-+-++new file mode 100644
++-+-++index 0000000..47b6c1c
++-+-++--- /dev/null
++-+-+++++ b/changes.diff
++-+-++@@ -0,0 +1,1078 @@
++-+-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-+++index daf61a1..d6ae40b 100644
++-+-+++--- a/.husky/pre-commit
++-+-++++++ b/.husky/pre-commit
++-+-+++@@ -25 +25 @@ while IFS= read -r file; do
++-+-+++-  # Extract only the changed line numbers for the file
++-+-++++  # Extract only the added or modified lines for .cls and .lwc files
++-+-+++@@ -32 +32 @@ while IFS= read -r file; do
++-+-+++-  ' changes.diff)
++-+-++++  ' changes.diff | uniq)
++-+-+++@@ -61 +61 @@ while IFS= read -r file; do
++-+-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+-+++diff --git a/changes.diff b/changes.diff
++-+-+++new file mode 100644
++-+-+++index 0000000..8cd4f1a
++-+-+++--- /dev/null
++-+-++++++ b/changes.diff
++-+-+++@@ -0,0 +1,977 @@
++-+-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-++++index daf61a1..73bb862 100644
++-+-++++--- a/.husky/pre-commit
++-+-+++++++ b/.husky/pre-commit
++-+-++++@@ -61 +61 @@ while IFS= read -r file; do
++-+-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+-++++diff --git a/changes.diff b/changes.diff
++-+-++++new file mode 100644
++-+-++++index 0000000..f9d24dc
++-+-++++--- /dev/null
++-+-+++++++ b/changes.diff
++-+-++++@@ -0,0 +1,876 @@
++-+-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-+++++index 19cfdbc..daf61a1 100644
++-+-+++++--- a/.husky/pre-commit
++-+-++++++++ b/.husky/pre-commit
++-+-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
++-+-+++++-  # Define the output path for the scanner report in CSV format
++-+-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+-++++++  # Extract only the changed line numbers for the file
++-+-++++++  line_numbers=$(awk -v file="$file" '
++-+-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
++-+-++++++    /^diff --git/ {inside=0}
++-+-++++++    $0 ~ file {inside=1}
++-+-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
++-+-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-+-++++++  ' changes.diff)
++-+-++++++
++-+-++++++  # If no changed lines are found for this file, skip it
++-+-++++++  if [ -z "$line_numbers" ]; then
++-+-++++++    echo "No changed lines found in $file"
++-+-++++++    continue
++-+-++++++  fi
++-+-++++++
++-+-++++++  # Convert the line numbers to a JSON array format for jq filtering
++-+-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
++-+-++++++
++-+-++++++  echo "Changed lines for $file: $line_numbers_array"
++-+-++++++
++-+-++++++  # Define the output path for the scanner report in JSON format
++-+-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
++-+-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
++-+-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
++-+-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
++-+-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
++-+-+++++-  echo "Filtering scanner report for $file for Line '70'..."
++-+-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
++-+-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
++-+-++++++  jq --argjson lines "$line_numbers_array" '
++-+-++++++    [.[] | 
++-+-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+-++++++      select(.violations | length > 0)]
++-+-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
++-+-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+-+++++-    echo "No issues found for line '70' in $file"
++-+-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+-++++++    echo "No issues found for changed lines in $file"
++-+-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
++-+-+++++-  echo "Filtered scanner report for $file (Line '70'):"
++-+-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-++++++  echo "Filtered scanner report for $file (Changed lines):"
++-+-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++@@ -53 +77 @@ done <<< "$changed_files"
++-+-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
++-+-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
++-+-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
++-+-+++++@@ -60,2 +84,2 @@ fi
++-+-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
++-+-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
++-+-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+-+++++-echo "Final filtered scanner report (Line '70'):"
++-+-++++++echo "Final filtered scanner report (Changed lines):"
++-+-+++++@@ -67 +91 @@ cat "$final_report"
++-+-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
++-+-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
++-+-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
++-+-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
++-+-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
++-+-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
++-+-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
++-+-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
++-+-+++++@@ -77 +101 @@ else
++-+-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
++-+-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
++-+-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+-+++++deleted file mode 100644
++-+-+++++index 9d692ac..0000000
++-+-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+-++++++++ /dev/null
++-+-+++++@@ -1,24 +0,0 @@
++-+-+++++-0
++-+-+++++-1
++-+-+++++-2
++-+-+++++-3
++-+-+++++-4
++-+-+++++-5
++-+-+++++-60
++-+-+++++-642
++-+-+++++-643
++-+-+++++-644
++-+-+++++-645
++-+-+++++-646
++-+-+++++-647
++-+-+++++-648
++-+-+++++-649
++-+-+++++-650
++-+-+++++-651
++-+-+++++-652
++-+-+++++-653
++-+-+++++-654
++-+-+++++-655
++-+-+++++-656
++-+-+++++-657
++-+-+++++-70
++-+-+++++diff --git a/changes.diff b/changes.diff
++-+-+++++deleted file mode 100644
++-+-+++++index 61d162d..0000000
++-+-+++++--- a/changes.diff
++-+-++++++++ /dev/null
++-+-+++++@@ -1,647 +0,0 @@
++-+-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-+++++-index 5b262e4..8c05f52 100644
++-+-+++++---- a/.husky/pre-commit
++-+-+++++-+++ b/.husky/pre-commit
++-+-+++++-@@ -113 +113 @@ cat "$final_report"
++-+-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-+-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
++-+-+++++-diff --git a/changes.diff b/changes.diff
++-+-+++++-index 9a218e6..4fe1995 100644
++-+-+++++---- a/changes.diff
++-+-+++++-+++ b/changes.diff
++-+-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-+++++--index aa6762f..586962b 100644
++-+-+++++-+index 586962b..5b262e4 100644
++-+-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
++-+-+++++--@@ -41 +41 @@ while IFS= read -r file; do
++-+-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-+-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
++-+-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-+-+++++---  # Extract line numbers as a comma-separated string for filtering later
++-+-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-+-+++++--+  # Extract line numbers as an array for filtering later
++-+-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-+-+++++--@@ -66 +66 @@ while IFS= read -r file; do
++-+-+++++---  if [ -z "$line_numbers" ]; then
++-+-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
++-+-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-+-+++++--+  # Convert the array of line numbers into a format that can be used by awk
++-+-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-+-+++++--+  lines_for_filter="${lines_for_filter:1}"
++-+-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
++-+-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
++-+-+++++-+-  awk -v file="$file" '
++-+-+++++-++  # Extract only the changed line numbers for the file
++-+-+++++-++  line_numbers=$(awk -v file="$file" '
++-+-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
++-+-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
++-+-+++++-++  ' changes.diff)
++-+-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
++-+-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
++-+-+++++-++  if [ -z "$line_numbers" ]; then
++-+-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
++-+-+++++-+-  # Extract line numbers as an array for filtering later
++-+-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-+-+++++-++  # Convert the line numbers to a comma-separated string for matching
++-+-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
++-+-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
++-+-+++++--@@ -73 +77 @@ while IFS= read -r file; do
++-+-+++++---  awk -v lines="$line_numbers" '
++-+-+++++--+  awk -v lines="$lines_for_filter" '
++-+-+++++--@@ -81 +85 @@ while IFS= read -r file; do
++-+-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-+-+++++--@@ -111 +115 @@ cat "$final_report"
++-+-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-+-+++++-++  echo "Changed lines for $file: $line_numbers_string"
++-+-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
++-+-+++++-+-  # Ensure that line_numbers is not empty
++-+-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
++-+-+++++-++  # Ensure that line_numbers_string is not empty
++-+-+++++-++  if [ -z "$line_numbers_string" ]; then
++-+-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
++-+-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
++-+-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-+-+++++-+-  lines_for_filter="${lines_for_filter:1}"
++-+-+++++-+-
++-+-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
++-+-+++++-+-  awk -v lines="$lines_for_filter" '
++-+-+++++-++  awk -v lines="$line_numbers_string" '
++-+-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-+-+++++--index 0e43eee..a206584 100644
++-+-+++++-+index a206584..9d692ac 100644
++-+-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
++-+-+++++--@@ -1 +1,6 @@
++-+-+++++---70 :           System.debug('Hi Hello');
++-+-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++--+1 : index 1ec7a54..870d508 100644
++-+-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-+-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-+++++--+4 : -          System.debug('Hi');
++-+-+++++--+70 :           System.debug('Hi');
++-+-+++++-+@@ -1,6 +1,24 @@
++-+-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-+-1 : index 1ec7a54..870d508 100644
++-+-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-+++++-+-4 : -          System.debug('Hi');
++-+-+++++-+-70 :           System.debug('Hi');
++-+-+++++-++0
++-+-+++++-++1
++-+-+++++-++2
++-+-+++++-++3
++-+-+++++-++4
++-+-+++++-++5
++-+-+++++-++60
++-+-+++++-++642
++-+-+++++-++643
++-+-+++++-++644
++-+-+++++-++645
++-+-+++++-++646
++-+-+++++-++647
++-+-+++++-++648
++-+-+++++-++649
++-+-+++++-++650
++-+-+++++-++651
++-+-+++++-++652
++-+-+++++-++653
++-+-+++++-++654
++-+-+++++-++655
++-+-+++++-++656
++-+-+++++-++657
++-+-+++++-++70
++-+-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
++-+-+++++--index 760971b..3dfa538 100644
++-+-+++++-+index 3dfa538..9a218e6 100644
++-+-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
++-+-+++++---index 255a037..525d43a 100644
++-+-+++++--+index 525d43a..aa6762f 100644
++-+-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-+-+++++---@@ -50 +50 @@ while IFS= read -r file; do
++-+-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
++-+-+++++---+  # Extract line numbers as a comma-separated string for filtering later
++-+-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+-+++++----  # Define the output path for the scanner report
++-+-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+-+++++---+  # Define the output path for the scanner report in CSV format
++-+-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+-+++++----  # Run the SFDX scanner on the file and generate the report
++-+-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
++-+-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+-+++++---@@ -71 +71 @@ while IFS= read -r file; do
++-+-+++++----  # Filter the scanner report based on the changed line numbers
++-+-+++++---+  # Filter the CSV scanner report based on the changed line numbers
++-+-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+-+++++----  jq --arg lines "$line_numbers" '
++-+-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++---+  awk -v lines="$line_numbers" '
++-+-+++++---+  BEGIN {
++-+-+++++---+    FS=OFS=",";
++-+-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
++-+-+++++---+    for (i in arr) {
++-+-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+-+++++---+    }
++-+-+++++---+  }
++-+-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-+++++---@@ -78 +85 @@ while IFS= read -r file; do
++-+-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+-+++++---@@ -84 +91 @@ while IFS= read -r file; do
++-+-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-+++++---@@ -89 +96 @@ done <<< "$changed_files"
++-+-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+-+++++---@@ -95,2 +102,4 @@ fi
++-+-+++++----# Combine all filtered reports into one final report
++-+-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+-+++++---+# Combine all filtered reports into one final report (optional)
++-+-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+-+++++----# Parse the final filtered scanner report and check for severity 3 issues
++-+-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+-+++++---+echo "Final filtered scanner report:"
++-+-+++++---+cat "$final_report"
++-+-+++++---+
++-+-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
++-+-+++++--+-    FS=OFS=",";
++-+-+++++--++    FS=OFS=",";  # Define CSV format
++-+-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
++-+-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+-+++++--+@@ -111 +111 @@ cat "$final_report"
++-+-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+-+++++--+new file mode 100644
++-+-+++++--+index 0000000..0e43eee
++-+-+++++--+--- /dev/null
++-+-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+-+++++--+@@ -0,0 +1 @@
++-+-+++++--++70 :           System.debug('Hi Hello');
++-+-+++++--+diff --git a/changes.diff b/changes.diff
++-+-+++++--+new file mode 100644
++-+-+++++--+index 0000000..760971b
++-+-+++++--+--- /dev/null
++-+-+++++--++++ b/changes.diff
++-+-+++++--+@@ -0,0 +1,65 @@
++-+-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-+++++--++index 255a037..525d43a 100644
++-+-+++++--++--- a/.husky/pre-commit
++-+-+++++--+++++ b/.husky/pre-commit
++-+-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
++-+-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-+-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
++-+-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+-+++++--++-  # Define the output path for the scanner report
++-+-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+-+++++--+++  # Define the output path for the scanner report in CSV format
++-+-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+-+++++--++-  # Run the SFDX scanner on the file and generate the report
++-+-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
++-+-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
++-+-+++++--++-  # Filter the scanner report based on the changed line numbers
++-+-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
++-+-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+-+++++--++-  jq --arg lines "$line_numbers" '
++-+-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++--+++  awk -v lines="$line_numbers" '
++-+-+++++--+++  BEGIN {
++-+-+++++--+++    FS=OFS=",";
++-+-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
++-+-+++++--+++    for (i in arr) {
++-+-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+-+++++--+++    }
++-+-+++++--+++  }
++-+-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
++-+-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
++-+-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
++-+-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+-+++++--++@@ -95,2 +102,4 @@ fi
++-+-+++++--++-# Combine all filtered reports into one final report
++-+-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+-+++++--+++# Combine all filtered reports into one final report (optional)
++-+-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
++-+-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+-+++++--+++echo "Final filtered scanner report:"
++-+-+++++--+++cat "$final_report"
++-+-+++++--+++
++-+-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++--++index 1ec7a54..870d508 100644
++-+-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
++-+-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-+++++--++-          System.debug('Hi');
++-+-+++++--+++          System.debug('Hi Hello');
++-+-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+-+++++---index 1ec7a54..870d508 100644
++-+-+++++--+index 870d508..1ec7a54 100644
++-+-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-+-+++++----          System.debug('Hi');
++-+-+++++---+          System.debug('Hi Hello');
++-+-+++++--+-          System.debug('Hi Hello');
++-+-+++++--++          System.debug('Hi');
++-+-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+-+++++--+new file mode 100644
++-+-+++++--+index 0000000..5a3a1ac
++-+-+++++--+--- /dev/null
++-+-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+-+++++--+@@ -0,0 +1 @@
++-+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+-+++++--+new file mode 100644
++-+-+++++--+index 0000000..5a3a1ac
++-+-+++++--+--- /dev/null
++-+-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
++-+-+++++--+@@ -0,0 +1 @@
++-+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+-+++++--+new file mode 100644
++-+-+++++--+index 0000000..e1ef0f0
++-+-+++++--+--- /dev/null
++-+-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+-+++++--+@@ -0,0 +1,5 @@
++-+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+-+++++-+-index 525d43a..aa6762f 100644
++-+-+++++-++index aa6762f..586962b 100644
++-+-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
++-+-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
++-+-+++++-+--    FS=OFS=",";
++-+-+++++-+-+    FS=OFS=",";  # Define CSV format
++-+-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
++-+-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+-+++++-+-@@ -111 +111 @@ cat "$final_report"
++-+-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
++-+-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-+-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-+-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-+-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
++-+-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-+-+++++-+++  # Extract line numbers as an array for filtering later
++-+-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-+-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
++-+-+++++-++-  if [ -z "$line_numbers" ]; then
++-+-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
++-+-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-+-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
++-+-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-+-+++++-+++  lines_for_filter="${lines_for_filter:1}"
++-+-+++++-+++
++-+-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
++-+-+++++-++-  awk -v lines="$line_numbers" '
++-+-+++++-+++  awk -v lines="$lines_for_filter" '
++-+-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
++-+-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-+-+++++-++@@ -111 +115 @@ cat "$final_report"
++-+-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-+-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-+-+++++-+-new file mode 100644
++-+-+++++-+-index 0000000..0e43eee
++-+-+++++-+---- /dev/null
++-+-+++++-++index 0e43eee..a206584 100644
++-+-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
++-+-+++++-+-@@ -0,0 +1 @@
++-+-+++++-+-+70 :           System.debug('Hi Hello');
++-+-+++++-++@@ -1 +1,6 @@
++-+-+++++-++-70 :           System.debug('Hi Hello');
++-+-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-+++1 : index 1ec7a54..870d508 100644
++-+-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-+++++-+++4 : -          System.debug('Hi');
++-+-+++++-+++70 :           System.debug('Hi');
++-+-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
++-+-+++++-+-new file mode 100644
++-+-+++++-+-index 0000000..760971b
++-+-+++++-+---- /dev/null
++-+-+++++-++index 760971b..3dfa538 100644
++-+-+++++-++--- a/changes.diff
++-+-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
++-+-+++++-+-@@ -0,0 +1,65 @@
++-+-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-+++++-+-+index 255a037..525d43a 100644
++-+-+++++-+-+--- a/.husky/pre-commit
++-+-+++++-+-++++ b/.husky/pre-commit
++-+-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
++-+-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
++-+-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
++-+-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+-+++++-+-+-  # Define the output path for the scanner report
++-+-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+-+++++-+-++  # Define the output path for the scanner report in CSV format
++-+-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
++-+-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
++-+-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
++-+-+++++-+-+-  # Filter the scanner report based on the changed line numbers
++-+-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
++-+-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+-+++++-+-+-  jq --arg lines "$line_numbers" '
++-+-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++-+-++  awk -v lines="$line_numbers" '
++-+-+++++-+-++  BEGIN {
++-+-+++++-+-++    FS=OFS=",";
++-+-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
++-+-+++++-+-++    for (i in arr) {
++-+-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+-+++++-+-++    }
++-+-+++++-+-++  }
++-+-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
++-+-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
++-+-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
++-+-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+-+++++-+-+@@ -95,2 +102,4 @@ fi
++-+-+++++-+-+-# Combine all filtered reports into one final report
++-+-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+-+++++-+-++# Combine all filtered reports into one final report (optional)
++-+-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
++-+-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+-+++++-+-++echo "Final filtered scanner report:"
++-+-+++++-+-++cat "$final_report"
++-+-+++++-+-++
++-+-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-+-+index 1ec7a54..870d508 100644
++-+-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-+++++-+-+-          System.debug('Hi');
++-+-+++++-+-++          System.debug('Hi Hello');
++-+-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-+++++-++-index 255a037..525d43a 100644
++-+-+++++-+++index 525d43a..aa6762f 100644
++-+-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-+-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
++-+-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
++-+-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
++-+-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+-+++++-++--  # Define the output path for the scanner report
++-+-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+-+++++-++-+  # Define the output path for the scanner report in CSV format
++-+-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+-+++++-++--  # Run the SFDX scanner on the file and generate the report
++-+-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
++-+-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
++-+-+++++-++--  # Filter the scanner report based on the changed line numbers
++-+-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
++-+-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+-+++++-++--  jq --arg lines "$line_numbers" '
++-+-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++-++-+  awk -v lines="$line_numbers" '
++-+-+++++-++-+  BEGIN {
++-+-+++++-++-+    FS=OFS=",";
++-+-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
++-+-+++++-++-+    for (i in arr) {
++-+-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+-+++++-++-+    }
++-+-+++++-++-+  }
++-+-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
++-+-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
++-+-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
++-+-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+-+++++-++-@@ -95,2 +102,4 @@ fi
++-+-+++++-++--# Combine all filtered reports into one final report
++-+-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+-+++++-++-+# Combine all filtered reports into one final report (optional)
++-+-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
++-+-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+-+++++-++-+echo "Final filtered scanner report:"
++-+-+++++-++-+cat "$final_report"
++-+-+++++-++-+
++-+-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
++-+-+++++-+++-    FS=OFS=",";
++-+-+++++-++++    FS=OFS=",";  # Define CSV format
++-+-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
++-+-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+-+++++-+++@@ -111 +111 @@ cat "$final_report"
++-+-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+-+++++-+++new file mode 100644
++-+-+++++-+++index 0000000..0e43eee
++-+-+++++-+++--- /dev/null
++-+-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+-+++++-+++@@ -0,0 +1 @@
++-+-+++++-++++70 :           System.debug('Hi Hello');
++-+-+++++-+++diff --git a/changes.diff b/changes.diff
++-+-+++++-+++new file mode 100644
++-+-+++++-+++index 0000000..760971b
++-+-+++++-+++--- /dev/null
++-+-+++++-++++++ b/changes.diff
++-+-+++++-+++@@ -0,0 +1,65 @@
++-+-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+-+++++-++++index 255a037..525d43a 100644
++-+-+++++-++++--- a/.husky/pre-commit
++-+-+++++-+++++++ b/.husky/pre-commit
++-+-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
++-+-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-+-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
++-+-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+-+++++-++++-  # Define the output path for the scanner report
++-+-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+-+++++-+++++  # Define the output path for the scanner report in CSV format
++-+-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+-+++++-++++-  # Run the SFDX scanner on the file and generate the report
++-+-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
++-+-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
++-+-+++++-++++-  # Filter the scanner report based on the changed line numbers
++-+-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
++-+-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+-+++++-++++-  jq --arg lines "$line_numbers" '
++-+-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++-+++++  awk -v lines="$line_numbers" '
++-+-+++++-+++++  BEGIN {
++-+-+++++-+++++    FS=OFS=",";
++-+-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
++-+-+++++-+++++    for (i in arr) {
++-+-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+-+++++-+++++    }
++-+-+++++-+++++  }
++-+-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
++-+-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
++-+-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
++-+-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+-+++++-++++@@ -95,2 +102,4 @@ fi
++-+-+++++-++++-# Combine all filtered reports into one final report
++-+-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+-+++++-+++++# Combine all filtered reports into one final report (optional)
++-+-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
++-+-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+-+++++-+++++echo "Final filtered scanner report:"
++-+-+++++-+++++cat "$final_report"
++-+-+++++-+++++
++-+-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-++++index 1ec7a54..870d508 100644
++-+-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-+++++-++++-          System.debug('Hi');
++-+-+++++-+++++          System.debug('Hi Hello');
++-+-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+-+++++-++-index 1ec7a54..870d508 100644
++-+-+++++-+++index 870d508..1ec7a54 100644
++-+-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-+-+++++-++--          System.debug('Hi');
++-+-+++++-++-+          System.debug('Hi Hello');
++-+-+++++-+++-          System.debug('Hi Hello');
++-+-+++++-++++          System.debug('Hi');
++-+-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+-+++++-+++new file mode 100644
++-+-+++++-+++index 0000000..5a3a1ac
++-+-+++++-+++--- /dev/null
++-+-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+-+++++-+++@@ -0,0 +1 @@
++-+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+-+++++-+++new file mode 100644
++-+-+++++-+++index 0000000..5a3a1ac
++-+-+++++-+++--- /dev/null
++-+-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
++-+-+++++-+++@@ -0,0 +1 @@
++-+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+-+++++-+++new file mode 100644
++-+-+++++-+++index 0000000..e1ef0f0
++-+-+++++-+++--- /dev/null
++-+-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+-+++++-+++@@ -0,0 +1,5 @@
++-+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+-+++++-+-index 870d508..1ec7a54 100644
++-+-+++++-++index 1ec7a54..870d508 100644
++-+-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
++-+-+++++-+--          System.debug('Hi Hello');
++-+-+++++-+-+          System.debug('Hi');
++-+-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+-+++++-+-new file mode 100644
++-+-+++++-+-index 0000000..5a3a1ac
++-+-+++++-+---- /dev/null
++-+-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+-+++++-+-@@ -0,0 +1 @@
++-+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+-+++++-+-new file mode 100644
++-+-+++++-+-index 0000000..5a3a1ac
++-+-+++++-+---- /dev/null
++-+-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
++-+-+++++-+-@@ -0,0 +1 @@
++-+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+-+++++-+-new file mode 100644
++-+-+++++-+-index 0000000..e1ef0f0
++-+-+++++-+---- /dev/null
++-+-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+-+++++-+-@@ -0,0 +1,5 @@
++-+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+-+++++-++-          System.debug('Hi');
++-+-+++++-+++          System.debug('Hi Hello');
++-+-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+-+++++--index 1ec7a54..870d508 100644
++-+-+++++-+index 870d508..5eafcac 100644
++-+-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
++-+-+++++---          System.debug('Hi');
++-+-+++++--+          System.debug('Hi Hello');
++-+-+++++-+-          System.debug('Hi Hello');
++-+-+++++-++          System.debug('Happy');
++-+-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-index 5eafcac..1ec7a54 100644
++-+-+++++---- a/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-+++++--          System.debug('Happy');
++-+-+++++-+          System.debug('Hi');
++-+-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++index 73696e2..9e21e88 100644
++-+-+++++--- a/force-app/main/default/classes/Account_Insert.cls
++-+-++++++++ b/force-app/main/default/classes/Account_Insert.cls
++-+-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-+++++-          System.debug('Hello and Hi');
++-+-++++++          System.debug('Hi AND');
++-+-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+-+++++deleted file mode 100644
++-+-+++++index 5a3a1ac..0000000
++-+-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+-++++++++ /dev/null
++-+-+++++@@ -1 +0,0 @@
++-+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+-+++++new file mode 100644
++-+-+++++index 0000000..ebc3aa5
++-+-+++++--- /dev/null
++-+-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+-+++++@@ -0,0 +1,30 @@
++-+-++++++[
++-+-++++++  {
++-+-++++++    "engine": "pmd",
++-+-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+-++++++    "violations": [
++-+-++++++      {
++-+-++++++        "line": 70,
++-+-++++++        "column": 11,
++-+-++++++        "endLine": 70,
++-+-++++++        "endColumn": 29,
++-+-++++++        "severity": 3,
++-+-++++++        "ruleName": "AvoidDebugStatements",
++-+-++++++        "category": "Performance",
++-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+-++++++      },
++-+-++++++      {
++-+-++++++        "line": 70,
++-+-++++++        "column": 11,
++-+-++++++        "endLine": 70,
++-+-++++++        "endColumn": 29,
++-+-++++++        "severity": 3,
++-+-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+-++++++        "category": "Best Practices",
++-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+-++++++      }
++-+-++++++    ]
++-+-++++++  }
++-+-++++++]
++-+-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+-+++++deleted file mode 100644
++-+-+++++index 5a3a1ac..0000000
++-+-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
++-+-++++++++ /dev/null
++-+-+++++@@ -1 +0,0 @@
++-+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-+-+++++new file mode 100644
++-+-+++++index 0000000..ebc3aa5
++-+-+++++--- /dev/null
++-+-++++++++ b/scanner-reports/final-filtered-scanner-report.json
++-+-+++++@@ -0,0 +1,30 @@
++-+-++++++[
++-+-++++++  {
++-+-++++++    "engine": "pmd",
++-+-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+-++++++    "violations": [
++-+-++++++      {
++-+-++++++        "line": 70,
++-+-++++++        "column": 11,
++-+-++++++        "endLine": 70,
++-+-++++++        "endColumn": 29,
++-+-++++++        "severity": 3,
++-+-++++++        "ruleName": "AvoidDebugStatements",
++-+-++++++        "category": "Performance",
++-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+-++++++      },
++-+-++++++      {
++-+-++++++        "line": 70,
++-+-++++++        "column": 11,
++-+-++++++        "endLine": 70,
++-+-++++++        "endColumn": 29,
++-+-++++++        "severity": 3,
++-+-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+-++++++        "category": "Best Practices",
++-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+-++++++      }
++-+-++++++    ]
++-+-++++++  }
++-+-++++++]
++-+-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+-+++++deleted file mode 100644
++-+-+++++index e1ef0f0..0000000
++-+-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+-++++++++ /dev/null
++-+-+++++@@ -1,5 +0,0 @@
++-+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+-+++++new file mode 100644
++-+-+++++index 0000000..c973918
++-+-+++++--- /dev/null
++-+-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+-+++++@@ -0,0 +1 @@
++-+-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+-+++++\ No newline at end of file
++-+-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-++++index 9e21e88..800635e 100644
++-+-++++--- a/force-app/main/default/classes/Account_Insert.cls
++-+-+++++++ b/force-app/main/default/classes/Account_Insert.cls
++-+-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-++++-          System.debug('Hi AND');
++-+-+++++          System.debug('Hi AND Hello');
++-+-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+-++++index ebc3aa5..fe51488 100644
++-+-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+-++++@@ -1,30 +1 @@
++-+-++++-[
++-+-++++-  {
++-+-++++-    "engine": "pmd",
++-+-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+-++++-    "violations": [
++-+-++++-      {
++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-index daf61a1..3603bae 100644
++-+++index 1328704..8004c80 100644
++-++@@ -5,12 +5,9 @@ index daf61a1..3603bae 100644
++-++-@@ -16 +16 @@ mkdir -p scanner-reports
++-++--git diff --unified=0 --cached > changes.diff
++-++-+git diff --cached --unified=0 > changes.diff
++-++-@@ -25 +25 @@ while IFS= read -r file; do
++-++--  # Extract only the changed line numbers for the file
++-++-+  # Extract only the added or modified lines for .cls and .lwc files
++-++-@@ -32 +32 @@ while IFS= read -r file; do
++-++--  ' changes.diff)
++-++-+  ' changes.diff | uniq)
++-++-@@ -61 +61 @@ while IFS= read -r file; do
++-++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+++@@ -29,4 +29,4 @@ while IFS= read -r file; do
++-+++-    $0 ~ file {inside=1}
++-+++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
++-+++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
++-+++-  ' changes.diff | uniq)
++-++++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
++-++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
++-++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
++-++++  ' changes.diff | sort -n | uniq)
++-++@@ -18,3 +15,2 @@ diff --git a/changes.diff b/changes.diff
++-++-new file mode 100644
++-++-index 0000000..a6452b3
++-++---- /dev/null
++-+++index 1f4c0b2..6a026dd 100644
++-+++--- a/changes.diff
++-++@@ -22,1073 +18,4567 @@ index 0000000..a6452b3
++-++-@@ -0,0 +1,1262 @@
++-++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-+index daf61a1..3603bae 100644
++-++-+--- a/.husky/pre-commit
++-++-++++ b/.husky/pre-commit
++-++-+@@ -16 +16 @@ mkdir -p scanner-reports
++-++-+-git diff --unified=0 --cached > changes.diff
++-++-++git diff --cached --unified=0 > changes.diff
++-++-+@@ -25 +25 @@ while IFS= read -r file; do
++-++-+-  # Extract only the changed line numbers for the file
++-++-++  # Extract only the added or modified lines for .cls and .lwc files
++-++-+@@ -32 +32 @@ while IFS= read -r file; do
++-++-+-  ' changes.diff)
++-++-++  ' changes.diff | uniq)
++-++-+@@ -61 +61 @@ while IFS= read -r file; do
++-++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-++-+diff --git a/changes.diff b/changes.diff
++-++-+new file mode 100644
++-++-+index 0000000..1831031
++-++-+--- /dev/null
++-++-++++ b/changes.diff
++-++-+@@ -0,0 +1,1158 @@
++-++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-++index daf61a1..d6ae40b 100644
++-++-++--- a/.husky/pre-commit
++-++-+++++ b/.husky/pre-commit
++-++-++@@ -25 +25 @@ while IFS= read -r file; do
++-++-++-  # Extract only the changed line numbers for the file
++-++-+++  # Extract only the added or modified lines for .cls and .lwc files
++-++-++@@ -32 +32 @@ while IFS= read -r file; do
++-++-++-  ' changes.diff)
++-++-+++  ' changes.diff | uniq)
++-++-++@@ -61 +61 @@ while IFS= read -r file; do
++-++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-++-++diff --git a/changes.diff b/changes.diff
++-++-++new file mode 100644
++-++-++index 0000000..47b6c1c
++-++-++--- /dev/null
++-++-+++++ b/changes.diff
++-++-++@@ -0,0 +1,1078 @@
++-++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-+++index daf61a1..d6ae40b 100644
++-++-+++--- a/.husky/pre-commit
++-++-++++++ b/.husky/pre-commit
++-++-+++@@ -25 +25 @@ while IFS= read -r file; do
++-++-+++-  # Extract only the changed line numbers for the file
++-++-++++  # Extract only the added or modified lines for .cls and .lwc files
++-++-+++@@ -32 +32 @@ while IFS= read -r file; do
++-++-+++-  ' changes.diff)
++-++-++++  ' changes.diff | uniq)
++-++-+++@@ -61 +61 @@ while IFS= read -r file; do
++-++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-++-+++diff --git a/changes.diff b/changes.diff
++-++-+++new file mode 100644
++-++-+++index 0000000..8cd4f1a
++-++-+++--- /dev/null
++-++-++++++ b/changes.diff
++-++-+++@@ -0,0 +1,977 @@
++-++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-++++index daf61a1..73bb862 100644
++-++-++++--- a/.husky/pre-commit
++-++-+++++++ b/.husky/pre-commit
++-++-++++@@ -61 +61 @@ while IFS= read -r file; do
++-++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-++-++++diff --git a/changes.diff b/changes.diff
++-++-++++new file mode 100644
++-++-++++index 0000000..f9d24dc
++-++-++++--- /dev/null
++-++-+++++++ b/changes.diff
++-++-++++@@ -0,0 +1,876 @@
++-++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-+++++index 19cfdbc..daf61a1 100644
++-++-+++++--- a/.husky/pre-commit
++-++-++++++++ b/.husky/pre-commit
++-++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
++-++-+++++-  # Define the output path for the scanner report in CSV format
++-++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++-++++++  # Extract only the changed line numbers for the file
++-++-++++++  line_numbers=$(awk -v file="$file" '
++-++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
++-++-++++++    /^diff --git/ {inside=0}
++-++-++++++    $0 ~ file {inside=1}
++-++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
++-++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-++-++++++  ' changes.diff)
++-++-++++++
++-++-++++++  # If no changed lines are found for this file, skip it
++-++-++++++  if [ -z "$line_numbers" ]; then
++-++-++++++    echo "No changed lines found in $file"
++-++-++++++    continue
++-++-++++++  fi
++-++-++++++
++-++-++++++  # Convert the line numbers to a JSON array format for jq filtering
++-++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
++-++-++++++
++-++-++++++  echo "Changed lines for $file: $line_numbers_array"
++-++-++++++
++-++-++++++  # Define the output path for the scanner report in JSON format
++-++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
++-++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
++-++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
++-++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
++-++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
++-++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
++-++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
++-++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
++-++-++++++  jq --argjson lines "$line_numbers_array" '
++-++-++++++    [.[] | 
++-++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++-++++++      select(.violations | length > 0)]
++-++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
++-++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++-+++++-    echo "No issues found for line '70' in $file"
++-++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++-++++++    echo "No issues found for changed lines in $file"
++-++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
++-++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
++-++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-++++++  echo "Filtered scanner report for $file (Changed lines):"
++-++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++@@ -53 +77 @@ done <<< "$changed_files"
++-++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
++-++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
++-++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
++-++-+++++@@ -60,2 +84,2 @@ fi
++-++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
++-++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
++-++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++-+++++-echo "Final filtered scanner report (Line '70'):"
++-++-++++++echo "Final filtered scanner report (Changed lines):"
++-++-+++++@@ -67 +91 @@ cat "$final_report"
++-++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
++-++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
++-++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
++-++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
++-++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
++-++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
++-++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
++-++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
++-++-+++++@@ -77 +101 @@ else
++-++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
++-++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
++-++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++-+++++deleted file mode 100644
++-++-+++++index 9d692ac..0000000
++-++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++-++++++++ /dev/null
++-++-+++++@@ -1,24 +0,0 @@
++-++-+++++-0
++-++-+++++-1
++-++-+++++-2
++-++-+++++-3
++-++-+++++-4
++-++-+++++-5
++-++-+++++-60
++-++-+++++-642
++-++-+++++-643
++-++-+++++-644
++-++-+++++-645
++-++-+++++-646
++-++-+++++-647
++-++-+++++-648
++-++-+++++-649
++-++-+++++-650
++-++-+++++-651
++-++-+++++-652
++-++-+++++-653
++-++-+++++-654
++-++-+++++-655
++-++-+++++-656
++-++-+++++-657
++-++-+++++-70
++-++-+++++diff --git a/changes.diff b/changes.diff
++-++-+++++deleted file mode 100644
++-++-+++++index 61d162d..0000000
++-++-+++++--- a/changes.diff
++-++-++++++++ /dev/null
++-++-+++++@@ -1,647 +0,0 @@
++-++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-+++++-index 5b262e4..8c05f52 100644
++-++-+++++---- a/.husky/pre-commit
++-++-+++++-+++ b/.husky/pre-commit
++-++-+++++-@@ -113 +113 @@ cat "$final_report"
++-++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
++-++-+++++-diff --git a/changes.diff b/changes.diff
++-++-+++++-index 9a218e6..4fe1995 100644
++-++-+++++---- a/changes.diff
++-++-+++++-+++ b/changes.diff
++-++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-+++++--index aa6762f..586962b 100644
++-++-+++++-+index 586962b..5b262e4 100644
++-++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
++-++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
++-++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
++-++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-++-+++++---  # Extract line numbers as a comma-separated string for filtering later
++-++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-++-+++++--+  # Extract line numbers as an array for filtering later
++-++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
++-++-+++++---  if [ -z "$line_numbers" ]; then
++-++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
++-++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
++-++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-++-+++++--+  lines_for_filter="${lines_for_filter:1}"
++-++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
++-++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
++-++-+++++-+-  awk -v file="$file" '
++-++-+++++-++  # Extract only the changed line numbers for the file
++-++-+++++-++  line_numbers=$(awk -v file="$file" '
++-++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
++-++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
++-++-+++++-++  ' changes.diff)
++-++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
++-++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
++-++-+++++-++  if [ -z "$line_numbers" ]; then
++-++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
++-++-+++++-+-  # Extract line numbers as an array for filtering later
++-++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-++-+++++-++  # Convert the line numbers to a comma-separated string for matching
++-++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
++-++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
++-++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
++-++-+++++---  awk -v lines="$line_numbers" '
++-++-+++++--+  awk -v lines="$lines_for_filter" '
++-++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
++-++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-++-+++++--@@ -111 +115 @@ cat "$final_report"
++-++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
++-++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
++-++-+++++-+-  # Ensure that line_numbers is not empty
++-++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
++-++-+++++-++  # Ensure that line_numbers_string is not empty
++-++-+++++-++  if [ -z "$line_numbers_string" ]; then
++-++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
++-++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
++-++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
++-++-+++++-+-
++-++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
++-++-+++++-+-  awk -v lines="$lines_for_filter" '
++-++-+++++-++  awk -v lines="$line_numbers_string" '
++-++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-++-+++++--index 0e43eee..a206584 100644
++-++-+++++-+index a206584..9d692ac 100644
++-++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
++-++-+++++--@@ -1 +1,6 @@
++-++-+++++---70 :           System.debug('Hi Hello');
++-++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++--+1 : index 1ec7a54..870d508 100644
++-++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-+++++--+4 : -          System.debug('Hi');
++-++-+++++--+70 :           System.debug('Hi');
++-++-+++++-+@@ -1,6 +1,24 @@
++-++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-+-1 : index 1ec7a54..870d508 100644
++-++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-+++++-+-4 : -          System.debug('Hi');
++-++-+++++-+-70 :           System.debug('Hi');
++-++-+++++-++0
++-++-+++++-++1
++-++-+++++-++2
++-++-+++++-++3
++-++-+++++-++4
++-++-+++++-++5
++-++-+++++-++60
++-++-+++++-++642
++-++-+++++-++643
++-++-+++++-++644
++-++-+++++-++645
++-++-+++++-++646
++-++-+++++-++647
++-++-+++++-++648
++-++-+++++-++649
++-++-+++++-++650
++-++-+++++-++651
++-++-+++++-++652
++-++-+++++-++653
++-++-+++++-++654
++-++-+++++-++655
++-++-+++++-++656
++-++-+++++-++657
++-++-+++++-++70
++-++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
++-++-+++++--index 760971b..3dfa538 100644
++-++-+++++-+index 3dfa538..9a218e6 100644
++-++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
++-++-+++++---index 255a037..525d43a 100644
++-++-+++++--+index 525d43a..aa6762f 100644
++-++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
++-++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
++-++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
++-++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++-+++++----  # Define the output path for the scanner report
++-++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++-+++++---+  # Define the output path for the scanner report in CSV format
++-++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++-+++++----  # Run the SFDX scanner on the file and generate the report
++-++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
++-++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
++-++-+++++----  # Filter the scanner report based on the changed line numbers
++-++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
++-++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++-+++++----  jq --arg lines "$line_numbers" '
++-++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++---+  awk -v lines="$line_numbers" '
++-++-+++++---+  BEGIN {
++-++-+++++---+    FS=OFS=",";
++-++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
++-++-+++++---+    for (i in arr) {
++-++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++-+++++---+    }
++-++-+++++---+  }
++-++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
++-++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
++-++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
++-++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++-+++++---@@ -95,2 +102,4 @@ fi
++-++-+++++----# Combine all filtered reports into one final report
++-++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++-+++++---+# Combine all filtered reports into one final report (optional)
++-++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
++-++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++-+++++---+echo "Final filtered scanner report:"
++-++-+++++---+cat "$final_report"
++-++-+++++---+
++-++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
++-++-+++++--+-    FS=OFS=",";
++-++-+++++--++    FS=OFS=",";  # Define CSV format
++-++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
++-++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++-+++++--+@@ -111 +111 @@ cat "$final_report"
++-++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++-+++++--+new file mode 100644
++-++-+++++--+index 0000000..0e43eee
++-++-+++++--+--- /dev/null
++-++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++-+++++--+@@ -0,0 +1 @@
++-++-+++++--++70 :           System.debug('Hi Hello');
++-++-+++++--+diff --git a/changes.diff b/changes.diff
++-++-+++++--+new file mode 100644
++-++-+++++--+index 0000000..760971b
++-++-+++++--+--- /dev/null
++-++-+++++--++++ b/changes.diff
++-++-+++++--+@@ -0,0 +1,65 @@
++-++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-+++++--++index 255a037..525d43a 100644
++-++-+++++--++--- a/.husky/pre-commit
++-++-+++++--+++++ b/.husky/pre-commit
++-++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
++-++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
++-++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++-+++++--++-  # Define the output path for the scanner report
++-++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++-+++++--+++  # Define the output path for the scanner report in CSV format
++-++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++-+++++--++-  # Run the SFDX scanner on the file and generate the report
++-++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
++-++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
++-++-+++++--++-  # Filter the scanner report based on the changed line numbers
++-++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
++-++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++-+++++--++-  jq --arg lines "$line_numbers" '
++-++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++--+++  awk -v lines="$line_numbers" '
++-++-+++++--+++  BEGIN {
++-++-+++++--+++    FS=OFS=",";
++-++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
++-++-+++++--+++    for (i in arr) {
++-++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++-+++++--+++    }
++-++-+++++--+++  }
++-++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
++-++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
++-++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
++-++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++-+++++--++@@ -95,2 +102,4 @@ fi
++-++-+++++--++-# Combine all filtered reports into one final report
++-++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++-+++++--+++# Combine all filtered reports into one final report (optional)
++-++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
++-++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++-+++++--+++echo "Final filtered scanner report:"
++-++-+++++--+++cat "$final_report"
++-++-+++++--+++
++-++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++--++index 1ec7a54..870d508 100644
++-++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
++-++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-+++++--++-          System.debug('Hi');
++-++-+++++--+++          System.debug('Hi Hello');
++-++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++-+++++---index 1ec7a54..870d508 100644
++-++-+++++--+index 870d508..1ec7a54 100644
++-++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-++-+++++----          System.debug('Hi');
++-++-+++++---+          System.debug('Hi Hello');
++-++-+++++--+-          System.debug('Hi Hello');
++-++-+++++--++          System.debug('Hi');
++-++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++-+++++--+new file mode 100644
++-++-+++++--+index 0000000..5a3a1ac
++-++-+++++--+--- /dev/null
++-++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++-+++++--+@@ -0,0 +1 @@
++-++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++-+++++--+new file mode 100644
++-++-+++++--+index 0000000..5a3a1ac
++-++-+++++--+--- /dev/null
++-++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
++-++-+++++--+@@ -0,0 +1 @@
++-++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++-+++++--+new file mode 100644
++-++-+++++--+index 0000000..e1ef0f0
++-++-+++++--+--- /dev/null
++-++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++-+++++--+@@ -0,0 +1,5 @@
++-++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++-+++++-+-index 525d43a..aa6762f 100644
++-++-+++++-++index aa6762f..586962b 100644
++-++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
++-++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
++-++-+++++-+--    FS=OFS=",";
++-++-+++++-+-+    FS=OFS=",";  # Define CSV format
++-++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
++-++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++-+++++-+-@@ -111 +111 @@ cat "$final_report"
++-++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
++-++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
++-++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-++-+++++-+++  # Extract line numbers as an array for filtering later
++-++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
++-++-+++++-++-  if [ -z "$line_numbers" ]; then
++-++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
++-++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
++-++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
++-++-+++++-+++
++-++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
++-++-+++++-++-  awk -v lines="$line_numbers" '
++-++-+++++-+++  awk -v lines="$lines_for_filter" '
++-++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
++-++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-++-+++++-++@@ -111 +115 @@ cat "$final_report"
++-++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-++-+++++-+-new file mode 100644
++-++-+++++-+-index 0000000..0e43eee
++-++-+++++-+---- /dev/null
++-++-+++++-++index 0e43eee..a206584 100644
++-++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
++-++-+++++-+-@@ -0,0 +1 @@
++-++-+++++-+-+70 :           System.debug('Hi Hello');
++-++-+++++-++@@ -1 +1,6 @@
++-++-+++++-++-70 :           System.debug('Hi Hello');
++-++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-+++1 : index 1ec7a54..870d508 100644
++-++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-+++++-+++4 : -          System.debug('Hi');
++-++-+++++-+++70 :           System.debug('Hi');
++-++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
++-++-+++++-+-new file mode 100644
++-++-+++++-+-index 0000000..760971b
++-++-+++++-+---- /dev/null
++-++-+++++-++index 760971b..3dfa538 100644
++-++-+++++-++--- a/changes.diff
++-++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
++-++-+++++-+-@@ -0,0 +1,65 @@
++-++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-+++++-+-+index 255a037..525d43a 100644
++-++-+++++-+-+--- a/.husky/pre-commit
++-++-+++++-+-++++ b/.husky/pre-commit
++-++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
++-++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
++-++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
++-++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++-+++++-+-+-  # Define the output path for the scanner report
++-++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++-+++++-+-++  # Define the output path for the scanner report in CSV format
++-++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
++-++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
++-++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
++-++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
++-++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
++-++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++-+++++-+-+-  jq --arg lines "$line_numbers" '
++-++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++-+-++  awk -v lines="$line_numbers" '
++-++-+++++-+-++  BEGIN {
++-++-+++++-+-++    FS=OFS=",";
++-++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
++-++-+++++-+-++    for (i in arr) {
++-++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++-+++++-+-++    }
++-++-+++++-+-++  }
++-++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
++-++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
++-++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
++-++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++-+++++-+-+@@ -95,2 +102,4 @@ fi
++-++-+++++-+-+-# Combine all filtered reports into one final report
++-++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++-+++++-+-++# Combine all filtered reports into one final report (optional)
++-++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
++-++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++-+++++-+-++echo "Final filtered scanner report:"
++-++-+++++-+-++cat "$final_report"
++-++-+++++-+-++
++-++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-+-+index 1ec7a54..870d508 100644
++-++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-+++++-+-+-          System.debug('Hi');
++-++-+++++-+-++          System.debug('Hi Hello');
++-++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-+++++-++-index 255a037..525d43a 100644
++-++-+++++-+++index 525d43a..aa6762f 100644
++-++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
++-++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
++-++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
++-++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++-+++++-++--  # Define the output path for the scanner report
++-++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++-+++++-++-+  # Define the output path for the scanner report in CSV format
++-++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++-+++++-++--  # Run the SFDX scanner on the file and generate the report
++-++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
++-++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
++-++-+++++-++--  # Filter the scanner report based on the changed line numbers
++-++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
++-++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++-+++++-++--  jq --arg lines "$line_numbers" '
++-++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++-++-+  awk -v lines="$line_numbers" '
++-++-+++++-++-+  BEGIN {
++-++-+++++-++-+    FS=OFS=",";
++-++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
++-++-+++++-++-+    for (i in arr) {
++-++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++-+++++-++-+    }
++-++-+++++-++-+  }
++-++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
++-++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
++-++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
++-++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++-+++++-++-@@ -95,2 +102,4 @@ fi
++-++-+++++-++--# Combine all filtered reports into one final report
++-++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++-+++++-++-+# Combine all filtered reports into one final report (optional)
++-++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
++-++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++-+++++-++-+echo "Final filtered scanner report:"
++-++-+++++-++-+cat "$final_report"
++-++-+++++-++-+
++-++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
++-++-+++++-+++-    FS=OFS=",";
++-++-+++++-++++    FS=OFS=",";  # Define CSV format
++-++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
++-++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++-+++++-+++@@ -111 +111 @@ cat "$final_report"
++-++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++-+++++-+++new file mode 100644
++-++-+++++-+++index 0000000..0e43eee
++-++-+++++-+++--- /dev/null
++-++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++-+++++-+++@@ -0,0 +1 @@
++-++-+++++-++++70 :           System.debug('Hi Hello');
++-++-+++++-+++diff --git a/changes.diff b/changes.diff
++-++-+++++-+++new file mode 100644
++-++-+++++-+++index 0000000..760971b
++-++-+++++-+++--- /dev/null
++-++-+++++-++++++ b/changes.diff
++-++-+++++-+++@@ -0,0 +1,65 @@
++-++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++-+++++-++++index 255a037..525d43a 100644
++-++-+++++-++++--- a/.husky/pre-commit
++-++-+++++-+++++++ b/.husky/pre-commit
++-++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
++-++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
++-++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++-+++++-++++-  # Define the output path for the scanner report
++-++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++-+++++-+++++  # Define the output path for the scanner report in CSV format
++-++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
++-++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
++-++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
++-++-+++++-++++-  # Filter the scanner report based on the changed line numbers
++-++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
++-++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++-+++++-++++-  jq --arg lines "$line_numbers" '
++-++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++-+++++  awk -v lines="$line_numbers" '
++-++-+++++-+++++  BEGIN {
++-++-+++++-+++++    FS=OFS=",";
++-++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
++-++-+++++-+++++    for (i in arr) {
++-++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++-+++++-+++++    }
++-++-+++++-+++++  }
++-++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
++-++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
++-++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
++-++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++-+++++-++++@@ -95,2 +102,4 @@ fi
++-++-+++++-++++-# Combine all filtered reports into one final report
++-++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++-+++++-+++++# Combine all filtered reports into one final report (optional)
++-++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
++-++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++-+++++-+++++echo "Final filtered scanner report:"
++-++-+++++-+++++cat "$final_report"
++-++-+++++-+++++
++-++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-++++index 1ec7a54..870d508 100644
++-++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-+++++-++++-          System.debug('Hi');
++-++-+++++-+++++          System.debug('Hi Hello');
++-++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++-+++++-++-index 1ec7a54..870d508 100644
++-++-+++++-+++index 870d508..1ec7a54 100644
++-++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-++-+++++-++--          System.debug('Hi');
++-++-+++++-++-+          System.debug('Hi Hello');
++-++-+++++-+++-          System.debug('Hi Hello');
++-++-+++++-++++          System.debug('Hi');
++-++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++-+++++-+++new file mode 100644
++-++-+++++-+++index 0000000..5a3a1ac
++-++-+++++-+++--- /dev/null
++-++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++-+++++-+++@@ -0,0 +1 @@
++-++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++-+++++-+++new file mode 100644
++-++-+++++-+++index 0000000..5a3a1ac
++-++-+++++-+++--- /dev/null
++-++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
++-++-+++++-+++@@ -0,0 +1 @@
++-++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++-+++++-+++new file mode 100644
++-++-+++++-+++index 0000000..e1ef0f0
++-++-+++++-+++--- /dev/null
++-++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++-+++++-+++@@ -0,0 +1,5 @@
++-++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++-+++++-+-index 870d508..1ec7a54 100644
++-++-+++++-++index 1ec7a54..870d508 100644
++-++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
++-++-+++++-+--          System.debug('Hi Hello');
++-++-+++++-+-+          System.debug('Hi');
++-++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++-+++++-+-new file mode 100644
++-++-+++++-+-index 0000000..5a3a1ac
++-++-+++++-+---- /dev/null
++-++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++-+++++-+-@@ -0,0 +1 @@
++-++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++-+++++-+-new file mode 100644
++-++-+++++-+-index 0000000..5a3a1ac
++-++-+++++-+---- /dev/null
++-++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
++-++-+++++-+-@@ -0,0 +1 @@
++-++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++-+++++-+-new file mode 100644
++-++-+++++-+-index 0000000..e1ef0f0
++-++-+++++-+---- /dev/null
++-++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++-+++++-+-@@ -0,0 +1,5 @@
++-++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++-+++++-++-          System.debug('Hi');
++-++-+++++-+++          System.debug('Hi Hello');
++-++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++-+++++--index 1ec7a54..870d508 100644
++-++-+++++-+index 870d508..5eafcac 100644
++-++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
++-++-+++++---          System.debug('Hi');
++-++-+++++--+          System.debug('Hi Hello');
++-++-+++++-+-          System.debug('Hi Hello');
++-++-+++++-++          System.debug('Happy');
++-++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-index 5eafcac..1ec7a54 100644
++-++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-+++++--          System.debug('Happy');
++-++-+++++-+          System.debug('Hi');
++-++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++index 73696e2..9e21e88 100644
++-++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
++-++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
++-++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-+++++-          System.debug('Hello and Hi');
++-++-++++++          System.debug('Hi AND');
++-++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++-+++++deleted file mode 100644
++-++-+++++index 5a3a1ac..0000000
++-++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++-++++++++ /dev/null
++-++-+++++@@ -1 +0,0 @@
++-++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++-+++++new file mode 100644
++-++-+++++index 0000000..ebc3aa5
++-++-+++++--- /dev/null
++-++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++-+++++@@ -0,0 +1,30 @@
++-++-++++++[
++-++-++++++  {
++-++-++++++    "engine": "pmd",
++-++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-++-++++++    "violations": [
++-++-++++++      {
++-++-++++++        "line": 70,
++-++-++++++        "column": 11,
++-++-++++++        "endLine": 70,
++-++-++++++        "endColumn": 29,
++-++-++++++        "severity": 3,
++-++-++++++        "ruleName": "AvoidDebugStatements",
++-++-++++++        "category": "Performance",
++-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++-++++++      },
++-++-++++++      {
++-++-++++++        "line": 70,
++-++-++++++        "column": 11,
++-++-++++++        "endLine": 70,
++-++-++++++        "endColumn": 29,
++-++-++++++        "severity": 3,
++-++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++-++++++        "category": "Best Practices",
++-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++-++++++      }
++-++-++++++    ]
++-++-++++++  }
++-++-++++++]
++-++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++-+++++deleted file mode 100644
++-++-+++++index 5a3a1ac..0000000
++-++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
++-++-++++++++ /dev/null
++-++-+++++@@ -1 +0,0 @@
++-++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-++-+++++new file mode 100644
++-++-+++++index 0000000..ebc3aa5
++-++-+++++--- /dev/null
++-++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
++-++-+++++@@ -0,0 +1,30 @@
++-++-++++++[
++-++-++++++  {
++-++-++++++    "engine": "pmd",
++-++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-++-++++++    "violations": [
++-++-++++++      {
++-++-++++++        "line": 70,
++-++-++++++        "column": 11,
++-++-++++++        "endLine": 70,
++-++-++++++        "endColumn": 29,
++-++-++++++        "severity": 3,
++-++-++++++        "ruleName": "AvoidDebugStatements",
++-++-++++++        "category": "Performance",
++-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++-++++++      },
++-++-++++++      {
++-++-++++++        "line": 70,
++-++-++++++        "column": 11,
++-++-++++++        "endLine": 70,
++-++-++++++        "endColumn": 29,
++-++-++++++        "severity": 3,
++-++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++-++++++        "category": "Best Practices",
++-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++-++++++      }
++-++-++++++    ]
++-++-++++++  }
++-++-++++++]
++-++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++-+++++deleted file mode 100644
++-++-+++++index e1ef0f0..0000000
++-++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++-++++++++ /dev/null
++-++-+++++@@ -1,5 +0,0 @@
++-++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++-+++++new file mode 100644
++-++-+++++index 0000000..c973918
++-++-+++++--- /dev/null
++-++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++-+++++@@ -0,0 +1 @@
++-++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++-+++++\ No newline at end of file
++-++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-++++index 9e21e88..800635e 100644
++-++-++++--- a/force-app/main/default/classes/Account_Insert.cls
++-++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
++-++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-++++-          System.debug('Hi AND');
++-++-+++++          System.debug('Hi AND Hello');
++-++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++-++++index ebc3aa5..fe51488 100644
++-++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++-++++@@ -1,30 +1 @@
++-++-++++-[
++-++-++++-  {
++-++-++++-    "engine": "pmd",
++-++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-++-++++-    "violations": [
++-++-++++-      {
++-++-++++-        "line": 70,
++-++-++++-        "column": 11,
++-++-++++-        "endLine": 70,
++-++-++++-        "endColumn": 29,
++-++-++++-        "severity": 3,
++-++-++++-        "ruleName": "AvoidDebugStatements",
++-++-++++-        "category": "Performance",
++-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++-++++-      },
++-++-++++-      {
++-++-++++-        "line": 70,
++-++-++++-        "column": 11,
++-++-++++-        "endLine": 70,
++-++-++++-        "endColumn": 29,
++-++-++++-        "severity": 3,
++-++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-++-++++-        "category": "Best Practices",
++-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++-++++-      }
++-++-++++-    ]
++-++-++++-  }
++-++-++++-]
++-++-+++++[]
++-++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-++-++++index ebc3aa5..fe51488 100644
++-++-++++--- a/scanner-reports/final-filtered-scanner-report.json
++-++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
++-++-++++@@ -1,30 +1 @@
++-++-++++-[
++-++-++++-  {
++-++-++++-    "engine": "pmd",
++-++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-++-++++-    "violations": [
++-++-++++-      {
++-++-++++-        "line": 70,
++-++-++++-        "column": 11,
++-++-++++-        "endLine": 70,
++-++-++++-        "endColumn": 29,
++-++-++++-        "severity": 3,
++-++-++++-        "ruleName": "AvoidDebugStatements",
++-++-++++-        "category": "Performance",
++-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++-++++-      },
++-++-++++-      {
++-++-++++-        "line": 70,
++-++-++++-        "column": 11,
++-++-++++-        "endLine": 70,
++-++-++++-        "endColumn": 29,
++-++-++++-        "severity": 3,
++-++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-++-++++-        "category": "Best Practices",
++-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++-++++-      }
++-++-++++-    ]
++-++-++++-  }
++-++-++++-]
++-++-+++++[]
++-++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++-++++index c973918..a14d61d 100644
++-++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++-++++@@ -1 +1 @@
++-++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++-++++\ No newline at end of file
++-++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++-++++\ No newline at end of file
++-++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-+++index 9e21e88..1ec7a54 100644
++-++-+++--- a/force-app/main/default/classes/Account_Insert.cls
++-++-++++++ b/force-app/main/default/classes/Account_Insert.cls
++-++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-+++-          System.debug('Hi AND');
++-++-++++          System.debug('Hi');
++-++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++-+++index ebc3aa5..bb2caee 100644
++-++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++-+++@@ -5,0 +6,22 @@
++-++-++++      {
++-++-++++        "line": 20,
++-++-++++        "column": 11,
++-++-++++        "endLine": 20,
++-++-++++        "endColumn": 35,
++-++-++++        "severity": 3,
++-++-++++        "ruleName": "AvoidDebugStatements",
++-++-++++        "category": "Performance",
++-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++-++++      },
++-++-++++      {
++-++-++++        "line": 20,
++-++-++++        "column": 11,
++-++-++++        "endLine": 20,
++-++-++++        "endColumn": 35,
++-++-++++        "severity": 3,
++-++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++-++++        "category": "Best Practices",
++-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++-++++      },
++-++-+++@@ -10 +32 @@
++-+++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-index daf61a1..3603bae 100644
++-++++index 1328704..5ea091f 100644
++-+++@@ -5,12 +5,5 @@ index daf61a1..3603bae 100644
++-+++-@@ -16 +16 @@ mkdir -p scanner-reports
++-+++--git diff --unified=0 --cached > changes.diff
++-+++-+git diff --cached --unified=0 > changes.diff
++-+++-@@ -25 +25 @@ while IFS= read -r file; do
++-+++--  # Extract only the changed line numbers for the file
++-+++-+  # Extract only the added or modified lines for .cls and .lwc files
++-+++-@@ -32 +32 @@ while IFS= read -r file; do
++-+++--  ' changes.diff)
++-+++-+  ' changes.diff | uniq)
++-+++-@@ -61 +61 @@ while IFS= read -r file; do
++-+++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-++++@@ -30,2 +30,2 @@ while IFS= read -r file; do
++-++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
++-++++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
++-+++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
++-+++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}
++-+++@@ -18,3 +11,2 @@ diff --git a/changes.diff b/changes.diff
++-+++-new file mode 100644
++-+++-index 0000000..a6452b3
++-+++---- /dev/null
++-++++index 1f4c0b2..4035686 100644
++-++++--- a/changes.diff
++-+++@@ -22,1188 +14,3438 @@ index 0000000..a6452b3
++-+++-@@ -0,0 +1,1262 @@
++-+++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-+index daf61a1..3603bae 100644
++-+++-+--- a/.husky/pre-commit
++-+++-++++ b/.husky/pre-commit
++-+++-+@@ -16 +16 @@ mkdir -p scanner-reports
++-+++-+-git diff --unified=0 --cached > changes.diff
++-+++-++git diff --cached --unified=0 > changes.diff
++-+++-+@@ -25 +25 @@ while IFS= read -r file; do
++-+++-+-  # Extract only the changed line numbers for the file
++-+++-++  # Extract only the added or modified lines for .cls and .lwc files
++-+++-+@@ -32 +32 @@ while IFS= read -r file; do
++-+++-+-  ' changes.diff)
++-+++-++  ' changes.diff | uniq)
++-+++-+@@ -61 +61 @@ while IFS= read -r file; do
++-+++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+++-+diff --git a/changes.diff b/changes.diff
++-+++-+new file mode 100644
++-+++-+index 0000000..1831031
++-+++-+--- /dev/null
++-+++-++++ b/changes.diff
++-+++-+@@ -0,0 +1,1158 @@
++-+++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-++index daf61a1..d6ae40b 100644
++-+++-++--- a/.husky/pre-commit
++-+++-+++++ b/.husky/pre-commit
++-+++-++@@ -25 +25 @@ while IFS= read -r file; do
++-+++-++-  # Extract only the changed line numbers for the file
++-+++-+++  # Extract only the added or modified lines for .cls and .lwc files
++-+++-++@@ -32 +32 @@ while IFS= read -r file; do
++-+++-++-  ' changes.diff)
++-+++-+++  ' changes.diff | uniq)
++-+++-++@@ -61 +61 @@ while IFS= read -r file; do
++-+++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+++-++diff --git a/changes.diff b/changes.diff
++-+++-++new file mode 100644
++-+++-++index 0000000..47b6c1c
++-+++-++--- /dev/null
++-+++-+++++ b/changes.diff
++-+++-++@@ -0,0 +1,1078 @@
++-+++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-+++index daf61a1..d6ae40b 100644
++-+++-+++--- a/.husky/pre-commit
++-+++-++++++ b/.husky/pre-commit
++-+++-+++@@ -25 +25 @@ while IFS= read -r file; do
++-+++-+++-  # Extract only the changed line numbers for the file
++-+++-++++  # Extract only the added or modified lines for .cls and .lwc files
++-+++-+++@@ -32 +32 @@ while IFS= read -r file; do
++-+++-+++-  ' changes.diff)
++-+++-++++  ' changes.diff | uniq)
++-+++-+++@@ -61 +61 @@ while IFS= read -r file; do
++-+++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+++-+++diff --git a/changes.diff b/changes.diff
++-+++-+++new file mode 100644
++-+++-+++index 0000000..8cd4f1a
++-+++-+++--- /dev/null
++-+++-++++++ b/changes.diff
++-+++-+++@@ -0,0 +1,977 @@
++-+++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-++++index daf61a1..73bb862 100644
++-+++-++++--- a/.husky/pre-commit
++-+++-+++++++ b/.husky/pre-commit
++-+++-++++@@ -61 +61 @@ while IFS= read -r file; do
++-+++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+++-++++diff --git a/changes.diff b/changes.diff
++-+++-++++new file mode 100644
++-+++-++++index 0000000..f9d24dc
++-+++-++++--- /dev/null
++-+++-+++++++ b/changes.diff
++-+++-++++@@ -0,0 +1,876 @@
++-+++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-+++++index 19cfdbc..daf61a1 100644
++-+++-+++++--- a/.husky/pre-commit
++-+++-++++++++ b/.husky/pre-commit
++-+++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
++-+++-+++++-  # Define the output path for the scanner report in CSV format
++-+++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++-++++++  # Extract only the changed line numbers for the file
++-+++-++++++  line_numbers=$(awk -v file="$file" '
++-+++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
++-+++-++++++    /^diff --git/ {inside=0}
++-+++-++++++    $0 ~ file {inside=1}
++-+++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
++-+++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-+++-++++++  ' changes.diff)
++-+++-++++++
++-+++-++++++  # If no changed lines are found for this file, skip it
++-+++-++++++  if [ -z "$line_numbers" ]; then
++-+++-++++++    echo "No changed lines found in $file"
++-+++-++++++    continue
++-+++-++++++  fi
++-+++-++++++
++-+++-++++++  # Convert the line numbers to a JSON array format for jq filtering
++-+++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
++-+++-++++++
++-+++-++++++  echo "Changed lines for $file: $line_numbers_array"
++-+++-++++++
++-+++-++++++  # Define the output path for the scanner report in JSON format
++-+++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
++-+++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
++-+++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
++-+++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
++-+++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
++-+++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
++-+++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
++-+++-++++++  jq --argjson lines "$line_numbers_array" '
++-+++-++++++    [.[] | 
++-+++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+++-++++++      select(.violations | length > 0)]
++-+++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
++-+++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++-+++++-    echo "No issues found for line '70' in $file"
++-+++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++-++++++    echo "No issues found for changed lines in $file"
++-+++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
++-+++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
++-+++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-++++++  echo "Filtered scanner report for $file (Changed lines):"
++-+++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++@@ -53 +77 @@ done <<< "$changed_files"
++-+++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
++-+++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
++-+++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
++-+++-+++++@@ -60,2 +84,2 @@ fi
++-+++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
++-+++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
++-+++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++-+++++-echo "Final filtered scanner report (Line '70'):"
++-+++-++++++echo "Final filtered scanner report (Changed lines):"
++-+++-+++++@@ -67 +91 @@ cat "$final_report"
++-+++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
++-+++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
++-+++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
++-+++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
++-+++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
++-+++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
++-+++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
++-+++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
++-+++-+++++@@ -77 +101 @@ else
++-+++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
++-+++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
++-+++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++-+++++deleted file mode 100644
++-+++-+++++index 9d692ac..0000000
++-+++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++-++++++++ /dev/null
++-+++-+++++@@ -1,24 +0,0 @@
++-+++-+++++-0
++-+++-+++++-1
++-+++-+++++-2
++-+++-+++++-3
++-+++-+++++-4
++-+++-+++++-5
++-+++-+++++-60
++-+++-+++++-642
++-+++-+++++-643
++-+++-+++++-644
++-+++-+++++-645
++-+++-+++++-646
++-+++-+++++-647
++-+++-+++++-648
++-+++-+++++-649
++-+++-+++++-650
++-+++-+++++-651
++-+++-+++++-652
++-+++-+++++-653
++-+++-+++++-654
++-+++-+++++-655
++-+++-+++++-656
++-+++-+++++-657
++-+++-+++++-70
++-+++-+++++diff --git a/changes.diff b/changes.diff
++-+++-+++++deleted file mode 100644
++-+++-+++++index 61d162d..0000000
++-+++-+++++--- a/changes.diff
++-+++-++++++++ /dev/null
++-+++-+++++@@ -1,647 +0,0 @@
++-+++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-+++++-index 5b262e4..8c05f52 100644
++-+++-+++++---- a/.husky/pre-commit
++-+++-+++++-+++ b/.husky/pre-commit
++-+++-+++++-@@ -113 +113 @@ cat "$final_report"
++-+++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-+++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
++-+++-+++++-diff --git a/changes.diff b/changes.diff
++-+++-+++++-index 9a218e6..4fe1995 100644
++-+++-+++++---- a/changes.diff
++-+++-+++++-+++ b/changes.diff
++-+++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-+++++--index aa6762f..586962b 100644
++-+++-+++++-+index 586962b..5b262e4 100644
++-+++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
++-+++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
++-+++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-+++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
++-+++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-+++-+++++---  # Extract line numbers as a comma-separated string for filtering later
++-+++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-+++-+++++--+  # Extract line numbers as an array for filtering later
++-+++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-+++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
++-+++-+++++---  if [ -z "$line_numbers" ]; then
++-+++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
++-+++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-+++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
++-+++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-+++-+++++--+  lines_for_filter="${lines_for_filter:1}"
++-+++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
++-+++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
++-+++-+++++-+-  awk -v file="$file" '
++-+++-+++++-++  # Extract only the changed line numbers for the file
++-+++-+++++-++  line_numbers=$(awk -v file="$file" '
++-+++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
++-+++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
++-+++-+++++-++  ' changes.diff)
++-+++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
++-+++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
++-+++-+++++-++  if [ -z "$line_numbers" ]; then
++-+++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
++-+++-+++++-+-  # Extract line numbers as an array for filtering later
++-+++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-+++-+++++-++  # Convert the line numbers to a comma-separated string for matching
++-+++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
++-+++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
++-+++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
++-+++-+++++---  awk -v lines="$line_numbers" '
++-+++-+++++--+  awk -v lines="$lines_for_filter" '
++-+++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
++-+++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-+++-+++++--@@ -111 +115 @@ cat "$final_report"
++-+++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-+++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
++-+++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
++-+++-+++++-+-  # Ensure that line_numbers is not empty
++-+++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
++-+++-+++++-++  # Ensure that line_numbers_string is not empty
++-+++-+++++-++  if [ -z "$line_numbers_string" ]; then
++-+++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
++-+++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
++-+++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-+++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
++-+++-+++++-+-
++-+++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
++-+++-+++++-+-  awk -v lines="$lines_for_filter" '
++-+++-+++++-++  awk -v lines="$line_numbers_string" '
++-+++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-+++-+++++--index 0e43eee..a206584 100644
++-+++-+++++-+index a206584..9d692ac 100644
++-+++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
++-+++-+++++--@@ -1 +1,6 @@
++-+++-+++++---70 :           System.debug('Hi Hello');
++-+++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++--+1 : index 1ec7a54..870d508 100644
++-+++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-+++++--+4 : -          System.debug('Hi');
++-+++-+++++--+70 :           System.debug('Hi');
++-+++-+++++-+@@ -1,6 +1,24 @@
++-+++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-+-1 : index 1ec7a54..870d508 100644
++-+++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-+++++-+-4 : -          System.debug('Hi');
++-+++-+++++-+-70 :           System.debug('Hi');
++-+++-+++++-++0
++-+++-+++++-++1
++-+++-+++++-++2
++-+++-+++++-++3
++-+++-+++++-++4
++-+++-+++++-++5
++-+++-+++++-++60
++-+++-+++++-++642
++-+++-+++++-++643
++-+++-+++++-++644
++-+++-+++++-++645
++-+++-+++++-++646
++-+++-+++++-++647
++-+++-+++++-++648
++-+++-+++++-++649
++-+++-+++++-++650
++-+++-+++++-++651
++-+++-+++++-++652
++-+++-+++++-++653
++-+++-+++++-++654
++-+++-+++++-++655
++-+++-+++++-++656
++-+++-+++++-++657
++-+++-+++++-++70
++-+++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
++-+++-+++++--index 760971b..3dfa538 100644
++-+++-+++++-+index 3dfa538..9a218e6 100644
++-+++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
++-+++-+++++---index 255a037..525d43a 100644
++-+++-+++++--+index 525d43a..aa6762f 100644
++-+++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-+++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
++-+++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
++-+++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
++-+++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+++-+++++----  # Define the output path for the scanner report
++-+++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++-+++++---+  # Define the output path for the scanner report in CSV format
++-+++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+++-+++++----  # Run the SFDX scanner on the file and generate the report
++-+++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
++-+++-+++++----  # Filter the scanner report based on the changed line numbers
++-+++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
++-+++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+++-+++++----  jq --arg lines "$line_numbers" '
++-+++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++---+  awk -v lines="$line_numbers" '
++-+++-+++++---+  BEGIN {
++-+++-+++++---+    FS=OFS=",";
++-+++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
++-+++-+++++---+    for (i in arr) {
++-+++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+++-+++++---+    }
++-+++-+++++---+  }
++-+++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
++-+++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
++-+++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
++-+++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++-+++++---@@ -95,2 +102,4 @@ fi
++-+++-+++++----# Combine all filtered reports into one final report
++-+++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+++-+++++---+# Combine all filtered reports into one final report (optional)
++-+++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
++-+++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+++-+++++---+echo "Final filtered scanner report:"
++-+++-+++++---+cat "$final_report"
++-+++-+++++---+
++-+++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
++-+++-+++++--+-    FS=OFS=",";
++-+++-+++++--++    FS=OFS=",";  # Define CSV format
++-+++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
++-+++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+++-+++++--+@@ -111 +111 @@ cat "$final_report"
++-+++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++-+++++--+new file mode 100644
++-+++-+++++--+index 0000000..0e43eee
++-+++-+++++--+--- /dev/null
++-+++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++-+++++--+@@ -0,0 +1 @@
++-+++-+++++--++70 :           System.debug('Hi Hello');
++-+++-+++++--+diff --git a/changes.diff b/changes.diff
++-+++-+++++--+new file mode 100644
++-+++-+++++--+index 0000000..760971b
++-+++-+++++--+--- /dev/null
++-+++-+++++--++++ b/changes.diff
++-+++-+++++--+@@ -0,0 +1,65 @@
++-+++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-+++++--++index 255a037..525d43a 100644
++-+++-+++++--++--- a/.husky/pre-commit
++-+++-+++++--+++++ b/.husky/pre-commit
++-+++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
++-+++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-+++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
++-+++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+++-+++++--++-  # Define the output path for the scanner report
++-+++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++-+++++--+++  # Define the output path for the scanner report in CSV format
++-+++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+++-+++++--++-  # Run the SFDX scanner on the file and generate the report
++-+++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
++-+++-+++++--++-  # Filter the scanner report based on the changed line numbers
++-+++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
++-+++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+++-+++++--++-  jq --arg lines "$line_numbers" '
++-+++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++--+++  awk -v lines="$line_numbers" '
++-+++-+++++--+++  BEGIN {
++-+++-+++++--+++    FS=OFS=",";
++-+++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
++-+++-+++++--+++    for (i in arr) {
++-+++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+++-+++++--+++    }
++-+++-+++++--+++  }
++-+++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
++-+++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
++-+++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
++-+++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++-+++++--++@@ -95,2 +102,4 @@ fi
++-+++-+++++--++-# Combine all filtered reports into one final report
++-+++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+++-+++++--+++# Combine all filtered reports into one final report (optional)
++-+++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
++-+++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+++-+++++--+++echo "Final filtered scanner report:"
++-+++-+++++--+++cat "$final_report"
++-+++-+++++--+++
++-+++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++--++index 1ec7a54..870d508 100644
++-+++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-+++++--++-          System.debug('Hi');
++-+++-+++++--+++          System.debug('Hi Hello');
++-+++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+++-+++++---index 1ec7a54..870d508 100644
++-+++-+++++--+index 870d508..1ec7a54 100644
++-+++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-+++-+++++----          System.debug('Hi');
++-+++-+++++---+          System.debug('Hi Hello');
++-+++-+++++--+-          System.debug('Hi Hello');
++-+++-+++++--++          System.debug('Hi');
++-+++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++-+++++--+new file mode 100644
++-+++-+++++--+index 0000000..5a3a1ac
++-+++-+++++--+--- /dev/null
++-+++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++-+++++--+@@ -0,0 +1 @@
++-+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+++-+++++--+new file mode 100644
++-+++-+++++--+index 0000000..5a3a1ac
++-+++-+++++--+--- /dev/null
++-+++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
++-+++-+++++--+@@ -0,0 +1 @@
++-+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++-+++++--+new file mode 100644
++-+++-+++++--+index 0000000..e1ef0f0
++-+++-+++++--+--- /dev/null
++-+++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++-+++++--+@@ -0,0 +1,5 @@
++-+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++-+++++-+-index 525d43a..aa6762f 100644
++-+++-+++++-++index aa6762f..586962b 100644
++-+++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
++-+++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
++-+++-+++++-+--    FS=OFS=",";
++-+++-+++++-+-+    FS=OFS=",";  # Define CSV format
++-+++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
++-+++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+++-+++++-+-@@ -111 +111 @@ cat "$final_report"
++-+++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
++-+++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-+++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-+++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-+++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
++-+++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-+++-+++++-+++  # Extract line numbers as an array for filtering later
++-+++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-+++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
++-+++-+++++-++-  if [ -z "$line_numbers" ]; then
++-+++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
++-+++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-+++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
++-+++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-+++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
++-+++-+++++-+++
++-+++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
++-+++-+++++-++-  awk -v lines="$line_numbers" '
++-+++-+++++-+++  awk -v lines="$lines_for_filter" '
++-+++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
++-+++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-+++-+++++-++@@ -111 +115 @@ cat "$final_report"
++-+++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-+++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-+++-+++++-+-new file mode 100644
++-+++-+++++-+-index 0000000..0e43eee
++-+++-+++++-+---- /dev/null
++-+++-+++++-++index 0e43eee..a206584 100644
++-+++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
++-+++-+++++-+-@@ -0,0 +1 @@
++-+++-+++++-+-+70 :           System.debug('Hi Hello');
++-+++-+++++-++@@ -1 +1,6 @@
++-+++-+++++-++-70 :           System.debug('Hi Hello');
++-+++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-+++1 : index 1ec7a54..870d508 100644
++-+++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-+++++-+++4 : -          System.debug('Hi');
++-+++-+++++-+++70 :           System.debug('Hi');
++-+++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
++-+++-+++++-+-new file mode 100644
++-+++-+++++-+-index 0000000..760971b
++-+++-+++++-+---- /dev/null
++-+++-+++++-++index 760971b..3dfa538 100644
++-+++-+++++-++--- a/changes.diff
++-+++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
++-+++-+++++-+-@@ -0,0 +1,65 @@
++-+++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-+++++-+-+index 255a037..525d43a 100644
++-+++-+++++-+-+--- a/.husky/pre-commit
++-+++-+++++-+-++++ b/.husky/pre-commit
++-+++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
++-+++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
++-+++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
++-+++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+++-+++++-+-+-  # Define the output path for the scanner report
++-+++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++-+++++-+-++  # Define the output path for the scanner report in CSV format
++-+++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
++-+++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
++-+++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
++-+++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
++-+++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+++-+++++-+-+-  jq --arg lines "$line_numbers" '
++-+++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++-+-++  awk -v lines="$line_numbers" '
++-+++-+++++-+-++  BEGIN {
++-+++-+++++-+-++    FS=OFS=",";
++-+++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
++-+++-+++++-+-++    for (i in arr) {
++-+++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+++-+++++-+-++    }
++-+++-+++++-+-++  }
++-+++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
++-+++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
++-+++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
++-+++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++-+++++-+-+@@ -95,2 +102,4 @@ fi
++-+++-+++++-+-+-# Combine all filtered reports into one final report
++-+++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+++-+++++-+-++# Combine all filtered reports into one final report (optional)
++-+++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
++-+++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+++-+++++-+-++echo "Final filtered scanner report:"
++-+++-+++++-+-++cat "$final_report"
++-+++-+++++-+-++
++-+++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-+-+index 1ec7a54..870d508 100644
++-+++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-+++++-+-+-          System.debug('Hi');
++-+++-+++++-+-++          System.debug('Hi Hello');
++-+++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-+++++-++-index 255a037..525d43a 100644
++-+++-+++++-+++index 525d43a..aa6762f 100644
++-+++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-+++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
++-+++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
++-+++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
++-+++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+++-+++++-++--  # Define the output path for the scanner report
++-+++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++-+++++-++-+  # Define the output path for the scanner report in CSV format
++-+++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+++-+++++-++--  # Run the SFDX scanner on the file and generate the report
++-+++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
++-+++-+++++-++--  # Filter the scanner report based on the changed line numbers
++-+++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
++-+++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+++-+++++-++--  jq --arg lines "$line_numbers" '
++-+++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++-++-+  awk -v lines="$line_numbers" '
++-+++-+++++-++-+  BEGIN {
++-+++-+++++-++-+    FS=OFS=",";
++-+++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
++-+++-+++++-++-+    for (i in arr) {
++-+++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+++-+++++-++-+    }
++-+++-+++++-++-+  }
++-+++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
++-+++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
++-+++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
++-+++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++-+++++-++-@@ -95,2 +102,4 @@ fi
++-+++-+++++-++--# Combine all filtered reports into one final report
++-+++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+++-+++++-++-+# Combine all filtered reports into one final report (optional)
++-+++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
++-+++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+++-+++++-++-+echo "Final filtered scanner report:"
++-+++-+++++-++-+cat "$final_report"
++-+++-+++++-++-+
++-+++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
++-+++-+++++-+++-    FS=OFS=",";
++-+++-+++++-++++    FS=OFS=",";  # Define CSV format
++-+++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
++-+++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+++-+++++-+++@@ -111 +111 @@ cat "$final_report"
++-+++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++-+++++-+++new file mode 100644
++-+++-+++++-+++index 0000000..0e43eee
++-+++-+++++-+++--- /dev/null
++-+++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++-+++++-+++@@ -0,0 +1 @@
++-+++-+++++-++++70 :           System.debug('Hi Hello');
++-+++-+++++-+++diff --git a/changes.diff b/changes.diff
++-+++-+++++-+++new file mode 100644
++-+++-+++++-+++index 0000000..760971b
++-+++-+++++-+++--- /dev/null
++-+++-+++++-++++++ b/changes.diff
++-+++-+++++-+++@@ -0,0 +1,65 @@
++-+++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++-+++++-++++index 255a037..525d43a 100644
++-+++-+++++-++++--- a/.husky/pre-commit
++-+++-+++++-+++++++ b/.husky/pre-commit
++-+++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
++-+++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-+++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
++-+++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+++-+++++-++++-  # Define the output path for the scanner report
++-+++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++-+++++-+++++  # Define the output path for the scanner report in CSV format
++-+++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
++-+++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
++-+++-+++++-++++-  # Filter the scanner report based on the changed line numbers
++-+++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
++-+++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+++-+++++-++++-  jq --arg lines "$line_numbers" '
++-+++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++-+++++  awk -v lines="$line_numbers" '
++-+++-+++++-+++++  BEGIN {
++-+++-+++++-+++++    FS=OFS=",";
++-+++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
++-+++-+++++-+++++    for (i in arr) {
++-+++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+++-+++++-+++++    }
++-+++-+++++-+++++  }
++-+++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
++-+++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
++-+++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
++-+++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++-+++++-++++@@ -95,2 +102,4 @@ fi
++-+++-+++++-++++-# Combine all filtered reports into one final report
++-+++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+++-+++++-+++++# Combine all filtered reports into one final report (optional)
++-+++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
++-+++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+++-+++++-+++++echo "Final filtered scanner report:"
++-+++-+++++-+++++cat "$final_report"
++-+++-+++++-+++++
++-+++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-++++index 1ec7a54..870d508 100644
++-+++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-+++++-++++-          System.debug('Hi');
++-+++-+++++-+++++          System.debug('Hi Hello');
++-+++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+++-+++++-++-index 1ec7a54..870d508 100644
++-+++-+++++-+++index 870d508..1ec7a54 100644
++-+++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-+++-+++++-++--          System.debug('Hi');
++-+++-+++++-++-+          System.debug('Hi Hello');
++-+++-+++++-+++-          System.debug('Hi Hello');
++-+++-+++++-++++          System.debug('Hi');
++-+++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++-+++++-+++new file mode 100644
++-+++-+++++-+++index 0000000..5a3a1ac
++-+++-+++++-+++--- /dev/null
++-+++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++-+++++-+++@@ -0,0 +1 @@
++-+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+++-+++++-+++new file mode 100644
++-+++-+++++-+++index 0000000..5a3a1ac
++-+++-+++++-+++--- /dev/null
++-+++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
++-+++-+++++-+++@@ -0,0 +1 @@
++-+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++-+++++-+++new file mode 100644
++-+++-+++++-+++index 0000000..e1ef0f0
++-+++-+++++-+++--- /dev/null
++-+++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++-+++++-+++@@ -0,0 +1,5 @@
++-+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+++-+++++-+-index 870d508..1ec7a54 100644
++-+++-+++++-++index 1ec7a54..870d508 100644
++-+++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
++-+++-+++++-+--          System.debug('Hi Hello');
++-+++-+++++-+-+          System.debug('Hi');
++-+++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++-+++++-+-new file mode 100644
++-+++-+++++-+-index 0000000..5a3a1ac
++-+++-+++++-+---- /dev/null
++-+++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++-+++++-+-@@ -0,0 +1 @@
++-+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+++-+++++-+-new file mode 100644
++-+++-+++++-+-index 0000000..5a3a1ac
++-+++-+++++-+---- /dev/null
++-+++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
++-+++-+++++-+-@@ -0,0 +1 @@
++-+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++-+++++-+-new file mode 100644
++-+++-+++++-+-index 0000000..e1ef0f0
++-+++-+++++-+---- /dev/null
++-+++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++-+++++-+-@@ -0,0 +1,5 @@
++-+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++-+++++-++-          System.debug('Hi');
++-+++-+++++-+++          System.debug('Hi Hello');
++-+++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+++-+++++--index 1ec7a54..870d508 100644
++-+++-+++++-+index 870d508..5eafcac 100644
++-+++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
++-+++-+++++---          System.debug('Hi');
++-+++-+++++--+          System.debug('Hi Hello');
++-+++-+++++-+-          System.debug('Hi Hello');
++-+++-+++++-++          System.debug('Happy');
++-+++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-index 5eafcac..1ec7a54 100644
++-+++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-+++++--          System.debug('Happy');
++-+++-+++++-+          System.debug('Hi');
++-+++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++index 73696e2..9e21e88 100644
++-+++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
++-+++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-+++++-          System.debug('Hello and Hi');
++-+++-++++++          System.debug('Hi AND');
++-+++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++-+++++deleted file mode 100644
++-+++-+++++index 5a3a1ac..0000000
++-+++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++-++++++++ /dev/null
++-+++-+++++@@ -1 +0,0 @@
++-+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++-+++++new file mode 100644
++-+++-+++++index 0000000..ebc3aa5
++-+++-+++++--- /dev/null
++-+++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++-+++++@@ -0,0 +1,30 @@
++-+++-++++++[
++-+++-++++++  {
++-+++-++++++    "engine": "pmd",
++-+++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++-++++++    "violations": [
++-+++-++++++      {
++-+++-++++++        "line": 70,
++-+++-++++++        "column": 11,
++-+++-++++++        "endLine": 70,
++-+++-++++++        "endColumn": 29,
++-+++-++++++        "severity": 3,
++-+++-++++++        "ruleName": "AvoidDebugStatements",
++-+++-++++++        "category": "Performance",
++-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++-++++++      },
++-+++-++++++      {
++-+++-++++++        "line": 70,
++-+++-++++++        "column": 11,
++-+++-++++++        "endLine": 70,
++-+++-++++++        "endColumn": 29,
++-+++-++++++        "severity": 3,
++-+++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++-++++++        "category": "Best Practices",
++-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++-++++++      }
++-+++-++++++    ]
++-+++-++++++  }
++-+++-++++++]
++-+++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+++-+++++deleted file mode 100644
++-+++-+++++index 5a3a1ac..0000000
++-+++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
++-+++-++++++++ /dev/null
++-+++-+++++@@ -1 +0,0 @@
++-+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-+++-+++++new file mode 100644
++-+++-+++++index 0000000..ebc3aa5
++-+++-+++++--- /dev/null
++-+++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
++-+++-+++++@@ -0,0 +1,30 @@
++-+++-++++++[
++-+++-++++++  {
++-+++-++++++    "engine": "pmd",
++-+++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++-++++++    "violations": [
++-+++-++++++      {
++-+++-++++++        "line": 70,
++-+++-++++++        "column": 11,
++-+++-++++++        "endLine": 70,
++-+++-++++++        "endColumn": 29,
++-+++-++++++        "severity": 3,
++-+++-++++++        "ruleName": "AvoidDebugStatements",
++-+++-++++++        "category": "Performance",
++-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++-++++++      },
++-+++-++++++      {
++-+++-++++++        "line": 70,
++-+++-++++++        "column": 11,
++-+++-++++++        "endLine": 70,
++-+++-++++++        "endColumn": 29,
++-+++-++++++        "severity": 3,
++-+++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++-++++++        "category": "Best Practices",
++-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++-++++++      }
++-+++-++++++    ]
++-+++-++++++  }
++-+++-++++++]
++-+++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++-+++++deleted file mode 100644
++-+++-+++++index e1ef0f0..0000000
++-+++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++-++++++++ /dev/null
++-+++-+++++@@ -1,5 +0,0 @@
++-+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++-+++++new file mode 100644
++-+++-+++++index 0000000..c973918
++-+++-+++++--- /dev/null
++-+++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++-+++++@@ -0,0 +1 @@
++-+++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++-+++++\ No newline at end of file
++-+++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-++++index 9e21e88..800635e 100644
++-+++-++++--- a/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
++-+++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-++++-          System.debug('Hi AND');
++-+++-+++++          System.debug('Hi AND Hello');
++-+++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++-++++index ebc3aa5..fe51488 100644
++-+++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++-++++@@ -1,30 +1 @@
++-+++-++++-[
++-+++-++++-  {
++-+++-++++-    "engine": "pmd",
++-+++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++-++++-    "violations": [
++-+++-++++-      {
++-+++-++++-        "line": 70,
++-+++-++++-        "column": 11,
++-+++-++++-        "endLine": 70,
++-+++-++++-        "endColumn": 29,
++-+++-++++-        "severity": 3,
++-+++-++++-        "ruleName": "AvoidDebugStatements",
++-+++-++++-        "category": "Performance",
++-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++-++++-      },
++-+++-++++-      {
++-+++-++++-        "line": 70,
++-+++-++++-        "column": 11,
++-+++-++++-        "endLine": 70,
++-+++-++++-        "endColumn": 29,
++-+++-++++-        "severity": 3,
++-+++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++-++++-        "category": "Best Practices",
++-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++-++++-      }
++-+++-++++-    ]
++-+++-++++-  }
++-+++-++++-]
++-+++-+++++[]
++-+++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-+++-++++index ebc3aa5..fe51488 100644
++-+++-++++--- a/scanner-reports/final-filtered-scanner-report.json
++-+++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
++-+++-++++@@ -1,30 +1 @@
++-+++-++++-[
++-+++-++++-  {
++-+++-++++-    "engine": "pmd",
++-+++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++-++++-    "violations": [
++-+++-++++-      {
++-+++-++++-        "line": 70,
++-+++-++++-        "column": 11,
++-+++-++++-        "endLine": 70,
++-+++-++++-        "endColumn": 29,
++-+++-++++-        "severity": 3,
++-+++-++++-        "ruleName": "AvoidDebugStatements",
++-+++-++++-        "category": "Performance",
++-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++-++++-      },
++-+++-++++-      {
++-+++-++++-        "line": 70,
++-+++-++++-        "column": 11,
++-+++-++++-        "endLine": 70,
++-+++-++++-        "endColumn": 29,
++-+++-++++-        "severity": 3,
++-+++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++-++++-        "category": "Best Practices",
++-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++-++++-      }
++-+++-++++-    ]
++-+++-++++-  }
++-+++-++++-]
++-+++-+++++[]
++-+++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++-++++index c973918..a14d61d 100644
++-+++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++-++++@@ -1 +1 @@
++-+++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++-++++\ No newline at end of file
++-+++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++-++++\ No newline at end of file
++-+++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++index 9e21e88..1ec7a54 100644
++-+++-+++--- a/force-app/main/default/classes/Account_Insert.cls
++-+++-++++++ b/force-app/main/default/classes/Account_Insert.cls
++-+++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-+++-          System.debug('Hi AND');
++-+++-++++          System.debug('Hi');
++-+++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++-+++index ebc3aa5..bb2caee 100644
++-+++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++-+++@@ -5,0 +6,22 @@
++-+++-++++      {
++-+++-++++        "line": 20,
++-+++-++++        "column": 11,
++-+++-++++        "endLine": 20,
++-+++-++++        "endColumn": 35,
++-+++-++++        "severity": 3,
++-+++-++++        "ruleName": "AvoidDebugStatements",
++-+++-++++        "category": "Performance",
++-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++-++++      },
++-+++-++++      {
++-+++-++++        "line": 20,
++-+++-++++        "column": 11,
++-+++-++++        "endLine": 20,
++-+++-++++        "endColumn": 35,
++-+++-++++        "severity": 3,
++-+++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++-++++        "category": "Best Practices",
++-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++-++++      },
++-+++-+++@@ -10 +32 @@
++-+++-+++-        "endColumn": 29,
++-+++-++++        "endColumn": 39,
++-+++-+++@@ -21 +43 @@
++-+++-+++-        "endColumn": 29,
++-+++-++++        "endColumn": 39,
++-+++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-+++-+++index ebc3aa5..bb2caee 100644
++-+++-+++--- a/scanner-reports/final-filtered-scanner-report.json
++-+++-++++++ b/scanner-reports/final-filtered-scanner-report.json
++-+++-+++@@ -5,0 +6,22 @@
++-+++-++++      {
++-+++-++++        "line": 20,
++-+++-++++        "column": 11,
++-+++-++++        "endLine": 20,
++-+++-++++        "endColumn": 35,
++-+++-++++        "severity": 3,
++-+++-++++        "ruleName": "AvoidDebugStatements",
++-+++-++++        "category": "Performance",
++-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++-++++      },
++-+++-++++      {
++-+++-++++        "line": 20,
++-+++-++++        "column": 11,
++-+++-++++        "endLine": 20,
++-+++-++++        "endColumn": 35,
++-+++-++++        "severity": 3,
++-+++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++-++++        "category": "Best Practices",
++-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++-++++      },
++-+++-+++@@ -10 +32 @@
++-+++-+++-        "endColumn": 29,
++-+++-++++        "endColumn": 39,
++-+++-+++@@ -21 +43 @@
++-+++-+++-        "endColumn": 29,
++-+++-++++        "endColumn": 39,
++-+++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++-+++index c973918..866c0b7 100644
++-+++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++-+++@@ -1 +1 @@
++-+++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++-+++\ No newline at end of file
++-+++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++-+++\ No newline at end of file
++-+++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-++index 9e21e88..9a5148a 100644
++-+++-++--- a/force-app/main/default/classes/Account_Insert.cls
++-+++-+++++ b/force-app/main/default/classes/Account_Insert.cls
++-+++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-++-          System.debug('Hi AND');
++-+++-+++          System.debug('Hello');
++-+++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++-++index ebc3aa5..b33da59 100644
++-+++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++-++@@ -5,0 +6,22 @@
++-+++-+++      {
++-+++-+++        "line": 20,
++-+++-+++        "column": 11,
++-+++-+++        "endLine": 20,
++-+++-+++        "endColumn": 35,
++-+++-+++        "severity": 3,
++-+++-+++        "ruleName": "AvoidDebugStatements",
++-+++-+++        "category": "Performance",
++-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++-+++      },
++-+++-+++      {
++-+++-+++        "line": 20,
++-+++-+++        "column": 11,
++-+++-+++        "endLine": 20,
++-+++-+++        "endColumn": 35,
++-+++-+++        "severity": 3,
++-+++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++-+++        "category": "Best Practices",
++-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++-+++      },
++-+++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-+++-++index ebc3aa5..b33da59 100644
++-+++-++--- a/scanner-reports/final-filtered-scanner-report.json
++-+++-+++++ b/scanner-reports/final-filtered-scanner-report.json
++-+++-++@@ -5,0 +6,22 @@
++-+++-+++      {
++-+++-+++        "line": 20,
++-+++-+++        "column": 11,
++-+++-+++        "endLine": 20,
++-+++-+++        "endColumn": 35,
++-+++-+++        "severity": 3,
++-+++-+++        "ruleName": "AvoidDebugStatements",
++-+++-+++        "category": "Performance",
++-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++-+++      },
++-+++-+++      {
++-+++-+++        "line": 20,
++-+++-+++        "column": 11,
++-+++-+++        "endLine": 20,
++-+++-+++        "endColumn": 35,
++-+++-+++        "severity": 3,
++-+++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++-+++        "category": "Best Practices",
++-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++-+++      },
++-+++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++-+index 9e21e88..1ec7a54 100644
++-+++-+--- a/force-app/main/default/classes/Account_Insert.cls
++-+++-++++ b/force-app/main/default/classes/Account_Insert.cls
++-+++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++-+-          System.debug('Hi AND');
++-+++-++          System.debug('Hi');
++-++++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-index daf61a1..3603bae 100644
++-+++++index 1328704..5ea091f 100644
++-++++@@ -5,12 +5,5 @@ index daf61a1..3603bae 100644
++-++++-@@ -16 +16 @@ mkdir -p scanner-reports
++-++++--git diff --unified=0 --cached > changes.diff
++-++++-+git diff --cached --unified=0 > changes.diff
++-++++-@@ -25 +25 @@ while IFS= read -r file; do
++-++++--  # Extract only the changed line numbers for the file
++-++++-+  # Extract only the added or modified lines for .cls and .lwc files
++-++++-@@ -32 +32 @@ while IFS= read -r file; do
++-++++--  ' changes.diff)
++-++++-+  ' changes.diff | uniq)
++-++++-@@ -61 +61 @@ while IFS= read -r file; do
++-++++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+++++@@ -30,2 +30,2 @@ while IFS= read -r file; do
++-+++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
++-+++++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+@@ -146,101 +5437,6 @@ index 1f4c0b2..3afa5f1 100644
+--++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+--++++++  ' changes.diff)
+--++++++
+--++++++  # If no changed lines are found for this file, skip it
+--++++++  if [ -z "$line_numbers" ]; then
+--++++++    echo "No changed lines found in $file"
+--++++++    continue
+--++++++  fi
+--++++++
+--++++++  # Convert the line numbers to a JSON array format for jq filtering
+--++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+--++++++
+--++++++  echo "Changed lines for $file: $line_numbers_array"
+--++++++
+--++++++  # Define the output path for the scanner report in JSON format
+--++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+--+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+--+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+--+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+--++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+--++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+--+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+--+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+--+++++-  echo "Filtering scanner report for $file for Line '70'..."
+--+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+--++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+--++++++  jq --argjson lines "$line_numbers_array" '
+--++++++    [.[] | 
+--++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+--++++++      select(.violations | length > 0)]
+--++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+--+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+--+++++-    echo "No issues found for line '70' in $file"
+--++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+--++++++    echo "No issues found for changed lines in $file"
+--+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+--+++++-  echo "Filtered scanner report for $file (Line '70'):"
+--+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--++++++  echo "Filtered scanner report for $file (Changed lines):"
+--++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++@@ -53 +77 @@ done <<< "$changed_files"
+--+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+--++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+--+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+--+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+--++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+--+++++@@ -60,2 +84,2 @@ fi
+--+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+--+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+--++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+--++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+--+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+--+++++-echo "Final filtered scanner report (Line '70'):"
+--++++++echo "Final filtered scanner report (Changed lines):"
+--+++++@@ -67 +91 @@ cat "$final_report"
+--+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+--++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+--+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+--+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+--++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+--+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+--+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+--++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+--+++++@@ -77 +101 @@ else
+--+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+--++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+--+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+--+++++deleted file mode 100644
+--+++++index 9d692ac..0000000
+--+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+--++++++++ /dev/null
+--+++++@@ -1,24 +0,0 @@
+--+++++-0
+--+++++-1
+--+++++-2
+--+++++-3
+--+++++-4
+--+++++-5
+--+++++-60
+--+++++-642
+--+++++-643
+--+++++-644
+--+++++-645
+--+++++-646
+--+++++-647
+--+++++-648
+--+++++-649
+--+++++-650
+--+++++-651
+--+++++-652
+--+++++-653
+--+++++-654
+--+++++-655
+--+++++-656
+--+++++-657
+--+++++-70
+--+++++diff --git a/changes.diff b/changes.diff
+--+++++deleted file mode 100644
+--+++++index 61d162d..0000000
++-++++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}
++-++++@@ -18,3 +11,2 @@ diff --git a/changes.diff b/changes.diff
++-++++-new file mode 100644
++-++++-index 0000000..a6452b3
++-++++---- /dev/null
++-+++++index 1f4c0b2..1b1df18 100644
+@@ -248,575 +5444,3024 @@ index 1f4c0b2..3afa5f1 100644
+--++++++++ /dev/null
+--+++++@@ -1,647 +0,0 @@
+--+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+--+++++-index 5b262e4..8c05f52 100644
+--+++++---- a/.husky/pre-commit
+--+++++-+++ b/.husky/pre-commit
+--+++++-@@ -113 +113 @@ cat "$final_report"
+--+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+--+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+--+++++-diff --git a/changes.diff b/changes.diff
+--+++++-index 9a218e6..4fe1995 100644
+--+++++---- a/changes.diff
+--+++++-+++ b/changes.diff
+--+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+--+++++--index aa6762f..586962b 100644
+--+++++-+index 586962b..5b262e4 100644
+--+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+--+++++--@@ -41 +41 @@ while IFS= read -r file; do
+--+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+--+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+--+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+--+++++---  # Extract line numbers as a comma-separated string for filtering later
+--+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+--+++++--+  # Extract line numbers as an array for filtering later
+--+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+--+++++--@@ -66 +66 @@ while IFS= read -r file; do
+--+++++---  if [ -z "$line_numbers" ]; then
+--+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+--+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+--+++++--+  # Convert the array of line numbers into a format that can be used by awk
+--+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+--+++++--+  lines_for_filter="${lines_for_filter:1}"
+--+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+--+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+--+++++-+-  awk -v file="$file" '
+--+++++-++  # Extract only the changed line numbers for the file
+--+++++-++  line_numbers=$(awk -v file="$file" '
+--+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+--+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+--+++++-++  ' changes.diff)
+--+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+--+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+--+++++-++  if [ -z "$line_numbers" ]; then
+--+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+--+++++-+-  # Extract line numbers as an array for filtering later
+--+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+--+++++-++  # Convert the line numbers to a comma-separated string for matching
+--+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+--+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+--+++++--@@ -73 +77 @@ while IFS= read -r file; do
+--+++++---  awk -v lines="$line_numbers" '
+--+++++--+  awk -v lines="$lines_for_filter" '
+--+++++--@@ -81 +85 @@ while IFS= read -r file; do
+--+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+--+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+--+++++--@@ -111 +115 @@ cat "$final_report"
+--+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+--+++++-++  echo "Changed lines for $file: $line_numbers_string"
+--+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+--+++++-+-  # Ensure that line_numbers is not empty
+--+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+--+++++-++  # Ensure that line_numbers_string is not empty
+--+++++-++  if [ -z "$line_numbers_string" ]; then
+--+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+--+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+--+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+--+++++-+-  lines_for_filter="${lines_for_filter:1}"
+--+++++-+-
+--+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+--+++++-+-  awk -v lines="$lines_for_filter" '
+--+++++-++  awk -v lines="$line_numbers_string" '
+--+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+--+++++--index 0e43eee..a206584 100644
+--+++++-+index a206584..9d692ac 100644
+--+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+--+++++--@@ -1 +1,6 @@
+--+++++---70 :           System.debug('Hi Hello');
+--+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--+++++--+1 : index 1ec7a54..870d508 100644
+--+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+--+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+--+++++--+4 : -          System.debug('Hi');
+--+++++--+70 :           System.debug('Hi');
+--+++++-+@@ -1,6 +1,24 @@
+--+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--+++++-+-1 : index 1ec7a54..870d508 100644
+--+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+--+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+--+++++-+-4 : -          System.debug('Hi');
+--+++++-+-70 :           System.debug('Hi');
+--+++++-++0
+--+++++-++1
+--+++++-++2
+--+++++-++3
+--+++++-++4
+--+++++-++5
+--+++++-++60
+--+++++-++642
+--+++++-++643
+--+++++-++644
+--+++++-++645
+--+++++-++646
+--+++++-++647
+--+++++-++648
+--+++++-++649
+--+++++-++650
+--+++++-++651
+--+++++-++652
+--+++++-++653
+--+++++-++654
+--+++++-++655
+--+++++-++656
+--+++++-++657
+--+++++-++70
+--+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+--+++++--index 760971b..3dfa538 100644
+--+++++-+index 3dfa538..9a218e6 100644
+--+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+--+++++---index 255a037..525d43a 100644
+--+++++--+index 525d43a..aa6762f 100644
+--+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+--+++++---@@ -50 +50 @@ while IFS= read -r file; do
+--+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+--+++++---+  # Extract line numbers as a comma-separated string for filtering later
+--+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+--+++++----  # Define the output path for the scanner report
+--+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+--+++++---+  # Define the output path for the scanner report in CSV format
+--+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+--+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+--+++++----  # Run the SFDX scanner on the file and generate the report
+--+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+--+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+--+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+--+++++---@@ -71 +71 @@ while IFS= read -r file; do
+--+++++----  # Filter the scanner report based on the changed line numbers
+--+++++---+  # Filter the CSV scanner report based on the changed line numbers
+--+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+--+++++----  jq --arg lines "$line_numbers" '
+--+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+--+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++---+  awk -v lines="$line_numbers" '
+--+++++---+  BEGIN {
+--+++++---+    FS=OFS=",";
+--+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+--+++++---+    for (i in arr) {
+--+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+--+++++---+    }
+--+++++---+  }
+--+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+--+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--+++++---@@ -78 +85 @@ while IFS= read -r file; do
+--+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+--+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+--+++++---@@ -84 +91 @@ while IFS= read -r file; do
+--+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--+++++---@@ -89 +96 @@ done <<< "$changed_files"
+--+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+--+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+--+++++---@@ -95,2 +102,4 @@ fi
+--+++++----# Combine all filtered reports into one final report
+--+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+--+++++---+# Combine all filtered reports into one final report (optional)
+--+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+--+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+--+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+--+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+--+++++----# Parse the final filtered scanner report and check for severity 3 issues
+--+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+--+++++---+echo "Final filtered scanner report:"
+--+++++---+cat "$final_report"
+--+++++---+
+--+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+--+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+--+++++--+-    FS=OFS=",";
+--+++++--++    FS=OFS=",";  # Define CSV format
+--+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+--+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+--+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+--+++++--+@@ -111 +111 @@ cat "$final_report"
+--+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+--+++++--+new file mode 100644
+--+++++--+index 0000000..0e43eee
+--+++++--+--- /dev/null
+--+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+--+++++--+@@ -0,0 +1 @@
+--+++++--++70 :           System.debug('Hi Hello');
+--+++++--+diff --git a/changes.diff b/changes.diff
+--+++++--+new file mode 100644
+--+++++--+index 0000000..760971b
+--+++++--+--- /dev/null
+--+++++--++++ b/changes.diff
+--+++++--+@@ -0,0 +1,65 @@
+--+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+--+++++--++index 255a037..525d43a 100644
+--+++++--++--- a/.husky/pre-commit
+--+++++--+++++ b/.husky/pre-commit
+--+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+--+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+--+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+--+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+--+++++--++-  # Define the output path for the scanner report
+--+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+--+++++--+++  # Define the output path for the scanner report in CSV format
+--+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+--+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+--+++++--++-  # Run the SFDX scanner on the file and generate the report
+--+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+--+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+--+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+--+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+--+++++--++-  # Filter the scanner report based on the changed line numbers
+--+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+--+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+--+++++--++-  jq --arg lines "$line_numbers" '
+--+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+--+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++--+++  awk -v lines="$line_numbers" '
+--+++++--+++  BEGIN {
+--+++++--+++    FS=OFS=",";
+--+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+--+++++--+++    for (i in arr) {
+--+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+--+++++--+++    }
+--+++++--+++  }
+--+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+--+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+--+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+--+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+--+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+--+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+--+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+--+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+--+++++--++@@ -95,2 +102,4 @@ fi
+--+++++--++-# Combine all filtered reports into one final report
+--+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+--+++++--+++# Combine all filtered reports into one final report (optional)
+--+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+--+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+--+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+--+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+--+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+--+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+--+++++--+++echo "Final filtered scanner report:"
+--+++++--+++cat "$final_report"
+--+++++--+++
+--+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+--+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--+++++--++index 1ec7a54..870d508 100644
+--+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+--+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+--+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+--+++++--++-          System.debug('Hi');
+--+++++--+++          System.debug('Hi Hello');
+--+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+--+++++---index 1ec7a54..870d508 100644
+--+++++--+index 870d508..1ec7a54 100644
+--+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+--+++++----          System.debug('Hi');
+--+++++---+          System.debug('Hi Hello');
+--+++++--+-          System.debug('Hi Hello');
+--+++++--++          System.debug('Hi');
+--+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+--+++++--+new file mode 100644
+--+++++--+index 0000000..5a3a1ac
+--+++++--+--- /dev/null
+--+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+--+++++--+@@ -0,0 +1 @@
+--+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+--+++++--+new file mode 100644
+--+++++--+index 0000000..5a3a1ac
+--+++++--+--- /dev/null
+--+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+--+++++--+@@ -0,0 +1 @@
+--+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+--+++++--+new file mode 100644
+--+++++--+index 0000000..e1ef0f0
+--+++++--+--- /dev/null
+--+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+--+++++--+@@ -0,0 +1,5 @@
+--+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+--+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+--+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+--+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+--+++++-+-index 525d43a..aa6762f 100644
+--+++++-++index aa6762f..586962b 100644
+--+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+--+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+--+++++-+--    FS=OFS=",";
+--+++++-+-+    FS=OFS=",";  # Define CSV format
+--+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+--+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+--+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+--+++++-+-@@ -111 +111 @@ cat "$final_report"
+--+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+--+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+--+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+--+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+--+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+--+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+--+++++-+++  # Extract line numbers as an array for filtering later
+--+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+--+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+--+++++-++-  if [ -z "$line_numbers" ]; then
+--+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+--+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+--+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+--+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+--+++++-+++  lines_for_filter="${lines_for_filter:1}"
+--+++++-+++
+--+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+--+++++-++-  awk -v lines="$line_numbers" '
+--+++++-+++  awk -v lines="$lines_for_filter" '
+--+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+--+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+--+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+--+++++-++@@ -111 +115 @@ cat "$final_report"
+--+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+--+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+--+++++-+-new file mode 100644
+--+++++-+-index 0000000..0e43eee
+--+++++-+---- /dev/null
+--+++++-++index 0e43eee..a206584 100644
+--+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+--+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+--+++++-+-@@ -0,0 +1 @@
+--+++++-+-+70 :           System.debug('Hi Hello');
+--+++++-++@@ -1 +1,6 @@
+--+++++-++-70 :           System.debug('Hi Hello');
+--+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--+++++-+++1 : index 1ec7a54..870d508 100644
+--+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+--+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+--+++++-+++4 : -          System.debug('Hi');
+--+++++-+++70 :           System.debug('Hi');
+--+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+--+++++-+-new file mode 100644
+--+++++-+-index 0000000..760971b
+--+++++-+---- /dev/null
+--+++++-++index 760971b..3dfa538 100644
+--+++++-++--- a/changes.diff
+--+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+--+++++-+-@@ -0,0 +1,65 @@
+--+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+--+++++-+-+index 255a037..525d43a 100644
+--+++++-+-+--- a/.husky/pre-commit
+--+++++-+-++++ b/.husky/pre-commit
+--+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+--+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+--+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+--+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+--+++++-+-+-  # Define the output path for the scanner report
+--+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+--+++++-+-++  # Define the output path for the scanner report in CSV format
+--+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+--+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+--+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+--+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+--+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+--+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+--+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+--+++++-+-+-  # Filter the scanner report based on the changed line numbers
+--+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+--+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+--+++++-+-+-  jq --arg lines "$line_numbers" '
+--+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+--+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++-+-++  awk -v lines="$line_numbers" '
+--+++++-+-++  BEGIN {
+--+++++-+-++    FS=OFS=",";
+--+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+--+++++-+-++    for (i in arr) {
+--+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+--+++++-+-++    }
+--+++++-+-++  }
+--+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+--+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+--+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+--+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+--+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+--+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+--+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+--+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+--+++++-+-+@@ -95,2 +102,4 @@ fi
+--+++++-+-+-# Combine all filtered reports into one final report
+--+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+--+++++-+-++# Combine all filtered reports into one final report (optional)
+--+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+--+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+--+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+--+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+--+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+--+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+--+++++-+-++echo "Final filtered scanner report:"
+--+++++-+-++cat "$final_report"
+--+++++-+-++
+--+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+--+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--+++++-+-+index 1ec7a54..870d508 100644
+--+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+--+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+--+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+--+++++-+-+-          System.debug('Hi');
+--+++++-+-++          System.debug('Hi Hello');
+--+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+--+++++-++-index 255a037..525d43a 100644
+--+++++-+++index 525d43a..aa6762f 100644
+--+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+--+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+--+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+--+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+--+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+--+++++-++--  # Define the output path for the scanner report
+--+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+--+++++-++-+  # Define the output path for the scanner report in CSV format
+--+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+--+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+--+++++-++--  # Run the SFDX scanner on the file and generate the report
+--+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+--+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+--+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+--+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+--+++++-++--  # Filter the scanner report based on the changed line numbers
+--+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+--+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+--+++++-++--  jq --arg lines "$line_numbers" '
+--+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+--+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++-++-+  awk -v lines="$line_numbers" '
+--+++++-++-+  BEGIN {
+--+++++-++-+    FS=OFS=",";
+--+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+--+++++-++-+    for (i in arr) {
+--+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+--+++++-++-+    }
+--+++++-++-+  }
+--+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+--+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+--+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+--+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+--+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+--+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+--+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+--+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+--+++++-++-@@ -95,2 +102,4 @@ fi
+--+++++-++--# Combine all filtered reports into one final report
+--+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+--+++++-++-+# Combine all filtered reports into one final report (optional)
+--+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+--+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+--+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+--+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+--+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+--+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+--+++++-++-+echo "Final filtered scanner report:"
+--+++++-++-+cat "$final_report"
+--+++++-++-+
+--+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+--+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+--+++++-+++-    FS=OFS=",";
+--+++++-++++    FS=OFS=",";  # Define CSV format
+--+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+--+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+--+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+--+++++-+++@@ -111 +111 @@ cat "$final_report"
+--+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+--+++++-+++new file mode 100644
+--+++++-+++index 0000000..0e43eee
+--+++++-+++--- /dev/null
+--+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+--+++++-+++@@ -0,0 +1 @@
+--+++++-++++70 :           System.debug('Hi Hello');
+--+++++-+++diff --git a/changes.diff b/changes.diff
+--+++++-+++new file mode 100644
+--+++++-+++index 0000000..760971b
+--+++++-+++--- /dev/null
+--+++++-++++++ b/changes.diff
+--+++++-+++@@ -0,0 +1,65 @@
+--+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+--+++++-++++index 255a037..525d43a 100644
+--+++++-++++--- a/.husky/pre-commit
+--+++++-+++++++ b/.husky/pre-commit
+--+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+--+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+--+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+--+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+--+++++-++++-  # Define the output path for the scanner report
+--+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+--+++++-+++++  # Define the output path for the scanner report in CSV format
+--+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+--+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+--+++++-++++-  # Run the SFDX scanner on the file and generate the report
+--+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+--+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+--+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+--+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+--+++++-++++-  # Filter the scanner report based on the changed line numbers
+--+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+--+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+--+++++-++++-  jq --arg lines "$line_numbers" '
+--+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+--+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++-+++++  awk -v lines="$line_numbers" '
+--+++++-+++++  BEGIN {
+--+++++-+++++    FS=OFS=",";
+--+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+--+++++-+++++    for (i in arr) {
+--+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+--+++++-+++++    }
+--+++++-+++++  }
+--+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+--+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+--+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+--+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+--+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+--+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+--+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+--+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+--+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+--+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+--+++++-++++@@ -95,2 +102,4 @@ fi
+--+++++-++++-# Combine all filtered reports into one final report
+--+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+--+++++-+++++# Combine all filtered reports into one final report (optional)
+--+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+--+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+--+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+--+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+--+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+--+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+--+++++-+++++echo "Final filtered scanner report:"
+--+++++-+++++cat "$final_report"
+--+++++-+++++
+--+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+--+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+--+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--+++++-++++index 1ec7a54..870d508 100644
+--+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+--+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+--+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+--+++++-++++-          System.debug('Hi');
+--+++++-+++++          System.debug('Hi Hello');
+--+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+--+++++-++-index 1ec7a54..870d508 100644
+--+++++-+++index 870d508..1ec7a54 100644
+--+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+--+++++-++--          System.debug('Hi');
+--+++++-++-+          System.debug('Hi Hello');
+--+++++-+++-          System.debug('Hi Hello');
++-++++@@ -22,863 +14,1913 @@ index 0000000..a6452b3
++-++++-@@ -0,0 +1,1262 @@
++-++++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-+index daf61a1..3603bae 100644
++-++++-+--- a/.husky/pre-commit
++-++++-++++ b/.husky/pre-commit
++-++++-+@@ -16 +16 @@ mkdir -p scanner-reports
++-++++-+-git diff --unified=0 --cached > changes.diff
++-++++-++git diff --cached --unified=0 > changes.diff
++-++++-+@@ -25 +25 @@ while IFS= read -r file; do
++-++++-+-  # Extract only the changed line numbers for the file
++-++++-++  # Extract only the added or modified lines for .cls and .lwc files
++-++++-+@@ -32 +32 @@ while IFS= read -r file; do
++-++++-+-  ' changes.diff)
++-++++-++  ' changes.diff | uniq)
++-++++-+@@ -61 +61 @@ while IFS= read -r file; do
++-++++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-++++-+diff --git a/changes.diff b/changes.diff
++-++++-+new file mode 100644
++-++++-+index 0000000..1831031
++-++++-+--- /dev/null
++-++++-++++ b/changes.diff
++-++++-+@@ -0,0 +1,1158 @@
++-++++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-++index daf61a1..d6ae40b 100644
++-++++-++--- a/.husky/pre-commit
++-++++-+++++ b/.husky/pre-commit
++-++++-++@@ -25 +25 @@ while IFS= read -r file; do
++-++++-++-  # Extract only the changed line numbers for the file
++-++++-+++  # Extract only the added or modified lines for .cls and .lwc files
++-++++-++@@ -32 +32 @@ while IFS= read -r file; do
++-++++-++-  ' changes.diff)
++-++++-+++  ' changes.diff | uniq)
++-++++-++@@ -61 +61 @@ while IFS= read -r file; do
++-++++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-++++-++diff --git a/changes.diff b/changes.diff
++-++++-++new file mode 100644
++-++++-++index 0000000..47b6c1c
++-++++-++--- /dev/null
++-++++-+++++ b/changes.diff
++-++++-++@@ -0,0 +1,1078 @@
++-++++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-+++index daf61a1..d6ae40b 100644
++-++++-+++--- a/.husky/pre-commit
++-++++-++++++ b/.husky/pre-commit
++-++++-+++@@ -25 +25 @@ while IFS= read -r file; do
++-++++-+++-  # Extract only the changed line numbers for the file
++-++++-++++  # Extract only the added or modified lines for .cls and .lwc files
++-++++-+++@@ -32 +32 @@ while IFS= read -r file; do
++-++++-+++-  ' changes.diff)
++-++++-++++  ' changes.diff | uniq)
++-++++-+++@@ -61 +61 @@ while IFS= read -r file; do
++-++++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-++++-+++diff --git a/changes.diff b/changes.diff
++-++++-+++new file mode 100644
++-++++-+++index 0000000..8cd4f1a
++-++++-+++--- /dev/null
++-++++-++++++ b/changes.diff
++-++++-+++@@ -0,0 +1,977 @@
++-++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-++++index daf61a1..73bb862 100644
++-++++-++++--- a/.husky/pre-commit
++-++++-+++++++ b/.husky/pre-commit
++-++++-++++@@ -61 +61 @@ while IFS= read -r file; do
++-++++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-++++-++++diff --git a/changes.diff b/changes.diff
++-++++-++++new file mode 100644
++-++++-++++index 0000000..f9d24dc
++-++++-++++--- /dev/null
++-++++-+++++++ b/changes.diff
++-++++-++++@@ -0,0 +1,876 @@
++-++++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-+++++index 19cfdbc..daf61a1 100644
++-++++-+++++--- a/.husky/pre-commit
++-++++-++++++++ b/.husky/pre-commit
++-++++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
++-++++-+++++-  # Define the output path for the scanner report in CSV format
++-++++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++++-++++++  # Extract only the changed line numbers for the file
++-++++-++++++  line_numbers=$(awk -v file="$file" '
++-++++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
++-++++-++++++    /^diff --git/ {inside=0}
++-++++-++++++    $0 ~ file {inside=1}
++-++++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
++-++++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-++++-++++++  ' changes.diff)
++-++++-++++++
++-++++-++++++  # If no changed lines are found for this file, skip it
++-++++-++++++  if [ -z "$line_numbers" ]; then
++-++++-++++++    echo "No changed lines found in $file"
++-++++-++++++    continue
++-++++-++++++  fi
++-++++-++++++
++-++++-++++++  # Convert the line numbers to a JSON array format for jq filtering
++-++++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
++-++++-++++++
++-++++-++++++  echo "Changed lines for $file: $line_numbers_array"
++-++++-++++++
++-++++-++++++  # Define the output path for the scanner report in JSON format
++-++++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
++-++++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
++-++++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
++-++++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
++-++++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
++-++++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
++-++++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
++-++++-++++++  jq --argjson lines "$line_numbers_array" '
++-++++-++++++    [.[] | 
++-++++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++++-++++++      select(.violations | length > 0)]
++-++++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
++-++++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++-+++++-    echo "No issues found for line '70' in $file"
++-++++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++++-++++++    echo "No issues found for changed lines in $file"
++-++++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
++-++++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
++-++++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-++++++  echo "Filtered scanner report for $file (Changed lines):"
++-++++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++@@ -53 +77 @@ done <<< "$changed_files"
++-++++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
++-++++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
++-++++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
++-++++-+++++@@ -60,2 +84,2 @@ fi
++-++++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
++-++++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
++-++++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++-+++++-echo "Final filtered scanner report (Line '70'):"
++-++++-++++++echo "Final filtered scanner report (Changed lines):"
++-++++-+++++@@ -67 +91 @@ cat "$final_report"
++-++++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
++-++++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
++-++++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
++-++++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
++-++++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
++-++++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
++-++++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
++-++++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
++-++++-+++++@@ -77 +101 @@ else
++-++++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
++-++++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
++-++++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++-+++++deleted file mode 100644
++-++++-+++++index 9d692ac..0000000
++-++++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++-++++++++ /dev/null
++-++++-+++++@@ -1,24 +0,0 @@
++-++++-+++++-0
++-++++-+++++-1
++-++++-+++++-2
++-++++-+++++-3
++-++++-+++++-4
++-++++-+++++-5
++-++++-+++++-60
++-++++-+++++-642
++-++++-+++++-643
++-++++-+++++-644
++-++++-+++++-645
++-++++-+++++-646
++-++++-+++++-647
++-++++-+++++-648
++-++++-+++++-649
++-++++-+++++-650
++-++++-+++++-651
++-++++-+++++-652
++-++++-+++++-653
++-++++-+++++-654
++-++++-+++++-655
++-++++-+++++-656
++-++++-+++++-657
++-++++-+++++-70
++-++++-+++++diff --git a/changes.diff b/changes.diff
++-++++-+++++deleted file mode 100644
++-++++-+++++index 61d162d..0000000
++-++++-+++++--- a/changes.diff
++-++++-++++++++ /dev/null
++-++++-+++++@@ -1,647 +0,0 @@
++-++++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-+++++-index 5b262e4..8c05f52 100644
++-++++-+++++---- a/.husky/pre-commit
++-++++-+++++-+++ b/.husky/pre-commit
++-++++-+++++-@@ -113 +113 @@ cat "$final_report"
++-++++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-++++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
++-++++-+++++-diff --git a/changes.diff b/changes.diff
++-++++-+++++-index 9a218e6..4fe1995 100644
++-++++-+++++---- a/changes.diff
++-++++-+++++-+++ b/changes.diff
++-++++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-+++++--index aa6762f..586962b 100644
++-++++-+++++-+index 586962b..5b262e4 100644
++-++++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
++-++++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
++-++++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-++++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
++-++++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-++++-+++++---  # Extract line numbers as a comma-separated string for filtering later
++-++++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-++++-+++++--+  # Extract line numbers as an array for filtering later
++-++++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-++++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
++-++++-+++++---  if [ -z "$line_numbers" ]; then
++-++++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
++-++++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-++++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
++-++++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-++++-+++++--+  lines_for_filter="${lines_for_filter:1}"
++-++++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
++-++++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
++-++++-+++++-+-  awk -v file="$file" '
++-++++-+++++-++  # Extract only the changed line numbers for the file
++-++++-+++++-++  line_numbers=$(awk -v file="$file" '
++-++++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
++-++++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
++-++++-+++++-++  ' changes.diff)
++-++++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
++-++++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
++-++++-+++++-++  if [ -z "$line_numbers" ]; then
++-++++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
++-++++-+++++-+-  # Extract line numbers as an array for filtering later
++-++++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-++++-+++++-++  # Convert the line numbers to a comma-separated string for matching
++-++++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
++-++++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
++-++++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
++-++++-+++++---  awk -v lines="$line_numbers" '
++-++++-+++++--+  awk -v lines="$lines_for_filter" '
++-++++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
++-++++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-++++-+++++--@@ -111 +115 @@ cat "$final_report"
++-++++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-++++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
++-++++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
++-++++-+++++-+-  # Ensure that line_numbers is not empty
++-++++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
++-++++-+++++-++  # Ensure that line_numbers_string is not empty
++-++++-+++++-++  if [ -z "$line_numbers_string" ]; then
++-++++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
++-++++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
++-++++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-++++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
++-++++-+++++-+-
++-++++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
++-++++-+++++-+-  awk -v lines="$lines_for_filter" '
++-++++-+++++-++  awk -v lines="$line_numbers_string" '
++-++++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-++++-+++++--index 0e43eee..a206584 100644
++-++++-+++++-+index a206584..9d692ac 100644
++-++++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
++-++++-+++++--@@ -1 +1,6 @@
++-++++-+++++---70 :           System.debug('Hi Hello');
++-++++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++--+1 : index 1ec7a54..870d508 100644
++-++++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-+++++--+4 : -          System.debug('Hi');
++-++++-+++++--+70 :           System.debug('Hi');
++-++++-+++++-+@@ -1,6 +1,24 @@
++-++++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-+-1 : index 1ec7a54..870d508 100644
++-++++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-+++++-+-4 : -          System.debug('Hi');
++-++++-+++++-+-70 :           System.debug('Hi');
++-++++-+++++-++0
++-++++-+++++-++1
++-++++-+++++-++2
++-++++-+++++-++3
++-++++-+++++-++4
++-++++-+++++-++5
++-++++-+++++-++60
++-++++-+++++-++642
++-++++-+++++-++643
++-++++-+++++-++644
++-++++-+++++-++645
++-++++-+++++-++646
++-++++-+++++-++647
++-++++-+++++-++648
++-++++-+++++-++649
++-++++-+++++-++650
++-++++-+++++-++651
++-++++-+++++-++652
++-++++-+++++-++653
++-++++-+++++-++654
++-++++-+++++-++655
++-++++-+++++-++656
++-++++-+++++-++657
++-++++-+++++-++70
++-++++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
++-++++-+++++--index 760971b..3dfa538 100644
++-++++-+++++-+index 3dfa538..9a218e6 100644
++-++++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
++-++++-+++++---index 255a037..525d43a 100644
++-++++-+++++--+index 525d43a..aa6762f 100644
++-++++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-++++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
++-++++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
++-++++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
++-++++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++++-+++++----  # Define the output path for the scanner report
++-++++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++-+++++---+  # Define the output path for the scanner report in CSV format
++-++++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++++-+++++----  # Run the SFDX scanner on the file and generate the report
++-++++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
++-++++-+++++----  # Filter the scanner report based on the changed line numbers
++-++++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
++-++++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++++-+++++----  jq --arg lines "$line_numbers" '
++-++++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++---+  awk -v lines="$line_numbers" '
++-++++-+++++---+  BEGIN {
++-++++-+++++---+    FS=OFS=",";
++-++++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
++-++++-+++++---+    for (i in arr) {
++-++++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++++-+++++---+    }
++-++++-+++++---+  }
++-++++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
++-++++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
++-++++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
++-++++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++++-+++++---@@ -95,2 +102,4 @@ fi
++-++++-+++++----# Combine all filtered reports into one final report
++-++++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++++-+++++---+# Combine all filtered reports into one final report (optional)
++-++++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
++-++++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++++-+++++---+echo "Final filtered scanner report:"
++-++++-+++++---+cat "$final_report"
++-++++-+++++---+
++-++++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
++-++++-+++++--+-    FS=OFS=",";
++-++++-+++++--++    FS=OFS=",";  # Define CSV format
++-++++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
++-++++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++++-+++++--+@@ -111 +111 @@ cat "$final_report"
++-++++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++-+++++--+new file mode 100644
++-++++-+++++--+index 0000000..0e43eee
++-++++-+++++--+--- /dev/null
++-++++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++-+++++--+@@ -0,0 +1 @@
++-++++-+++++--++70 :           System.debug('Hi Hello');
++-++++-+++++--+diff --git a/changes.diff b/changes.diff
++-++++-+++++--+new file mode 100644
++-++++-+++++--+index 0000000..760971b
++-++++-+++++--+--- /dev/null
++-++++-+++++--++++ b/changes.diff
++-++++-+++++--+@@ -0,0 +1,65 @@
++-++++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-+++++--++index 255a037..525d43a 100644
++-++++-+++++--++--- a/.husky/pre-commit
++-++++-+++++--+++++ b/.husky/pre-commit
++-++++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
++-++++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-++++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
++-++++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++++-+++++--++-  # Define the output path for the scanner report
++-++++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++-+++++--+++  # Define the output path for the scanner report in CSV format
++-++++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++++-+++++--++-  # Run the SFDX scanner on the file and generate the report
++-++++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
++-++++-+++++--++-  # Filter the scanner report based on the changed line numbers
++-++++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
++-++++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++++-+++++--++-  jq --arg lines "$line_numbers" '
++-++++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++--+++  awk -v lines="$line_numbers" '
++-++++-+++++--+++  BEGIN {
++-++++-+++++--+++    FS=OFS=",";
++-++++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
++-++++-+++++--+++    for (i in arr) {
++-++++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++++-+++++--+++    }
++-++++-+++++--+++  }
++-++++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
++-++++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
++-++++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
++-++++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++++-+++++--++@@ -95,2 +102,4 @@ fi
++-++++-+++++--++-# Combine all filtered reports into one final report
++-++++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++++-+++++--+++# Combine all filtered reports into one final report (optional)
++-++++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
++-++++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++++-+++++--+++echo "Final filtered scanner report:"
++-++++-+++++--+++cat "$final_report"
++-++++-+++++--+++
++-++++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++--++index 1ec7a54..870d508 100644
++-++++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-+++++--++-          System.debug('Hi');
++-++++-+++++--+++          System.debug('Hi Hello');
++-++++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++++-+++++---index 1ec7a54..870d508 100644
++-++++-+++++--+index 870d508..1ec7a54 100644
++-++++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-++++-+++++----          System.debug('Hi');
++-++++-+++++---+          System.debug('Hi Hello');
++-++++-+++++--+-          System.debug('Hi Hello');
++-++++-+++++--++          System.debug('Hi');
++-++++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++-+++++--+new file mode 100644
++-++++-+++++--+index 0000000..5a3a1ac
++-++++-+++++--+--- /dev/null
++-++++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++-+++++--+@@ -0,0 +1 @@
++-++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++++-+++++--+new file mode 100644
++-++++-+++++--+index 0000000..5a3a1ac
++-++++-+++++--+--- /dev/null
++-++++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
++-++++-+++++--+@@ -0,0 +1 @@
++-++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++-+++++--+new file mode 100644
++-++++-+++++--+index 0000000..e1ef0f0
++-++++-+++++--+--- /dev/null
++-++++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++-+++++--+@@ -0,0 +1,5 @@
++-++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++-+++++-+-index 525d43a..aa6762f 100644
++-++++-+++++-++index aa6762f..586962b 100644
++-++++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
++-++++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
++-++++-+++++-+--    FS=OFS=",";
++-++++-+++++-+-+    FS=OFS=",";  # Define CSV format
++-++++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
++-++++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++++-+++++-+-@@ -111 +111 @@ cat "$final_report"
++-++++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
++-++++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-++++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-++++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-++++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
++-++++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-++++-+++++-+++  # Extract line numbers as an array for filtering later
++-++++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-++++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
++-++++-+++++-++-  if [ -z "$line_numbers" ]; then
++-++++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
++-++++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-++++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
++-++++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-++++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
++-++++-+++++-+++
++-++++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
++-++++-+++++-++-  awk -v lines="$line_numbers" '
++-++++-+++++-+++  awk -v lines="$lines_for_filter" '
++-++++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
++-++++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-++++-+++++-++@@ -111 +115 @@ cat "$final_report"
++-++++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-++++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-++++-+++++-+-new file mode 100644
++-++++-+++++-+-index 0000000..0e43eee
++-++++-+++++-+---- /dev/null
++-++++-+++++-++index 0e43eee..a206584 100644
++-++++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
++-++++-+++++-+-@@ -0,0 +1 @@
++-++++-+++++-+-+70 :           System.debug('Hi Hello');
++-++++-+++++-++@@ -1 +1,6 @@
++-++++-+++++-++-70 :           System.debug('Hi Hello');
++-++++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-+++1 : index 1ec7a54..870d508 100644
++-++++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-+++++-+++4 : -          System.debug('Hi');
++-++++-+++++-+++70 :           System.debug('Hi');
++-++++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
++-++++-+++++-+-new file mode 100644
++-++++-+++++-+-index 0000000..760971b
++-++++-+++++-+---- /dev/null
++-++++-+++++-++index 760971b..3dfa538 100644
++-++++-+++++-++--- a/changes.diff
++-++++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
++-++++-+++++-+-@@ -0,0 +1,65 @@
++-++++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-+++++-+-+index 255a037..525d43a 100644
++-++++-+++++-+-+--- a/.husky/pre-commit
++-++++-+++++-+-++++ b/.husky/pre-commit
++-++++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
++-++++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
++-++++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
++-++++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++++-+++++-+-+-  # Define the output path for the scanner report
++-++++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++-+++++-+-++  # Define the output path for the scanner report in CSV format
++-++++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
++-++++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
++-++++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
++-++++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
++-++++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++++-+++++-+-+-  jq --arg lines "$line_numbers" '
++-++++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++-+-++  awk -v lines="$line_numbers" '
++-++++-+++++-+-++  BEGIN {
++-++++-+++++-+-++    FS=OFS=",";
++-++++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
++-++++-+++++-+-++    for (i in arr) {
++-++++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++++-+++++-+-++    }
++-++++-+++++-+-++  }
++-++++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
++-++++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
++-++++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
++-++++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++++-+++++-+-+@@ -95,2 +102,4 @@ fi
++-++++-+++++-+-+-# Combine all filtered reports into one final report
++-++++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++++-+++++-+-++# Combine all filtered reports into one final report (optional)
++-++++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
++-++++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++++-+++++-+-++echo "Final filtered scanner report:"
++-++++-+++++-+-++cat "$final_report"
++-++++-+++++-+-++
++-++++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-+-+index 1ec7a54..870d508 100644
++-++++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-+++++-+-+-          System.debug('Hi');
++-++++-+++++-+-++          System.debug('Hi Hello');
++-++++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-+++++-++-index 255a037..525d43a 100644
++-++++-+++++-+++index 525d43a..aa6762f 100644
++-++++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-++++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
++-++++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
++-++++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
++-++++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++++-+++++-++--  # Define the output path for the scanner report
++-++++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++-+++++-++-+  # Define the output path for the scanner report in CSV format
++-++++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++++-+++++-++--  # Run the SFDX scanner on the file and generate the report
++-++++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
++-++++-+++++-++--  # Filter the scanner report based on the changed line numbers
++-++++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
++-++++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++++-+++++-++--  jq --arg lines "$line_numbers" '
++-++++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++-++-+  awk -v lines="$line_numbers" '
++-++++-+++++-++-+  BEGIN {
++-++++-+++++-++-+    FS=OFS=",";
++-++++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
++-++++-+++++-++-+    for (i in arr) {
++-++++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++++-+++++-++-+    }
++-++++-+++++-++-+  }
++-++++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
++-++++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
++-++++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
++-++++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++++-+++++-++-@@ -95,2 +102,4 @@ fi
++-++++-+++++-++--# Combine all filtered reports into one final report
++-++++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++++-+++++-++-+# Combine all filtered reports into one final report (optional)
++-++++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
++-++++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++++-+++++-++-+echo "Final filtered scanner report:"
++-++++-+++++-++-+cat "$final_report"
++-++++-+++++-++-+
++-++++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
++-++++-+++++-+++-    FS=OFS=",";
++-++++-+++++-++++    FS=OFS=",";  # Define CSV format
++-++++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
++-++++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++++-+++++-+++@@ -111 +111 @@ cat "$final_report"
++-++++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++-+++++-+++new file mode 100644
++-++++-+++++-+++index 0000000..0e43eee
++-++++-+++++-+++--- /dev/null
++-++++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++-+++++-+++@@ -0,0 +1 @@
++-++++-+++++-++++70 :           System.debug('Hi Hello');
++-++++-+++++-+++diff --git a/changes.diff b/changes.diff
++-++++-+++++-+++new file mode 100644
++-++++-+++++-+++index 0000000..760971b
++-++++-+++++-+++--- /dev/null
++-++++-+++++-++++++ b/changes.diff
++-++++-+++++-+++@@ -0,0 +1,65 @@
++-++++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++-+++++-++++index 255a037..525d43a 100644
++-++++-+++++-++++--- a/.husky/pre-commit
++-++++-+++++-+++++++ b/.husky/pre-commit
++-++++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
++-++++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-++++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
++-++++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++++-+++++-++++-  # Define the output path for the scanner report
++-++++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++-+++++-+++++  # Define the output path for the scanner report in CSV format
++-++++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
++-++++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
++-++++-+++++-++++-  # Filter the scanner report based on the changed line numbers
++-++++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
++-++++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++++-+++++-++++-  jq --arg lines "$line_numbers" '
++-++++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++-+++++  awk -v lines="$line_numbers" '
++-++++-+++++-+++++  BEGIN {
++-++++-+++++-+++++    FS=OFS=",";
++-++++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
++-++++-+++++-+++++    for (i in arr) {
++-++++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++++-+++++-+++++    }
++-++++-+++++-+++++  }
++-++++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
++-++++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
++-++++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
++-++++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++++-+++++-++++@@ -95,2 +102,4 @@ fi
++-++++-+++++-++++-# Combine all filtered reports into one final report
++-++++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++++-+++++-+++++# Combine all filtered reports into one final report (optional)
++-++++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
++-++++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++++-+++++-+++++echo "Final filtered scanner report:"
++-++++-+++++-+++++cat "$final_report"
++-++++-+++++-+++++
++-++++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-++++index 1ec7a54..870d508 100644
++-++++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-+++++-++++-          System.debug('Hi');
++-++++-+++++-+++++          System.debug('Hi Hello');
++-++++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++++-+++++-++-index 1ec7a54..870d508 100644
++-++++-+++++-+++index 870d508..1ec7a54 100644
++-++++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-++++-+++++-++--          System.debug('Hi');
++-++++-+++++-++-+          System.debug('Hi Hello');
++-++++-+++++-+++-          System.debug('Hi Hello');
++-++++-+++++-++++          System.debug('Hi');
++-++++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++-+++++-+++new file mode 100644
++-++++-+++++-+++index 0000000..5a3a1ac
++-++++-+++++-+++--- /dev/null
++-++++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++-+++++-+++@@ -0,0 +1 @@
++-++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++++-+++++-+++new file mode 100644
++-++++-+++++-+++index 0000000..5a3a1ac
++-++++-+++++-+++--- /dev/null
++-++++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
++-++++-+++++-+++@@ -0,0 +1 @@
++-++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++-+++++-+++new file mode 100644
++-++++-+++++-+++index 0000000..e1ef0f0
++-++++-+++++-+++--- /dev/null
++-++++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++-+++++-+++@@ -0,0 +1,5 @@
++-++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++++-+++++-+-index 870d508..1ec7a54 100644
++-++++-+++++-++index 1ec7a54..870d508 100644
++-++++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
++-++++-+++++-+--          System.debug('Hi Hello');
++-++++-+++++-+-+          System.debug('Hi');
++-++++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++-+++++-+-new file mode 100644
++-++++-+++++-+-index 0000000..5a3a1ac
++-++++-+++++-+---- /dev/null
++-++++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++-+++++-+-@@ -0,0 +1 @@
++-++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++++-+++++-+-new file mode 100644
++-++++-+++++-+-index 0000000..5a3a1ac
++-++++-+++++-+---- /dev/null
++-++++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
++-++++-+++++-+-@@ -0,0 +1 @@
++-++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++-+++++-+-new file mode 100644
++-++++-+++++-+-index 0000000..e1ef0f0
++-++++-+++++-+---- /dev/null
++-++++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++-+++++-+-@@ -0,0 +1,5 @@
++-++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++-+++++-++-          System.debug('Hi');
++-++++-+++++-+++          System.debug('Hi Hello');
++-++++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++++-+++++--index 1ec7a54..870d508 100644
++-++++-+++++-+index 870d508..5eafcac 100644
++-++++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
++-++++-+++++---          System.debug('Hi');
++-++++-+++++--+          System.debug('Hi Hello');
++-++++-+++++-+-          System.debug('Hi Hello');
++-++++-+++++-++          System.debug('Happy');
++-++++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-index 5eafcac..1ec7a54 100644
++-++++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-+++++--          System.debug('Happy');
++-++++-+++++-+          System.debug('Hi');
++-++++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++index 73696e2..9e21e88 100644
++-++++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
++-++++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-+++++-          System.debug('Hello and Hi');
++-++++-++++++          System.debug('Hi AND');
++-++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++-+++++deleted file mode 100644
++-++++-+++++index 5a3a1ac..0000000
++-++++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++-++++++++ /dev/null
++-++++-+++++@@ -1 +0,0 @@
++-++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++-+++++new file mode 100644
++-++++-+++++index 0000000..ebc3aa5
++-++++-+++++--- /dev/null
++-++++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++-+++++@@ -0,0 +1,30 @@
++-++++-++++++[
++-++++-++++++  {
++-++++-++++++    "engine": "pmd",
++-++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-++++-++++++    "violations": [
++-+++++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++++-index daf61a1..3603bae 100644
++-++++++index daf61a1..1328704 100644
++-+++++@@ -11 +11,3 @@ index daf61a1..3603bae 100644
++-+++++-@@ -32 +32 @@ while IFS= read -r file; do
++-++++++@@ -30,3 +30,3 @@ while IFS= read -r file; do
++-++++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
++-++++++-    inside && /^[+][^+]/ {print start_line + line_offset++}
++-+++++@@ -12,0 +15,2 @@ index daf61a1..3603bae 100644
++-+++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
++-+++++++    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
++-+++++@@ -19 +23 @@ new file mode 100644
++-+++++-index 0000000..a6452b3
++-++++++index 0000000..1f4c0b2
++-+++++@@ -22 +26 @@ index 0000000..a6452b3
++-+++++-@@ -0,0 +1,1262 @@
++-++++++@@ -0,0 +1,1293 @@
++-+++++@@ -41 +45 @@ index 0000000..a6452b3
++-+++++-+index 0000000..1831031
++-+++++++index 0000000..a6452b3
++-+++++@@ -44 +48 @@ index 0000000..a6452b3
++-+++++-+@@ -0,0 +1,1158 @@
++-+++++++@@ -0,0 +1,1262 @@
++-+++++@@ -46 +50 @@ index 0000000..a6452b3
++-+++++-++index daf61a1..d6ae40b 100644
++-++++++++index daf61a1..3603bae 100644
++-+++++@@ -48,0 +53,3 @@ index 0000000..a6452b3
++-++++++++@@ -16 +16 @@ mkdir -p scanner-reports
++-++++++++-git diff --unified=0 --cached > changes.diff
++-+++++++++git diff --cached --unified=0 > changes.diff
++-+++++@@ -60 +67 @@ index 0000000..a6452b3
++-+++++-++index 0000000..47b6c1c
++-++++++++index 0000000..1831031
++-+++++@@ -63 +70 @@ index 0000000..a6452b3
++-+++++-++@@ -0,0 +1,1078 @@
++-++++++++@@ -0,0 +1,1158 @@
++-+++++@@ -79 +86 @@ index 0000000..a6452b3
++-+++++-+++index 0000000..8cd4f1a
++-+++++++++index 0000000..47b6c1c
++-+++++@@ -82 +89 @@ index 0000000..a6452b3
++-+++++-+++@@ -0,0 +1,977 @@
++-+++++++++@@ -0,0 +1,1078 @@
++-+++++@@ -84 +91 @@ index 0000000..a6452b3
++-+++++-++++index daf61a1..73bb862 100644
++-++++++++++index daf61a1..d6ae40b 100644
++-+++++@@ -86,0 +94,6 @@ index 0000000..a6452b3
++-++++++++++@@ -25 +25 @@ while IFS= read -r file; do
++-++++++++++-  # Extract only the changed line numbers for the file
++-+++++++++++  # Extract only the added or modified lines for .cls and .lwc files
++-++++++++++@@ -32 +32 @@ while IFS= read -r file; do
++-++++++++++-  ' changes.diff)
++-+++++++++++  ' changes.diff | uniq)
++-+++++@@ -92 +105 @@ index 0000000..a6452b3
++-+++++-++++index 0000000..f9d24dc
++-++++++++++index 0000000..8cd4f1a
++-+++++@@ -95 +108 @@ index 0000000..a6452b3
++-+++++-++++@@ -0,0 +1,876 @@
++-++++++++++@@ -0,0 +1,977 @@
++-+++++@@ -97 +110 @@ index 0000000..a6452b3
++-+++++-+++++index 19cfdbc..daf61a1 100644
++-+++++++++++index daf61a1..73bb862 100644
++-+++++@@ -100,107 +113,3 @@ index 0000000..a6452b3
++-+++++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
++-+++++-+++++-  # Define the output path for the scanner report in CSV format
++-+++++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++++-++++++  # Extract only the changed line numbers for the file
++-+++++-++++++  line_numbers=$(awk -v file="$file" '
++-+++++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
++-+++++-++++++    /^diff --git/ {inside=0}
++-+++++-++++++    $0 ~ file {inside=1}
++-+++++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
++-+++++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-+++++-++++++  ' changes.diff)
++-+++++-++++++
++-+++++-++++++  # If no changed lines are found for this file, skip it
++-+++++-++++++  if [ -z "$line_numbers" ]; then
++-+++++-++++++    echo "No changed lines found in $file"
++-+++++-++++++    continue
++-+++++-++++++  fi
++-+++++-++++++
++-+++++-++++++  # Convert the line numbers to a JSON array format for jq filtering
++-+++++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
++-+++++-++++++
++-+++++-++++++  echo "Changed lines for $file: $line_numbers_array"
++-+++++-++++++
++-+++++-++++++  # Define the output path for the scanner report in JSON format
++-+++++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
++-+++++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
++-+++++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
++-+++++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
++-+++++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
++-+++++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
++-+++++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
++-+++++-++++++  jq --argjson lines "$line_numbers_array" '
++-+++++-++++++    [.[] | 
++-+++++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+++++-++++++      select(.violations | length > 0)]
++-+++++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
++-+++++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++++-+++++-    echo "No issues found for line '70' in $file"
++-+++++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++++-++++++    echo "No issues found for changed lines in $file"
++-+++++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
++-+++++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
++-+++++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-++++++  echo "Filtered scanner report for $file (Changed lines):"
++-+++++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++@@ -53 +77 @@ done <<< "$changed_files"
++-+++++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
++-+++++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
++-+++++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
++-+++++-+++++@@ -60,2 +84,2 @@ fi
++-+++++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
++-+++++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
++-+++++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++++-+++++-echo "Final filtered scanner report (Line '70'):"
++-+++++-++++++echo "Final filtered scanner report (Changed lines):"
++-+++++-+++++@@ -67 +91 @@ cat "$final_report"
++-+++++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
++-+++++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
++-+++++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
++-+++++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
++-+++++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
++-+++++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
++-+++++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
++-+++++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
++-+++++-+++++@@ -77 +101 @@ else
++-+++++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
++-+++++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
++-+++++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++++-+++++deleted file mode 100644
++-+++++-+++++index 9d692ac..0000000
++-+++++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++++-++++++++ /dev/null
++-+++++-+++++@@ -1,24 +0,0 @@
++-+++++-+++++-0
++-+++++-+++++-1
++-+++++-+++++-2
++-+++++-+++++-3
++-+++++-+++++-4
++-+++++-+++++-5
++-+++++-+++++-60
++-+++++-+++++-642
++-+++++-+++++-643
++-+++++-+++++-644
++-+++++-+++++-645
++-+++++-+++++-646
++-+++++-+++++-647
++-+++++-+++++-648
++-+++++-+++++-649
++-+++++-+++++-650
++-+++++-+++++-651
++-+++++-+++++-652
++-+++++-+++++-653
++-+++++-+++++-654
++-+++++-+++++-655
++-+++++-+++++-656
++-+++++-+++++-657
++-+++++-+++++-70
++-+++++++++++@@ -61 +61 @@ while IFS= read -r file; do
++-+++++++++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-++++++++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
++-+++++@@ -208,652 +117,881 @@ index 0000000..a6452b3
++-+++++-+++++deleted file mode 100644
++-+++++-+++++index 61d162d..0000000
++-+++++-+++++--- a/changes.diff
++-+++++-++++++++ /dev/null
++-+++++-+++++@@ -1,647 +0,0 @@
++-+++++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++++-+++++-index 5b262e4..8c05f52 100644
++-+++++-+++++---- a/.husky/pre-commit
++-+++++-+++++-+++ b/.husky/pre-commit
++-+++++-+++++-@@ -113 +113 @@ cat "$final_report"
++-+++++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-+++++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
++-+++++-+++++-diff --git a/changes.diff b/changes.diff
++-+++++-+++++-index 9a218e6..4fe1995 100644
++-+++++-+++++---- a/changes.diff
++-+++++-+++++-+++ b/changes.diff
++-+++++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++++-+++++--index aa6762f..586962b 100644
++-+++++-+++++-+index 586962b..5b262e4 100644
++-+++++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
++-+++++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
++-+++++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-+++++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
++-+++++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-+++++-+++++---  # Extract line numbers as a comma-separated string for filtering later
++-+++++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-+++++-+++++--+  # Extract line numbers as an array for filtering later
++-+++++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-+++++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
++-+++++-+++++---  if [ -z "$line_numbers" ]; then
++-+++++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
++-+++++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-+++++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
++-+++++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-+++++-+++++--+  lines_for_filter="${lines_for_filter:1}"
++-+++++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
++-+++++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
++-+++++-+++++-+-  awk -v file="$file" '
++-+++++-+++++-++  # Extract only the changed line numbers for the file
++-+++++-+++++-++  line_numbers=$(awk -v file="$file" '
++-+++++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
++-+++++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
++-+++++-+++++-++  ' changes.diff)
++-+++++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
++-+++++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
++-+++++-+++++-++  if [ -z "$line_numbers" ]; then
++-+++++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
++-+++++-+++++-+-  # Extract line numbers as an array for filtering later
++-+++++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-+++++-+++++-++  # Convert the line numbers to a comma-separated string for matching
++-+++++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
++-+++++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
++-+++++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
++-+++++-+++++---  awk -v lines="$line_numbers" '
++-+++++-+++++--+  awk -v lines="$lines_for_filter" '
++-+++++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
++-+++++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+++++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-+++++-+++++--@@ -111 +115 @@ cat "$final_report"
++-+++++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-+++++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
++-+++++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
++-+++++-+++++-+-  # Ensure that line_numbers is not empty
++-+++++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
++-+++++-+++++-++  # Ensure that line_numbers_string is not empty
++-+++++-+++++-++  if [ -z "$line_numbers_string" ]; then
++-+++++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
++-+++++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
++-+++++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-+++++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
++-+++++-+++++-+-
++-+++++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
++-+++++-+++++-+-  awk -v lines="$lines_for_filter" '
++-+++++-+++++-++  awk -v lines="$line_numbers_string" '
++-+++++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-+++++-+++++--index 0e43eee..a206584 100644
++-+++++-+++++-+index a206584..9d692ac 100644
++-+++++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
++-+++++-+++++--@@ -1 +1,6 @@
++-+++++-+++++---70 :           System.debug('Hi Hello');
++-+++++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++--+1 : index 1ec7a54..870d508 100644
++-+++++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++++-+++++--+4 : -          System.debug('Hi');
++-+++++-+++++--+70 :           System.debug('Hi');
++-+++++-+++++-+@@ -1,6 +1,24 @@
++-+++++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-+-1 : index 1ec7a54..870d508 100644
++-+++++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++++-+++++-+-4 : -          System.debug('Hi');
++-+++++-+++++-+-70 :           System.debug('Hi');
++-+++++-+++++-++0
++-+++++-+++++-++1
++-+++++-+++++-++2
++-+++++-+++++-++3
++-+++++-+++++-++4
++-+++++-+++++-++5
++-+++++-+++++-++60
++-+++++-+++++-++642
++-+++++-+++++-++643
++-+++++-+++++-++644
++-+++++-+++++-++645
++-+++++-+++++-++646
++-+++++-+++++-++647
++-+++++-+++++-++648
++-+++++-+++++-++649
++-+++++-+++++-++650
++-+++++-+++++-++651
++-+++++-+++++-++652
++-+++++-+++++-++653
++-+++++-+++++-++654
++-+++++-+++++-++655
++-+++++-+++++-++656
++-+++++-+++++-++657
++-+++++-+++++-++70
++-+++++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
++-+++++-+++++--index 760971b..3dfa538 100644
++-+++++-+++++-+index 3dfa538..9a218e6 100644
++-+++++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
++-+++++-+++++---index 255a037..525d43a 100644
++-+++++-+++++--+index 525d43a..aa6762f 100644
++-+++++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-+++++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
++-+++++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
++-+++++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
++-+++++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+++++-+++++----  # Define the output path for the scanner report
++-+++++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++++-+++++---+  # Define the output path for the scanner report in CSV format
++-+++++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+++++-+++++----  # Run the SFDX scanner on the file and generate the report
++-+++++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
++-+++++-+++++----  # Filter the scanner report based on the changed line numbers
++-+++++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
++-+++++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+++++-+++++----  jq --arg lines "$line_numbers" '
++-+++++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+++++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++---+  awk -v lines="$line_numbers" '
++-+++++-+++++---+  BEGIN {
++-+++++-+++++---+    FS=OFS=",";
++-+++++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
++-+++++-+++++---+    for (i in arr) {
++-+++++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+++++-+++++---+    }
++-+++++-+++++---+  }
++-+++++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
++-+++++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
++-+++++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
++-+++++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++++-+++++---@@ -95,2 +102,4 @@ fi
++-+++++-+++++----# Combine all filtered reports into one final report
++-+++++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+++++-+++++---+# Combine all filtered reports into one final report (optional)
++-+++++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+++++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+++++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
++-+++++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+++++-+++++---+echo "Final filtered scanner report:"
++-+++++-+++++---+cat "$final_report"
++-+++++-+++++---+
++-+++++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+++++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
++-+++++-+++++--+-    FS=OFS=",";
++-+++++-+++++--++    FS=OFS=",";  # Define CSV format
++-+++++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
++-+++++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+++++-+++++--+@@ -111 +111 @@ cat "$final_report"
++-+++++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++++-+++++--+new file mode 100644
++-+++++-+++++--+index 0000000..0e43eee
++-+++++-+++++--+--- /dev/null
++-+++++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++++-+++++--+@@ -0,0 +1 @@
++-+++++-+++++--++70 :           System.debug('Hi Hello');
++-+++++-+++++--+diff --git a/changes.diff b/changes.diff
++-+++++-+++++--+new file mode 100644
++-+++++-+++++--+index 0000000..760971b
++-+++++-+++++--+--- /dev/null
++-+++++-+++++--++++ b/changes.diff
++-+++++-+++++--+@@ -0,0 +1,65 @@
++-+++++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++++-+++++--++index 255a037..525d43a 100644
++-+++++-+++++--++--- a/.husky/pre-commit
++-+++++-+++++--+++++ b/.husky/pre-commit
++-+++++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
++-+++++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-+++++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
++-+++++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+++++-+++++--++-  # Define the output path for the scanner report
++-+++++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++++-+++++--+++  # Define the output path for the scanner report in CSV format
++-+++++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+++++-+++++--++-  # Run the SFDX scanner on the file and generate the report
++-+++++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
++-+++++-+++++--++-  # Filter the scanner report based on the changed line numbers
++-+++++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
++-+++++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+++++-+++++--++-  jq --arg lines "$line_numbers" '
++-+++++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+++++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++--+++  awk -v lines="$line_numbers" '
++-+++++-+++++--+++  BEGIN {
++-+++++-+++++--+++    FS=OFS=",";
++-+++++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
++-+++++-+++++--+++    for (i in arr) {
++-+++++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+++++-+++++--+++    }
++-+++++-+++++--+++  }
++-+++++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
++-+++++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
++-+++++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
++-+++++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++++-+++++--++@@ -95,2 +102,4 @@ fi
++-+++++-+++++--++-# Combine all filtered reports into one final report
++-+++++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+++++-+++++--+++# Combine all filtered reports into one final report (optional)
++-+++++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+++++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+++++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
++-+++++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+++++-+++++--+++echo "Final filtered scanner report:"
++-+++++-+++++--+++cat "$final_report"
++-+++++-+++++--+++
++-+++++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+++++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++--++index 1ec7a54..870d508 100644
++-+++++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++++-+++++--++-          System.debug('Hi');
++-+++++-+++++--+++          System.debug('Hi Hello');
++-+++++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+++++-+++++---index 1ec7a54..870d508 100644
++-+++++-+++++--+index 870d508..1ec7a54 100644
++-+++++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-+++++-+++++----          System.debug('Hi');
++-+++++-+++++---+          System.debug('Hi Hello');
++-+++++-+++++--+-          System.debug('Hi Hello');
++-+++++-+++++--++          System.debug('Hi');
++-+++++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++++-+++++--+new file mode 100644
++-+++++-+++++--+index 0000000..5a3a1ac
++-+++++-+++++--+--- /dev/null
++-+++++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++++-+++++--+@@ -0,0 +1 @@
++-+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+++++-+++++--+new file mode 100644
++-+++++-+++++--+index 0000000..5a3a1ac
++-+++++-+++++--+--- /dev/null
++-+++++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
++-+++++-+++++--+@@ -0,0 +1 @@
++-+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++++-+++++--+new file mode 100644
++-+++++-+++++--+index 0000000..e1ef0f0
++-+++++-+++++--+--- /dev/null
++-+++++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++++-+++++--+@@ -0,0 +1,5 @@
++-+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++++-+++++-+-index 525d43a..aa6762f 100644
++-+++++-+++++-++index aa6762f..586962b 100644
++-+++++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
++-+++++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
++-+++++-+++++-+--    FS=OFS=",";
++-+++++-+++++-+-+    FS=OFS=",";  # Define CSV format
++-+++++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
++-+++++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+++++-+++++-+-@@ -111 +111 @@ cat "$final_report"
++-+++++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
++-+++++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-+++++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-+++++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-+++++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
++-+++++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-+++++-+++++-+++  # Extract line numbers as an array for filtering later
++-+++++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-+++++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
++-+++++-+++++-++-  if [ -z "$line_numbers" ]; then
++-+++++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
++-+++++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-+++++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
++-+++++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-+++++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
++-+++++-+++++-+++
++-+++++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
++-+++++-+++++-++-  awk -v lines="$line_numbers" '
++-+++++-+++++-+++  awk -v lines="$lines_for_filter" '
++-+++++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
++-+++++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+++++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-+++++-+++++-++@@ -111 +115 @@ cat "$final_report"
++-+++++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-+++++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-+++++-+++++-+-new file mode 100644
++-+++++-+++++-+-index 0000000..0e43eee
++-+++++-+++++-+---- /dev/null
++-+++++-+++++-++index 0e43eee..a206584 100644
++-+++++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
++-+++++-+++++-+-@@ -0,0 +1 @@
++-+++++-+++++-+-+70 :           System.debug('Hi Hello');
++-+++++-+++++-++@@ -1 +1,6 @@
++-+++++-+++++-++-70 :           System.debug('Hi Hello');
++-+++++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-+++1 : index 1ec7a54..870d508 100644
++-+++++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++++-+++++-+++4 : -          System.debug('Hi');
++-+++++-+++++-+++70 :           System.debug('Hi');
++-+++++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
++-+++++-+++++-+-new file mode 100644
++-+++++-+++++-+-index 0000000..760971b
++-+++++-+++++-+---- /dev/null
++-+++++-+++++-++index 760971b..3dfa538 100644
++-+++++-+++++-++--- a/changes.diff
++-+++++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
++-+++++-+++++-+-@@ -0,0 +1,65 @@
++-+++++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++++-+++++-+-+index 255a037..525d43a 100644
++-+++++-+++++-+-+--- a/.husky/pre-commit
++-+++++-+++++-+-++++ b/.husky/pre-commit
++-+++++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
++-+++++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
++-+++++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
++-+++++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+++++-+++++-+-+-  # Define the output path for the scanner report
++-+++++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++++-+++++-+-++  # Define the output path for the scanner report in CSV format
++-+++++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+++++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
++-+++++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
++-+++++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
++-+++++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
++-+++++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+++++-+++++-+-+-  jq --arg lines "$line_numbers" '
++-+++++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+++++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++-+-++  awk -v lines="$line_numbers" '
++-+++++-+++++-+-++  BEGIN {
++-+++++-+++++-+-++    FS=OFS=",";
++-+++++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
++-+++++-+++++-+-++    for (i in arr) {
++-+++++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+++++-+++++-+-++    }
++-+++++-+++++-+-++  }
++-+++++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
++-+++++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
++-+++++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
++-+++++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++++-+++++-+-+@@ -95,2 +102,4 @@ fi
++-+++++-+++++-+-+-# Combine all filtered reports into one final report
++-+++++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+++++-+++++-+-++# Combine all filtered reports into one final report (optional)
++-+++++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+++++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+++++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
++-+++++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+++++-+++++-+-++echo "Final filtered scanner report:"
++-+++++-+++++-+-++cat "$final_report"
++-+++++-+++++-+-++
++-+++++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+++++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-+-+index 1ec7a54..870d508 100644
++-+++++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++++-+++++-+-+-          System.debug('Hi');
++-+++++-+++++-+-++          System.debug('Hi Hello');
++-+++++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++++-+++++-++-index 255a037..525d43a 100644
++-+++++-+++++-+++index 525d43a..aa6762f 100644
++-+++++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-+++++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
++-+++++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
++-+++++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
++-+++++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+++++-+++++-++--  # Define the output path for the scanner report
++-+++++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++++-+++++-++-+  # Define the output path for the scanner report in CSV format
++-+++++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+++++-+++++-++--  # Run the SFDX scanner on the file and generate the report
++-+++++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
++-+++++-+++++-++--  # Filter the scanner report based on the changed line numbers
++-+++++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
++-+++++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+++++-+++++-++--  jq --arg lines "$line_numbers" '
++-+++++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+++++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++-++-+  awk -v lines="$line_numbers" '
++-+++++-+++++-++-+  BEGIN {
++-+++++-+++++-++-+    FS=OFS=",";
++-+++++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
++-+++++-+++++-++-+    for (i in arr) {
++-+++++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+++++-+++++-++-+    }
++-+++++-+++++-++-+  }
++-+++++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
++-+++++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
++-+++++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
++-+++++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++++-+++++-++-@@ -95,2 +102,4 @@ fi
++-+++++-+++++-++--# Combine all filtered reports into one final report
++-+++++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+++++-+++++-++-+# Combine all filtered reports into one final report (optional)
++-+++++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+++++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+++++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
++-+++++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+++++-+++++-++-+echo "Final filtered scanner report:"
++-+++++-+++++-++-+cat "$final_report"
++-+++++-+++++-++-+
++-+++++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+++++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
++-+++++-+++++-+++-    FS=OFS=",";
++-+++++-+++++-++++    FS=OFS=",";  # Define CSV format
++-+++++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
++-+++++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-+++++-+++++-+++@@ -111 +111 @@ cat "$final_report"
++-+++++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++++-+++++-+++new file mode 100644
++-+++++-+++++-+++index 0000000..0e43eee
++-+++++-+++++-+++--- /dev/null
++-+++++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++++-+++++-+++@@ -0,0 +1 @@
++-+++++-+++++-++++70 :           System.debug('Hi Hello');
++-+++++-+++++-+++diff --git a/changes.diff b/changes.diff
++-+++++-+++++-+++new file mode 100644
++-+++++-+++++-+++index 0000000..760971b
++-+++++-+++++-+++--- /dev/null
++-+++++-+++++-++++++ b/changes.diff
++-+++++-+++++-+++@@ -0,0 +1,65 @@
++-+++++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-+++++-+++++-++++index 255a037..525d43a 100644
++-+++++-+++++-++++--- a/.husky/pre-commit
++-+++++-+++++-+++++++ b/.husky/pre-commit
++-+++++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
++-+++++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-+++++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
++-+++++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-+++++-+++++-++++-  # Define the output path for the scanner report
++-+++++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-+++++-+++++-+++++  # Define the output path for the scanner report in CSV format
++-+++++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-+++++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
++-+++++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-+++++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
++-+++++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
++-+++++-+++++-++++-  # Filter the scanner report based on the changed line numbers
++-+++++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
++-+++++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-+++++-+++++-++++-  jq --arg lines "$line_numbers" '
++-+++++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-+++++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++-+++++  awk -v lines="$line_numbers" '
++-+++++-+++++-+++++  BEGIN {
++-+++++-+++++-+++++    FS=OFS=",";
++-+++++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
++-+++++-+++++-+++++    for (i in arr) {
++-+++++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-+++++-+++++-+++++    }
++-+++++-+++++-+++++  }
++-+++++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-+++++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
++-+++++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-+++++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
++-+++++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-+++++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
++-+++++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-+++++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++++-+++++-++++@@ -95,2 +102,4 @@ fi
++-+++++-+++++-++++-# Combine all filtered reports into one final report
++-+++++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-+++++-+++++-+++++# Combine all filtered reports into one final report (optional)
++-+++++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-+++++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-+++++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-+++++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
++-+++++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-+++++-+++++-+++++echo "Final filtered scanner report:"
++-+++++-+++++-+++++cat "$final_report"
++-+++++-+++++-+++++
++-+++++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-+++++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-+++++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-++++index 1ec7a54..870d508 100644
++-+++++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++++-+++++-++++-          System.debug('Hi');
++-+++++-+++++-+++++          System.debug('Hi Hello');
++-+++++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+++++-+++++-++-index 1ec7a54..870d508 100644
++-+++++-+++++-+++index 870d508..1ec7a54 100644
++-+++++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-+++++-+++++-++--          System.debug('Hi');
++-+++++-+++++-++-+          System.debug('Hi Hello');
++-+++++-+++++-+++-          System.debug('Hi Hello');
++-+++++-+++++-++++          System.debug('Hi');
++-+++++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++++-+++++-+++new file mode 100644
++-+++++-+++++-+++index 0000000..5a3a1ac
++-+++++-+++++-+++--- /dev/null
++-+++++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++++-+++++-+++@@ -0,0 +1 @@
++-+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+++++-+++++-+++new file mode 100644
++-+++++-+++++-+++index 0000000..5a3a1ac
++-+++++-+++++-+++--- /dev/null
++-+++++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
++-+++++-+++++-+++@@ -0,0 +1 @@
++-+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++++-+++++-+++new file mode 100644
++-+++++-+++++-+++index 0000000..e1ef0f0
++-+++++-+++++-+++--- /dev/null
++-+++++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++++-+++++-+++@@ -0,0 +1,5 @@
++-+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+++++-+++++-+-index 870d508..1ec7a54 100644
++-+++++-+++++-++index 1ec7a54..870d508 100644
++-+++++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
++-+++++-+++++-+--          System.debug('Hi Hello');
++-+++++-+++++-+-+          System.debug('Hi');
++-+++++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++++-+++++-+-new file mode 100644
++-+++++-+++++-+-index 0000000..5a3a1ac
++-+++++-+++++-+---- /dev/null
++-+++++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++++-+++++-+-@@ -0,0 +1 @@
++-+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+++++-+++++-+-new file mode 100644
++-+++++-+++++-+-index 0000000..5a3a1ac
++-+++++-+++++-+---- /dev/null
++-+++++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
++-+++++-+++++-+-@@ -0,0 +1 @@
++-+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++++-+++++-+-new file mode 100644
++-+++++-+++++-+-index 0000000..e1ef0f0
++-+++++-+++++-+---- /dev/null
++-+++++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++++-+++++-+-@@ -0,0 +1,5 @@
++-+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++++-+++++-++-          System.debug('Hi');
++-+++++-+++++-+++          System.debug('Hi Hello');
++-+++++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+++++-+++++--index 1ec7a54..870d508 100644
++-+++++-+++++-+index 870d508..5eafcac 100644
++-+++++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
++-+++++-+++++---          System.debug('Hi');
++-+++++-+++++--+          System.debug('Hi Hello');
++-+++++-+++++-+-          System.debug('Hi Hello');
++-+++++-+++++-++          System.debug('Happy');
++-+++++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-index 5eafcac..1ec7a54 100644
++-+++++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
++-+++++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++++-+++++--          System.debug('Happy');
++-+++++-+++++-+          System.debug('Hi');
++-+++++++++++new file mode 100644
++-+++++++++++index 0000000..f9d24dc
++-+++++++++++--- /dev/null
++-++++++++++++++ b/changes.diff
++-+++++++++++@@ -0,0 +1,876 @@
++-++++++++++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++++++++++index 19cfdbc..daf61a1 100644
++-++++++++++++--- a/.husky/pre-commit
++-+++++++++++++++ b/.husky/pre-commit
++-++++++++++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
++-++++++++++++-  # Define the output path for the scanner report in CSV format
++-++++++++++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-+++++++++++++  # Extract only the changed line numbers for the file
++-+++++++++++++  line_numbers=$(awk -v file="$file" '
++-+++++++++++++    BEGIN {inside=0; start_line=0; line_offset=0}
++-+++++++++++++    /^diff --git/ {inside=0}
++-+++++++++++++    $0 ~ file {inside=1}
++-+++++++++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
++-+++++++++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-+++++++++++++  ' changes.diff)
++-+++++++++++++
++-+++++++++++++  # If no changed lines are found for this file, skip it
++-+++++++++++++  if [ -z "$line_numbers" ]; then
++-+++++++++++++    echo "No changed lines found in $file"
++-+++++++++++++    continue
++-+++++++++++++  fi
++-+++++++++++++
++-+++++++++++++  # Convert the line numbers to a JSON array format for jq filtering
++-+++++++++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
++-+++++++++++++
++-+++++++++++++  echo "Changed lines for $file: $line_numbers_array"
++-+++++++++++++
++-+++++++++++++  # Define the output path for the scanner report in JSON format
++-+++++++++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++++++++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
++-++++++++++++-  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++++++++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-+++++++++++++  # Run the SFDX scanner on the file and generate the report in JSON format
++-+++++++++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++++++++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
++-++++++++++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
++-++++++++++++-  echo "Filtering scanner report for $file for Line '70'..."
++-++++++++++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++++++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
++-+++++++++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
++-+++++++++++++  jq --argjson lines "$line_numbers_array" '
++-+++++++++++++    [.[] | 
++-+++++++++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
++-+++++++++++++      select(.violations | length > 0)]
++-+++++++++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
++-++++++++++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++++++++++-    echo "No issues found for line '70' in $file"
++-+++++++++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-+++++++++++++    echo "No issues found for changed lines in $file"
++-++++++++++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
++-++++++++++++-  echo "Filtered scanner report for $file (Line '70'):"
++-++++++++++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-+++++++++++++  echo "Filtered scanner report for $file (Changed lines):"
++-+++++++++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++@@ -53 +77 @@ done <<< "$changed_files"
++-++++++++++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-+++++++++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++++++++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
++-++++++++++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
++-+++++++++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
++-++++++++++++@@ -60,2 +84,2 @@ fi
++-++++++++++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++++++++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-+++++++++++++final_report="scanner-reports/final-filtered-scanner-report.json"
++-+++++++++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
++-++++++++++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++++++++++-echo "Final filtered scanner report (Line '70'):"
++-+++++++++++++echo "Final filtered scanner report (Changed lines):"
++-++++++++++++@@ -67 +91 @@ cat "$final_report"
++-++++++++++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
++-+++++++++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
++-++++++++++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
++-++++++++++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
++-+++++++++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
++-++++++++++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
++-++++++++++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
++-+++++++++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
++-++++++++++++@@ -77 +101 @@ else
++-++++++++++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
++-+++++++++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
++-++++++++++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++++++++++deleted file mode 100644
++-++++++++++++index 9d692ac..0000000
++-++++++++++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-+++++++++++++++ /dev/null
++-++++++++++++@@ -1,24 +0,0 @@
++-++++++++++++-0
++-++++++++++++-1
++-++++++++++++-2
++-++++++++++++-3
++-++++++++++++-4
++-++++++++++++-5
++-++++++++++++-60
++-++++++++++++-642
++-++++++++++++-643
++-++++++++++++-644
++-++++++++++++-645
++-++++++++++++-646
++-++++++++++++-647
++-++++++++++++-648
++-++++++++++++-649
++-++++++++++++-650
++-++++++++++++-651
++-++++++++++++-652
++-++++++++++++-653
++-++++++++++++-654
++-++++++++++++-655
++-++++++++++++-656
++-++++++++++++-657
++-++++++++++++-70
++-++++++++++++diff --git a/changes.diff b/changes.diff
++-++++++++++++deleted file mode 100644
++-++++++++++++index 61d162d..0000000
++-++++++++++++--- a/changes.diff
++-+++++++++++++++ /dev/null
++-++++++++++++@@ -1,647 +0,0 @@
++-++++++++++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++++++++++-index 5b262e4..8c05f52 100644
++-++++++++++++---- a/.husky/pre-commit
++-++++++++++++-+++ b/.husky/pre-commit
++-++++++++++++-@@ -113 +113 @@ cat "$final_report"
++-++++++++++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-++++++++++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
++-++++++++++++-diff --git a/changes.diff b/changes.diff
++-++++++++++++-index 9a218e6..4fe1995 100644
++-++++++++++++---- a/changes.diff
++-++++++++++++-+++ b/changes.diff
++-++++++++++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++++++++++--index aa6762f..586962b 100644
++-++++++++++++-+index 586962b..5b262e4 100644
++-++++++++++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
++-++++++++++++--@@ -41 +41 @@ while IFS= read -r file; do
++-++++++++++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-++++++++++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
++-++++++++++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-++++++++++++---  # Extract line numbers as a comma-separated string for filtering later
++-++++++++++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-++++++++++++--+  # Extract line numbers as an array for filtering later
++-++++++++++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-++++++++++++--@@ -66 +66 @@ while IFS= read -r file; do
++-++++++++++++---  if [ -z "$line_numbers" ]; then
++-++++++++++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
++-++++++++++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-++++++++++++--+  # Convert the array of line numbers into a format that can be used by awk
++-++++++++++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-++++++++++++--+  lines_for_filter="${lines_for_filter:1}"
++-++++++++++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
++-++++++++++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
++-++++++++++++-+-  awk -v file="$file" '
++-++++++++++++-++  # Extract only the changed line numbers for the file
++-++++++++++++-++  line_numbers=$(awk -v file="$file" '
++-++++++++++++-+@@ -42 +42 @@ while IFS= read -r file; do
++-++++++++++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
++-++++++++++++-++  ' changes.diff)
++-++++++++++++-+@@ -45 +45 @@ while IFS= read -r file; do
++-++++++++++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
++-++++++++++++-++  if [ -z "$line_numbers" ]; then
++-++++++++++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
++-++++++++++++-+-  # Extract line numbers as an array for filtering later
++-++++++++++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-++++++++++++-++  # Convert the line numbers to a comma-separated string for matching
++-++++++++++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
++-++++++++++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
++-++++++++++++--@@ -73 +77 @@ while IFS= read -r file; do
++-++++++++++++---  awk -v lines="$line_numbers" '
++-++++++++++++--+  awk -v lines="$lines_for_filter" '
++-++++++++++++--@@ -81 +85 @@ while IFS= read -r file; do
++-++++++++++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++++++++++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-++++++++++++--@@ -111 +115 @@ cat "$final_report"
++-++++++++++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-++++++++++++-++  echo "Changed lines for $file: $line_numbers_string"
++-++++++++++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
++-++++++++++++-+-  # Ensure that line_numbers is not empty
++-++++++++++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
++-++++++++++++-++  # Ensure that line_numbers_string is not empty
++-++++++++++++-++  if [ -z "$line_numbers_string" ]; then
++-++++++++++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
++-++++++++++++-+-  # Convert the array of line numbers into a format that can be used by awk
++-++++++++++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-++++++++++++-+-  lines_for_filter="${lines_for_filter:1}"
++-++++++++++++-+-
++-++++++++++++-+@@ -77 +75 @@ while IFS= read -r file; do
++-++++++++++++-+-  awk -v lines="$lines_for_filter" '
++-++++++++++++-++  awk -v lines="$line_numbers_string" '
++-++++++++++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-++++++++++++--index 0e43eee..a206584 100644
++-++++++++++++-+index a206584..9d692ac 100644
++-++++++++++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
++-++++++++++++--@@ -1 +1,6 @@
++-++++++++++++---70 :           System.debug('Hi Hello');
++-++++++++++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++--+1 : index 1ec7a54..870d508 100644
++-++++++++++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++++++++++--+4 : -          System.debug('Hi');
++-++++++++++++--+70 :           System.debug('Hi');
++-++++++++++++-+@@ -1,6 +1,24 @@
++-++++++++++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-+-1 : index 1ec7a54..870d508 100644
++-++++++++++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++++++++++-+-4 : -          System.debug('Hi');
++-++++++++++++-+-70 :           System.debug('Hi');
++-++++++++++++-++0
++-++++++++++++-++1
++-++++++++++++-++2
++-++++++++++++-++3
++-++++++++++++-++4
++-++++++++++++-++5
++-++++++++++++-++60
++-++++++++++++-++642
++-++++++++++++-++643
++-++++++++++++-++644
++-++++++++++++-++645
++-++++++++++++-++646
++-++++++++++++-++647
++-++++++++++++-++648
++-++++++++++++-++649
++-++++++++++++-++650
++-++++++++++++-++651
++-++++++++++++-++652
++-++++++++++++-++653
++-++++++++++++-++654
++-++++++++++++-++655
++-++++++++++++-++656
++-++++++++++++-++657
++-++++++++++++-++70
++-++++++++++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
++-++++++++++++--index 760971b..3dfa538 100644
++-++++++++++++-+index 3dfa538..9a218e6 100644
++-++++++++++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
++-++++++++++++---index 255a037..525d43a 100644
++-++++++++++++--+index 525d43a..aa6762f 100644
++-++++++++++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-++++++++++++---@@ -50 +50 @@ while IFS= read -r file; do
++-++++++++++++----  # Extract line numbers as a comma-separated string for use in jq filtering
++-++++++++++++---+  # Extract line numbers as a comma-separated string for filtering later
++-++++++++++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++++++++++++----  # Define the output path for the scanner report
++-++++++++++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++++++++++---+  # Define the output path for the scanner report in CSV format
++-++++++++++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++++++++++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++++++++++++----  # Run the SFDX scanner on the file and generate the report
++-++++++++++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++++++++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++++++++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++++++++++++---@@ -71 +71 @@ while IFS= read -r file; do
++-++++++++++++----  # Filter the scanner report based on the changed line numbers
++-++++++++++++---+  # Filter the CSV scanner report based on the changed line numbers
++-++++++++++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++++++++++++----  jq --arg lines "$line_numbers" '
++-++++++++++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++++++++++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++---+  awk -v lines="$line_numbers" '
++-++++++++++++---+  BEGIN {
++-++++++++++++---+    FS=OFS=",";
++-++++++++++++---+    split(lines, arr, ",");  # Split the line numbers into an array
++-++++++++++++---+    for (i in arr) {
++-++++++++++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++++++++++++---+    }
++-++++++++++++---+  }
++-++++++++++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++++++++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++++++++++---@@ -78 +85 @@ while IFS= read -r file; do
++-++++++++++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++++++++++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++++++++++---@@ -84 +91 @@ while IFS= read -r file; do
++-++++++++++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++++++++++---@@ -89 +96 @@ done <<< "$changed_files"
++-++++++++++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++++++++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++++++++++++---@@ -95,2 +102,4 @@ fi
++-++++++++++++----# Combine all filtered reports into one final report
++-++++++++++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++++++++++++---+# Combine all filtered reports into one final report (optional)
++-++++++++++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++++++++++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++++++++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++++++++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++++++++++++----# Parse the final filtered scanner report and check for severity 3 issues
++-++++++++++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++++++++++++---+echo "Final filtered scanner report:"
++-++++++++++++---+cat "$final_report"
++-++++++++++++---+
++-++++++++++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++++++++++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++--+@@ -75 +75 @@ while IFS= read -r file; do
++-++++++++++++--+-    FS=OFS=",";
++-++++++++++++--++    FS=OFS=",";  # Define CSV format
++-++++++++++++--+@@ -81 +81 @@ while IFS= read -r file; do
++-++++++++++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++++++++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++++++++++++--+@@ -111 +111 @@ cat "$final_report"
++-++++++++++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++++++++++--+new file mode 100644
++-++++++++++++--+index 0000000..0e43eee
++-++++++++++++--+--- /dev/null
++-++++++++++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++++++++++--+@@ -0,0 +1 @@
++-++++++++++++--++70 :           System.debug('Hi Hello');
++-++++++++++++--+diff --git a/changes.diff b/changes.diff
++-++++++++++++--+new file mode 100644
++-++++++++++++--+index 0000000..760971b
++-++++++++++++--+--- /dev/null
++-++++++++++++--++++ b/changes.diff
++-++++++++++++--+@@ -0,0 +1,65 @@
++-++++++++++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++++++++++--++index 255a037..525d43a 100644
++-++++++++++++--++--- a/.husky/pre-commit
++-++++++++++++--+++++ b/.husky/pre-commit
++-++++++++++++--++@@ -50 +50 @@ while IFS= read -r file; do
++-++++++++++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-++++++++++++--+++  # Extract line numbers as a comma-separated string for filtering later
++-++++++++++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++++++++++++--++-  # Define the output path for the scanner report
++-++++++++++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++++++++++--+++  # Define the output path for the scanner report in CSV format
++-++++++++++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++++++++++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++++++++++++--++-  # Run the SFDX scanner on the file and generate the report
++-++++++++++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++++++++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++++++++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++++++++++++--++@@ -71 +71 @@ while IFS= read -r file; do
++-++++++++++++--++-  # Filter the scanner report based on the changed line numbers
++-++++++++++++--+++  # Filter the CSV scanner report based on the changed line numbers
++-++++++++++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++++++++++++--++-  jq --arg lines "$line_numbers" '
++-++++++++++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++++++++++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++--+++  awk -v lines="$line_numbers" '
++-++++++++++++--+++  BEGIN {
++-++++++++++++--+++    FS=OFS=",";
++-++++++++++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
++-++++++++++++--+++    for (i in arr) {
++-++++++++++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++++++++++++--+++    }
++-++++++++++++--+++  }
++-++++++++++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++++++++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++++++++++--++@@ -78 +85 @@ while IFS= read -r file; do
++-++++++++++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++++++++++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++++++++++--++@@ -84 +91 @@ while IFS= read -r file; do
++-++++++++++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++++++++++--++@@ -89 +96 @@ done <<< "$changed_files"
++-++++++++++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++++++++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++++++++++++--++@@ -95,2 +102,4 @@ fi
++-++++++++++++--++-# Combine all filtered reports into one final report
++-++++++++++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++++++++++++--+++# Combine all filtered reports into one final report (optional)
++-++++++++++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++++++++++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++++++++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++++++++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++++++++++++--++-# Parse the final filtered scanner report and check for severity 3 issues
++-++++++++++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++++++++++++--+++echo "Final filtered scanner report:"
++-++++++++++++--+++cat "$final_report"
++-++++++++++++--+++
++-++++++++++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++++++++++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++--++index 1ec7a54..870d508 100644
++-++++++++++++--++--- a/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++++++++++--++-          System.debug('Hi');
++-++++++++++++--+++          System.debug('Hi Hello');
++-++++++++++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++++++++++++---index 1ec7a54..870d508 100644
++-++++++++++++--+index 870d508..1ec7a54 100644
++-++++++++++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-++++++++++++----          System.debug('Hi');
++-++++++++++++---+          System.debug('Hi Hello');
++-++++++++++++--+-          System.debug('Hi Hello');
++-++++++++++++--++          System.debug('Hi');
++-++++++++++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++++++++++--+new file mode 100644
++-++++++++++++--+index 0000000..5a3a1ac
++-++++++++++++--+--- /dev/null
++-++++++++++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++++++++++--+@@ -0,0 +1 @@
++-++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++++++++++++--+new file mode 100644
++-++++++++++++--+index 0000000..5a3a1ac
++-++++++++++++--+--- /dev/null
++-++++++++++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
++-++++++++++++--+@@ -0,0 +1 @@
++-++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++++++++++--+new file mode 100644
++-++++++++++++--+index 0000000..e1ef0f0
++-++++++++++++--+--- /dev/null
++-++++++++++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++++++++++--+@@ -0,0 +1,5 @@
++-++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++++++++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++++++++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++++++++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++++++++++-+-index 525d43a..aa6762f 100644
++-++++++++++++-++index aa6762f..586962b 100644
++-++++++++++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
++-++++++++++++-+-@@ -75 +75 @@ while IFS= read -r file; do
++-++++++++++++-+--    FS=OFS=",";
++-++++++++++++-+-+    FS=OFS=",";  # Define CSV format
++-++++++++++++-+-@@ -81 +81 @@ while IFS= read -r file; do
++-++++++++++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++++++++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++++++++++++-+-@@ -111 +111 @@ cat "$final_report"
++-++++++++++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++-++@@ -41 +41 @@ while IFS= read -r file; do
++-++++++++++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
++-++++++++++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
++-++++++++++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
++-++++++++++++-++-  # Extract line numbers as a comma-separated string for filtering later
++-++++++++++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
++-++++++++++++-+++  # Extract line numbers as an array for filtering later
++-++++++++++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
++-++++++++++++-++@@ -66 +66 @@ while IFS= read -r file; do
++-++++++++++++-++-  if [ -z "$line_numbers" ]; then
++-++++++++++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
++-++++++++++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
++-++++++++++++-+++  # Convert the array of line numbers into a format that can be used by awk
++-++++++++++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
++-++++++++++++-+++  lines_for_filter="${lines_for_filter:1}"
++-++++++++++++-+++
++-++++++++++++-++@@ -73 +77 @@ while IFS= read -r file; do
++-++++++++++++-++-  awk -v lines="$line_numbers" '
++-++++++++++++-+++  awk -v lines="$lines_for_filter" '
++-++++++++++++-++@@ -81 +85 @@ while IFS= read -r file; do
++-++++++++++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++++++++++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
++-++++++++++++-++@@ -111 +115 @@ cat "$final_report"
++-++++++++++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
++-++++++++++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
++-++++++++++++-+-new file mode 100644
++-++++++++++++-+-index 0000000..0e43eee
++-++++++++++++-+---- /dev/null
++-++++++++++++-++index 0e43eee..a206584 100644
++-++++++++++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++++++++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
++-++++++++++++-+-@@ -0,0 +1 @@
++-++++++++++++-+-+70 :           System.debug('Hi Hello');
++-++++++++++++-++@@ -1 +1,6 @@
++-++++++++++++-++-70 :           System.debug('Hi Hello');
++-++++++++++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-+++1 : index 1ec7a54..870d508 100644
++-++++++++++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++++++++++-+++4 : -          System.debug('Hi');
++-++++++++++++-+++70 :           System.debug('Hi');
++-++++++++++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
++-++++++++++++-+-new file mode 100644
++-++++++++++++-+-index 0000000..760971b
++-++++++++++++-+---- /dev/null
++-++++++++++++-++index 760971b..3dfa538 100644
++-++++++++++++-++--- a/changes.diff
++-++++++++++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
++-++++++++++++-+-@@ -0,0 +1,65 @@
++-++++++++++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++++++++++-+-+index 255a037..525d43a 100644
++-++++++++++++-+-+--- a/.husky/pre-commit
++-++++++++++++-+-++++ b/.husky/pre-commit
++-++++++++++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
++-++++++++++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
++-++++++++++++-+-++  # Extract line numbers as a comma-separated string for filtering later
++-++++++++++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++++++++++++-+-+-  # Define the output path for the scanner report
++-++++++++++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++++++++++-+-++  # Define the output path for the scanner report in CSV format
++-++++++++++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++++++++++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++++++++++++-+-+-  # Run the SFDX scanner on the file and generate the report
++-++++++++++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++++++++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++++++++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++++++++++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
++-++++++++++++-+-+-  # Filter the scanner report based on the changed line numbers
++-++++++++++++-+-++  # Filter the CSV scanner report based on the changed line numbers
++-++++++++++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++++++++++++-+-+-  jq --arg lines "$line_numbers" '
++-++++++++++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++++++++++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++-+-++  awk -v lines="$line_numbers" '
++-++++++++++++-+-++  BEGIN {
++-++++++++++++-+-++    FS=OFS=",";
++-++++++++++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
++-++++++++++++-+-++    for (i in arr) {
++-++++++++++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++++++++++++-+-++    }
++-++++++++++++-+-++  }
++-++++++++++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++++++++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++++++++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
++-++++++++++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++++++++++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++++++++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
++-++++++++++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++++++++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
++-++++++++++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++++++++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++++++++++++-+-+@@ -95,2 +102,4 @@ fi
++-++++++++++++-+-+-# Combine all filtered reports into one final report
++-++++++++++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++++++++++++-+-++# Combine all filtered reports into one final report (optional)
++-++++++++++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++++++++++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++++++++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++++++++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++++++++++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
++-++++++++++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++++++++++++-+-++echo "Final filtered scanner report:"
++-++++++++++++-+-++cat "$final_report"
++-++++++++++++-+-++
++-++++++++++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++++++++++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-+-+index 1ec7a54..870d508 100644
++-++++++++++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++++++++++-+-+-          System.debug('Hi');
++-++++++++++++-+-++          System.debug('Hi Hello');
++-++++++++++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++++++++++-++-index 255a037..525d43a 100644
++-++++++++++++-+++index 525d43a..aa6762f 100644
++-++++++++++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
++-++++++++++++-++-@@ -50 +50 @@ while IFS= read -r file; do
++-++++++++++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
++-++++++++++++-++-+  # Extract line numbers as a comma-separated string for filtering later
++-++++++++++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++++++++++++-++--  # Define the output path for the scanner report
++-++++++++++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++++++++++-++-+  # Define the output path for the scanner report in CSV format
++-++++++++++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++++++++++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++++++++++++-++--  # Run the SFDX scanner on the file and generate the report
++-++++++++++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++++++++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++++++++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++++++++++++-++-@@ -71 +71 @@ while IFS= read -r file; do
++-++++++++++++-++--  # Filter the scanner report based on the changed line numbers
++-++++++++++++-++-+  # Filter the CSV scanner report based on the changed line numbers
++-++++++++++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++++++++++++-++--  jq --arg lines "$line_numbers" '
++-++++++++++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++++++++++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++-++-+  awk -v lines="$line_numbers" '
++-++++++++++++-++-+  BEGIN {
++-++++++++++++-++-+    FS=OFS=",";
++-++++++++++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
++-++++++++++++-++-+    for (i in arr) {
++-++++++++++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++++++++++++-++-+    }
++-++++++++++++-++-+  }
++-++++++++++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++++++++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++++++++++-++-@@ -78 +85 @@ while IFS= read -r file; do
++-++++++++++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++++++++++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++++++++++-++-@@ -84 +91 @@ while IFS= read -r file; do
++-++++++++++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++++++++++-++-@@ -89 +96 @@ done <<< "$changed_files"
++-++++++++++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++++++++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++++++++++++-++-@@ -95,2 +102,4 @@ fi
++-++++++++++++-++--# Combine all filtered reports into one final report
++-++++++++++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++++++++++++-++-+# Combine all filtered reports into one final report (optional)
++-++++++++++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++++++++++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++++++++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++++++++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++++++++++++-++--# Parse the final filtered scanner report and check for severity 3 issues
++-++++++++++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++++++++++++-++-+echo "Final filtered scanner report:"
++-++++++++++++-++-+cat "$final_report"
++-++++++++++++-++-+
++-++++++++++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++++++++++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++-+++@@ -75 +75 @@ while IFS= read -r file; do
++-++++++++++++-+++-    FS=OFS=",";
++-++++++++++++-++++    FS=OFS=",";  # Define CSV format
++-++++++++++++-+++@@ -81 +81 @@ while IFS= read -r file; do
++-++++++++++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++++++++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
++-++++++++++++-+++@@ -111 +111 @@ cat "$final_report"
++-++++++++++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++++++++++-+++new file mode 100644
++-++++++++++++-+++index 0000000..0e43eee
++-++++++++++++-+++--- /dev/null
++-++++++++++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
++-++++++++++++-+++@@ -0,0 +1 @@
++-++++++++++++-++++70 :           System.debug('Hi Hello');
++-++++++++++++-+++diff --git a/changes.diff b/changes.diff
++-++++++++++++-+++new file mode 100644
++-++++++++++++-+++index 0000000..760971b
++-++++++++++++-+++--- /dev/null
++-++++++++++++-++++++ b/changes.diff
++-++++++++++++-+++@@ -0,0 +1,65 @@
++-++++++++++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
++-++++++++++++-++++index 255a037..525d43a 100644
++-++++++++++++-++++--- a/.husky/pre-commit
++-++++++++++++-+++++++ b/.husky/pre-commit
++-++++++++++++-++++@@ -50 +50 @@ while IFS= read -r file; do
++-++++++++++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
++-++++++++++++-+++++  # Extract line numbers as a comma-separated string for filtering later
++-++++++++++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
++-++++++++++++-++++-  # Define the output path for the scanner report
++-++++++++++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
++-++++++++++++-+++++  # Define the output path for the scanner report in CSV format
++-++++++++++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
++-++++++++++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
++-++++++++++++-++++-  # Run the SFDX scanner on the file and generate the report
++-++++++++++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
++-++++++++++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
++-++++++++++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
++-++++++++++++-++++@@ -71 +71 @@ while IFS= read -r file; do
++-++++++++++++-++++-  # Filter the scanner report based on the changed line numbers
++-++++++++++++-+++++  # Filter the CSV scanner report based on the changed line numbers
++-++++++++++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
++-++++++++++++-++++-  jq --arg lines "$line_numbers" '
++-++++++++++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
++-++++++++++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++-+++++  awk -v lines="$line_numbers" '
++-++++++++++++-+++++  BEGIN {
++-++++++++++++-+++++    FS=OFS=",";
++-++++++++++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
++-++++++++++++-+++++    for (i in arr) {
++-++++++++++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
++-++++++++++++-+++++    }
++-++++++++++++-+++++  }
++-++++++++++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
++-++++++++++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++++++++++-++++@@ -78 +85 @@ while IFS= read -r file; do
++-++++++++++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
++-++++++++++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
++-++++++++++++-++++@@ -84 +91 @@ while IFS= read -r file; do
++-++++++++++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
++-++++++++++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
++-++++++++++++-++++@@ -89 +96 @@ done <<< "$changed_files"
++-++++++++++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
++-++++++++++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
++-++++++++++++-++++@@ -95,2 +102,4 @@ fi
++-++++++++++++-++++-# Combine all filtered reports into one final report
++-++++++++++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
++-++++++++++++-+++++# Combine all filtered reports into one final report (optional)
++-++++++++++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
++-++++++++++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
++-++++++++++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
++-++++++++++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
++-++++++++++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
++-++++++++++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
++-++++++++++++-+++++echo "Final filtered scanner report:"
++-++++++++++++-+++++cat "$final_report"
++-++++++++++++-+++++
++-++++++++++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
++-++++++++++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
++-++++++++++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-++++index 1ec7a54..870d508 100644
++-++++++++++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++++++++++-++++-          System.debug('Hi');
++-++++++++++++-+++++          System.debug('Hi Hello');
++-++++++++++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++++++++++++-++-index 1ec7a54..870d508 100644
++-++++++++++++-+++index 870d508..1ec7a54 100644
++-++++++++++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
++-++++++++++++-++--          System.debug('Hi');
++-++++++++++++-++-+          System.debug('Hi Hello');
++-++++++++++++-+++-          System.debug('Hi Hello');
++-++++++++++++-++++          System.debug('Hi');
++-++++++++++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++++++++++-+++new file mode 100644
++-++++++++++++-+++index 0000000..5a3a1ac
++-++++++++++++-+++--- /dev/null
++-++++++++++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++++++++++-+++@@ -0,0 +1 @@
++-++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++++++++++++-+++new file mode 100644
++-++++++++++++-+++index 0000000..5a3a1ac
++-++++++++++++-+++--- /dev/null
++-++++++++++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
++-++++++++++++-+++@@ -0,0 +1 @@
++-++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++++++++++-+++new file mode 100644
++-++++++++++++-+++index 0000000..e1ef0f0
++-++++++++++++-+++--- /dev/null
++-++++++++++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++++++++++-+++@@ -0,0 +1,5 @@
++-++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++++++++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++++++++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++++++++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++++++++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++++++++++++-+-index 870d508..1ec7a54 100644
++-++++++++++++-++index 1ec7a54..870d508 100644
++-++++++++++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
++-++++++++++++-+--          System.debug('Hi Hello');
++-++++++++++++-+-+          System.debug('Hi');
++-++++++++++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++++++++++-+-new file mode 100644
++-++++++++++++-+-index 0000000..5a3a1ac
++-++++++++++++-+---- /dev/null
++-++++++++++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++++++++++-+-@@ -0,0 +1 @@
++-++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++++++++++++-+-new file mode 100644
++-++++++++++++-+-index 0000000..5a3a1ac
++-++++++++++++-+---- /dev/null
++-++++++++++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
++-++++++++++++-+-@@ -0,0 +1 @@
++-++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++++++++++-+-new file mode 100644
++-++++++++++++-+-index 0000000..e1ef0f0
++-++++++++++++-+---- /dev/null
++-++++++++++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++++++++++-+-@@ -0,0 +1,5 @@
++-++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++++++++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++++++++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++++++++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++++++++++-++-          System.debug('Hi');
++-++++++++++++-+++          System.debug('Hi Hello');
++-++++++++++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++++++++++++--index 1ec7a54..870d508 100644
++-++++++++++++-+index 870d508..5eafcac 100644
++-++++++++++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
++-++++++++++++---          System.debug('Hi');
++-++++++++++++--+          System.debug('Hi Hello');
++-++++++++++++-+-          System.debug('Hi Hello');
++-++++++++++++-++          System.debug('Happy');
++-++++++++++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-index 5eafcac..1ec7a54 100644
++-++++++++++++---- a/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-+++ b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++++++++++--          System.debug('Happy');
++-++++++++++++-+          System.debug('Hi');
++-++++++++++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++index 73696e2..9e21e88 100644
++-++++++++++++--- a/force-app/main/default/classes/Account_Insert.cls
++-+++++++++++++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++++++++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++++++++++-          System.debug('Hello and Hi');
++-+++++++++++++          System.debug('Hi AND');
++-++++++++++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-++++++++++++deleted file mode 100644
++-++++++++++++index 5a3a1ac..0000000
++-++++++++++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++++++++++++++ /dev/null
++-++++++++++++@@ -1 +0,0 @@
++-++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++++++++++new file mode 100644
++-++++++++++++index 0000000..ebc3aa5
++-++++++++++++--- /dev/null
++-+++++++++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++++++++++@@ -0,0 +1,30 @@
++-+++++++++++++[
++-+++++++++++++  {
++-+++++++++++++    "engine": "pmd",
++-+++++++++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++++++++++++    "violations": [
++-+++++++++++++      {
++-+++++++++++++        "line": 70,
++-+++++++++++++        "column": 11,
++-+++++++++++++        "endLine": 70,
++-+++++++++++++        "endColumn": 29,
++-+++++++++++++        "severity": 3,
++-+++++++++++++        "ruleName": "AvoidDebugStatements",
++-+++++++++++++        "category": "Performance",
++-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++++++++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++++++++++++      },
++-+++++++++++++      {
++-+++++++++++++        "line": 70,
++-+++++++++++++        "column": 11,
++-+++++++++++++        "endLine": 70,
++-+++++++++++++        "endColumn": 29,
++-+++++++++++++        "severity": 3,
++-+++++++++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++++++++++++        "category": "Best Practices",
++-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++++++++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++++++++++++      }
++-+++++++++++++    ]
++-+++++++++++++  }
++-+++++++++++++]
++-++++++++++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++++++++++++deleted file mode 100644
++-++++++++++++index 5a3a1ac..0000000
++-++++++++++++--- a/scanner-reports/final-filtered-scanner-report.csv
++-+++++++++++++++ /dev/null
++-++++++++++++@@ -1 +0,0 @@
++-++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-++++++++++++new file mode 100644
++-++++++++++++index 0000000..ebc3aa5
++-++++++++++++--- /dev/null
++-+++++++++++++++ b/scanner-reports/final-filtered-scanner-report.json
++-++++++++++++@@ -0,0 +1,30 @@
++-+++++++++++++[
++-+++++++++++++  {
++-+++++++++++++    "engine": "pmd",
++-+++++++++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++++++++++++    "violations": [
++-+++++++++++++      {
++-+++++++++++++        "line": 70,
++-+++++++++++++        "column": 11,
++-+++++++++++++        "endLine": 70,
++-+++++++++++++        "endColumn": 29,
++-+++++++++++++        "severity": 3,
++-+++++++++++++        "ruleName": "AvoidDebugStatements",
++-+++++++++++++        "category": "Performance",
++-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++++++++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++++++++++++      },
++-+++++++++++++      {
++-+++++++++++++        "line": 70,
++-+++++++++++++        "column": 11,
++-+++++++++++++        "endLine": 70,
++-+++++++++++++        "endColumn": 29,
++-+++++++++++++        "severity": 3,
++-+++++++++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++++++++++++        "category": "Best Practices",
++-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++++++++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++++++++++++      }
++-+++++++++++++    ]
++-+++++++++++++  }
++-+++++++++++++]
++-++++++++++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++++++++++deleted file mode 100644
++-++++++++++++index e1ef0f0..0000000
++-++++++++++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++++++++++++++ /dev/null
++-++++++++++++@@ -1,5 +0,0 @@
++-++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++++++++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++++++++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++++++++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++++++++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++++++++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++++++++++++new file mode 100644
++-++++++++++++index 0000000..c973918
++-++++++++++++--- /dev/null
++-+++++++++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++++++++++++@@ -0,0 +1 @@
++-+++++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++++++++++++\ No newline at end of file
++-+++++@@ -861 +999 @@ index 0000000..a6452b3
++-+++++-+++++index 73696e2..9e21e88 100644
++-+++++++++++index 9e21e88..800635e 100644
++-+++++@@ -865,9 +1003,2 @@ index 0000000..a6452b3
++-+++++-+++++-          System.debug('Hello and Hi');
++-+++++-++++++          System.debug('Hi AND');
++-+++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++++-+++++deleted file mode 100644
++-+++++-+++++index 5a3a1ac..0000000
++-+++++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
++-+++++-++++++++ /dev/null
++-+++++-+++++@@ -1 +0,0 @@
++-+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++++++++-          System.debug('Hi AND');
++-++++++++++++          System.debug('Hi AND Hello');
++-+++++@@ -875,3 +1006,2 @@ index 0000000..a6452b3
++-+++++-+++++new file mode 100644
++-+++++-+++++index 0000000..ebc3aa5
++-+++++-+++++--- /dev/null
++-+++++++++++index ebc3aa5..fe51488 100644
++-+++++++++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++++@@ -879,38 +1009,32 @@ index 0000000..a6452b3
++-+++++-+++++@@ -0,0 +1,30 @@
++-+++++-++++++[
++-+++++-++++++  {
++-+++++-++++++    "engine": "pmd",
++-+++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++++-++++++    "violations": [
++-+++++-++++++      {
++-+++++-++++++        "line": 70,
++-+++++-++++++        "column": 11,
++-+++++-++++++        "endLine": 70,
++-+++++-++++++        "endColumn": 29,
++-+++++-++++++        "severity": 3,
++-+++++-++++++        "ruleName": "AvoidDebugStatements",
++-+++++-++++++        "category": "Performance",
++-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++++-++++++      },
++-+++++-++++++      {
++-+++++-++++++        "line": 70,
++-+++++-++++++        "column": 11,
++-+++++-++++++        "endLine": 70,
++-+++++-++++++        "endColumn": 29,
++-+++++-++++++        "severity": 3,
++-+++++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++++-++++++        "category": "Best Practices",
++-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++++-++++++      }
++-+++++-++++++    ]
++-+++++-++++++  }
++-+++++-++++++]
++-+++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-+++++-+++++deleted file mode 100644
++-+++++-+++++index 5a3a1ac..0000000
++-+++++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
++-+++++-++++++++ /dev/null
++-+++++-+++++@@ -1 +0,0 @@
++-+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++++++++@@ -1,30 +1 @@
++-+++++++++++-[
++-+++++++++++-  {
++-+++++++++++-    "engine": "pmd",
++-+++++++++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++++++++++-    "violations": [
++-+++++++++++-      {
++-+++++++++++-        "line": 70,
++-+++++++++++-        "column": 11,
++-+++++++++++-        "endLine": 70,
++-+++++++++++-        "endColumn": 29,
++-+++++++++++-        "severity": 3,
++-+++++++++++-        "ruleName": "AvoidDebugStatements",
++-+++++++++++-        "category": "Performance",
++-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++++++++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++++++++++-      },
++-+++++++++++-      {
++-+++++++++++-        "line": 70,
++-+++++++++++-        "column": 11,
++-+++++++++++-        "endLine": 70,
++-+++++++++++-        "endColumn": 29,
++-+++++++++++-        "severity": 3,
++-+++++++++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++++++++++-        "category": "Best Practices",
++-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++++++++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++++++++++-      }
++-+++++++++++-    ]
++-+++++++++++-  }
++-+++++++++++-]
++-++++++++++++[]
++-+++++@@ -918,3 +1042,2 @@ index 0000000..a6452b3
++-+++++-+++++new file mode 100644
++-+++++-+++++index 0000000..ebc3aa5
++-+++++-+++++--- /dev/null
++-+++++++++++index ebc3aa5..fe51488 100644
++-+++++++++++--- a/scanner-reports/final-filtered-scanner-report.json
++-+++++@@ -922,42 +1045,32 @@ index 0000000..a6452b3
++-+++++-+++++@@ -0,0 +1,30 @@
++-+++++-++++++[
++-+++++-++++++  {
++-+++++-++++++    "engine": "pmd",
++-+++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++++-++++++    "violations": [
++-+++++-++++++      {
++-+++++-++++++        "line": 70,
++-+++++-++++++        "column": 11,
++-+++++-++++++        "endLine": 70,
++-+++++-++++++        "endColumn": 29,
++-+++++-++++++        "severity": 3,
++-+++++-++++++        "ruleName": "AvoidDebugStatements",
++-+++++-++++++        "category": "Performance",
++-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++++-++++++      },
++-+++++-++++++      {
++-+++++-++++++        "line": 70,
++-+++++-++++++        "column": 11,
++-+++++-++++++        "endLine": 70,
++-+++++-++++++        "endColumn": 29,
++-+++++-++++++        "severity": 3,
++-+++++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++++-++++++        "category": "Best Practices",
++-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++++-++++++      }
++-+++++-++++++    ]
++-+++++-++++++  }
++-+++++-++++++]
++-+++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++++-+++++deleted file mode 100644
++-+++++-+++++index e1ef0f0..0000000
++-+++++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
++-+++++-++++++++ /dev/null
++-+++++-+++++@@ -1,5 +0,0 @@
++-+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-+++++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-+++++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-+++++++++++@@ -1,30 +1 @@
++-+++++++++++-[
++-+++++++++++-  {
++-+++++++++++-    "engine": "pmd",
++-+++++++++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++++++++++-    "violations": [
++-+++++++++++-      {
++-+++++++++++-        "line": 70,
++-+++++++++++-        "column": 11,
++-+++++++++++-        "endLine": 70,
++-+++++++++++-        "endColumn": 29,
++-+++++++++++-        "severity": 3,
++-+++++++++++-        "ruleName": "AvoidDebugStatements",
++-+++++++++++-        "category": "Performance",
++-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++++++++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++++++++++-      },
++-+++++++++++-      {
++-+++++++++++-        "line": 70,
++-+++++++++++-        "column": 11,
++-+++++++++++-        "endLine": 70,
++-+++++++++++-        "endColumn": 29,
++-+++++++++++-        "severity": 3,
++-+++++++++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++++++++++-        "category": "Best Practices",
++-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++++++++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++++++++++-      }
++-+++++++++++-    ]
++-+++++++++++-  }
++-+++++++++++-]
++-++++++++++++[]
++-+++++@@ -965,3 +1078,2 @@ index 0000000..a6452b3
++-+++++-+++++new file mode 100644
++-+++++-+++++index 0000000..c973918
++-+++++-+++++--- /dev/null
++-+++++++++++index c973918..a14d61d 100644
++-+++++++++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++++@@ -969,2 +1081,4 @@ index 0000000..a6452b3
++-+++++-+++++@@ -0,0 +1 @@
++-+++++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++++++++@@ -1 +1 @@
++-+++++++++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++++++++\ No newline at end of file
++-++++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++@@ -973 +1087 @@ index 0000000..a6452b3
++-+++++-++++index 9e21e88..800635e 100644
++-++++++++++index 9e21e88..1ec7a54 100644
++-+++++@@ -978 +1092 @@ index 0000000..a6452b3
++-+++++-+++++          System.debug('Hi AND Hello');
++-+++++++++++          System.debug('Hi');
++-+++++@@ -980 +1094 @@ index 0000000..a6452b3
++-+++++-++++index ebc3aa5..fe51488 100644
++-++++++++++index ebc3aa5..bb2caee 100644
++-+++++@@ -983,10 +1097,24 @@ index 0000000..a6452b3
++-+++++-++++@@ -1,30 +1 @@
++-+++++-++++-[
++-+++++-++++-  {
++-+++++-++++-    "engine": "pmd",
++-+++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++++-++++-    "violations": [
++-+++++-++++-      {
++-+++++-++++-        "line": 70,
++-+++++-++++-        "column": 11,
++-+++++-++++-        "endLine": 70,
++-++++++++++@@ -5,0 +6,22 @@
++-++++@@ -886 +1928 @@ index 0000000..a6452b3
++-++++-++++++        "line": 70,
++-+++++++++++        "line": 20,
++-++++@@ -888,2 +1930,2 @@ index 0000000..a6452b3
++-++++-++++++        "endLine": 70,
++-++++-++++++        "endColumn": 29,
++-+++++++++++        "endLine": 20,
++-+++++++++++        "endColumn": 35,
++-++++@@ -897 +1939 @@ index 0000000..a6452b3
++-++++-++++++        "line": 70,
++-+++++++++++        "line": 20,
++-++++@@ -899,2 +1941,2 @@ index 0000000..a6452b3
++-++++-++++++        "endLine": 70,
++-++++-++++++        "endColumn": 29,
++-+++++++++++        "endLine": 20,
++-+++++++++++        "endColumn": 35,
++-++++@@ -906,22 +1948,42 @@ index 0000000..a6452b3
++-++++-++++++      }
++-++++-++++++    ]
++-++++-++++++  }
++-++++-++++++]
++-++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
++-++++-+++++deleted file mode 100644
++-++++-+++++index 5a3a1ac..0000000
++-++++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
++-++++-++++++++ /dev/null
++-++++-+++++@@ -1 +0,0 @@
++-++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-++++-+++++new file mode 100644
++-++++-+++++index 0000000..ebc3aa5
++-++++-+++++--- /dev/null
++-++++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
++-++++-+++++@@ -0,0 +1,30 @@
++-++++-++++++[
++-++++-++++++  {
++-++++-++++++    "engine": "pmd",
++-++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-++++-++++++    "violations": [
++-+++++++++++      },
++-++++++++++@@ -10 +32 @@
++-+++++@@ -994,10 +1122,2 @@ index 0000000..a6452b3
++-+++++-++++-        "severity": 3,
++-+++++-++++-        "ruleName": "AvoidDebugStatements",
++-+++++-++++-        "category": "Performance",
++-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++++-++++-      },
++-+++++-++++-      {
++-+++++-++++-        "line": 70,
++-+++++-++++-        "column": 11,
++-+++++-++++-        "endLine": 70,
++-+++++++++++        "endColumn": 39,
++-++++++++++@@ -21 +43 @@
++-+++++@@ -1005,10 +1125 @@ index 0000000..a6452b3
++-+++++-++++-        "severity": 3,
++-+++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++++-++++-        "category": "Best Practices",
++-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++++-++++-      }
++-+++++-++++-    ]
++-+++++-++++-  }
++-+++++-++++-]
++-+++++-+++++[]
++-+++++++++++        "endColumn": 39,
++-+++++@@ -1016 +1127 @@ index 0000000..a6452b3
++-+++++-++++index ebc3aa5..fe51488 100644
++-++++++++++index ebc3aa5..bb2caee 100644
++-+++++@@ -1019,10 +1130,24 @@ index 0000000..a6452b3
++-+++++-++++@@ -1,30 +1 @@
++-+++++-++++-[
++-+++++-++++-  {
++-+++++-++++-    "engine": "pmd",
++-+++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+++++-++++-    "violations": [
++-+++++-++++-      {
++-+++++-++++-        "line": 70,
++-+++++-++++-        "column": 11,
++-+++++-++++-        "endLine": 70,
++-++++++++++@@ -5,0 +6,22 @@
++-++++@@ -929 +1991 @@ index 0000000..a6452b3
++-++++-++++++        "line": 70,
++-+++++++++++        "line": 20,
++-++++@@ -931,2 +1993,2 @@ index 0000000..a6452b3
++-++++-++++++        "endLine": 70,
++-++++-++++++        "endColumn": 29,
++-+++++++++++        "endLine": 20,
++-+++++++++++        "endColumn": 35,
++-++++@@ -940 +2002 @@ index 0000000..a6452b3
++-++++-++++++        "line": 70,
++-+++++++++++        "line": 20,
++-++++@@ -942,2 +2004,2 @@ index 0000000..a6452b3
++-++++-++++++        "endLine": 70,
++-++++-++++++        "endColumn": 29,
++-+++++++++++        "endLine": 20,
++-+++++++++++        "endColumn": 35,
++-++++@@ -949,112 +2011,70 @@ index 0000000..a6452b3
++-++++-++++++      }
++-++++-++++++    ]
++-++++-++++++  }
++-++++-++++++]
++-++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++-+++++deleted file mode 100644
++-++++-+++++index e1ef0f0..0000000
++-++++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
++-++++-++++++++ /dev/null
++-++++-+++++@@ -1,5 +0,0 @@
++-++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++-++++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++-++++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++-++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++++-+++++new file mode 100644
++-++++-+++++index 0000000..c973918
++-++++-+++++--- /dev/null
++-++++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++++-+++++@@ -0,0 +1 @@
++-++++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++++-+++++\ No newline at end of file
++-++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++-++++index 9e21e88..800635e 100644
++-++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-++++-          System.debug('Hi AND');
++-++++-+++++          System.debug('Hi AND Hello');
++-++++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++-++++index ebc3aa5..fe51488 100644
++-++++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++-++++@@ -1,30 +1 @@
++-++++-++++-[
++-++++-++++-  {
++-++++-++++-    "engine": "pmd",
++-++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-++++-++++-    "violations": [
++-++++-++++-      {
++-++++-++++-        "line": 70,
++-++++-++++-        "column": 11,
++-++++-++++-        "endLine": 70,
++-++++-++++-        "endColumn": 29,
++-++++-++++-        "severity": 3,
++-++++-++++-        "ruleName": "AvoidDebugStatements",
++-++++-++++-        "category": "Performance",
++-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++++-++++-      },
++-++++-++++-      {
++-++++-++++-        "line": 70,
++-++++-++++-        "column": 11,
++-++++-++++-        "endLine": 70,
++-++++-++++-        "endColumn": 29,
++-++++-++++-        "severity": 3,
++-++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-++++-++++-        "category": "Best Practices",
++-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++++-++++-      }
++-++++-++++-    ]
++-++++-++++-  }
++-++++-++++-]
++-++++-+++++[]
++-++++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-++++-++++index ebc3aa5..fe51488 100644
++-++++-++++--- a/scanner-reports/final-filtered-scanner-report.json
++-++++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
++-++++-++++@@ -1,30 +1 @@
++-++++-++++-[
++-++++-++++-  {
++-++++-++++-    "engine": "pmd",
++-++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-++++-++++-    "violations": [
++-++++-++++-      {
++-++++-++++-        "line": 70,
++-++++-++++-        "column": 11,
++-++++-++++-        "endLine": 70,
++-++++-++++-        "endColumn": 29,
++-++++-++++-        "severity": 3,
++-++++-++++-        "ruleName": "AvoidDebugStatements",
++-++++-++++-        "category": "Performance",
++-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++++-++++-      },
++-++++-++++-      {
++-++++-++++-        "line": 70,
++-++++-++++-        "column": 11,
++-++++-++++-        "endLine": 70,
++-++++-++++-        "endColumn": 29,
++-++++-++++-        "severity": 3,
++-++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-++++-++++-        "category": "Best Practices",
++-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++++-++++-      }
++-++++-++++-    ]
++-++++-++++-  }
++-++++-++++-]
++-++++-+++++[]
++-++++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++++-++++index c973918..a14d61d 100644
++-++++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-++++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++++-++++@@ -1 +1 @@
++-++++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++++-++++\ No newline at end of file
++-++++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++++-++++\ No newline at end of file
++-++++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+++++++++++      },
++-++++++++++@@ -10 +32 @@
++-+++++@@ -1030,10 +1155,2 @@ index 0000000..a6452b3
++-+++++-++++-        "severity": 3,
++-+++++-++++-        "ruleName": "AvoidDebugStatements",
++-+++++-++++-        "category": "Performance",
++-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++++-++++-      },
++-+++++-++++-      {
++-+++++-++++-        "line": 70,
++-+++++-++++-        "column": 11,
++-+++++-++++-        "endLine": 70,
++-+++++++++++        "endColumn": 39,
++-++++++++++@@ -21 +43 @@
++-+++++@@ -1041,10 +1158 @@ index 0000000..a6452b3
++-+++++-++++-        "severity": 3,
++-+++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++++-++++-        "category": "Best Practices",
++-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++++-++++-      }
++-+++++-++++-    ]
++-+++++-++++-  }
++-+++++-++++-]
++-+++++-+++++[]
++-+++++++++++        "endColumn": 39,
++-+++++@@ -1052 +1160 @@ index 0000000..a6452b3
++-+++++-++++index c973918..a14d61d 100644
++-++++++++++index c973918..866c0b7 100644
++-+++++@@ -1058 +1166 @@ index 0000000..a6452b3
++-+++++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++@@ -1061 +1169 @@ index 0000000..a6452b3
++-+++++-+++index 9e21e88..1ec7a54 100644
++-+++++++++index 9e21e88..9a5148a 100644
++-+++++@@ -1066 +1174 @@ index 0000000..a6452b3
+@@ -824,72 +8469,286 @@ index 1f4c0b2..3afa5f1 100644
+--+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+--+++++-+++new file mode 100644
+--+++++-+++index 0000000..5a3a1ac
+--+++++-+++--- /dev/null
+--+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+--+++++-+++@@ -0,0 +1 @@
+--+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+--+++++-+++new file mode 100644
+--+++++-+++index 0000000..5a3a1ac
+--+++++-+++--- /dev/null
+--+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+--+++++-+++@@ -0,0 +1 @@
+--+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+--+++++-+++new file mode 100644
+--+++++-+++index 0000000..e1ef0f0
+--+++++-+++--- /dev/null
+--+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+--+++++-+++@@ -0,0 +1,5 @@
+--+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+--+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+--+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+--+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+--+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+--+++++-+-index 870d508..1ec7a54 100644
+--+++++-++index 1ec7a54..870d508 100644
+--+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+--+++++-+--          System.debug('Hi Hello');
+--+++++-+-+          System.debug('Hi');
+--+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+--+++++-+-new file mode 100644
+--+++++-+-index 0000000..5a3a1ac
+--+++++-+---- /dev/null
+--+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+--+++++-+-@@ -0,0 +1 @@
+--+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+--+++++-+-new file mode 100644
+--+++++-+-index 0000000..5a3a1ac
+--+++++-+---- /dev/null
+--+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+--+++++-+-@@ -0,0 +1 @@
+--+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+--+++++-+-new file mode 100644
+--+++++-+-index 0000000..e1ef0f0
+--+++++-+---- /dev/null
+--+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+--+++++-+-@@ -0,0 +1,5 @@
+--+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+--+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+--+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+--+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+--+++++-++-          System.debug('Hi');
+--+++++-+++          System.debug('Hi Hello');
+--+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+--+++++--index 1ec7a54..870d508 100644
+--+++++-+index 870d508..5eafcac 100644
+--+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+--+++++---          System.debug('Hi');
+--+++++--+          System.debug('Hi Hello');
+--+++++-+-          System.debug('Hi Hello');
+--+++++-++          System.debug('Happy');
+--+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--+++++-index 5eafcac..1ec7a54 100644
+--+++++---- a/force-app/main/default/classes/Account_Insert.cls
+--+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+--+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+--+++++--          System.debug('Happy');
++-++++++++++          System.debug('Hello');
++-+++++@@ -1068 +1176 @@ index 0000000..a6452b3
++-+++++-+++index ebc3aa5..bb2caee 100644
++-+++++++++index ebc3aa5..b33da59 100644
++-+++++@@ -1094,6 +1201,0 @@ index 0000000..a6452b3
++-+++++-+++@@ -10 +32 @@
++-+++++-+++-        "endColumn": 29,
++-+++++-++++        "endColumn": 39,
++-+++++-+++@@ -21 +43 @@
++-+++++-+++-        "endColumn": 29,
++-+++++-++++        "endColumn": 39,
++-+++++@@ -1101 +1203 @@ index 0000000..a6452b3
++-+++++-+++index ebc3aa5..bb2caee 100644
++-+++++++++index ebc3aa5..b33da59 100644
++-+++++@@ -1127,15 +1228,0 @@ index 0000000..a6452b3
++-+++++-+++@@ -10 +32 @@
++-+++++-+++-        "endColumn": 29,
++-+++++-++++        "endColumn": 39,
++-+++++-+++@@ -21 +43 @@
++-+++++-+++-        "endColumn": 29,
++-+++++-++++        "endColumn": 39,
++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++++-+++index c973918..866c0b7 100644
++-+++++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++++-+++@@ -1 +1 @@
++-+++++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++-+++\ No newline at end of file
++-+++++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++-+++\ No newline at end of file
++-+++++@@ -1143 +1230 @@ index 0000000..a6452b3
++-+++++-++index 9e21e88..9a5148a 100644
++-++++@@ -1062,4 +2082,2 @@ index 0000000..a6452b3
++-++++-+++--- a/force-app/main/default/classes/Account_Insert.cls
++-++++-++++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-+++-          System.debug('Hi AND');
++-+++++@@ -1148 +1235 @@ index 0000000..a6452b3
++-+++++-+++          System.debug('Hello');
++-++++@@ -1067,27 +2085,4 @@ index 0000000..a6452b3
++-++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++-+++index ebc3aa5..bb2caee 100644
++-++++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++-+++@@ -5,0 +6,22 @@
++-++++-++++      {
++-++++-++++        "line": 20,
++-++++-++++        "column": 11,
++-++++-++++        "endLine": 20,
++-++++-++++        "endColumn": 35,
++-++++-++++        "severity": 3,
++-++++-++++        "ruleName": "AvoidDebugStatements",
++-++++-++++        "category": "Performance",
++-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++++-++++      },
++-++++-++++      {
++-++++-++++        "line": 20,
++-++++-++++        "column": 11,
++-++++-++++        "endLine": 20,
++-++++-++++        "endColumn": 35,
++-++++-++++        "severity": 3,
++-++++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++++-++++        "category": "Best Practices",
++-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++++-++++      },
++-+++++@@ -1150 +1237 @@ index 0000000..a6452b3
++-+++++-++index ebc3aa5..b33da59 100644
++-++++++++index ebc3aa5..d4945e4 100644
++-+++++@@ -1175,0 +1263,6 @@ index 0000000..a6452b3
++-++++@@ -1096 +2091 @@ index 0000000..a6452b3
++-++++-++++        "endColumn": 39,
++-+++++++++        "endColumn": 32,
++-++++@@ -1099,28 +2094,5 @@ index 0000000..a6452b3
++-++++-++++        "endColumn": 39,
++-++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-++++-+++index ebc3aa5..bb2caee 100644
++-++++-+++--- a/scanner-reports/final-filtered-scanner-report.json
++-++++-++++++ b/scanner-reports/final-filtered-scanner-report.json
++-++++-+++@@ -5,0 +6,22 @@
++-++++-++++      {
++-++++-++++        "line": 20,
++-++++-++++        "column": 11,
++-++++-++++        "endLine": 20,
++-++++-++++        "endColumn": 35,
++-++++-++++        "severity": 3,
++-++++-++++        "ruleName": "AvoidDebugStatements",
++-++++-++++        "category": "Performance",
++-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++++-++++      },
++-++++-++++      {
++-++++-++++        "line": 20,
++-++++-++++        "column": 11,
++-++++-++++        "endLine": 20,
++-++++-++++        "endColumn": 35,
++-++++-++++        "severity": 3,
++-++++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++++-++++        "category": "Best Practices",
++-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++++-++++      },
++-+++++++++        "endColumn": 32,
++-+++++@@ -1177 +1270 @@ index 0000000..a6452b3
++-+++++-++index ebc3aa5..b33da59 100644
++-++++++++index ebc3aa5..d4945e4 100644
++-+++++@@ -1202,0 +1296,15 @@ index 0000000..a6452b3
++-++++@@ -1129 +2101 @@ index 0000000..a6452b3
++-++++-++++        "endColumn": 39,
++-+++++++++        "endColumn": 32,
++-++++@@ -1132 +2104 @@ index 0000000..a6452b3
++-++++-++++        "endColumn": 39,
++-+++++++++        "endColumn": 32,
++-++++@@ -1134 +2106 @@ index 0000000..a6452b3
++-++++-+++index c973918..866c0b7 100644
++-++++++++index c973918..e670f52 100644
++-++++@@ -1140 +2112 @@ index 0000000..a6452b3
++-++++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++++@@ -1142,68 +2114,98 @@ index 0000000..a6452b3
++-++++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++-++index 9e21e88..9a5148a 100644
++-++++-++--- a/force-app/main/default/classes/Account_Insert.cls
++-++++-+++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-++-          System.debug('Hi AND');
++-++++-+++          System.debug('Hello');
++-++++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++-++index ebc3aa5..b33da59 100644
++-++++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++-++@@ -5,0 +6,22 @@
++-++++-+++      {
++-++++-+++        "line": 20,
++-++++-+++        "column": 11,
++-++++-+++        "endLine": 20,
++-++++-+++        "endColumn": 35,
++-++++-+++        "severity": 3,
++-++++-+++        "ruleName": "AvoidDebugStatements",
++-++++-+++        "category": "Performance",
++-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++++-+++      },
++-++++-+++      {
++-++++-+++        "line": 20,
++-++++-+++        "column": 11,
++-++++-+++        "endLine": 20,
++-++++-+++        "endColumn": 35,
++-++++-+++        "severity": 3,
++-++++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++++-+++        "category": "Best Practices",
++-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++++-+++      },
++-++++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-++++-++index ebc3aa5..b33da59 100644
++-++++-++--- a/scanner-reports/final-filtered-scanner-report.json
++-++++-+++++ b/scanner-reports/final-filtered-scanner-report.json
++-++++-++@@ -5,0 +6,22 @@
++-++++-+++      {
++-++++-+++        "line": 20,
++-++++-+++        "column": 11,
++-++++-+++        "endLine": 20,
++-++++-+++        "endColumn": 35,
++-++++-+++        "severity": 3,
++-++++-+++        "ruleName": "AvoidDebugStatements",
++-++++-+++        "category": "Performance",
++-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++++-+++      },
++-++++-+++      {
++-++++-+++        "line": 20,
++-++++-+++        "column": 11,
++-++++-+++        "endLine": 20,
++-++++-+++        "endColumn": 35,
++-++++-+++        "severity": 3,
++-++++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++++-+++        "category": "Best Practices",
++-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++++-+++      },
++-++++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++++-+index 9e21e88..1ec7a54 100644
++-++++-+--- a/force-app/main/default/classes/Account_Insert.cls
++-++++-++++ b/force-app/main/default/classes/Account_Insert.cls
++-++++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++++-+-          System.debug('Hi AND');
++-++++-++          System.debug('Hi');
++-+++++@@ -1204 +1312 @@ index 0000000..a6452b3
++-+++++-+index 9e21e88..1ec7a54 100644
++-+++++++index 9e21e88..d522ad0 100644
++-+++++@@ -1207 +1315,3 @@ index 0000000..a6452b3
++-+++++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+++++++@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
++-++++++++        System.debug('Happy');
++-+++++++@@ -70 +71 @@ public with sharing class AccountInsertClass {
++-+++++@@ -1210,75 +1319,0 @@ index 0000000..a6452b3
++-+++++-+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++++-+index ebc3aa5..d4945e4 100644
++-+++++-+--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++++-++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++++-+@@ -5,0 +6,22 @@
++-+++++-++      {
++-+++++-++        "line": 20,
++-+++++-++        "column": 11,
++-+++++-++        "endLine": 20,
++-+++++-++        "endColumn": 35,
++-+++++-++        "severity": 3,
++-+++++-++        "ruleName": "AvoidDebugStatements",
++-+++++-++        "category": "Performance",
++-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++++-++      },
++-+++++-++      {
++-+++++-++        "line": 20,
++-+++++-++        "column": 11,
++-+++++-++        "endLine": 20,
++-+++++-++        "endColumn": 35,
++-+++++-++        "severity": 3,
++-+++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++++-++        "category": "Best Practices",
++-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++++-++      },
++-+++++-+@@ -10 +32 @@
++-+++++-+-        "endColumn": 29,
++-+++++-++        "endColumn": 32,
++-+++++-+@@ -21 +43 @@
++-+++++-+-        "endColumn": 29,
++-+++++-++        "endColumn": 32,
++-+++++-+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-+++++-+index ebc3aa5..d4945e4 100644
++-+++++-+--- a/scanner-reports/final-filtered-scanner-report.json
++-+++++-++++ b/scanner-reports/final-filtered-scanner-report.json
++-+++++-+@@ -5,0 +6,22 @@
++-+++++-++      {
++-+++++-++        "line": 20,
++-+++++-++        "column": 11,
++-+++++-++        "endLine": 20,
++-+++++-++        "endColumn": 35,
++-+++++-++        "severity": 3,
++-+++++-++        "ruleName": "AvoidDebugStatements",
++-+++++-++        "category": "Performance",
++-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++++-++      },
++-+++++-++      {
++-+++++-++        "line": 20,
++-+++++-++        "column": 11,
++-+++++-++        "endLine": 20,
++-+++++-++        "endColumn": 35,
++-+++++-++        "severity": 3,
++-+++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++++-++        "category": "Best Practices",
++-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++++-++      },
++-+++++-+@@ -10 +32 @@
++-+++++-+-        "endColumn": 29,
++-+++++-++        "endColumn": 32,
++-+++++-+@@ -21 +43 @@
++-+++++-+-        "endColumn": 29,
++-+++++-++        "endColumn": 32,
++-+++++-+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++++-+index c973918..e670f52 100644
++-+++++-+--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++++-++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++++-+@@ -1 +1 @@
++-+++++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++-+\ No newline at end of file
++-+++++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++-+\ No newline at end of file
++-+++++@@ -1286 +1321 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+++++-index 9e21e88..d522ad0 100644
++-++++++index 9e21e88..add3f8c 100644
++-+++++@@ -1289,3 +1324,5 @@ index 9e21e88..d522ad0 100644
++-+++++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
++-+++++-+        System.debug('Happy');
++-+++++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
++-++++++@@ -16,0 +17 @@ public with sharing class AccountInsertClass {
++-+++++++          System.debug('Happy');
++-++++++@@ -20 +20,0 @@ public with sharing class AccountInsertClass {
++-++++++-          System.debug('Hello Hi');
++-++++++@@ -70 +69,0 @@ public with sharing class AccountInsertClass {
++-+++++@@ -1293 +1330,49 @@ index 9e21e88..d522ad0 100644
+@@ -897,7344 +8756,933 @@ index 1f4c0b2..3afa5f1 100644
+--+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--+++++index 73696e2..9e21e88 100644
+--+++++--- a/force-app/main/default/classes/Account_Insert.cls
+--++++++++ b/force-app/main/default/classes/Account_Insert.cls
+--+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+--+++++-          System.debug('Hello and Hi');
+--++++++          System.debug('Hi AND');
+--+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+--+++++deleted file mode 100644
+--+++++index 5a3a1ac..0000000
+--+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+--++++++++ /dev/null
+--+++++@@ -1 +0,0 @@
+--+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+--+++++new file mode 100644
+--+++++index 0000000..ebc3aa5
+--+++++--- /dev/null
+--++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+--+++++@@ -0,0 +1,30 @@
+--++++++[
+--++++++  {
+--++++++    "engine": "pmd",
+--++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+--++++++    "violations": [
+--++++++      {
+--++++++        "line": 70,
+--++++++        "column": 11,
+--++++++        "endLine": 70,
+--++++++        "endColumn": 29,
+--++++++        "severity": 3,
+--++++++        "ruleName": "AvoidDebugStatements",
+--++++++        "category": "Performance",
+--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+--++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+--++++++      },
+--++++++      {
+--++++++        "line": 70,
+--++++++        "column": 11,
+--++++++        "endLine": 70,
+--++++++        "endColumn": 29,
+--++++++        "severity": 3,
+--++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+--++++++        "category": "Best Practices",
+--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+--++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+--++++++      }
+--++++++    ]
+--++++++  }
+--++++++]
+--+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+--+++++deleted file mode 100644
+--+++++index 5a3a1ac..0000000
+--+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+--++++++++ /dev/null
+--+++++@@ -1 +0,0 @@
+--+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+--+++++new file mode 100644
+--+++++index 0000000..ebc3aa5
+--+++++--- /dev/null
+--++++++++ b/scanner-reports/final-filtered-scanner-report.json
+--+++++@@ -0,0 +1,30 @@
+--++++++[
+--++++++  {
+--++++++    "engine": "pmd",
+--++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+--++++++    "violations": [
+--++++++      {
+--++++++        "line": 70,
+--++++++        "column": 11,
+--++++++        "endLine": 70,
+--++++++        "endColumn": 29,
+--++++++        "severity": 3,
+--++++++        "ruleName": "AvoidDebugStatements",
+--++++++        "category": "Performance",
+--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+--++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+--++++++      },
+--++++++      {
+--++++++        "line": 70,
+--++++++        "column": 11,
+--++++++        "endLine": 70,
+--++++++        "endColumn": 29,
+--++++++        "severity": 3,
+--++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+--++++++        "category": "Best Practices",
+--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+--++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+--++++++      }
+--++++++    ]
+--++++++  }
+--++++++]
+--+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+--+++++deleted file mode 100644
+--+++++index e1ef0f0..0000000
+--+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+--++++++++ /dev/null
+--+++++@@ -1,5 +0,0 @@
+--+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+--+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+--+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+--+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+--+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+--+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+--+++++new file mode 100644
+--+++++index 0000000..c973918
+--+++++--- /dev/null
+--++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+--+++++@@ -0,0 +1 @@
+--++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+--+++++\ No newline at end of file
+--++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--++++index 9e21e88..800635e 100644
+--++++--- a/force-app/main/default/classes/Account_Insert.cls
+--+++++++ b/force-app/main/default/classes/Account_Insert.cls
+--++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+--++++-          System.debug('Hi AND');
+--+++++          System.debug('Hi AND Hello');
+--++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+--++++index ebc3aa5..fe51488 100644
+--++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+--+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-index daf61a1..3603bae 100644
+-++index 1328704..8004c80 100644
+-+@@ -5,12 +5,9 @@ index daf61a1..3603bae 100644
+-+-@@ -16 +16 @@ mkdir -p scanner-reports
+-+--git diff --unified=0 --cached > changes.diff
+-+-+git diff --cached --unified=0 > changes.diff
+-+-@@ -25 +25 @@ while IFS= read -r file; do
+-+--  # Extract only the changed line numbers for the file
+-+-+  # Extract only the added or modified lines for .cls and .lwc files
+-+-@@ -32 +32 @@ while IFS= read -r file; do
+-+--  ' changes.diff)
+-+-+  ' changes.diff | uniq)
+-+-@@ -61 +61 @@ while IFS= read -r file; do
+-+--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-++@@ -29,4 +29,4 @@ while IFS= read -r file; do
+-++-    $0 ~ file {inside=1}
+-++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+-++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+-++-  ' changes.diff | uniq)
+-+++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
+-+++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
+-+++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
+-+++  ' changes.diff | sort -n | uniq)
+-+@@ -18,3 +15,2 @@ diff --git a/changes.diff b/changes.diff
+-+-new file mode 100644
+-+-index 0000000..a6452b3
+-+---- /dev/null
+-++index 1f4c0b2..eb6e437 100644
+-++--- a/changes.diff
+-+@@ -22,968 +18,5667 @@ index 0000000..a6452b3
+-+-@@ -0,0 +1,1262 @@
+-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-+index daf61a1..3603bae 100644
+-+-+--- a/.husky/pre-commit
+-+-++++ b/.husky/pre-commit
+-+-+@@ -16 +16 @@ mkdir -p scanner-reports
+-+-+-git diff --unified=0 --cached > changes.diff
+-+-++git diff --cached --unified=0 > changes.diff
+-+-+@@ -25 +25 @@ while IFS= read -r file; do
+-+-+-  # Extract only the changed line numbers for the file
+-+-++  # Extract only the added or modified lines for .cls and .lwc files
+-+-+@@ -32 +32 @@ while IFS= read -r file; do
+-+-+-  ' changes.diff)
+-+-++  ' changes.diff | uniq)
+-+-+@@ -61 +61 @@ while IFS= read -r file; do
+-+-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+-+diff --git a/changes.diff b/changes.diff
+-+-+new file mode 100644
+-+-+index 0000000..1831031
+-+-+--- /dev/null
+-+-++++ b/changes.diff
+-+-+@@ -0,0 +1,1158 @@
+-+-++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-++index daf61a1..d6ae40b 100644
+-+-++--- a/.husky/pre-commit
+-+-+++++ b/.husky/pre-commit
+-+-++@@ -25 +25 @@ while IFS= read -r file; do
+-+-++-  # Extract only the changed line numbers for the file
+-+-+++  # Extract only the added or modified lines for .cls and .lwc files
+-+-++@@ -32 +32 @@ while IFS= read -r file; do
+-+-++-  ' changes.diff)
+-+-+++  ' changes.diff | uniq)
+-+-++@@ -61 +61 @@ while IFS= read -r file; do
+-+-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+-++diff --git a/changes.diff b/changes.diff
+-+-++new file mode 100644
+-+-++index 0000000..47b6c1c
+-+-++--- /dev/null
+-+-+++++ b/changes.diff
+-+-++@@ -0,0 +1,1078 @@
+-+-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-+++index daf61a1..d6ae40b 100644
+-+-+++--- a/.husky/pre-commit
+-+-++++++ b/.husky/pre-commit
+-+-+++@@ -25 +25 @@ while IFS= read -r file; do
+-+-+++-  # Extract only the changed line numbers for the file
+-+-++++  # Extract only the added or modified lines for .cls and .lwc files
+-+-+++@@ -32 +32 @@ while IFS= read -r file; do
+-+-+++-  ' changes.diff)
+-+-++++  ' changes.diff | uniq)
+-+-+++@@ -61 +61 @@ while IFS= read -r file; do
+-+-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+-+++diff --git a/changes.diff b/changes.diff
+-+-+++new file mode 100644
+-+-+++index 0000000..8cd4f1a
+-+-+++--- /dev/null
+-+-++++++ b/changes.diff
+-+-+++@@ -0,0 +1,977 @@
+-+-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-++++index daf61a1..73bb862 100644
+-+-++++--- a/.husky/pre-commit
+-+-+++++++ b/.husky/pre-commit
+-+-++++@@ -61 +61 @@ while IFS= read -r file; do
+-+-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+-++++diff --git a/changes.diff b/changes.diff
+-+-++++new file mode 100644
+-+-++++index 0000000..f9d24dc
+-+-++++--- /dev/null
+-+-+++++++ b/changes.diff
+-+-++++@@ -0,0 +1,876 @@
+-+-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-+++++index 19cfdbc..daf61a1 100644
+-+-+++++--- a/.husky/pre-commit
+-+-++++++++ b/.husky/pre-commit
+-+-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+-+-+++++-  # Define the output path for the scanner report in CSV format
+-+-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+-++++++  # Extract only the changed line numbers for the file
+-+-++++++  line_numbers=$(awk -v file="$file" '
+-+-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+-+-++++++    /^diff --git/ {inside=0}
+-+-++++++    $0 ~ file {inside=1}
+-+-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+-+-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-+-++++++  ' changes.diff)
+-+-++++++
+-+-++++++  # If no changed lines are found for this file, skip it
+-+-++++++  if [ -z "$line_numbers" ]; then
+-+-++++++    echo "No changed lines found in $file"
+-+-++++++    continue
+-+-++++++  fi
+-+-++++++
+-+-++++++  # Convert the line numbers to a JSON array format for jq filtering
+-+-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+-+-++++++
+-+-++++++  echo "Changed lines for $file: $line_numbers_array"
+-+-++++++
+-+-++++++  # Define the output path for the scanner report in JSON format
+-+-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+-+-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+-+-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+-+-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+-+-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+-+-+++++-  echo "Filtering scanner report for $file for Line '70'..."
+-+-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+-+-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+-+-++++++  jq --argjson lines "$line_numbers_array" '
+-+-++++++    [.[] | 
+-+-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+-++++++      select(.violations | length > 0)]
+-+-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+-+-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+-+++++-    echo "No issues found for line '70' in $file"
+-+-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+-++++++    echo "No issues found for changed lines in $file"
+-+-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+-+-+++++-  echo "Filtered scanner report for $file (Line '70'):"
+-+-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-++++++  echo "Filtered scanner report for $file (Changed lines):"
+-+-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++@@ -53 +77 @@ done <<< "$changed_files"
+-+-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+-+-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+-+-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+-+-+++++@@ -60,2 +84,2 @@ fi
+-+-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+-+-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+-+-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+-+++++-echo "Final filtered scanner report (Line '70'):"
+-+-++++++echo "Final filtered scanner report (Changed lines):"
+-+-+++++@@ -67 +91 @@ cat "$final_report"
+-+-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+-+-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+-+-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+-+-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+-+-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+-+-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+-+-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+-+-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+-+-+++++@@ -77 +101 @@ else
+-+-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+-+-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+-+-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+-+++++deleted file mode 100644
+-+-+++++index 9d692ac..0000000
+-+-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+-++++++++ /dev/null
+-+-+++++@@ -1,24 +0,0 @@
+-+-+++++-0
+-+-+++++-1
+-+-+++++-2
+-+-+++++-3
+-+-+++++-4
+-+-+++++-5
+-+-+++++-60
+-+-+++++-642
+-+-+++++-643
+-+-+++++-644
+-+-+++++-645
+-+-+++++-646
+-+-+++++-647
+-+-+++++-648
+-+-+++++-649
+-+-+++++-650
+-+-+++++-651
+-+-+++++-652
+-+-+++++-653
+-+-+++++-654
+-+-+++++-655
+-+-+++++-656
+-+-+++++-657
+-+-+++++-70
+-+-+++++diff --git a/changes.diff b/changes.diff
+-+-+++++deleted file mode 100644
+-+-+++++index 61d162d..0000000
+-+-+++++--- a/changes.diff
+-+-++++++++ /dev/null
+-+-+++++@@ -1,647 +0,0 @@
+-+-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-+++++-index 5b262e4..8c05f52 100644
+-+-+++++---- a/.husky/pre-commit
+-+-+++++-+++ b/.husky/pre-commit
+-+-+++++-@@ -113 +113 @@ cat "$final_report"
+-+-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-+-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+-+-+++++-diff --git a/changes.diff b/changes.diff
+-+-+++++-index 9a218e6..4fe1995 100644
+-+-+++++---- a/changes.diff
+-+-+++++-+++ b/changes.diff
+-+-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-+++++--index aa6762f..586962b 100644
+-+-+++++-+index 586962b..5b262e4 100644
+-+-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+-+-+++++--@@ -41 +41 @@ while IFS= read -r file; do
+-+-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-+-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+-+-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-+-+++++---  # Extract line numbers as a comma-separated string for filtering later
+-+-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-+-+++++--+  # Extract line numbers as an array for filtering later
+-+-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-+-+++++--@@ -66 +66 @@ while IFS= read -r file; do
+-+-+++++---  if [ -z "$line_numbers" ]; then
+-+-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+-+-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-+-+++++--+  # Convert the array of line numbers into a format that can be used by awk
+-+-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-+-+++++--+  lines_for_filter="${lines_for_filter:1}"
+-+-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+-+-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+-+-+++++-+-  awk -v file="$file" '
+-+-+++++-++  # Extract only the changed line numbers for the file
+-+-+++++-++  line_numbers=$(awk -v file="$file" '
+-+-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+-+-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+-+-+++++-++  ' changes.diff)
+-+-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+-+-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+-+-+++++-++  if [ -z "$line_numbers" ]; then
+-+-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+-+-+++++-+-  # Extract line numbers as an array for filtering later
+-+-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-+-+++++-++  # Convert the line numbers to a comma-separated string for matching
+-+-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+-+-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+-+-+++++--@@ -73 +77 @@ while IFS= read -r file; do
+-+-+++++---  awk -v lines="$line_numbers" '
+-+-+++++--+  awk -v lines="$lines_for_filter" '
+-+-+++++--@@ -81 +85 @@ while IFS= read -r file; do
+-+-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-+-+++++--@@ -111 +115 @@ cat "$final_report"
+-+-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-+-+++++-++  echo "Changed lines for $file: $line_numbers_string"
+-+-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+-+-+++++-+-  # Ensure that line_numbers is not empty
+-+-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+-+-+++++-++  # Ensure that line_numbers_string is not empty
+-+-+++++-++  if [ -z "$line_numbers_string" ]; then
+-+-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+-+-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+-+-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-+-+++++-+-  lines_for_filter="${lines_for_filter:1}"
+-+-+++++-+-
+-+-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+-+-+++++-+-  awk -v lines="$lines_for_filter" '
+-+-+++++-++  awk -v lines="$line_numbers_string" '
+-+-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-+-+++++--index 0e43eee..a206584 100644
+-+-+++++-+index a206584..9d692ac 100644
+-+-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+-+-+++++--@@ -1 +1,6 @@
+-+-+++++---70 :           System.debug('Hi Hello');
+-+-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++--+1 : index 1ec7a54..870d508 100644
+-+-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-+-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-+++++--+4 : -          System.debug('Hi');
+-+-+++++--+70 :           System.debug('Hi');
+-+-+++++-+@@ -1,6 +1,24 @@
+-+-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-+-1 : index 1ec7a54..870d508 100644
+-+-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-+++++-+-4 : -          System.debug('Hi');
+-+-+++++-+-70 :           System.debug('Hi');
+-+-+++++-++0
+-+-+++++-++1
+-+-+++++-++2
+-+-+++++-++3
+-+-+++++-++4
+-+-+++++-++5
+-+-+++++-++60
+-+-+++++-++642
+-+-+++++-++643
+-+-+++++-++644
+-+-+++++-++645
+-+-+++++-++646
+-+-+++++-++647
+-+-+++++-++648
+-+-+++++-++649
+-+-+++++-++650
+-+-+++++-++651
+-+-+++++-++652
+-+-+++++-++653
+-+-+++++-++654
+-+-+++++-++655
+-+-+++++-++656
+-+-+++++-++657
+-+-+++++-++70
+-+-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+-+-+++++--index 760971b..3dfa538 100644
+-+-+++++-+index 3dfa538..9a218e6 100644
+-+-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+-+-+++++---index 255a037..525d43a 100644
+-+-+++++--+index 525d43a..aa6762f 100644
+-+-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-+-+++++---@@ -50 +50 @@ while IFS= read -r file; do
+-+-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+-+-+++++---+  # Extract line numbers as a comma-separated string for filtering later
+-+-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+-+++++----  # Define the output path for the scanner report
+-+-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+-+++++---+  # Define the output path for the scanner report in CSV format
+-+-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+-+++++----  # Run the SFDX scanner on the file and generate the report
+-+-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+-+-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+-+++++---@@ -71 +71 @@ while IFS= read -r file; do
+-+-+++++----  # Filter the scanner report based on the changed line numbers
+-+-+++++---+  # Filter the CSV scanner report based on the changed line numbers
+-+-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+-+++++----  jq --arg lines "$line_numbers" '
+-+-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++---+  awk -v lines="$line_numbers" '
+-+-+++++---+  BEGIN {
+-+-+++++---+    FS=OFS=",";
+-+-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+-+-+++++---+    for (i in arr) {
+-+-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+-+++++---+    }
+-+-+++++---+  }
+-+-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-+++++---@@ -78 +85 @@ while IFS= read -r file; do
+-+-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+-+++++---@@ -84 +91 @@ while IFS= read -r file; do
+-+-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-+++++---@@ -89 +96 @@ done <<< "$changed_files"
+-+-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+-+++++---@@ -95,2 +102,4 @@ fi
+-+-+++++----# Combine all filtered reports into one final report
+-+-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+-+++++---+# Combine all filtered reports into one final report (optional)
+-+-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+-+++++----# Parse the final filtered scanner report and check for severity 3 issues
+-+-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+-+++++---+echo "Final filtered scanner report:"
+-+-+++++---+cat "$final_report"
+-+-+++++---+
+-+-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+-+-+++++--+-    FS=OFS=",";
+-+-+++++--++    FS=OFS=",";  # Define CSV format
+-+-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+-+-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+-+++++--+@@ -111 +111 @@ cat "$final_report"
+-+-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+-+++++--+new file mode 100644
+-+-+++++--+index 0000000..0e43eee
+-+-+++++--+--- /dev/null
+-+-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+-+++++--+@@ -0,0 +1 @@
+-+-+++++--++70 :           System.debug('Hi Hello');
+-+-+++++--+diff --git a/changes.diff b/changes.diff
+-+-+++++--+new file mode 100644
+-+-+++++--+index 0000000..760971b
+-+-+++++--+--- /dev/null
+-+-+++++--++++ b/changes.diff
+-+-+++++--+@@ -0,0 +1,65 @@
+-+-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-+++++--++index 255a037..525d43a 100644
+-+-+++++--++--- a/.husky/pre-commit
+-+-+++++--+++++ b/.husky/pre-commit
+-+-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+-+-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-+-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+-+-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+-+++++--++-  # Define the output path for the scanner report
+-+-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+-+++++--+++  # Define the output path for the scanner report in CSV format
+-+-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+-+++++--++-  # Run the SFDX scanner on the file and generate the report
+-+-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+-+-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+-+-+++++--++-  # Filter the scanner report based on the changed line numbers
+-+-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+-+-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+-+++++--++-  jq --arg lines "$line_numbers" '
+-+-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++--+++  awk -v lines="$line_numbers" '
+-+-+++++--+++  BEGIN {
+-+-+++++--+++    FS=OFS=",";
+-+-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+-+-+++++--+++    for (i in arr) {
+-+-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+-+++++--+++    }
+-+-+++++--+++  }
+-+-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+-+-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+-+-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+-+-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+-+++++--++@@ -95,2 +102,4 @@ fi
+-+-+++++--++-# Combine all filtered reports into one final report
+-+-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+-+++++--+++# Combine all filtered reports into one final report (optional)
+-+-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+-+-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+-+++++--+++echo "Final filtered scanner report:"
+-+-+++++--+++cat "$final_report"
+-+-+++++--+++
+-+-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++--++index 1ec7a54..870d508 100644
+-+-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+-+-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-+++++--++-          System.debug('Hi');
+-+-+++++--+++          System.debug('Hi Hello');
+-+-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+-+++++---index 1ec7a54..870d508 100644
+-+-+++++--+index 870d508..1ec7a54 100644
+-+-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-+-+++++----          System.debug('Hi');
+-+-+++++---+          System.debug('Hi Hello');
+-+-+++++--+-          System.debug('Hi Hello');
+-+-+++++--++          System.debug('Hi');
+-+-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+-+++++--+new file mode 100644
+-+-+++++--+index 0000000..5a3a1ac
+-+-+++++--+--- /dev/null
+-+-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+-+++++--+@@ -0,0 +1 @@
+-+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+-+++++--+new file mode 100644
+-+-+++++--+index 0000000..5a3a1ac
+-+-+++++--+--- /dev/null
+-+-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+-+-+++++--+@@ -0,0 +1 @@
+-+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+-+++++--+new file mode 100644
+-+-+++++--+index 0000000..e1ef0f0
+-+-+++++--+--- /dev/null
+-+-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+-+++++--+@@ -0,0 +1,5 @@
+-+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+-+++++-+-index 525d43a..aa6762f 100644
+-+-+++++-++index aa6762f..586962b 100644
+-+-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+-+-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+-+-+++++-+--    FS=OFS=",";
+-+-+++++-+-+    FS=OFS=",";  # Define CSV format
+-+-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+-+-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+-+++++-+-@@ -111 +111 @@ cat "$final_report"
+-+-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+-+-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-+-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-+-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-+-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+-+-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-+-+++++-+++  # Extract line numbers as an array for filtering later
+-+-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-+-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+-+-+++++-++-  if [ -z "$line_numbers" ]; then
+-+-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+-+-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-+-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+-+-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-+-+++++-+++  lines_for_filter="${lines_for_filter:1}"
+-+-+++++-+++
+-+-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+-+-+++++-++-  awk -v lines="$line_numbers" '
+-+-+++++-+++  awk -v lines="$lines_for_filter" '
+-+-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+-+-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-+-+++++-++@@ -111 +115 @@ cat "$final_report"
+-+-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-+-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-+-+++++-+-new file mode 100644
+-+-+++++-+-index 0000000..0e43eee
+-+-+++++-+---- /dev/null
+-+-+++++-++index 0e43eee..a206584 100644
+-+-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+-+-+++++-+-@@ -0,0 +1 @@
+-+-+++++-+-+70 :           System.debug('Hi Hello');
+-+-+++++-++@@ -1 +1,6 @@
+-+-+++++-++-70 :           System.debug('Hi Hello');
+-+-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-+++1 : index 1ec7a54..870d508 100644
+-+-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-+++++-+++4 : -          System.debug('Hi');
+-+-+++++-+++70 :           System.debug('Hi');
+-+-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+-+-+++++-+-new file mode 100644
+-+-+++++-+-index 0000000..760971b
+-+-+++++-+---- /dev/null
+-+-+++++-++index 760971b..3dfa538 100644
+-+-+++++-++--- a/changes.diff
+-+-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+-+-+++++-+-@@ -0,0 +1,65 @@
+-+-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-+++++-+-+index 255a037..525d43a 100644
+-+-+++++-+-+--- a/.husky/pre-commit
+-+-+++++-+-++++ b/.husky/pre-commit
+-+-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+-+-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+-+-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+-+-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+-+++++-+-+-  # Define the output path for the scanner report
+-+-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+-+++++-+-++  # Define the output path for the scanner report in CSV format
+-+-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+-+-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+-+-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+-+-+++++-+-+-  # Filter the scanner report based on the changed line numbers
+-+-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+-+-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+-+++++-+-+-  jq --arg lines "$line_numbers" '
+-+-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++-+-++  awk -v lines="$line_numbers" '
+-+-+++++-+-++  BEGIN {
+-+-+++++-+-++    FS=OFS=",";
+-+-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+-+-+++++-+-++    for (i in arr) {
+-+-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+-+++++-+-++    }
+-+-+++++-+-++  }
+-+-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+-+-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+-+-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+-+-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+-+++++-+-+@@ -95,2 +102,4 @@ fi
+-+-+++++-+-+-# Combine all filtered reports into one final report
+-+-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+-+++++-+-++# Combine all filtered reports into one final report (optional)
+-+-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+-+-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+-+++++-+-++echo "Final filtered scanner report:"
+-+-+++++-+-++cat "$final_report"
+-+-+++++-+-++
+-+-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-+-+index 1ec7a54..870d508 100644
+-+-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-+++++-+-+-          System.debug('Hi');
+-+-+++++-+-++          System.debug('Hi Hello');
+-+-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-+++++-++-index 255a037..525d43a 100644
+-+-+++++-+++index 525d43a..aa6762f 100644
+-+-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-+-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+-+-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+-+-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+-+-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+-+++++-++--  # Define the output path for the scanner report
+-+-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+-+++++-++-+  # Define the output path for the scanner report in CSV format
+-+-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+-+++++-++--  # Run the SFDX scanner on the file and generate the report
+-+-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+-+-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+-+-+++++-++--  # Filter the scanner report based on the changed line numbers
+-+-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+-+-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+-+++++-++--  jq --arg lines "$line_numbers" '
+-+-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++-++-+  awk -v lines="$line_numbers" '
+-+-+++++-++-+  BEGIN {
+-+-+++++-++-+    FS=OFS=",";
+-+-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+-+-+++++-++-+    for (i in arr) {
+-+-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+-+++++-++-+    }
+-+-+++++-++-+  }
+-+-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+-+-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+-+-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+-+-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+-+++++-++-@@ -95,2 +102,4 @@ fi
+-+-+++++-++--# Combine all filtered reports into one final report
+-+-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+-+++++-++-+# Combine all filtered reports into one final report (optional)
+-+-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+-+-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+-+++++-++-+echo "Final filtered scanner report:"
+-+-+++++-++-+cat "$final_report"
+-+-+++++-++-+
+-+-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+-+-+++++-+++-    FS=OFS=",";
+-+-+++++-++++    FS=OFS=",";  # Define CSV format
+-+-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+-+-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+-+++++-+++@@ -111 +111 @@ cat "$final_report"
+-+-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+-+++++-+++new file mode 100644
+-+-+++++-+++index 0000000..0e43eee
+-+-+++++-+++--- /dev/null
+-+-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+-+++++-+++@@ -0,0 +1 @@
+-+-+++++-++++70 :           System.debug('Hi Hello');
+-+-+++++-+++diff --git a/changes.diff b/changes.diff
+-+-+++++-+++new file mode 100644
+-+-+++++-+++index 0000000..760971b
+-+-+++++-+++--- /dev/null
+-+-+++++-++++++ b/changes.diff
+-+-+++++-+++@@ -0,0 +1,65 @@
+-+-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+-+++++-++++index 255a037..525d43a 100644
+-+-+++++-++++--- a/.husky/pre-commit
+-+-+++++-+++++++ b/.husky/pre-commit
+-+-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+-+-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-+-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+-+-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+-+++++-++++-  # Define the output path for the scanner report
+-+-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+-+++++-+++++  # Define the output path for the scanner report in CSV format
+-+-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+-+++++-++++-  # Run the SFDX scanner on the file and generate the report
+-+-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+-+-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+-+-+++++-++++-  # Filter the scanner report based on the changed line numbers
+-+-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+-+-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+-+++++-++++-  jq --arg lines "$line_numbers" '
+-+-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++-+++++  awk -v lines="$line_numbers" '
+-+-+++++-+++++  BEGIN {
+-+-+++++-+++++    FS=OFS=",";
+-+-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+-+-+++++-+++++    for (i in arr) {
+-+-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+-+++++-+++++    }
+-+-+++++-+++++  }
+-+-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+-+-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+-+-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+-+-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+-+++++-++++@@ -95,2 +102,4 @@ fi
+-+-+++++-++++-# Combine all filtered reports into one final report
+-+-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+-+++++-+++++# Combine all filtered reports into one final report (optional)
+-+-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+-+-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+-+++++-+++++echo "Final filtered scanner report:"
+-+-+++++-+++++cat "$final_report"
+-+-+++++-+++++
+-+-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-++++index 1ec7a54..870d508 100644
+-+-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-+++++-++++-          System.debug('Hi');
+-+-+++++-+++++          System.debug('Hi Hello');
+-+-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+-+++++-++-index 1ec7a54..870d508 100644
+-+-+++++-+++index 870d508..1ec7a54 100644
+-+-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-+-+++++-++--          System.debug('Hi');
+-+-+++++-++-+          System.debug('Hi Hello');
+-+-+++++-+++-          System.debug('Hi Hello');
+-+-+++++-++++          System.debug('Hi');
+-+-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+-+++++-+++new file mode 100644
+-+-+++++-+++index 0000000..5a3a1ac
+-+-+++++-+++--- /dev/null
+-+-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+-+++++-+++@@ -0,0 +1 @@
+-+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+-+++++-+++new file mode 100644
+-+-+++++-+++index 0000000..5a3a1ac
+-+-+++++-+++--- /dev/null
+-+-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+-+-+++++-+++@@ -0,0 +1 @@
+-+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+-+++++-+++new file mode 100644
+-+-+++++-+++index 0000000..e1ef0f0
+-+-+++++-+++--- /dev/null
+-+-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+-+++++-+++@@ -0,0 +1,5 @@
+-+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+-+++++-+-index 870d508..1ec7a54 100644
+-+-+++++-++index 1ec7a54..870d508 100644
+-+-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+-+-+++++-+--          System.debug('Hi Hello');
+-+-+++++-+-+          System.debug('Hi');
+-+-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+-+++++-+-new file mode 100644
+-+-+++++-+-index 0000000..5a3a1ac
+-+-+++++-+---- /dev/null
+-+-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+-+++++-+-@@ -0,0 +1 @@
+-+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+-+++++-+-new file mode 100644
+-+-+++++-+-index 0000000..5a3a1ac
+-+-+++++-+---- /dev/null
+-+-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+-+-+++++-+-@@ -0,0 +1 @@
+-+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+-+++++-+-new file mode 100644
+-+-+++++-+-index 0000000..e1ef0f0
+-+-+++++-+---- /dev/null
+-+-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+-+++++-+-@@ -0,0 +1,5 @@
+-+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+-+++++-++-          System.debug('Hi');
+-+-+++++-+++          System.debug('Hi Hello');
+-+-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+-+++++--index 1ec7a54..870d508 100644
+-+-+++++-+index 870d508..5eafcac 100644
+-+-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+-+-+++++---          System.debug('Hi');
+-+-+++++--+          System.debug('Hi Hello');
+-+-+++++-+-          System.debug('Hi Hello');
+-+-+++++-++          System.debug('Happy');
+-+-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-index 5eafcac..1ec7a54 100644
+-+-+++++---- a/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-+++++--          System.debug('Happy');
+-+-+++++-+          System.debug('Hi');
+-+-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++index 73696e2..9e21e88 100644
+-+-+++++--- a/force-app/main/default/classes/Account_Insert.cls
+-+-++++++++ b/force-app/main/default/classes/Account_Insert.cls
+-+-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-+++++-          System.debug('Hello and Hi');
+-+-++++++          System.debug('Hi AND');
+-+-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+-+++++deleted file mode 100644
+-+-+++++index 5a3a1ac..0000000
+-+-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+-++++++++ /dev/null
+-+-+++++@@ -1 +0,0 @@
+-+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+-+++++new file mode 100644
+-+-+++++index 0000000..ebc3aa5
+-+-+++++--- /dev/null
+-+-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+-+++++@@ -0,0 +1,30 @@
+-+-++++++[
+-+-++++++  {
+-+-++++++    "engine": "pmd",
+-+-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+-++++++    "violations": [
+-+-++++++      {
+-+-++++++        "line": 70,
+-+-++++++        "column": 11,
+-+-++++++        "endLine": 70,
+-+-++++++        "endColumn": 29,
+-+-++++++        "severity": 3,
+-+-++++++        "ruleName": "AvoidDebugStatements",
+-+-++++++        "category": "Performance",
+-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+-++++++      },
+-+-++++++      {
+-+-++++++        "line": 70,
+-+-++++++        "column": 11,
+-+-++++++        "endLine": 70,
+-+-++++++        "endColumn": 29,
+-+-++++++        "severity": 3,
+-+-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+-++++++        "category": "Best Practices",
+-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+-++++++      }
+-+-++++++    ]
+-+-++++++  }
+-+-++++++]
+-+-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+-+++++deleted file mode 100644
+-+-+++++index 5a3a1ac..0000000
+-+-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+-+-++++++++ /dev/null
+-+-+++++@@ -1 +0,0 @@
+-+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-+-+++++new file mode 100644
+-+-+++++index 0000000..ebc3aa5
+-+-+++++--- /dev/null
+-+-++++++++ b/scanner-reports/final-filtered-scanner-report.json
+-+-+++++@@ -0,0 +1,30 @@
+-+-++++++[
+-+-++++++  {
+-+-++++++    "engine": "pmd",
+-+-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+-++++++    "violations": [
+-+-++++++      {
+-+-++++++        "line": 70,
+-+-++++++        "column": 11,
+-+-++++++        "endLine": 70,
+-+-++++++        "endColumn": 29,
+-+-++++++        "severity": 3,
+-+-++++++        "ruleName": "AvoidDebugStatements",
+-+-++++++        "category": "Performance",
+-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+-++++++      },
+-+-++++++      {
+-+-++++++        "line": 70,
+-+-++++++        "column": 11,
+-+-++++++        "endLine": 70,
+-+-++++++        "endColumn": 29,
+-+-++++++        "severity": 3,
+-+-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+-++++++        "category": "Best Practices",
+-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+-++++++      }
+-+-++++++    ]
+-+-++++++  }
+-+-++++++]
+-+-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+-+++++deleted file mode 100644
+-+-+++++index e1ef0f0..0000000
+-+-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+-++++++++ /dev/null
+-+-+++++@@ -1,5 +0,0 @@
+-+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+-+++++new file mode 100644
+-+-+++++index 0000000..c973918
+-+-+++++--- /dev/null
+-+-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+-+++++@@ -0,0 +1 @@
+-+-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+-+++++\ No newline at end of file
+-+-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-++++index 9e21e88..800635e 100644
+-+-++++--- a/force-app/main/default/classes/Account_Insert.cls
+-+-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+-+-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-++++-          System.debug('Hi AND');
+-+-+++++          System.debug('Hi AND Hello');
+-+-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+-++++index ebc3aa5..fe51488 100644
+-+-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+-++++@@ -1,30 +1 @@
+-+-++++-[
+-+-++++-  {
+-+-++++-    "engine": "pmd",
+-+-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+-++++-    "violations": [
+-+-++++-      {
+-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-index daf61a1..3603bae 100644
+-+++index 1328704..8004c80 100644
+-++@@ -5,12 +5,9 @@ index daf61a1..3603bae 100644
+-++-@@ -16 +16 @@ mkdir -p scanner-reports
+-++--git diff --unified=0 --cached > changes.diff
+-++-+git diff --cached --unified=0 > changes.diff
+-++-@@ -25 +25 @@ while IFS= read -r file; do
+-++--  # Extract only the changed line numbers for the file
+-++-+  # Extract only the added or modified lines for .cls and .lwc files
+-++-@@ -32 +32 @@ while IFS= read -r file; do
+-++--  ' changes.diff)
+-++-+  ' changes.diff | uniq)
+-++-@@ -61 +61 @@ while IFS= read -r file; do
+-++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+++@@ -29,4 +29,4 @@ while IFS= read -r file; do
+-+++-    $0 ~ file {inside=1}
+-+++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+-+++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+-+++-  ' changes.diff | uniq)
+-++++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
+-++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
+-++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
+-++++  ' changes.diff | sort -n | uniq)
+-++@@ -18,3 +15,2 @@ diff --git a/changes.diff b/changes.diff
+-++-new file mode 100644
+-++-index 0000000..a6452b3
+-++---- /dev/null
+-+++index 1f4c0b2..6a026dd 100644
+-+++--- a/changes.diff
+-++@@ -22,1073 +18,4567 @@ index 0000000..a6452b3
+-++-@@ -0,0 +1,1262 @@
+-++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-+index daf61a1..3603bae 100644
+-++-+--- a/.husky/pre-commit
+-++-++++ b/.husky/pre-commit
+-++-+@@ -16 +16 @@ mkdir -p scanner-reports
+-++-+-git diff --unified=0 --cached > changes.diff
+-++-++git diff --cached --unified=0 > changes.diff
+-++-+@@ -25 +25 @@ while IFS= read -r file; do
+-++-+-  # Extract only the changed line numbers for the file
+-++-++  # Extract only the added or modified lines for .cls and .lwc files
+-++-+@@ -32 +32 @@ while IFS= read -r file; do
+-++-+-  ' changes.diff)
+-++-++  ' changes.diff | uniq)
+-++-+@@ -61 +61 @@ while IFS= read -r file; do
+-++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-++-+diff --git a/changes.diff b/changes.diff
+-++-+new file mode 100644
+-++-+index 0000000..1831031
+-++-+--- /dev/null
+-++-++++ b/changes.diff
+-++-+@@ -0,0 +1,1158 @@
+-++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-++index daf61a1..d6ae40b 100644
+-++-++--- a/.husky/pre-commit
+-++-+++++ b/.husky/pre-commit
+-++-++@@ -25 +25 @@ while IFS= read -r file; do
+-++-++-  # Extract only the changed line numbers for the file
+-++-+++  # Extract only the added or modified lines for .cls and .lwc files
+-++-++@@ -32 +32 @@ while IFS= read -r file; do
+-++-++-  ' changes.diff)
+-++-+++  ' changes.diff | uniq)
+-++-++@@ -61 +61 @@ while IFS= read -r file; do
+-++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-++-++diff --git a/changes.diff b/changes.diff
+-++-++new file mode 100644
+-++-++index 0000000..47b6c1c
+-++-++--- /dev/null
+-++-+++++ b/changes.diff
+-++-++@@ -0,0 +1,1078 @@
+-++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-+++index daf61a1..d6ae40b 100644
+-++-+++--- a/.husky/pre-commit
+-++-++++++ b/.husky/pre-commit
+-++-+++@@ -25 +25 @@ while IFS= read -r file; do
+-++-+++-  # Extract only the changed line numbers for the file
+-++-++++  # Extract only the added or modified lines for .cls and .lwc files
+-++-+++@@ -32 +32 @@ while IFS= read -r file; do
+-++-+++-  ' changes.diff)
+-++-++++  ' changes.diff | uniq)
+-++-+++@@ -61 +61 @@ while IFS= read -r file; do
+-++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-++-+++diff --git a/changes.diff b/changes.diff
+-++-+++new file mode 100644
+-++-+++index 0000000..8cd4f1a
+-++-+++--- /dev/null
+-++-++++++ b/changes.diff
+-++-+++@@ -0,0 +1,977 @@
+-++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-++++index daf61a1..73bb862 100644
+-++-++++--- a/.husky/pre-commit
+-++-+++++++ b/.husky/pre-commit
+-++-++++@@ -61 +61 @@ while IFS= read -r file; do
+-++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-++-++++diff --git a/changes.diff b/changes.diff
+-++-++++new file mode 100644
+-++-++++index 0000000..f9d24dc
+-++-++++--- /dev/null
+-++-+++++++ b/changes.diff
+-++-++++@@ -0,0 +1,876 @@
+-++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-+++++index 19cfdbc..daf61a1 100644
+-++-+++++--- a/.husky/pre-commit
+-++-++++++++ b/.husky/pre-commit
+-++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+-++-+++++-  # Define the output path for the scanner report in CSV format
+-++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++-++++++  # Extract only the changed line numbers for the file
+-++-++++++  line_numbers=$(awk -v file="$file" '
+-++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+-++-++++++    /^diff --git/ {inside=0}
+-++-++++++    $0 ~ file {inside=1}
+-++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+-++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-++-++++++  ' changes.diff)
+-++-++++++
+-++-++++++  # If no changed lines are found for this file, skip it
+-++-++++++  if [ -z "$line_numbers" ]; then
+-++-++++++    echo "No changed lines found in $file"
+-++-++++++    continue
+-++-++++++  fi
+-++-++++++
+-++-++++++  # Convert the line numbers to a JSON array format for jq filtering
+-++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+-++-++++++
+-++-++++++  echo "Changed lines for $file: $line_numbers_array"
+-++-++++++
+-++-++++++  # Define the output path for the scanner report in JSON format
+-++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+-++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+-++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+-++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+-++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+-++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
+-++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+-++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+-++-++++++  jq --argjson lines "$line_numbers_array" '
+-++-++++++    [.[] | 
+-++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++-++++++      select(.violations | length > 0)]
+-++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+-++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++-+++++-    echo "No issues found for line '70' in $file"
+-++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++-++++++    echo "No issues found for changed lines in $file"
+-++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+-++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
+-++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-++++++  echo "Filtered scanner report for $file (Changed lines):"
+-++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++@@ -53 +77 @@ done <<< "$changed_files"
+-++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+-++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+-++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+-++-+++++@@ -60,2 +84,2 @@ fi
+-++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+-++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+-++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++-+++++-echo "Final filtered scanner report (Line '70'):"
+-++-++++++echo "Final filtered scanner report (Changed lines):"
+-++-+++++@@ -67 +91 @@ cat "$final_report"
+-++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+-++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+-++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+-++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+-++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+-++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+-++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+-++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+-++-+++++@@ -77 +101 @@ else
+-++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+-++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+-++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++-+++++deleted file mode 100644
+-++-+++++index 9d692ac..0000000
+-++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++-++++++++ /dev/null
+-++-+++++@@ -1,24 +0,0 @@
+-++-+++++-0
+-++-+++++-1
+-++-+++++-2
+-++-+++++-3
+-++-+++++-4
+-++-+++++-5
+-++-+++++-60
+-++-+++++-642
+-++-+++++-643
+-++-+++++-644
+-++-+++++-645
+-++-+++++-646
+-++-+++++-647
+-++-+++++-648
+-++-+++++-649
+-++-+++++-650
+-++-+++++-651
+-++-+++++-652
+-++-+++++-653
+-++-+++++-654
+-++-+++++-655
+-++-+++++-656
+-++-+++++-657
+-++-+++++-70
+-++-+++++diff --git a/changes.diff b/changes.diff
+-++-+++++deleted file mode 100644
+-++-+++++index 61d162d..0000000
+-++-+++++--- a/changes.diff
+-++-++++++++ /dev/null
+-++-+++++@@ -1,647 +0,0 @@
+-++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-+++++-index 5b262e4..8c05f52 100644
+-++-+++++---- a/.husky/pre-commit
+-++-+++++-+++ b/.husky/pre-commit
+-++-+++++-@@ -113 +113 @@ cat "$final_report"
+-++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+-++-+++++-diff --git a/changes.diff b/changes.diff
+-++-+++++-index 9a218e6..4fe1995 100644
+-++-+++++---- a/changes.diff
+-++-+++++-+++ b/changes.diff
+-++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-+++++--index aa6762f..586962b 100644
+-++-+++++-+index 586962b..5b262e4 100644
+-++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+-++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
+-++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+-++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-++-+++++---  # Extract line numbers as a comma-separated string for filtering later
+-++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-++-+++++--+  # Extract line numbers as an array for filtering later
+-++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
+-++-+++++---  if [ -z "$line_numbers" ]; then
+-++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+-++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
+-++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-++-+++++--+  lines_for_filter="${lines_for_filter:1}"
+-++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+-++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+-++-+++++-+-  awk -v file="$file" '
+-++-+++++-++  # Extract only the changed line numbers for the file
+-++-+++++-++  line_numbers=$(awk -v file="$file" '
+-++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+-++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+-++-+++++-++  ' changes.diff)
+-++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+-++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+-++-+++++-++  if [ -z "$line_numbers" ]; then
+-++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+-++-+++++-+-  # Extract line numbers as an array for filtering later
+-++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-++-+++++-++  # Convert the line numbers to a comma-separated string for matching
+-++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+-++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+-++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
+-++-+++++---  awk -v lines="$line_numbers" '
+-++-+++++--+  awk -v lines="$lines_for_filter" '
+-++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
+-++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-++-+++++--@@ -111 +115 @@ cat "$final_report"
+-++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
+-++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+-++-+++++-+-  # Ensure that line_numbers is not empty
+-++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+-++-+++++-++  # Ensure that line_numbers_string is not empty
+-++-+++++-++  if [ -z "$line_numbers_string" ]; then
+-++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+-++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+-++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
+-++-+++++-+-
+-++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+-++-+++++-+-  awk -v lines="$lines_for_filter" '
+-++-+++++-++  awk -v lines="$line_numbers_string" '
+-++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-++-+++++--index 0e43eee..a206584 100644
+-++-+++++-+index a206584..9d692ac 100644
+-++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+-++-+++++--@@ -1 +1,6 @@
+-++-+++++---70 :           System.debug('Hi Hello');
+-++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++--+1 : index 1ec7a54..870d508 100644
+-++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-+++++--+4 : -          System.debug('Hi');
+-++-+++++--+70 :           System.debug('Hi');
+-++-+++++-+@@ -1,6 +1,24 @@
+-++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-+-1 : index 1ec7a54..870d508 100644
+-++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-+++++-+-4 : -          System.debug('Hi');
+-++-+++++-+-70 :           System.debug('Hi');
+-++-+++++-++0
+-++-+++++-++1
+-++-+++++-++2
+-++-+++++-++3
+-++-+++++-++4
+-++-+++++-++5
+-++-+++++-++60
+-++-+++++-++642
+-++-+++++-++643
+-++-+++++-++644
+-++-+++++-++645
+-++-+++++-++646
+-++-+++++-++647
+-++-+++++-++648
+-++-+++++-++649
+-++-+++++-++650
+-++-+++++-++651
+-++-+++++-++652
+-++-+++++-++653
+-++-+++++-++654
+-++-+++++-++655
+-++-+++++-++656
+-++-+++++-++657
+-++-+++++-++70
+-++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+-++-+++++--index 760971b..3dfa538 100644
+-++-+++++-+index 3dfa538..9a218e6 100644
+-++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+-++-+++++---index 255a037..525d43a 100644
+-++-+++++--+index 525d43a..aa6762f 100644
+-++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
+-++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+-++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
+-++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++-+++++----  # Define the output path for the scanner report
+-++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++-+++++---+  # Define the output path for the scanner report in CSV format
+-++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++-+++++----  # Run the SFDX scanner on the file and generate the report
+-++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+-++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
+-++-+++++----  # Filter the scanner report based on the changed line numbers
+-++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
+-++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++-+++++----  jq --arg lines "$line_numbers" '
+-++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++---+  awk -v lines="$line_numbers" '
+-++-+++++---+  BEGIN {
+-++-+++++---+    FS=OFS=",";
+-++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+-++-+++++---+    for (i in arr) {
+-++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++-+++++---+    }
+-++-+++++---+  }
+-++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
+-++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
+-++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
+-++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++-+++++---@@ -95,2 +102,4 @@ fi
+-++-+++++----# Combine all filtered reports into one final report
+-++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++-+++++---+# Combine all filtered reports into one final report (optional)
+-++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
+-++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++-+++++---+echo "Final filtered scanner report:"
+-++-+++++---+cat "$final_report"
+-++-+++++---+
+-++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+-++-+++++--+-    FS=OFS=",";
+-++-+++++--++    FS=OFS=",";  # Define CSV format
+-++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+-++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++-+++++--+@@ -111 +111 @@ cat "$final_report"
+-++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++-+++++--+new file mode 100644
+-++-+++++--+index 0000000..0e43eee
+-++-+++++--+--- /dev/null
+-++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++-+++++--+@@ -0,0 +1 @@
+-++-+++++--++70 :           System.debug('Hi Hello');
+-++-+++++--+diff --git a/changes.diff b/changes.diff
+-++-+++++--+new file mode 100644
+-++-+++++--+index 0000000..760971b
+-++-+++++--+--- /dev/null
+-++-+++++--++++ b/changes.diff
+-++-+++++--+@@ -0,0 +1,65 @@
+-++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-+++++--++index 255a037..525d43a 100644
+-++-+++++--++--- a/.husky/pre-commit
+-++-+++++--+++++ b/.husky/pre-commit
+-++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+-++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+-++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++-+++++--++-  # Define the output path for the scanner report
+-++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++-+++++--+++  # Define the output path for the scanner report in CSV format
+-++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++-+++++--++-  # Run the SFDX scanner on the file and generate the report
+-++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+-++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+-++-+++++--++-  # Filter the scanner report based on the changed line numbers
+-++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+-++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++-+++++--++-  jq --arg lines "$line_numbers" '
+-++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++--+++  awk -v lines="$line_numbers" '
+-++-+++++--+++  BEGIN {
+-++-+++++--+++    FS=OFS=",";
+-++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+-++-+++++--+++    for (i in arr) {
+-++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++-+++++--+++    }
+-++-+++++--+++  }
+-++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+-++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+-++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+-++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++-+++++--++@@ -95,2 +102,4 @@ fi
+-++-+++++--++-# Combine all filtered reports into one final report
+-++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++-+++++--+++# Combine all filtered reports into one final report (optional)
+-++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+-++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++-+++++--+++echo "Final filtered scanner report:"
+-++-+++++--+++cat "$final_report"
+-++-+++++--+++
+-++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++--++index 1ec7a54..870d508 100644
+-++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+-++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-+++++--++-          System.debug('Hi');
+-++-+++++--+++          System.debug('Hi Hello');
+-++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++-+++++---index 1ec7a54..870d508 100644
+-++-+++++--+index 870d508..1ec7a54 100644
+-++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-++-+++++----          System.debug('Hi');
+-++-+++++---+          System.debug('Hi Hello');
+-++-+++++--+-          System.debug('Hi Hello');
+-++-+++++--++          System.debug('Hi');
+-++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++-+++++--+new file mode 100644
+-++-+++++--+index 0000000..5a3a1ac
+-++-+++++--+--- /dev/null
+-++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++-+++++--+@@ -0,0 +1 @@
+-++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++-+++++--+new file mode 100644
+-++-+++++--+index 0000000..5a3a1ac
+-++-+++++--+--- /dev/null
+-++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+-++-+++++--+@@ -0,0 +1 @@
+-++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++-+++++--+new file mode 100644
+-++-+++++--+index 0000000..e1ef0f0
+-++-+++++--+--- /dev/null
+-++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++-+++++--+@@ -0,0 +1,5 @@
+-++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++-+++++-+-index 525d43a..aa6762f 100644
+-++-+++++-++index aa6762f..586962b 100644
+-++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+-++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+-++-+++++-+--    FS=OFS=",";
+-++-+++++-+-+    FS=OFS=",";  # Define CSV format
+-++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+-++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++-+++++-+-@@ -111 +111 @@ cat "$final_report"
+-++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+-++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+-++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-++-+++++-+++  # Extract line numbers as an array for filtering later
+-++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+-++-+++++-++-  if [ -z "$line_numbers" ]; then
+-++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+-++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+-++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
+-++-+++++-+++
+-++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+-++-+++++-++-  awk -v lines="$line_numbers" '
+-++-+++++-+++  awk -v lines="$lines_for_filter" '
+-++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+-++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-++-+++++-++@@ -111 +115 @@ cat "$final_report"
+-++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-++-+++++-+-new file mode 100644
+-++-+++++-+-index 0000000..0e43eee
+-++-+++++-+---- /dev/null
+-++-+++++-++index 0e43eee..a206584 100644
+-++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+-++-+++++-+-@@ -0,0 +1 @@
+-++-+++++-+-+70 :           System.debug('Hi Hello');
+-++-+++++-++@@ -1 +1,6 @@
+-++-+++++-++-70 :           System.debug('Hi Hello');
+-++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-+++1 : index 1ec7a54..870d508 100644
+-++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-+++++-+++4 : -          System.debug('Hi');
+-++-+++++-+++70 :           System.debug('Hi');
+-++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+-++-+++++-+-new file mode 100644
+-++-+++++-+-index 0000000..760971b
+-++-+++++-+---- /dev/null
+-++-+++++-++index 760971b..3dfa538 100644
+-++-+++++-++--- a/changes.diff
+-++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+-++-+++++-+-@@ -0,0 +1,65 @@
+-++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-+++++-+-+index 255a037..525d43a 100644
+-++-+++++-+-+--- a/.husky/pre-commit
+-++-+++++-+-++++ b/.husky/pre-commit
+-++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+-++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+-++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+-++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++-+++++-+-+-  # Define the output path for the scanner report
+-++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++-+++++-+-++  # Define the output path for the scanner report in CSV format
+-++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+-++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+-++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+-++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
+-++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+-++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++-+++++-+-+-  jq --arg lines "$line_numbers" '
+-++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++-+-++  awk -v lines="$line_numbers" '
+-++-+++++-+-++  BEGIN {
+-++-+++++-+-++    FS=OFS=",";
+-++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+-++-+++++-+-++    for (i in arr) {
+-++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++-+++++-+-++    }
+-++-+++++-+-++  }
+-++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+-++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+-++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+-++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++-+++++-+-+@@ -95,2 +102,4 @@ fi
+-++-+++++-+-+-# Combine all filtered reports into one final report
+-++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++-+++++-+-++# Combine all filtered reports into one final report (optional)
+-++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+-++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++-+++++-+-++echo "Final filtered scanner report:"
+-++-+++++-+-++cat "$final_report"
+-++-+++++-+-++
+-++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-+-+index 1ec7a54..870d508 100644
+-++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-+++++-+-+-          System.debug('Hi');
+-++-+++++-+-++          System.debug('Hi Hello');
+-++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-+++++-++-index 255a037..525d43a 100644
+-++-+++++-+++index 525d43a..aa6762f 100644
+-++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+-++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+-++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+-++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++-+++++-++--  # Define the output path for the scanner report
+-++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++-+++++-++-+  # Define the output path for the scanner report in CSV format
+-++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++-+++++-++--  # Run the SFDX scanner on the file and generate the report
+-++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+-++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+-++-+++++-++--  # Filter the scanner report based on the changed line numbers
+-++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+-++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++-+++++-++--  jq --arg lines "$line_numbers" '
+-++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++-++-+  awk -v lines="$line_numbers" '
+-++-+++++-++-+  BEGIN {
+-++-+++++-++-+    FS=OFS=",";
+-++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+-++-+++++-++-+    for (i in arr) {
+-++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++-+++++-++-+    }
+-++-+++++-++-+  }
+-++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+-++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+-++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+-++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++-+++++-++-@@ -95,2 +102,4 @@ fi
+-++-+++++-++--# Combine all filtered reports into one final report
+-++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++-+++++-++-+# Combine all filtered reports into one final report (optional)
+-++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+-++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++-+++++-++-+echo "Final filtered scanner report:"
+-++-+++++-++-+cat "$final_report"
+-++-+++++-++-+
+-++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+-++-+++++-+++-    FS=OFS=",";
+-++-+++++-++++    FS=OFS=",";  # Define CSV format
+-++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+-++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++-+++++-+++@@ -111 +111 @@ cat "$final_report"
+-++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++-+++++-+++new file mode 100644
+-++-+++++-+++index 0000000..0e43eee
+-++-+++++-+++--- /dev/null
+-++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++-+++++-+++@@ -0,0 +1 @@
+-++-+++++-++++70 :           System.debug('Hi Hello');
+-++-+++++-+++diff --git a/changes.diff b/changes.diff
+-++-+++++-+++new file mode 100644
+-++-+++++-+++index 0000000..760971b
+-++-+++++-+++--- /dev/null
+-++-+++++-++++++ b/changes.diff
+-++-+++++-+++@@ -0,0 +1,65 @@
+-++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++-+++++-++++index 255a037..525d43a 100644
+-++-+++++-++++--- a/.husky/pre-commit
+-++-+++++-+++++++ b/.husky/pre-commit
+-++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+-++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+-++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++-+++++-++++-  # Define the output path for the scanner report
+-++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++-+++++-+++++  # Define the output path for the scanner report in CSV format
+-++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
+-++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+-++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+-++-+++++-++++-  # Filter the scanner report based on the changed line numbers
+-++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+-++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++-+++++-++++-  jq --arg lines "$line_numbers" '
+-++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++-+++++  awk -v lines="$line_numbers" '
+-++-+++++-+++++  BEGIN {
+-++-+++++-+++++    FS=OFS=",";
+-++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+-++-+++++-+++++    for (i in arr) {
+-++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++-+++++-+++++    }
+-++-+++++-+++++  }
+-++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+-++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+-++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+-++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++-+++++-++++@@ -95,2 +102,4 @@ fi
+-++-+++++-++++-# Combine all filtered reports into one final report
+-++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++-+++++-+++++# Combine all filtered reports into one final report (optional)
+-++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+-++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++-+++++-+++++echo "Final filtered scanner report:"
+-++-+++++-+++++cat "$final_report"
+-++-+++++-+++++
+-++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-++++index 1ec7a54..870d508 100644
+-++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-+++++-++++-          System.debug('Hi');
+-++-+++++-+++++          System.debug('Hi Hello');
+-++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++-+++++-++-index 1ec7a54..870d508 100644
+-++-+++++-+++index 870d508..1ec7a54 100644
+-++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-++-+++++-++--          System.debug('Hi');
+-++-+++++-++-+          System.debug('Hi Hello');
+-++-+++++-+++-          System.debug('Hi Hello');
+-++-+++++-++++          System.debug('Hi');
+-++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++-+++++-+++new file mode 100644
+-++-+++++-+++index 0000000..5a3a1ac
+-++-+++++-+++--- /dev/null
+-++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++-+++++-+++@@ -0,0 +1 @@
+-++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++-+++++-+++new file mode 100644
+-++-+++++-+++index 0000000..5a3a1ac
+-++-+++++-+++--- /dev/null
+-++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+-++-+++++-+++@@ -0,0 +1 @@
+-++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++-+++++-+++new file mode 100644
+-++-+++++-+++index 0000000..e1ef0f0
+-++-+++++-+++--- /dev/null
+-++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++-+++++-+++@@ -0,0 +1,5 @@
+-++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++-+++++-+-index 870d508..1ec7a54 100644
+-++-+++++-++index 1ec7a54..870d508 100644
+-++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+-++-+++++-+--          System.debug('Hi Hello');
+-++-+++++-+-+          System.debug('Hi');
+-++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++-+++++-+-new file mode 100644
+-++-+++++-+-index 0000000..5a3a1ac
+-++-+++++-+---- /dev/null
+-++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++-+++++-+-@@ -0,0 +1 @@
+-++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++-+++++-+-new file mode 100644
+-++-+++++-+-index 0000000..5a3a1ac
+-++-+++++-+---- /dev/null
+-++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+-++-+++++-+-@@ -0,0 +1 @@
+-++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++-+++++-+-new file mode 100644
+-++-+++++-+-index 0000000..e1ef0f0
+-++-+++++-+---- /dev/null
+-++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++-+++++-+-@@ -0,0 +1,5 @@
+-++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++-+++++-++-          System.debug('Hi');
+-++-+++++-+++          System.debug('Hi Hello');
+-++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++-+++++--index 1ec7a54..870d508 100644
+-++-+++++-+index 870d508..5eafcac 100644
+-++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+-++-+++++---          System.debug('Hi');
+-++-+++++--+          System.debug('Hi Hello');
+-++-+++++-+-          System.debug('Hi Hello');
+-++-+++++-++          System.debug('Happy');
+-++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-index 5eafcac..1ec7a54 100644
+-++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-+++++--          System.debug('Happy');
+-++-+++++-+          System.debug('Hi');
+-++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++index 73696e2..9e21e88 100644
+-++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
+-++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
+-++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-+++++-          System.debug('Hello and Hi');
+-++-++++++          System.debug('Hi AND');
+-++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++-+++++deleted file mode 100644
+-++-+++++index 5a3a1ac..0000000
+-++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++-++++++++ /dev/null
+-++-+++++@@ -1 +0,0 @@
+-++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++-+++++new file mode 100644
+-++-+++++index 0000000..ebc3aa5
+-++-+++++--- /dev/null
+-++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++-+++++@@ -0,0 +1,30 @@
+-++-++++++[
+-++-++++++  {
+-++-++++++    "engine": "pmd",
+-++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-++-++++++    "violations": [
+-++-++++++      {
+-++-++++++        "line": 70,
+-++-++++++        "column": 11,
+-++-++++++        "endLine": 70,
+-++-++++++        "endColumn": 29,
+-++-++++++        "severity": 3,
+-++-++++++        "ruleName": "AvoidDebugStatements",
+-++-++++++        "category": "Performance",
+-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++-++++++      },
+-++-++++++      {
+-++-++++++        "line": 70,
+-++-++++++        "column": 11,
+-++-++++++        "endLine": 70,
+-++-++++++        "endColumn": 29,
+-++-++++++        "severity": 3,
+-++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++-++++++        "category": "Best Practices",
+-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++-++++++      }
+-++-++++++    ]
+-++-++++++  }
+-++-++++++]
+-++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++-+++++deleted file mode 100644
+-++-+++++index 5a3a1ac..0000000
+-++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+-++-++++++++ /dev/null
+-++-+++++@@ -1 +0,0 @@
+-++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-++-+++++new file mode 100644
+-++-+++++index 0000000..ebc3aa5
+-++-+++++--- /dev/null
+-++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
+-++-+++++@@ -0,0 +1,30 @@
+-++-++++++[
+-++-++++++  {
+-++-++++++    "engine": "pmd",
+-++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-++-++++++    "violations": [
+-++-++++++      {
+-++-++++++        "line": 70,
+-++-++++++        "column": 11,
+-++-++++++        "endLine": 70,
+-++-++++++        "endColumn": 29,
+-++-++++++        "severity": 3,
+-++-++++++        "ruleName": "AvoidDebugStatements",
+-++-++++++        "category": "Performance",
+-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++-++++++      },
+-++-++++++      {
+-++-++++++        "line": 70,
+-++-++++++        "column": 11,
+-++-++++++        "endLine": 70,
+-++-++++++        "endColumn": 29,
+-++-++++++        "severity": 3,
+-++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++-++++++        "category": "Best Practices",
+-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++-++++++      }
+-++-++++++    ]
+-++-++++++  }
+-++-++++++]
+-++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++-+++++deleted file mode 100644
+-++-+++++index e1ef0f0..0000000
+-++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++-++++++++ /dev/null
+-++-+++++@@ -1,5 +0,0 @@
+-++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++-+++++new file mode 100644
+-++-+++++index 0000000..c973918
+-++-+++++--- /dev/null
+-++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++-+++++@@ -0,0 +1 @@
+-++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++-+++++\ No newline at end of file
+-++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-++++index 9e21e88..800635e 100644
+-++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+-++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+-++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-++++-          System.debug('Hi AND');
+-++-+++++          System.debug('Hi AND Hello');
+-++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++-++++index ebc3aa5..fe51488 100644
+-++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++-++++@@ -1,30 +1 @@
+-++-++++-[
+-++-++++-  {
+-++-++++-    "engine": "pmd",
+-++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-++-++++-    "violations": [
+-++-++++-      {
+-++-++++-        "line": 70,
+-++-++++-        "column": 11,
+-++-++++-        "endLine": 70,
+-++-++++-        "endColumn": 29,
+-++-++++-        "severity": 3,
+-++-++++-        "ruleName": "AvoidDebugStatements",
+-++-++++-        "category": "Performance",
+-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++-++++-      },
+-++-++++-      {
+-++-++++-        "line": 70,
+-++-++++-        "column": 11,
+-++-++++-        "endLine": 70,
+-++-++++-        "endColumn": 29,
+-++-++++-        "severity": 3,
+-++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-++-++++-        "category": "Best Practices",
+-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++-++++-      }
+-++-++++-    ]
+-++-++++-  }
+-++-++++-]
+-++-+++++[]
+-++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-++-++++index ebc3aa5..fe51488 100644
+-++-++++--- a/scanner-reports/final-filtered-scanner-report.json
+-++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
+-++-++++@@ -1,30 +1 @@
+-++-++++-[
+-++-++++-  {
+-++-++++-    "engine": "pmd",
+-++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-++-++++-    "violations": [
+-++-++++-      {
+-++-++++-        "line": 70,
+-++-++++-        "column": 11,
+-++-++++-        "endLine": 70,
+-++-++++-        "endColumn": 29,
+-++-++++-        "severity": 3,
+-++-++++-        "ruleName": "AvoidDebugStatements",
+-++-++++-        "category": "Performance",
+-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++-++++-      },
+-++-++++-      {
+-++-++++-        "line": 70,
+-++-++++-        "column": 11,
+-++-++++-        "endLine": 70,
+-++-++++-        "endColumn": 29,
+-++-++++-        "severity": 3,
+-++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-++-++++-        "category": "Best Practices",
+-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++-++++-      }
+-++-++++-    ]
+-++-++++-  }
+-++-++++-]
+-++-+++++[]
+-++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++-++++index c973918..a14d61d 100644
+-++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++-++++@@ -1 +1 @@
+-++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++-++++\ No newline at end of file
+-++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++-++++\ No newline at end of file
+-++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-+++index 9e21e88..1ec7a54 100644
+-++-+++--- a/force-app/main/default/classes/Account_Insert.cls
+-++-++++++ b/force-app/main/default/classes/Account_Insert.cls
+-++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-+++-          System.debug('Hi AND');
+-++-++++          System.debug('Hi');
+-++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++-+++index ebc3aa5..bb2caee 100644
+-++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++-+++@@ -5,0 +6,22 @@
+-++-++++      {
+-++-++++        "line": 20,
+-++-++++        "column": 11,
+-++-++++        "endLine": 20,
+-++-++++        "endColumn": 35,
+-++-++++        "severity": 3,
+-++-++++        "ruleName": "AvoidDebugStatements",
+-++-++++        "category": "Performance",
+-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++-++++      },
+-++-++++      {
+-++-++++        "line": 20,
+-++-++++        "column": 11,
+-++-++++        "endLine": 20,
+-++-++++        "endColumn": 35,
+-++-++++        "severity": 3,
+-++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++-++++        "category": "Best Practices",
+-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++-++++      },
+-++-+++@@ -10 +32 @@
+-+++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-index daf61a1..3603bae 100644
+-++++index 1328704..5ea091f 100644
+-+++@@ -5,12 +5,5 @@ index daf61a1..3603bae 100644
+-+++-@@ -16 +16 @@ mkdir -p scanner-reports
+-+++--git diff --unified=0 --cached > changes.diff
+-+++-+git diff --cached --unified=0 > changes.diff
+-+++-@@ -25 +25 @@ while IFS= read -r file; do
+-+++--  # Extract only the changed line numbers for the file
+-+++-+  # Extract only the added or modified lines for .cls and .lwc files
+-+++-@@ -32 +32 @@ while IFS= read -r file; do
+-+++--  ' changes.diff)
+-+++-+  ' changes.diff | uniq)
+-+++-@@ -61 +61 @@ while IFS= read -r file; do
+-+++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-++++@@ -30,2 +30,2 @@ while IFS= read -r file; do
+-++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+-++++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+-+++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+-+++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}
+-+++@@ -18,3 +11,2 @@ diff --git a/changes.diff b/changes.diff
+-+++-new file mode 100644
+-+++-index 0000000..a6452b3
+-+++---- /dev/null
+-++++index 1f4c0b2..4035686 100644
+-++++--- a/changes.diff
+-+++@@ -22,1188 +14,3438 @@ index 0000000..a6452b3
+-+++-@@ -0,0 +1,1262 @@
+-+++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-+index daf61a1..3603bae 100644
+-+++-+--- a/.husky/pre-commit
+-+++-++++ b/.husky/pre-commit
+-+++-+@@ -16 +16 @@ mkdir -p scanner-reports
+-+++-+-git diff --unified=0 --cached > changes.diff
+-+++-++git diff --cached --unified=0 > changes.diff
+-+++-+@@ -25 +25 @@ while IFS= read -r file; do
+-+++-+-  # Extract only the changed line numbers for the file
+-+++-++  # Extract only the added or modified lines for .cls and .lwc files
+-+++-+@@ -32 +32 @@ while IFS= read -r file; do
+-+++-+-  ' changes.diff)
+-+++-++  ' changes.diff | uniq)
+-+++-+@@ -61 +61 @@ while IFS= read -r file; do
+-+++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+++-+diff --git a/changes.diff b/changes.diff
+-+++-+new file mode 100644
+-+++-+index 0000000..1831031
+-+++-+--- /dev/null
+-+++-++++ b/changes.diff
+-+++-+@@ -0,0 +1,1158 @@
+-+++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-++index daf61a1..d6ae40b 100644
+-+++-++--- a/.husky/pre-commit
+-+++-+++++ b/.husky/pre-commit
+-+++-++@@ -25 +25 @@ while IFS= read -r file; do
+-+++-++-  # Extract only the changed line numbers for the file
+-+++-+++  # Extract only the added or modified lines for .cls and .lwc files
+-+++-++@@ -32 +32 @@ while IFS= read -r file; do
+-+++-++-  ' changes.diff)
+-+++-+++  ' changes.diff | uniq)
+-+++-++@@ -61 +61 @@ while IFS= read -r file; do
+-+++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+++-++diff --git a/changes.diff b/changes.diff
+-+++-++new file mode 100644
+-+++-++index 0000000..47b6c1c
+-+++-++--- /dev/null
+-+++-+++++ b/changes.diff
+-+++-++@@ -0,0 +1,1078 @@
+-+++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-+++index daf61a1..d6ae40b 100644
+-+++-+++--- a/.husky/pre-commit
+-+++-++++++ b/.husky/pre-commit
+-+++-+++@@ -25 +25 @@ while IFS= read -r file; do
+-+++-+++-  # Extract only the changed line numbers for the file
+-+++-++++  # Extract only the added or modified lines for .cls and .lwc files
+-+++-+++@@ -32 +32 @@ while IFS= read -r file; do
+-+++-+++-  ' changes.diff)
+-+++-++++  ' changes.diff | uniq)
+-+++-+++@@ -61 +61 @@ while IFS= read -r file; do
+-+++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+++-+++diff --git a/changes.diff b/changes.diff
+-+++-+++new file mode 100644
+-+++-+++index 0000000..8cd4f1a
+-+++-+++--- /dev/null
+-+++-++++++ b/changes.diff
+-+++-+++@@ -0,0 +1,977 @@
+-+++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-++++index daf61a1..73bb862 100644
+-+++-++++--- a/.husky/pre-commit
+-+++-+++++++ b/.husky/pre-commit
+-+++-++++@@ -61 +61 @@ while IFS= read -r file; do
+-+++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+++-++++diff --git a/changes.diff b/changes.diff
+-+++-++++new file mode 100644
+-+++-++++index 0000000..f9d24dc
+-+++-++++--- /dev/null
+-+++-+++++++ b/changes.diff
+-+++-++++@@ -0,0 +1,876 @@
+-+++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-+++++index 19cfdbc..daf61a1 100644
+-+++-+++++--- a/.husky/pre-commit
+-+++-++++++++ b/.husky/pre-commit
+-+++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+-+++-+++++-  # Define the output path for the scanner report in CSV format
+-+++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++-++++++  # Extract only the changed line numbers for the file
+-+++-++++++  line_numbers=$(awk -v file="$file" '
+-+++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+-+++-++++++    /^diff --git/ {inside=0}
+-+++-++++++    $0 ~ file {inside=1}
+-+++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+-+++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-+++-++++++  ' changes.diff)
+-+++-++++++
+-+++-++++++  # If no changed lines are found for this file, skip it
+-+++-++++++  if [ -z "$line_numbers" ]; then
+-+++-++++++    echo "No changed lines found in $file"
+-+++-++++++    continue
+-+++-++++++  fi
+-+++-++++++
+-+++-++++++  # Convert the line numbers to a JSON array format for jq filtering
+-+++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+-+++-++++++
+-+++-++++++  echo "Changed lines for $file: $line_numbers_array"
+-+++-++++++
+-+++-++++++  # Define the output path for the scanner report in JSON format
+-+++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+-+++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+-+++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+-+++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+-+++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
+-+++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+-+++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+-+++-++++++  jq --argjson lines "$line_numbers_array" '
+-+++-++++++    [.[] | 
+-+++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+++-++++++      select(.violations | length > 0)]
+-+++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+-+++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++-+++++-    echo "No issues found for line '70' in $file"
+-+++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++-++++++    echo "No issues found for changed lines in $file"
+-+++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+-+++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
+-+++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-++++++  echo "Filtered scanner report for $file (Changed lines):"
+-+++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++@@ -53 +77 @@ done <<< "$changed_files"
+-+++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+-+++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+-+++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+-+++-+++++@@ -60,2 +84,2 @@ fi
+-+++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+-+++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+-+++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++-+++++-echo "Final filtered scanner report (Line '70'):"
+-+++-++++++echo "Final filtered scanner report (Changed lines):"
+-+++-+++++@@ -67 +91 @@ cat "$final_report"
+-+++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+-+++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+-+++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+-+++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+-+++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+-+++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+-+++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+-+++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+-+++-+++++@@ -77 +101 @@ else
+-+++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+-+++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+-+++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++-+++++deleted file mode 100644
+-+++-+++++index 9d692ac..0000000
+-+++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++-++++++++ /dev/null
+-+++-+++++@@ -1,24 +0,0 @@
+-+++-+++++-0
+-+++-+++++-1
+-+++-+++++-2
+-+++-+++++-3
+-+++-+++++-4
+-+++-+++++-5
+-+++-+++++-60
+-+++-+++++-642
+-+++-+++++-643
+-+++-+++++-644
+-+++-+++++-645
+-+++-+++++-646
+-+++-+++++-647
+-+++-+++++-648
+-+++-+++++-649
+-+++-+++++-650
+-+++-+++++-651
+-+++-+++++-652
+-+++-+++++-653
+-+++-+++++-654
+-+++-+++++-655
+-+++-+++++-656
+-+++-+++++-657
+-+++-+++++-70
+-+++-+++++diff --git a/changes.diff b/changes.diff
+-+++-+++++deleted file mode 100644
+-+++-+++++index 61d162d..0000000
+-+++-+++++--- a/changes.diff
+-+++-++++++++ /dev/null
+-+++-+++++@@ -1,647 +0,0 @@
+-+++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-+++++-index 5b262e4..8c05f52 100644
+-+++-+++++---- a/.husky/pre-commit
+-+++-+++++-+++ b/.husky/pre-commit
+-+++-+++++-@@ -113 +113 @@ cat "$final_report"
+-+++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-+++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+-+++-+++++-diff --git a/changes.diff b/changes.diff
+-+++-+++++-index 9a218e6..4fe1995 100644
+-+++-+++++---- a/changes.diff
+-+++-+++++-+++ b/changes.diff
+-+++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-+++++--index aa6762f..586962b 100644
+-+++-+++++-+index 586962b..5b262e4 100644
+-+++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+-+++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
+-+++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-+++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+-+++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-+++-+++++---  # Extract line numbers as a comma-separated string for filtering later
+-+++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-+++-+++++--+  # Extract line numbers as an array for filtering later
+-+++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-+++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
+-+++-+++++---  if [ -z "$line_numbers" ]; then
+-+++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+-+++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-+++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
+-+++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-+++-+++++--+  lines_for_filter="${lines_for_filter:1}"
+-+++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+-+++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+-+++-+++++-+-  awk -v file="$file" '
+-+++-+++++-++  # Extract only the changed line numbers for the file
+-+++-+++++-++  line_numbers=$(awk -v file="$file" '
+-+++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+-+++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+-+++-+++++-++  ' changes.diff)
+-+++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+-+++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+-+++-+++++-++  if [ -z "$line_numbers" ]; then
+-+++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+-+++-+++++-+-  # Extract line numbers as an array for filtering later
+-+++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-+++-+++++-++  # Convert the line numbers to a comma-separated string for matching
+-+++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+-+++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+-+++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
+-+++-+++++---  awk -v lines="$line_numbers" '
+-+++-+++++--+  awk -v lines="$lines_for_filter" '
+-+++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
+-+++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-+++-+++++--@@ -111 +115 @@ cat "$final_report"
+-+++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-+++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
+-+++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+-+++-+++++-+-  # Ensure that line_numbers is not empty
+-+++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+-+++-+++++-++  # Ensure that line_numbers_string is not empty
+-+++-+++++-++  if [ -z "$line_numbers_string" ]; then
+-+++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+-+++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+-+++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-+++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
+-+++-+++++-+-
+-+++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+-+++-+++++-+-  awk -v lines="$lines_for_filter" '
+-+++-+++++-++  awk -v lines="$line_numbers_string" '
+-+++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-+++-+++++--index 0e43eee..a206584 100644
+-+++-+++++-+index a206584..9d692ac 100644
+-+++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+-+++-+++++--@@ -1 +1,6 @@
+-+++-+++++---70 :           System.debug('Hi Hello');
+-+++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++--+1 : index 1ec7a54..870d508 100644
+-+++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-+++++--+4 : -          System.debug('Hi');
+-+++-+++++--+70 :           System.debug('Hi');
+-+++-+++++-+@@ -1,6 +1,24 @@
+-+++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-+-1 : index 1ec7a54..870d508 100644
+-+++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-+++++-+-4 : -          System.debug('Hi');
+-+++-+++++-+-70 :           System.debug('Hi');
+-+++-+++++-++0
+-+++-+++++-++1
+-+++-+++++-++2
+-+++-+++++-++3
+-+++-+++++-++4
+-+++-+++++-++5
+-+++-+++++-++60
+-+++-+++++-++642
+-+++-+++++-++643
+-+++-+++++-++644
+-+++-+++++-++645
+-+++-+++++-++646
+-+++-+++++-++647
+-+++-+++++-++648
+-+++-+++++-++649
+-+++-+++++-++650
+-+++-+++++-++651
+-+++-+++++-++652
+-+++-+++++-++653
+-+++-+++++-++654
+-+++-+++++-++655
+-+++-+++++-++656
+-+++-+++++-++657
+-+++-+++++-++70
+-+++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+-+++-+++++--index 760971b..3dfa538 100644
+-+++-+++++-+index 3dfa538..9a218e6 100644
+-+++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+-+++-+++++---index 255a037..525d43a 100644
+-+++-+++++--+index 525d43a..aa6762f 100644
+-+++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-+++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
+-+++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+-+++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
+-+++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+++-+++++----  # Define the output path for the scanner report
+-+++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++-+++++---+  # Define the output path for the scanner report in CSV format
+-+++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+++-+++++----  # Run the SFDX scanner on the file and generate the report
+-+++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
+-+++-+++++----  # Filter the scanner report based on the changed line numbers
+-+++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
+-+++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+++-+++++----  jq --arg lines "$line_numbers" '
+-+++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++---+  awk -v lines="$line_numbers" '
+-+++-+++++---+  BEGIN {
+-+++-+++++---+    FS=OFS=",";
+-+++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+-+++-+++++---+    for (i in arr) {
+-+++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+++-+++++---+    }
+-+++-+++++---+  }
+-+++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
+-+++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
+-+++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
+-+++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++-+++++---@@ -95,2 +102,4 @@ fi
+-+++-+++++----# Combine all filtered reports into one final report
+-+++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+++-+++++---+# Combine all filtered reports into one final report (optional)
+-+++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
+-+++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+++-+++++---+echo "Final filtered scanner report:"
+-+++-+++++---+cat "$final_report"
+-+++-+++++---+
+-+++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+-+++-+++++--+-    FS=OFS=",";
+-+++-+++++--++    FS=OFS=",";  # Define CSV format
+-+++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+-+++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+++-+++++--+@@ -111 +111 @@ cat "$final_report"
+-+++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++-+++++--+new file mode 100644
+-+++-+++++--+index 0000000..0e43eee
+-+++-+++++--+--- /dev/null
+-+++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++-+++++--+@@ -0,0 +1 @@
+-+++-+++++--++70 :           System.debug('Hi Hello');
+-+++-+++++--+diff --git a/changes.diff b/changes.diff
+-+++-+++++--+new file mode 100644
+-+++-+++++--+index 0000000..760971b
+-+++-+++++--+--- /dev/null
+-+++-+++++--++++ b/changes.diff
+-+++-+++++--+@@ -0,0 +1,65 @@
+-+++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-+++++--++index 255a037..525d43a 100644
+-+++-+++++--++--- a/.husky/pre-commit
+-+++-+++++--+++++ b/.husky/pre-commit
+-+++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+-+++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-+++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+-+++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+++-+++++--++-  # Define the output path for the scanner report
+-+++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++-+++++--+++  # Define the output path for the scanner report in CSV format
+-+++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+++-+++++--++-  # Run the SFDX scanner on the file and generate the report
+-+++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+-+++-+++++--++-  # Filter the scanner report based on the changed line numbers
+-+++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+-+++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+++-+++++--++-  jq --arg lines "$line_numbers" '
+-+++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++--+++  awk -v lines="$line_numbers" '
+-+++-+++++--+++  BEGIN {
+-+++-+++++--+++    FS=OFS=",";
+-+++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+-+++-+++++--+++    for (i in arr) {
+-+++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+++-+++++--+++    }
+-+++-+++++--+++  }
+-+++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+-+++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+-+++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+-+++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++-+++++--++@@ -95,2 +102,4 @@ fi
+-+++-+++++--++-# Combine all filtered reports into one final report
+-+++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+++-+++++--+++# Combine all filtered reports into one final report (optional)
+-+++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+-+++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+++-+++++--+++echo "Final filtered scanner report:"
+-+++-+++++--+++cat "$final_report"
+-+++-+++++--+++
+-+++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++--++index 1ec7a54..870d508 100644
+-+++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-+++++--++-          System.debug('Hi');
+-+++-+++++--+++          System.debug('Hi Hello');
+-+++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+++-+++++---index 1ec7a54..870d508 100644
+-+++-+++++--+index 870d508..1ec7a54 100644
+-+++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-+++-+++++----          System.debug('Hi');
+-+++-+++++---+          System.debug('Hi Hello');
+-+++-+++++--+-          System.debug('Hi Hello');
+-+++-+++++--++          System.debug('Hi');
+-+++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++-+++++--+new file mode 100644
+-+++-+++++--+index 0000000..5a3a1ac
+-+++-+++++--+--- /dev/null
+-+++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++-+++++--+@@ -0,0 +1 @@
+-+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+++-+++++--+new file mode 100644
+-+++-+++++--+index 0000000..5a3a1ac
+-+++-+++++--+--- /dev/null
+-+++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+-+++-+++++--+@@ -0,0 +1 @@
+-+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++-+++++--+new file mode 100644
+-+++-+++++--+index 0000000..e1ef0f0
+-+++-+++++--+--- /dev/null
+-+++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++-+++++--+@@ -0,0 +1,5 @@
+-+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++-+++++-+-index 525d43a..aa6762f 100644
+-+++-+++++-++index aa6762f..586962b 100644
+-+++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+-+++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+-+++-+++++-+--    FS=OFS=",";
+-+++-+++++-+-+    FS=OFS=",";  # Define CSV format
+-+++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+-+++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+++-+++++-+-@@ -111 +111 @@ cat "$final_report"
+-+++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+-+++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-+++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-+++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-+++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+-+++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-+++-+++++-+++  # Extract line numbers as an array for filtering later
+-+++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-+++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+-+++-+++++-++-  if [ -z "$line_numbers" ]; then
+-+++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+-+++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-+++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+-+++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-+++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
+-+++-+++++-+++
+-+++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+-+++-+++++-++-  awk -v lines="$line_numbers" '
+-+++-+++++-+++  awk -v lines="$lines_for_filter" '
+-+++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+-+++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-+++-+++++-++@@ -111 +115 @@ cat "$final_report"
+-+++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-+++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-+++-+++++-+-new file mode 100644
+-+++-+++++-+-index 0000000..0e43eee
+-+++-+++++-+---- /dev/null
+-+++-+++++-++index 0e43eee..a206584 100644
+-+++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+-+++-+++++-+-@@ -0,0 +1 @@
+-+++-+++++-+-+70 :           System.debug('Hi Hello');
+-+++-+++++-++@@ -1 +1,6 @@
+-+++-+++++-++-70 :           System.debug('Hi Hello');
+-+++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-+++1 : index 1ec7a54..870d508 100644
+-+++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-+++++-+++4 : -          System.debug('Hi');
+-+++-+++++-+++70 :           System.debug('Hi');
+-+++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+-+++-+++++-+-new file mode 100644
+-+++-+++++-+-index 0000000..760971b
+-+++-+++++-+---- /dev/null
+-+++-+++++-++index 760971b..3dfa538 100644
+-+++-+++++-++--- a/changes.diff
+-+++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+-+++-+++++-+-@@ -0,0 +1,65 @@
+-+++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-+++++-+-+index 255a037..525d43a 100644
+-+++-+++++-+-+--- a/.husky/pre-commit
+-+++-+++++-+-++++ b/.husky/pre-commit
+-+++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+-+++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+-+++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+-+++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+++-+++++-+-+-  # Define the output path for the scanner report
+-+++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++-+++++-+-++  # Define the output path for the scanner report in CSV format
+-+++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+-+++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+-+++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
+-+++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+-+++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+++-+++++-+-+-  jq --arg lines "$line_numbers" '
+-+++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++-+-++  awk -v lines="$line_numbers" '
+-+++-+++++-+-++  BEGIN {
+-+++-+++++-+-++    FS=OFS=",";
+-+++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+-+++-+++++-+-++    for (i in arr) {
+-+++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+++-+++++-+-++    }
+-+++-+++++-+-++  }
+-+++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+-+++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+-+++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+-+++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++-+++++-+-+@@ -95,2 +102,4 @@ fi
+-+++-+++++-+-+-# Combine all filtered reports into one final report
+-+++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+++-+++++-+-++# Combine all filtered reports into one final report (optional)
+-+++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+-+++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+++-+++++-+-++echo "Final filtered scanner report:"
+-+++-+++++-+-++cat "$final_report"
+-+++-+++++-+-++
+-+++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-+-+index 1ec7a54..870d508 100644
+-+++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-+++++-+-+-          System.debug('Hi');
+-+++-+++++-+-++          System.debug('Hi Hello');
+-+++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-+++++-++-index 255a037..525d43a 100644
+-+++-+++++-+++index 525d43a..aa6762f 100644
+-+++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-+++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+-+++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+-+++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+-+++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+++-+++++-++--  # Define the output path for the scanner report
+-+++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++-+++++-++-+  # Define the output path for the scanner report in CSV format
+-+++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+++-+++++-++--  # Run the SFDX scanner on the file and generate the report
+-+++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+-+++-+++++-++--  # Filter the scanner report based on the changed line numbers
+-+++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+-+++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+++-+++++-++--  jq --arg lines "$line_numbers" '
+-+++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++-++-+  awk -v lines="$line_numbers" '
+-+++-+++++-++-+  BEGIN {
+-+++-+++++-++-+    FS=OFS=",";
+-+++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+-+++-+++++-++-+    for (i in arr) {
+-+++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+++-+++++-++-+    }
+-+++-+++++-++-+  }
+-+++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+-+++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+-+++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+-+++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++-+++++-++-@@ -95,2 +102,4 @@ fi
+-+++-+++++-++--# Combine all filtered reports into one final report
+-+++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+++-+++++-++-+# Combine all filtered reports into one final report (optional)
+-+++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+-+++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+++-+++++-++-+echo "Final filtered scanner report:"
+-+++-+++++-++-+cat "$final_report"
+-+++-+++++-++-+
+-+++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+-+++-+++++-+++-    FS=OFS=",";
+-+++-+++++-++++    FS=OFS=",";  # Define CSV format
+-+++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+-+++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+++-+++++-+++@@ -111 +111 @@ cat "$final_report"
+-+++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++-+++++-+++new file mode 100644
+-+++-+++++-+++index 0000000..0e43eee
+-+++-+++++-+++--- /dev/null
+-+++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++-+++++-+++@@ -0,0 +1 @@
+-+++-+++++-++++70 :           System.debug('Hi Hello');
+-+++-+++++-+++diff --git a/changes.diff b/changes.diff
+-+++-+++++-+++new file mode 100644
+-+++-+++++-+++index 0000000..760971b
+-+++-+++++-+++--- /dev/null
+-+++-+++++-++++++ b/changes.diff
+-+++-+++++-+++@@ -0,0 +1,65 @@
+-+++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++-+++++-++++index 255a037..525d43a 100644
+-+++-+++++-++++--- a/.husky/pre-commit
+-+++-+++++-+++++++ b/.husky/pre-commit
+-+++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+-+++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-+++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+-+++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+++-+++++-++++-  # Define the output path for the scanner report
+-+++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++-+++++-+++++  # Define the output path for the scanner report in CSV format
+-+++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
+-+++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+-+++-+++++-++++-  # Filter the scanner report based on the changed line numbers
+-+++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+-+++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+++-+++++-++++-  jq --arg lines "$line_numbers" '
+-+++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++-+++++  awk -v lines="$line_numbers" '
+-+++-+++++-+++++  BEGIN {
+-+++-+++++-+++++    FS=OFS=",";
+-+++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+-+++-+++++-+++++    for (i in arr) {
+-+++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+++-+++++-+++++    }
+-+++-+++++-+++++  }
+-+++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+-+++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+-+++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+-+++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++-+++++-++++@@ -95,2 +102,4 @@ fi
+-+++-+++++-++++-# Combine all filtered reports into one final report
+-+++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+++-+++++-+++++# Combine all filtered reports into one final report (optional)
+-+++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+-+++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+++-+++++-+++++echo "Final filtered scanner report:"
+-+++-+++++-+++++cat "$final_report"
+-+++-+++++-+++++
+-+++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-++++index 1ec7a54..870d508 100644
+-+++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-+++++-++++-          System.debug('Hi');
+-+++-+++++-+++++          System.debug('Hi Hello');
+-+++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+++-+++++-++-index 1ec7a54..870d508 100644
+-+++-+++++-+++index 870d508..1ec7a54 100644
+-+++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-+++-+++++-++--          System.debug('Hi');
+-+++-+++++-++-+          System.debug('Hi Hello');
+-+++-+++++-+++-          System.debug('Hi Hello');
+-+++-+++++-++++          System.debug('Hi');
+-+++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++-+++++-+++new file mode 100644
+-+++-+++++-+++index 0000000..5a3a1ac
+-+++-+++++-+++--- /dev/null
+-+++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++-+++++-+++@@ -0,0 +1 @@
+-+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+++-+++++-+++new file mode 100644
+-+++-+++++-+++index 0000000..5a3a1ac
+-+++-+++++-+++--- /dev/null
+-+++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+-+++-+++++-+++@@ -0,0 +1 @@
+-+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++-+++++-+++new file mode 100644
+-+++-+++++-+++index 0000000..e1ef0f0
+-+++-+++++-+++--- /dev/null
+-+++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++-+++++-+++@@ -0,0 +1,5 @@
+-+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+++-+++++-+-index 870d508..1ec7a54 100644
+-+++-+++++-++index 1ec7a54..870d508 100644
+-+++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+-+++-+++++-+--          System.debug('Hi Hello');
+-+++-+++++-+-+          System.debug('Hi');
+-+++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++-+++++-+-new file mode 100644
+-+++-+++++-+-index 0000000..5a3a1ac
+-+++-+++++-+---- /dev/null
+-+++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++-+++++-+-@@ -0,0 +1 @@
+-+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+++-+++++-+-new file mode 100644
+-+++-+++++-+-index 0000000..5a3a1ac
+-+++-+++++-+---- /dev/null
+-+++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+-+++-+++++-+-@@ -0,0 +1 @@
+-+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++-+++++-+-new file mode 100644
+-+++-+++++-+-index 0000000..e1ef0f0
+-+++-+++++-+---- /dev/null
+-+++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++-+++++-+-@@ -0,0 +1,5 @@
+-+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++-+++++-++-          System.debug('Hi');
+-+++-+++++-+++          System.debug('Hi Hello');
+-+++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+++-+++++--index 1ec7a54..870d508 100644
+-+++-+++++-+index 870d508..5eafcac 100644
+-+++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+-+++-+++++---          System.debug('Hi');
+-+++-+++++--+          System.debug('Hi Hello');
+-+++-+++++-+-          System.debug('Hi Hello');
+-+++-+++++-++          System.debug('Happy');
+-+++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-index 5eafcac..1ec7a54 100644
+-+++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-+++++--          System.debug('Happy');
+-+++-+++++-+          System.debug('Hi');
+-+++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++index 73696e2..9e21e88 100644
+-+++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
+-+++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-+++++-          System.debug('Hello and Hi');
+-+++-++++++          System.debug('Hi AND');
+-+++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++-+++++deleted file mode 100644
+-+++-+++++index 5a3a1ac..0000000
+-+++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++-++++++++ /dev/null
+-+++-+++++@@ -1 +0,0 @@
+-+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++-+++++new file mode 100644
+-+++-+++++index 0000000..ebc3aa5
+-+++-+++++--- /dev/null
+-+++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++-+++++@@ -0,0 +1,30 @@
+-+++-++++++[
+-+++-++++++  {
+-+++-++++++    "engine": "pmd",
+-+++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++-++++++    "violations": [
+-+++-++++++      {
+-+++-++++++        "line": 70,
+-+++-++++++        "column": 11,
+-+++-++++++        "endLine": 70,
+-+++-++++++        "endColumn": 29,
+-+++-++++++        "severity": 3,
+-+++-++++++        "ruleName": "AvoidDebugStatements",
+-+++-++++++        "category": "Performance",
+-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++-++++++      },
+-+++-++++++      {
+-+++-++++++        "line": 70,
+-+++-++++++        "column": 11,
+-+++-++++++        "endLine": 70,
+-+++-++++++        "endColumn": 29,
+-+++-++++++        "severity": 3,
+-+++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++-++++++        "category": "Best Practices",
+-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++-++++++      }
+-+++-++++++    ]
+-+++-++++++  }
+-+++-++++++]
+-+++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+++-+++++deleted file mode 100644
+-+++-+++++index 5a3a1ac..0000000
+-+++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+-+++-++++++++ /dev/null
+-+++-+++++@@ -1 +0,0 @@
+-+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-+++-+++++new file mode 100644
+-+++-+++++index 0000000..ebc3aa5
+-+++-+++++--- /dev/null
+-+++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
+-+++-+++++@@ -0,0 +1,30 @@
+-+++-++++++[
+-+++-++++++  {
+-+++-++++++    "engine": "pmd",
+-+++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++-++++++    "violations": [
+-+++-++++++      {
+-+++-++++++        "line": 70,
+-+++-++++++        "column": 11,
+-+++-++++++        "endLine": 70,
+-+++-++++++        "endColumn": 29,
+-+++-++++++        "severity": 3,
+-+++-++++++        "ruleName": "AvoidDebugStatements",
+-+++-++++++        "category": "Performance",
+-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++-++++++      },
+-+++-++++++      {
+-+++-++++++        "line": 70,
+-+++-++++++        "column": 11,
+-+++-++++++        "endLine": 70,
+-+++-++++++        "endColumn": 29,
+-+++-++++++        "severity": 3,
+-+++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++-++++++        "category": "Best Practices",
+-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++-++++++      }
+-+++-++++++    ]
+-+++-++++++  }
+-+++-++++++]
+-+++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++-+++++deleted file mode 100644
+-+++-+++++index e1ef0f0..0000000
+-+++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++-++++++++ /dev/null
+-+++-+++++@@ -1,5 +0,0 @@
+-+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++-+++++new file mode 100644
+-+++-+++++index 0000000..c973918
+-+++-+++++--- /dev/null
+-+++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++-+++++@@ -0,0 +1 @@
+-+++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++-+++++\ No newline at end of file
+-+++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-++++index 9e21e88..800635e 100644
+-+++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+-+++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-++++-          System.debug('Hi AND');
+-+++-+++++          System.debug('Hi AND Hello');
+-+++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++-++++index ebc3aa5..fe51488 100644
+-+++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++-++++@@ -1,30 +1 @@
+-+++-++++-[
+-+++-++++-  {
+-+++-++++-    "engine": "pmd",
+-+++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++-++++-    "violations": [
+-+++-++++-      {
+-+++-++++-        "line": 70,
+-+++-++++-        "column": 11,
+-+++-++++-        "endLine": 70,
+-+++-++++-        "endColumn": 29,
+-+++-++++-        "severity": 3,
+-+++-++++-        "ruleName": "AvoidDebugStatements",
+-+++-++++-        "category": "Performance",
+-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++-++++-      },
+-+++-++++-      {
+-+++-++++-        "line": 70,
+-+++-++++-        "column": 11,
+-+++-++++-        "endLine": 70,
+-+++-++++-        "endColumn": 29,
+-+++-++++-        "severity": 3,
+-+++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++-++++-        "category": "Best Practices",
+-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++-++++-      }
+-+++-++++-    ]
+-+++-++++-  }
+-+++-++++-]
+-+++-+++++[]
+-+++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-+++-++++index ebc3aa5..fe51488 100644
+-+++-++++--- a/scanner-reports/final-filtered-scanner-report.json
+-+++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
+-+++-++++@@ -1,30 +1 @@
+-+++-++++-[
+-+++-++++-  {
+-+++-++++-    "engine": "pmd",
+-+++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++-++++-    "violations": [
+-+++-++++-      {
+-+++-++++-        "line": 70,
+-+++-++++-        "column": 11,
+-+++-++++-        "endLine": 70,
+-+++-++++-        "endColumn": 29,
+-+++-++++-        "severity": 3,
+-+++-++++-        "ruleName": "AvoidDebugStatements",
+-+++-++++-        "category": "Performance",
+-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++-++++-      },
+-+++-++++-      {
+-+++-++++-        "line": 70,
+-+++-++++-        "column": 11,
+-+++-++++-        "endLine": 70,
+-+++-++++-        "endColumn": 29,
+-+++-++++-        "severity": 3,
+-+++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++-++++-        "category": "Best Practices",
+-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++-++++-      }
+-+++-++++-    ]
+-+++-++++-  }
+-+++-++++-]
+-+++-+++++[]
+-+++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++-++++index c973918..a14d61d 100644
+-+++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++-++++@@ -1 +1 @@
+-+++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++-++++\ No newline at end of file
+-+++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++-++++\ No newline at end of file
+-+++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++index 9e21e88..1ec7a54 100644
+-+++-+++--- a/force-app/main/default/classes/Account_Insert.cls
+-+++-++++++ b/force-app/main/default/classes/Account_Insert.cls
+-+++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-+++-          System.debug('Hi AND');
+-+++-++++          System.debug('Hi');
+-+++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++-+++index ebc3aa5..bb2caee 100644
+-+++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++-+++@@ -5,0 +6,22 @@
+-+++-++++      {
+-+++-++++        "line": 20,
+-+++-++++        "column": 11,
+-+++-++++        "endLine": 20,
+-+++-++++        "endColumn": 35,
+-+++-++++        "severity": 3,
+-+++-++++        "ruleName": "AvoidDebugStatements",
+-+++-++++        "category": "Performance",
+-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++-++++      },
+-+++-++++      {
+-+++-++++        "line": 20,
+-+++-++++        "column": 11,
+-+++-++++        "endLine": 20,
+-+++-++++        "endColumn": 35,
+-+++-++++        "severity": 3,
+-+++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++-++++        "category": "Best Practices",
+-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++-++++      },
+-+++-+++@@ -10 +32 @@
+-+++-+++-        "endColumn": 29,
+-+++-++++        "endColumn": 39,
+-+++-+++@@ -21 +43 @@
+-+++-+++-        "endColumn": 29,
+-+++-++++        "endColumn": 39,
+-+++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-+++-+++index ebc3aa5..bb2caee 100644
+-+++-+++--- a/scanner-reports/final-filtered-scanner-report.json
+-+++-++++++ b/scanner-reports/final-filtered-scanner-report.json
+-+++-+++@@ -5,0 +6,22 @@
+-+++-++++      {
+-+++-++++        "line": 20,
+-+++-++++        "column": 11,
+-+++-++++        "endLine": 20,
+-+++-++++        "endColumn": 35,
+-+++-++++        "severity": 3,
+-+++-++++        "ruleName": "AvoidDebugStatements",
+-+++-++++        "category": "Performance",
+-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++-++++      },
+-+++-++++      {
+-+++-++++        "line": 20,
+-+++-++++        "column": 11,
+-+++-++++        "endLine": 20,
+-+++-++++        "endColumn": 35,
+-+++-++++        "severity": 3,
+-+++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++-++++        "category": "Best Practices",
+-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++-++++      },
+-+++-+++@@ -10 +32 @@
+-+++-+++-        "endColumn": 29,
+-+++-++++        "endColumn": 39,
+-+++-+++@@ -21 +43 @@
+-+++-+++-        "endColumn": 29,
+-+++-++++        "endColumn": 39,
+-+++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++-+++index c973918..866c0b7 100644
+-+++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++-+++@@ -1 +1 @@
+-+++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++-+++\ No newline at end of file
+-+++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++-+++\ No newline at end of file
+-+++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-++index 9e21e88..9a5148a 100644
+-+++-++--- a/force-app/main/default/classes/Account_Insert.cls
+-+++-+++++ b/force-app/main/default/classes/Account_Insert.cls
+-+++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-++-          System.debug('Hi AND');
+-+++-+++          System.debug('Hello');
+-+++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++-++index ebc3aa5..b33da59 100644
+-+++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++-++@@ -5,0 +6,22 @@
+-+++-+++      {
+-+++-+++        "line": 20,
+-+++-+++        "column": 11,
+-+++-+++        "endLine": 20,
+-+++-+++        "endColumn": 35,
+-+++-+++        "severity": 3,
+-+++-+++        "ruleName": "AvoidDebugStatements",
+-+++-+++        "category": "Performance",
+-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++-+++      },
+-+++-+++      {
+-+++-+++        "line": 20,
+-+++-+++        "column": 11,
+-+++-+++        "endLine": 20,
+-+++-+++        "endColumn": 35,
+-+++-+++        "severity": 3,
+-+++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++-+++        "category": "Best Practices",
+-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++-+++      },
+-+++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-+++-++index ebc3aa5..b33da59 100644
+-+++-++--- a/scanner-reports/final-filtered-scanner-report.json
+-+++-+++++ b/scanner-reports/final-filtered-scanner-report.json
+-+++-++@@ -5,0 +6,22 @@
+-+++-+++      {
+-+++-+++        "line": 20,
+-+++-+++        "column": 11,
+-+++-+++        "endLine": 20,
+-+++-+++        "endColumn": 35,
+-+++-+++        "severity": 3,
+-+++-+++        "ruleName": "AvoidDebugStatements",
+-+++-+++        "category": "Performance",
+-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++-+++      },
+-+++-+++      {
+-+++-+++        "line": 20,
+-+++-+++        "column": 11,
+-+++-+++        "endLine": 20,
+-+++-+++        "endColumn": 35,
+-+++-+++        "severity": 3,
+-+++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++-+++        "category": "Best Practices",
+-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++-+++      },
+-+++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++-+index 9e21e88..1ec7a54 100644
+-+++-+--- a/force-app/main/default/classes/Account_Insert.cls
+-+++-++++ b/force-app/main/default/classes/Account_Insert.cls
+-+++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++-+-          System.debug('Hi AND');
+-+++-++          System.debug('Hi');
+-++++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-index daf61a1..3603bae 100644
+-+++++index 1328704..5ea091f 100644
+-++++@@ -5,12 +5,5 @@ index daf61a1..3603bae 100644
+-++++-@@ -16 +16 @@ mkdir -p scanner-reports
+-++++--git diff --unified=0 --cached > changes.diff
+-++++-+git diff --cached --unified=0 > changes.diff
+-++++-@@ -25 +25 @@ while IFS= read -r file; do
+-++++--  # Extract only the changed line numbers for the file
+-++++-+  # Extract only the added or modified lines for .cls and .lwc files
+-++++-@@ -32 +32 @@ while IFS= read -r file; do
+-++++--  ' changes.diff)
+-++++-+  ' changes.diff | uniq)
+-++++-@@ -61 +61 @@ while IFS= read -r file; do
+-++++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+++++@@ -30,2 +30,2 @@ while IFS= read -r file; do
+-+++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+-+++++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
@@ -146,101 +14185,6 @@ index 1f4c0b2..3afa5f1 100644
--++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
--++++++  ' changes.diff)
--++++++
--++++++  # If no changed lines are found for this file, skip it
--++++++  if [ -z "$line_numbers" ]; then
--++++++    echo "No changed lines found in $file"
--++++++    continue
--++++++  fi
--++++++
--++++++  # Convert the line numbers to a JSON array format for jq filtering
--++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
--++++++
--++++++  echo "Changed lines for $file: $line_numbers_array"
--++++++
--++++++  # Define the output path for the scanner report in JSON format
--++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
--+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
--+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
--+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
--++++++  # Run the SFDX scanner on the file and generate the report in JSON format
--++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
--+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
--+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
--+++++-  echo "Filtering scanner report for $file for Line '70'..."
--+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
--++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
--++++++  jq --argjson lines "$line_numbers_array" '
--++++++    [.[] | 
--++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
--++++++      select(.violations | length > 0)]
--++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
--+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
--+++++-    echo "No issues found for line '70' in $file"
--++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
--++++++    echo "No issues found for changed lines in $file"
--+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
--+++++-  echo "Filtered scanner report for $file (Line '70'):"
--+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--++++++  echo "Filtered scanner report for $file (Changed lines):"
--++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++@@ -53 +77 @@ done <<< "$changed_files"
--+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
--++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
--+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
--+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
--++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
--+++++@@ -60,2 +84,2 @@ fi
--+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
--+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
--++++++final_report="scanner-reports/final-filtered-scanner-report.json"
--++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
--+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
--+++++-echo "Final filtered scanner report (Line '70'):"
--++++++echo "Final filtered scanner report (Changed lines):"
--+++++@@ -67 +91 @@ cat "$final_report"
--+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
--++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
--+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
--+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
--++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
--+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
--+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
--++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
--+++++@@ -77 +101 @@ else
--+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
--++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
--+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
--+++++deleted file mode 100644
--+++++index 9d692ac..0000000
--+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
--++++++++ /dev/null
--+++++@@ -1,24 +0,0 @@
--+++++-0
--+++++-1
--+++++-2
--+++++-3
--+++++-4
--+++++-5
--+++++-60
--+++++-642
--+++++-643
--+++++-644
--+++++-645
--+++++-646
--+++++-647
--+++++-648
--+++++-649
--+++++-650
--+++++-651
--+++++-652
--+++++-653
--+++++-654
--+++++-655
--+++++-656
--+++++-657
--+++++-70
--+++++diff --git a/changes.diff b/changes.diff
--+++++deleted file mode 100644
--+++++index 61d162d..0000000
+-++++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}
+-++++@@ -18,3 +11,2 @@ diff --git a/changes.diff b/changes.diff
+-++++-new file mode 100644
+-++++-index 0000000..a6452b3
+-++++---- /dev/null
+-+++++index 1f4c0b2..1b1df18 100644
@@ -248,575 +14192,3024 @@ index 1f4c0b2..3afa5f1 100644
--++++++++ /dev/null
--+++++@@ -1,647 +0,0 @@
--+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
--+++++-index 5b262e4..8c05f52 100644
--+++++---- a/.husky/pre-commit
--+++++-+++ b/.husky/pre-commit
--+++++-@@ -113 +113 @@ cat "$final_report"
--+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
--+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
--+++++-diff --git a/changes.diff b/changes.diff
--+++++-index 9a218e6..4fe1995 100644
--+++++---- a/changes.diff
--+++++-+++ b/changes.diff
--+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
--+++++--index aa6762f..586962b 100644
--+++++-+index 586962b..5b262e4 100644
--+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
--+++++--@@ -41 +41 @@ while IFS= read -r file; do
--+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
--+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
--+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
--+++++---  # Extract line numbers as a comma-separated string for filtering later
--+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
--+++++--+  # Extract line numbers as an array for filtering later
--+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
--+++++--@@ -66 +66 @@ while IFS= read -r file; do
--+++++---  if [ -z "$line_numbers" ]; then
--+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
--+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
--+++++--+  # Convert the array of line numbers into a format that can be used by awk
--+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
--+++++--+  lines_for_filter="${lines_for_filter:1}"
--+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
--+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
--+++++-+-  awk -v file="$file" '
--+++++-++  # Extract only the changed line numbers for the file
--+++++-++  line_numbers=$(awk -v file="$file" '
--+++++-+@@ -42 +42 @@ while IFS= read -r file; do
--+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
--+++++-++  ' changes.diff)
--+++++-+@@ -45 +45 @@ while IFS= read -r file; do
--+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
--+++++-++  if [ -z "$line_numbers" ]; then
--+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
--+++++-+-  # Extract line numbers as an array for filtering later
--+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
--+++++-++  # Convert the line numbers to a comma-separated string for matching
--+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
--+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
--+++++--@@ -73 +77 @@ while IFS= read -r file; do
--+++++---  awk -v lines="$line_numbers" '
--+++++--+  awk -v lines="$lines_for_filter" '
--+++++--@@ -81 +85 @@ while IFS= read -r file; do
--+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
--+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
--+++++--@@ -111 +115 @@ cat "$final_report"
--+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
--+++++-++  echo "Changed lines for $file: $line_numbers_string"
--+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
--+++++-+-  # Ensure that line_numbers is not empty
--+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
--+++++-++  # Ensure that line_numbers_string is not empty
--+++++-++  if [ -z "$line_numbers_string" ]; then
--+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
--+++++-+-  # Convert the array of line numbers into a format that can be used by awk
--+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
--+++++-+-  lines_for_filter="${lines_for_filter:1}"
--+++++-+-
--+++++-+@@ -77 +75 @@ while IFS= read -r file; do
--+++++-+-  awk -v lines="$lines_for_filter" '
--+++++-++  awk -v lines="$line_numbers_string" '
--+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
--+++++--index 0e43eee..a206584 100644
--+++++-+index a206584..9d692ac 100644
--+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
--+++++--@@ -1 +1,6 @@
--+++++---70 :           System.debug('Hi Hello');
--+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--+++++--+1 : index 1ec7a54..870d508 100644
--+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
--+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
--+++++--+4 : -          System.debug('Hi');
--+++++--+70 :           System.debug('Hi');
--+++++-+@@ -1,6 +1,24 @@
--+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--+++++-+-1 : index 1ec7a54..870d508 100644
--+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
--+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
--+++++-+-4 : -          System.debug('Hi');
--+++++-+-70 :           System.debug('Hi');
--+++++-++0
--+++++-++1
--+++++-++2
--+++++-++3
--+++++-++4
--+++++-++5
--+++++-++60
--+++++-++642
--+++++-++643
--+++++-++644
--+++++-++645
--+++++-++646
--+++++-++647
--+++++-++648
--+++++-++649
--+++++-++650
--+++++-++651
--+++++-++652
--+++++-++653
--+++++-++654
--+++++-++655
--+++++-++656
--+++++-++657
--+++++-++70
--+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
--+++++--index 760971b..3dfa538 100644
--+++++-+index 3dfa538..9a218e6 100644
--+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
--+++++---index 255a037..525d43a 100644
--+++++--+index 525d43a..aa6762f 100644
--+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
--+++++---@@ -50 +50 @@ while IFS= read -r file; do
--+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
--+++++---+  # Extract line numbers as a comma-separated string for filtering later
--+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
--+++++----  # Define the output path for the scanner report
--+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
--+++++---+  # Define the output path for the scanner report in CSV format
--+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
--+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
--+++++----  # Run the SFDX scanner on the file and generate the report
--+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
--+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
--+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
--+++++---@@ -71 +71 @@ while IFS= read -r file; do
--+++++----  # Filter the scanner report based on the changed line numbers
--+++++---+  # Filter the CSV scanner report based on the changed line numbers
--+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
--+++++----  jq --arg lines "$line_numbers" '
--+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
--+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++---+  awk -v lines="$line_numbers" '
--+++++---+  BEGIN {
--+++++---+    FS=OFS=",";
--+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
--+++++---+    for (i in arr) {
--+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
--+++++---+    }
--+++++---+  }
--+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
--+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--+++++---@@ -78 +85 @@ while IFS= read -r file; do
--+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
--+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
--+++++---@@ -84 +91 @@ while IFS= read -r file; do
--+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--+++++---@@ -89 +96 @@ done <<< "$changed_files"
--+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
--+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
--+++++---@@ -95,2 +102,4 @@ fi
--+++++----# Combine all filtered reports into one final report
--+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
--+++++---+# Combine all filtered reports into one final report (optional)
--+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
--+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
--+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
--+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
--+++++----# Parse the final filtered scanner report and check for severity 3 issues
--+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
--+++++---+echo "Final filtered scanner report:"
--+++++---+cat "$final_report"
--+++++---+
--+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
--+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++--+@@ -75 +75 @@ while IFS= read -r file; do
--+++++--+-    FS=OFS=",";
--+++++--++    FS=OFS=",";  # Define CSV format
--+++++--+@@ -81 +81 @@ while IFS= read -r file; do
--+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
--+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
--+++++--+@@ -111 +111 @@ cat "$final_report"
--+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
--+++++--+new file mode 100644
--+++++--+index 0000000..0e43eee
--+++++--+--- /dev/null
--+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
--+++++--+@@ -0,0 +1 @@
--+++++--++70 :           System.debug('Hi Hello');
--+++++--+diff --git a/changes.diff b/changes.diff
--+++++--+new file mode 100644
--+++++--+index 0000000..760971b
--+++++--+--- /dev/null
--+++++--++++ b/changes.diff
--+++++--+@@ -0,0 +1,65 @@
--+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
--+++++--++index 255a037..525d43a 100644
--+++++--++--- a/.husky/pre-commit
--+++++--+++++ b/.husky/pre-commit
--+++++--++@@ -50 +50 @@ while IFS= read -r file; do
--+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
--+++++--+++  # Extract line numbers as a comma-separated string for filtering later
--+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
--+++++--++-  # Define the output path for the scanner report
--+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
--+++++--+++  # Define the output path for the scanner report in CSV format
--+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
--+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
--+++++--++-  # Run the SFDX scanner on the file and generate the report
--+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
--+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
--+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
--+++++--++@@ -71 +71 @@ while IFS= read -r file; do
--+++++--++-  # Filter the scanner report based on the changed line numbers
--+++++--+++  # Filter the CSV scanner report based on the changed line numbers
--+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
--+++++--++-  jq --arg lines "$line_numbers" '
--+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
--+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++--+++  awk -v lines="$line_numbers" '
--+++++--+++  BEGIN {
--+++++--+++    FS=OFS=",";
--+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
--+++++--+++    for (i in arr) {
--+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
--+++++--+++    }
--+++++--+++  }
--+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
--+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--+++++--++@@ -78 +85 @@ while IFS= read -r file; do
--+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
--+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
--+++++--++@@ -84 +91 @@ while IFS= read -r file; do
--+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--+++++--++@@ -89 +96 @@ done <<< "$changed_files"
--+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
--+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
--+++++--++@@ -95,2 +102,4 @@ fi
--+++++--++-# Combine all filtered reports into one final report
--+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
--+++++--+++# Combine all filtered reports into one final report (optional)
--+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
--+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
--+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
--+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
--+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
--+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
--+++++--+++echo "Final filtered scanner report:"
--+++++--+++cat "$final_report"
--+++++--+++
--+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
--+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--+++++--++index 1ec7a54..870d508 100644
--+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
--+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
--+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
--+++++--++-          System.debug('Hi');
--+++++--+++          System.debug('Hi Hello');
--+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
--+++++---index 1ec7a54..870d508 100644
--+++++--+index 870d508..1ec7a54 100644
--+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
--+++++----          System.debug('Hi');
--+++++---+          System.debug('Hi Hello');
--+++++--+-          System.debug('Hi Hello');
--+++++--++          System.debug('Hi');
--+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
--+++++--+new file mode 100644
--+++++--+index 0000000..5a3a1ac
--+++++--+--- /dev/null
--+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
--+++++--+@@ -0,0 +1 @@
--+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
--+++++--+new file mode 100644
--+++++--+index 0000000..5a3a1ac
--+++++--+--- /dev/null
--+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
--+++++--+@@ -0,0 +1 @@
--+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
--+++++--+new file mode 100644
--+++++--+index 0000000..e1ef0f0
--+++++--+--- /dev/null
--+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
--+++++--+@@ -0,0 +1,5 @@
--+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
--+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
--+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
--+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
--+++++-+-index 525d43a..aa6762f 100644
--+++++-++index aa6762f..586962b 100644
--+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
--+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
--+++++-+--    FS=OFS=",";
--+++++-+-+    FS=OFS=",";  # Define CSV format
--+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
--+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
--+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
--+++++-+-@@ -111 +111 @@ cat "$final_report"
--+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++-++@@ -41 +41 @@ while IFS= read -r file; do
--+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
--+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
--+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
--+++++-++-  # Extract line numbers as a comma-separated string for filtering later
--+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
--+++++-+++  # Extract line numbers as an array for filtering later
--+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
--+++++-++@@ -66 +66 @@ while IFS= read -r file; do
--+++++-++-  if [ -z "$line_numbers" ]; then
--+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
--+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
--+++++-+++  # Convert the array of line numbers into a format that can be used by awk
--+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
--+++++-+++  lines_for_filter="${lines_for_filter:1}"
--+++++-+++
--+++++-++@@ -73 +77 @@ while IFS= read -r file; do
--+++++-++-  awk -v lines="$line_numbers" '
--+++++-+++  awk -v lines="$lines_for_filter" '
--+++++-++@@ -81 +85 @@ while IFS= read -r file; do
--+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
--+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
--+++++-++@@ -111 +115 @@ cat "$final_report"
--+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
--+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
--+++++-+-new file mode 100644
--+++++-+-index 0000000..0e43eee
--+++++-+---- /dev/null
--+++++-++index 0e43eee..a206584 100644
--+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
--+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
--+++++-+-@@ -0,0 +1 @@
--+++++-+-+70 :           System.debug('Hi Hello');
--+++++-++@@ -1 +1,6 @@
--+++++-++-70 :           System.debug('Hi Hello');
--+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--+++++-+++1 : index 1ec7a54..870d508 100644
--+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
--+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
--+++++-+++4 : -          System.debug('Hi');
--+++++-+++70 :           System.debug('Hi');
--+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
--+++++-+-new file mode 100644
--+++++-+-index 0000000..760971b
--+++++-+---- /dev/null
--+++++-++index 760971b..3dfa538 100644
--+++++-++--- a/changes.diff
--+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
--+++++-+-@@ -0,0 +1,65 @@
--+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
--+++++-+-+index 255a037..525d43a 100644
--+++++-+-+--- a/.husky/pre-commit
--+++++-+-++++ b/.husky/pre-commit
--+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
--+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
--+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
--+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
--+++++-+-+-  # Define the output path for the scanner report
--+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
--+++++-+-++  # Define the output path for the scanner report in CSV format
--+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
--+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
--+++++-+-+-  # Run the SFDX scanner on the file and generate the report
--+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
--+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
--+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
--+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
--+++++-+-+-  # Filter the scanner report based on the changed line numbers
--+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
--+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
--+++++-+-+-  jq --arg lines "$line_numbers" '
--+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
--+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++-+-++  awk -v lines="$line_numbers" '
--+++++-+-++  BEGIN {
--+++++-+-++    FS=OFS=",";
--+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
--+++++-+-++    for (i in arr) {
--+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
--+++++-+-++    }
--+++++-+-++  }
--+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
--+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
--+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
--+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
--+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
--+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
--+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
--+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
--+++++-+-+@@ -95,2 +102,4 @@ fi
--+++++-+-+-# Combine all filtered reports into one final report
--+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
--+++++-+-++# Combine all filtered reports into one final report (optional)
--+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
--+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
--+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
--+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
--+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
--+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
--+++++-+-++echo "Final filtered scanner report:"
--+++++-+-++cat "$final_report"
--+++++-+-++
--+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
--+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--+++++-+-+index 1ec7a54..870d508 100644
--+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
--+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
--+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
--+++++-+-+-          System.debug('Hi');
--+++++-+-++          System.debug('Hi Hello');
--+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
--+++++-++-index 255a037..525d43a 100644
--+++++-+++index 525d43a..aa6762f 100644
--+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
--+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
--+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
--+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
--+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
--+++++-++--  # Define the output path for the scanner report
--+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
--+++++-++-+  # Define the output path for the scanner report in CSV format
--+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
--+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
--+++++-++--  # Run the SFDX scanner on the file and generate the report
--+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
--+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
--+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
--+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
--+++++-++--  # Filter the scanner report based on the changed line numbers
--+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
--+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
--+++++-++--  jq --arg lines "$line_numbers" '
--+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
--+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++-++-+  awk -v lines="$line_numbers" '
--+++++-++-+  BEGIN {
--+++++-++-+    FS=OFS=",";
--+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
--+++++-++-+    for (i in arr) {
--+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
--+++++-++-+    }
--+++++-++-+  }
--+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
--+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
--+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
--+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
--+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
--+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
--+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
--+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
--+++++-++-@@ -95,2 +102,4 @@ fi
--+++++-++--# Combine all filtered reports into one final report
--+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
--+++++-++-+# Combine all filtered reports into one final report (optional)
--+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
--+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
--+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
--+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
--+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
--+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
--+++++-++-+echo "Final filtered scanner report:"
--+++++-++-+cat "$final_report"
--+++++-++-+
--+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
--+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
--+++++-+++-    FS=OFS=",";
--+++++-++++    FS=OFS=",";  # Define CSV format
--+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
--+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
--+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
--+++++-+++@@ -111 +111 @@ cat "$final_report"
--+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
--+++++-+++new file mode 100644
--+++++-+++index 0000000..0e43eee
--+++++-+++--- /dev/null
--+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
--+++++-+++@@ -0,0 +1 @@
--+++++-++++70 :           System.debug('Hi Hello');
--+++++-+++diff --git a/changes.diff b/changes.diff
--+++++-+++new file mode 100644
--+++++-+++index 0000000..760971b
--+++++-+++--- /dev/null
--+++++-++++++ b/changes.diff
--+++++-+++@@ -0,0 +1,65 @@
--+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
--+++++-++++index 255a037..525d43a 100644
--+++++-++++--- a/.husky/pre-commit
--+++++-+++++++ b/.husky/pre-commit
--+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
--+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
--+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
--+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
--+++++-++++-  # Define the output path for the scanner report
--+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
--+++++-+++++  # Define the output path for the scanner report in CSV format
--+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
--+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
--+++++-++++-  # Run the SFDX scanner on the file and generate the report
--+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
--+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
--+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
--+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
--+++++-++++-  # Filter the scanner report based on the changed line numbers
--+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
--+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
--+++++-++++-  jq --arg lines "$line_numbers" '
--+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
--+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++-+++++  awk -v lines="$line_numbers" '
--+++++-+++++  BEGIN {
--+++++-+++++    FS=OFS=",";
--+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
--+++++-+++++    for (i in arr) {
--+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
--+++++-+++++    }
--+++++-+++++  }
--+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
--+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
--+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
--+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
--+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
--+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
--+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
--+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
--+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
--+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
--+++++-++++@@ -95,2 +102,4 @@ fi
--+++++-++++-# Combine all filtered reports into one final report
--+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
--+++++-+++++# Combine all filtered reports into one final report (optional)
--+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
--+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
--+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
--+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
--+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
--+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
--+++++-+++++echo "Final filtered scanner report:"
--+++++-+++++cat "$final_report"
--+++++-+++++
--+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
--+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
--+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--+++++-++++index 1ec7a54..870d508 100644
--+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
--+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
--+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
--+++++-++++-          System.debug('Hi');
--+++++-+++++          System.debug('Hi Hello');
--+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
--+++++-++-index 1ec7a54..870d508 100644
--+++++-+++index 870d508..1ec7a54 100644
--+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
--+++++-++--          System.debug('Hi');
--+++++-++-+          System.debug('Hi Hello');
--+++++-+++-          System.debug('Hi Hello');
+-++++@@ -22,863 +14,1913 @@ index 0000000..a6452b3
+-++++-@@ -0,0 +1,1262 @@
+-++++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-+index daf61a1..3603bae 100644
+-++++-+--- a/.husky/pre-commit
+-++++-++++ b/.husky/pre-commit
+-++++-+@@ -16 +16 @@ mkdir -p scanner-reports
+-++++-+-git diff --unified=0 --cached > changes.diff
+-++++-++git diff --cached --unified=0 > changes.diff
+-++++-+@@ -25 +25 @@ while IFS= read -r file; do
+-++++-+-  # Extract only the changed line numbers for the file
+-++++-++  # Extract only the added or modified lines for .cls and .lwc files
+-++++-+@@ -32 +32 @@ while IFS= read -r file; do
+-++++-+-  ' changes.diff)
+-++++-++  ' changes.diff | uniq)
+-++++-+@@ -61 +61 @@ while IFS= read -r file; do
+-++++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-++++-+diff --git a/changes.diff b/changes.diff
+-++++-+new file mode 100644
+-++++-+index 0000000..1831031
+-++++-+--- /dev/null
+-++++-++++ b/changes.diff
+-++++-+@@ -0,0 +1,1158 @@
+-++++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-++index daf61a1..d6ae40b 100644
+-++++-++--- a/.husky/pre-commit
+-++++-+++++ b/.husky/pre-commit
+-++++-++@@ -25 +25 @@ while IFS= read -r file; do
+-++++-++-  # Extract only the changed line numbers for the file
+-++++-+++  # Extract only the added or modified lines for .cls and .lwc files
+-++++-++@@ -32 +32 @@ while IFS= read -r file; do
+-++++-++-  ' changes.diff)
+-++++-+++  ' changes.diff | uniq)
+-++++-++@@ -61 +61 @@ while IFS= read -r file; do
+-++++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-++++-++diff --git a/changes.diff b/changes.diff
+-++++-++new file mode 100644
+-++++-++index 0000000..47b6c1c
+-++++-++--- /dev/null
+-++++-+++++ b/changes.diff
+-++++-++@@ -0,0 +1,1078 @@
+-++++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-+++index daf61a1..d6ae40b 100644
+-++++-+++--- a/.husky/pre-commit
+-++++-++++++ b/.husky/pre-commit
+-++++-+++@@ -25 +25 @@ while IFS= read -r file; do
+-++++-+++-  # Extract only the changed line numbers for the file
+-++++-++++  # Extract only the added or modified lines for .cls and .lwc files
+-++++-+++@@ -32 +32 @@ while IFS= read -r file; do
+-++++-+++-  ' changes.diff)
+-++++-++++  ' changes.diff | uniq)
+-++++-+++@@ -61 +61 @@ while IFS= read -r file; do
+-++++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-++++-+++diff --git a/changes.diff b/changes.diff
+-++++-+++new file mode 100644
+-++++-+++index 0000000..8cd4f1a
+-++++-+++--- /dev/null
+-++++-++++++ b/changes.diff
+-++++-+++@@ -0,0 +1,977 @@
+-++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-++++index daf61a1..73bb862 100644
+-++++-++++--- a/.husky/pre-commit
+-++++-+++++++ b/.husky/pre-commit
+-++++-++++@@ -61 +61 @@ while IFS= read -r file; do
+-++++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-++++-++++diff --git a/changes.diff b/changes.diff
+-++++-++++new file mode 100644
+-++++-++++index 0000000..f9d24dc
+-++++-++++--- /dev/null
+-++++-+++++++ b/changes.diff
+-++++-++++@@ -0,0 +1,876 @@
+-++++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-+++++index 19cfdbc..daf61a1 100644
+-++++-+++++--- a/.husky/pre-commit
+-++++-++++++++ b/.husky/pre-commit
+-++++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+-++++-+++++-  # Define the output path for the scanner report in CSV format
+-++++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++++-++++++  # Extract only the changed line numbers for the file
+-++++-++++++  line_numbers=$(awk -v file="$file" '
+-++++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+-++++-++++++    /^diff --git/ {inside=0}
+-++++-++++++    $0 ~ file {inside=1}
+-++++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+-++++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-++++-++++++  ' changes.diff)
+-++++-++++++
+-++++-++++++  # If no changed lines are found for this file, skip it
+-++++-++++++  if [ -z "$line_numbers" ]; then
+-++++-++++++    echo "No changed lines found in $file"
+-++++-++++++    continue
+-++++-++++++  fi
+-++++-++++++
+-++++-++++++  # Convert the line numbers to a JSON array format for jq filtering
+-++++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+-++++-++++++
+-++++-++++++  echo "Changed lines for $file: $line_numbers_array"
+-++++-++++++
+-++++-++++++  # Define the output path for the scanner report in JSON format
+-++++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+-++++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+-++++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+-++++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+-++++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
+-++++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+-++++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+-++++-++++++  jq --argjson lines "$line_numbers_array" '
+-++++-++++++    [.[] | 
+-++++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++++-++++++      select(.violations | length > 0)]
+-++++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+-++++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++-+++++-    echo "No issues found for line '70' in $file"
+-++++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++++-++++++    echo "No issues found for changed lines in $file"
+-++++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+-++++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
+-++++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-++++++  echo "Filtered scanner report for $file (Changed lines):"
+-++++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++@@ -53 +77 @@ done <<< "$changed_files"
+-++++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+-++++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+-++++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+-++++-+++++@@ -60,2 +84,2 @@ fi
+-++++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+-++++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+-++++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++-+++++-echo "Final filtered scanner report (Line '70'):"
+-++++-++++++echo "Final filtered scanner report (Changed lines):"
+-++++-+++++@@ -67 +91 @@ cat "$final_report"
+-++++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+-++++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+-++++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+-++++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+-++++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+-++++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+-++++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+-++++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+-++++-+++++@@ -77 +101 @@ else
+-++++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+-++++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+-++++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++-+++++deleted file mode 100644
+-++++-+++++index 9d692ac..0000000
+-++++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++-++++++++ /dev/null
+-++++-+++++@@ -1,24 +0,0 @@
+-++++-+++++-0
+-++++-+++++-1
+-++++-+++++-2
+-++++-+++++-3
+-++++-+++++-4
+-++++-+++++-5
+-++++-+++++-60
+-++++-+++++-642
+-++++-+++++-643
+-++++-+++++-644
+-++++-+++++-645
+-++++-+++++-646
+-++++-+++++-647
+-++++-+++++-648
+-++++-+++++-649
+-++++-+++++-650
+-++++-+++++-651
+-++++-+++++-652
+-++++-+++++-653
+-++++-+++++-654
+-++++-+++++-655
+-++++-+++++-656
+-++++-+++++-657
+-++++-+++++-70
+-++++-+++++diff --git a/changes.diff b/changes.diff
+-++++-+++++deleted file mode 100644
+-++++-+++++index 61d162d..0000000
+-++++-+++++--- a/changes.diff
+-++++-++++++++ /dev/null
+-++++-+++++@@ -1,647 +0,0 @@
+-++++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-+++++-index 5b262e4..8c05f52 100644
+-++++-+++++---- a/.husky/pre-commit
+-++++-+++++-+++ b/.husky/pre-commit
+-++++-+++++-@@ -113 +113 @@ cat "$final_report"
+-++++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-++++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+-++++-+++++-diff --git a/changes.diff b/changes.diff
+-++++-+++++-index 9a218e6..4fe1995 100644
+-++++-+++++---- a/changes.diff
+-++++-+++++-+++ b/changes.diff
+-++++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-+++++--index aa6762f..586962b 100644
+-++++-+++++-+index 586962b..5b262e4 100644
+-++++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+-++++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
+-++++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-++++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+-++++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-++++-+++++---  # Extract line numbers as a comma-separated string for filtering later
+-++++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-++++-+++++--+  # Extract line numbers as an array for filtering later
+-++++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-++++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
+-++++-+++++---  if [ -z "$line_numbers" ]; then
+-++++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+-++++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-++++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
+-++++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-++++-+++++--+  lines_for_filter="${lines_for_filter:1}"
+-++++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+-++++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+-++++-+++++-+-  awk -v file="$file" '
+-++++-+++++-++  # Extract only the changed line numbers for the file
+-++++-+++++-++  line_numbers=$(awk -v file="$file" '
+-++++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+-++++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+-++++-+++++-++  ' changes.diff)
+-++++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+-++++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+-++++-+++++-++  if [ -z "$line_numbers" ]; then
+-++++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+-++++-+++++-+-  # Extract line numbers as an array for filtering later
+-++++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-++++-+++++-++  # Convert the line numbers to a comma-separated string for matching
+-++++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+-++++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+-++++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
+-++++-+++++---  awk -v lines="$line_numbers" '
+-++++-+++++--+  awk -v lines="$lines_for_filter" '
+-++++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
+-++++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-++++-+++++--@@ -111 +115 @@ cat "$final_report"
+-++++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-++++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
+-++++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+-++++-+++++-+-  # Ensure that line_numbers is not empty
+-++++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+-++++-+++++-++  # Ensure that line_numbers_string is not empty
+-++++-+++++-++  if [ -z "$line_numbers_string" ]; then
+-++++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+-++++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+-++++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-++++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
+-++++-+++++-+-
+-++++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+-++++-+++++-+-  awk -v lines="$lines_for_filter" '
+-++++-+++++-++  awk -v lines="$line_numbers_string" '
+-++++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-++++-+++++--index 0e43eee..a206584 100644
+-++++-+++++-+index a206584..9d692ac 100644
+-++++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+-++++-+++++--@@ -1 +1,6 @@
+-++++-+++++---70 :           System.debug('Hi Hello');
+-++++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++--+1 : index 1ec7a54..870d508 100644
+-++++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-+++++--+4 : -          System.debug('Hi');
+-++++-+++++--+70 :           System.debug('Hi');
+-++++-+++++-+@@ -1,6 +1,24 @@
+-++++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-+-1 : index 1ec7a54..870d508 100644
+-++++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-+++++-+-4 : -          System.debug('Hi');
+-++++-+++++-+-70 :           System.debug('Hi');
+-++++-+++++-++0
+-++++-+++++-++1
+-++++-+++++-++2
+-++++-+++++-++3
+-++++-+++++-++4
+-++++-+++++-++5
+-++++-+++++-++60
+-++++-+++++-++642
+-++++-+++++-++643
+-++++-+++++-++644
+-++++-+++++-++645
+-++++-+++++-++646
+-++++-+++++-++647
+-++++-+++++-++648
+-++++-+++++-++649
+-++++-+++++-++650
+-++++-+++++-++651
+-++++-+++++-++652
+-++++-+++++-++653
+-++++-+++++-++654
+-++++-+++++-++655
+-++++-+++++-++656
+-++++-+++++-++657
+-++++-+++++-++70
+-++++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+-++++-+++++--index 760971b..3dfa538 100644
+-++++-+++++-+index 3dfa538..9a218e6 100644
+-++++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+-++++-+++++---index 255a037..525d43a 100644
+-++++-+++++--+index 525d43a..aa6762f 100644
+-++++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-++++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
+-++++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+-++++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
+-++++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++++-+++++----  # Define the output path for the scanner report
+-++++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++-+++++---+  # Define the output path for the scanner report in CSV format
+-++++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++++-+++++----  # Run the SFDX scanner on the file and generate the report
+-++++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
+-++++-+++++----  # Filter the scanner report based on the changed line numbers
+-++++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
+-++++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++++-+++++----  jq --arg lines "$line_numbers" '
+-++++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++---+  awk -v lines="$line_numbers" '
+-++++-+++++---+  BEGIN {
+-++++-+++++---+    FS=OFS=",";
+-++++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+-++++-+++++---+    for (i in arr) {
+-++++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++++-+++++---+    }
+-++++-+++++---+  }
+-++++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
+-++++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
+-++++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
+-++++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++++-+++++---@@ -95,2 +102,4 @@ fi
+-++++-+++++----# Combine all filtered reports into one final report
+-++++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++++-+++++---+# Combine all filtered reports into one final report (optional)
+-++++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
+-++++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++++-+++++---+echo "Final filtered scanner report:"
+-++++-+++++---+cat "$final_report"
+-++++-+++++---+
+-++++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+-++++-+++++--+-    FS=OFS=",";
+-++++-+++++--++    FS=OFS=",";  # Define CSV format
+-++++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+-++++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++++-+++++--+@@ -111 +111 @@ cat "$final_report"
+-++++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++-+++++--+new file mode 100644
+-++++-+++++--+index 0000000..0e43eee
+-++++-+++++--+--- /dev/null
+-++++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++-+++++--+@@ -0,0 +1 @@
+-++++-+++++--++70 :           System.debug('Hi Hello');
+-++++-+++++--+diff --git a/changes.diff b/changes.diff
+-++++-+++++--+new file mode 100644
+-++++-+++++--+index 0000000..760971b
+-++++-+++++--+--- /dev/null
+-++++-+++++--++++ b/changes.diff
+-++++-+++++--+@@ -0,0 +1,65 @@
+-++++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-+++++--++index 255a037..525d43a 100644
+-++++-+++++--++--- a/.husky/pre-commit
+-++++-+++++--+++++ b/.husky/pre-commit
+-++++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+-++++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-++++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+-++++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++++-+++++--++-  # Define the output path for the scanner report
+-++++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++-+++++--+++  # Define the output path for the scanner report in CSV format
+-++++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++++-+++++--++-  # Run the SFDX scanner on the file and generate the report
+-++++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+-++++-+++++--++-  # Filter the scanner report based on the changed line numbers
+-++++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+-++++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++++-+++++--++-  jq --arg lines "$line_numbers" '
+-++++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++--+++  awk -v lines="$line_numbers" '
+-++++-+++++--+++  BEGIN {
+-++++-+++++--+++    FS=OFS=",";
+-++++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+-++++-+++++--+++    for (i in arr) {
+-++++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++++-+++++--+++    }
+-++++-+++++--+++  }
+-++++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+-++++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+-++++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+-++++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++++-+++++--++@@ -95,2 +102,4 @@ fi
+-++++-+++++--++-# Combine all filtered reports into one final report
+-++++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++++-+++++--+++# Combine all filtered reports into one final report (optional)
+-++++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+-++++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++++-+++++--+++echo "Final filtered scanner report:"
+-++++-+++++--+++cat "$final_report"
+-++++-+++++--+++
+-++++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++--++index 1ec7a54..870d508 100644
+-++++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-+++++--++-          System.debug('Hi');
+-++++-+++++--+++          System.debug('Hi Hello');
+-++++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++++-+++++---index 1ec7a54..870d508 100644
+-++++-+++++--+index 870d508..1ec7a54 100644
+-++++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-++++-+++++----          System.debug('Hi');
+-++++-+++++---+          System.debug('Hi Hello');
+-++++-+++++--+-          System.debug('Hi Hello');
+-++++-+++++--++          System.debug('Hi');
+-++++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++-+++++--+new file mode 100644
+-++++-+++++--+index 0000000..5a3a1ac
+-++++-+++++--+--- /dev/null
+-++++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++-+++++--+@@ -0,0 +1 @@
+-++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++++-+++++--+new file mode 100644
+-++++-+++++--+index 0000000..5a3a1ac
+-++++-+++++--+--- /dev/null
+-++++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+-++++-+++++--+@@ -0,0 +1 @@
+-++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++-+++++--+new file mode 100644
+-++++-+++++--+index 0000000..e1ef0f0
+-++++-+++++--+--- /dev/null
+-++++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++-+++++--+@@ -0,0 +1,5 @@
+-++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++-+++++-+-index 525d43a..aa6762f 100644
+-++++-+++++-++index aa6762f..586962b 100644
+-++++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+-++++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+-++++-+++++-+--    FS=OFS=",";
+-++++-+++++-+-+    FS=OFS=",";  # Define CSV format
+-++++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+-++++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++++-+++++-+-@@ -111 +111 @@ cat "$final_report"
+-++++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+-++++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-++++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-++++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-++++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+-++++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-++++-+++++-+++  # Extract line numbers as an array for filtering later
+-++++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-++++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+-++++-+++++-++-  if [ -z "$line_numbers" ]; then
+-++++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+-++++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-++++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+-++++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-++++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
+-++++-+++++-+++
+-++++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+-++++-+++++-++-  awk -v lines="$line_numbers" '
+-++++-+++++-+++  awk -v lines="$lines_for_filter" '
+-++++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+-++++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-++++-+++++-++@@ -111 +115 @@ cat "$final_report"
+-++++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-++++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-++++-+++++-+-new file mode 100644
+-++++-+++++-+-index 0000000..0e43eee
+-++++-+++++-+---- /dev/null
+-++++-+++++-++index 0e43eee..a206584 100644
+-++++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+-++++-+++++-+-@@ -0,0 +1 @@
+-++++-+++++-+-+70 :           System.debug('Hi Hello');
+-++++-+++++-++@@ -1 +1,6 @@
+-++++-+++++-++-70 :           System.debug('Hi Hello');
+-++++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-+++1 : index 1ec7a54..870d508 100644
+-++++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-+++++-+++4 : -          System.debug('Hi');
+-++++-+++++-+++70 :           System.debug('Hi');
+-++++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+-++++-+++++-+-new file mode 100644
+-++++-+++++-+-index 0000000..760971b
+-++++-+++++-+---- /dev/null
+-++++-+++++-++index 760971b..3dfa538 100644
+-++++-+++++-++--- a/changes.diff
+-++++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+-++++-+++++-+-@@ -0,0 +1,65 @@
+-++++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-+++++-+-+index 255a037..525d43a 100644
+-++++-+++++-+-+--- a/.husky/pre-commit
+-++++-+++++-+-++++ b/.husky/pre-commit
+-++++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+-++++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+-++++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+-++++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++++-+++++-+-+-  # Define the output path for the scanner report
+-++++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++-+++++-+-++  # Define the output path for the scanner report in CSV format
+-++++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+-++++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+-++++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
+-++++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+-++++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++++-+++++-+-+-  jq --arg lines "$line_numbers" '
+-++++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++-+-++  awk -v lines="$line_numbers" '
+-++++-+++++-+-++  BEGIN {
+-++++-+++++-+-++    FS=OFS=",";
+-++++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+-++++-+++++-+-++    for (i in arr) {
+-++++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++++-+++++-+-++    }
+-++++-+++++-+-++  }
+-++++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+-++++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+-++++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+-++++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++++-+++++-+-+@@ -95,2 +102,4 @@ fi
+-++++-+++++-+-+-# Combine all filtered reports into one final report
+-++++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++++-+++++-+-++# Combine all filtered reports into one final report (optional)
+-++++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+-++++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++++-+++++-+-++echo "Final filtered scanner report:"
+-++++-+++++-+-++cat "$final_report"
+-++++-+++++-+-++
+-++++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-+-+index 1ec7a54..870d508 100644
+-++++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-+++++-+-+-          System.debug('Hi');
+-++++-+++++-+-++          System.debug('Hi Hello');
+-++++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-+++++-++-index 255a037..525d43a 100644
+-++++-+++++-+++index 525d43a..aa6762f 100644
+-++++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-++++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+-++++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+-++++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+-++++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++++-+++++-++--  # Define the output path for the scanner report
+-++++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++-+++++-++-+  # Define the output path for the scanner report in CSV format
+-++++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++++-+++++-++--  # Run the SFDX scanner on the file and generate the report
+-++++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+-++++-+++++-++--  # Filter the scanner report based on the changed line numbers
+-++++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+-++++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++++-+++++-++--  jq --arg lines "$line_numbers" '
+-++++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++-++-+  awk -v lines="$line_numbers" '
+-++++-+++++-++-+  BEGIN {
+-++++-+++++-++-+    FS=OFS=",";
+-++++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+-++++-+++++-++-+    for (i in arr) {
+-++++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++++-+++++-++-+    }
+-++++-+++++-++-+  }
+-++++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+-++++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+-++++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+-++++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++++-+++++-++-@@ -95,2 +102,4 @@ fi
+-++++-+++++-++--# Combine all filtered reports into one final report
+-++++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++++-+++++-++-+# Combine all filtered reports into one final report (optional)
+-++++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+-++++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++++-+++++-++-+echo "Final filtered scanner report:"
+-++++-+++++-++-+cat "$final_report"
+-++++-+++++-++-+
+-++++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+-++++-+++++-+++-    FS=OFS=",";
+-++++-+++++-++++    FS=OFS=",";  # Define CSV format
+-++++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+-++++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++++-+++++-+++@@ -111 +111 @@ cat "$final_report"
+-++++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++-+++++-+++new file mode 100644
+-++++-+++++-+++index 0000000..0e43eee
+-++++-+++++-+++--- /dev/null
+-++++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++-+++++-+++@@ -0,0 +1 @@
+-++++-+++++-++++70 :           System.debug('Hi Hello');
+-++++-+++++-+++diff --git a/changes.diff b/changes.diff
+-++++-+++++-+++new file mode 100644
+-++++-+++++-+++index 0000000..760971b
+-++++-+++++-+++--- /dev/null
+-++++-+++++-++++++ b/changes.diff
+-++++-+++++-+++@@ -0,0 +1,65 @@
+-++++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++-+++++-++++index 255a037..525d43a 100644
+-++++-+++++-++++--- a/.husky/pre-commit
+-++++-+++++-+++++++ b/.husky/pre-commit
+-++++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+-++++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-++++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+-++++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++++-+++++-++++-  # Define the output path for the scanner report
+-++++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++-+++++-+++++  # Define the output path for the scanner report in CSV format
+-++++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
+-++++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+-++++-+++++-++++-  # Filter the scanner report based on the changed line numbers
+-++++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+-++++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++++-+++++-++++-  jq --arg lines "$line_numbers" '
+-++++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++-+++++  awk -v lines="$line_numbers" '
+-++++-+++++-+++++  BEGIN {
+-++++-+++++-+++++    FS=OFS=",";
+-++++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+-++++-+++++-+++++    for (i in arr) {
+-++++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++++-+++++-+++++    }
+-++++-+++++-+++++  }
+-++++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+-++++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+-++++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+-++++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++++-+++++-++++@@ -95,2 +102,4 @@ fi
+-++++-+++++-++++-# Combine all filtered reports into one final report
+-++++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++++-+++++-+++++# Combine all filtered reports into one final report (optional)
+-++++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+-++++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++++-+++++-+++++echo "Final filtered scanner report:"
+-++++-+++++-+++++cat "$final_report"
+-++++-+++++-+++++
+-++++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-++++index 1ec7a54..870d508 100644
+-++++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-+++++-++++-          System.debug('Hi');
+-++++-+++++-+++++          System.debug('Hi Hello');
+-++++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++++-+++++-++-index 1ec7a54..870d508 100644
+-++++-+++++-+++index 870d508..1ec7a54 100644
+-++++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-++++-+++++-++--          System.debug('Hi');
+-++++-+++++-++-+          System.debug('Hi Hello');
+-++++-+++++-+++-          System.debug('Hi Hello');
+-++++-+++++-++++          System.debug('Hi');
+-++++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++-+++++-+++new file mode 100644
+-++++-+++++-+++index 0000000..5a3a1ac
+-++++-+++++-+++--- /dev/null
+-++++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++-+++++-+++@@ -0,0 +1 @@
+-++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++++-+++++-+++new file mode 100644
+-++++-+++++-+++index 0000000..5a3a1ac
+-++++-+++++-+++--- /dev/null
+-++++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+-++++-+++++-+++@@ -0,0 +1 @@
+-++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++-+++++-+++new file mode 100644
+-++++-+++++-+++index 0000000..e1ef0f0
+-++++-+++++-+++--- /dev/null
+-++++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++-+++++-+++@@ -0,0 +1,5 @@
+-++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++++-+++++-+-index 870d508..1ec7a54 100644
+-++++-+++++-++index 1ec7a54..870d508 100644
+-++++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+-++++-+++++-+--          System.debug('Hi Hello');
+-++++-+++++-+-+          System.debug('Hi');
+-++++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++-+++++-+-new file mode 100644
+-++++-+++++-+-index 0000000..5a3a1ac
+-++++-+++++-+---- /dev/null
+-++++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++-+++++-+-@@ -0,0 +1 @@
+-++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++++-+++++-+-new file mode 100644
+-++++-+++++-+-index 0000000..5a3a1ac
+-++++-+++++-+---- /dev/null
+-++++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+-++++-+++++-+-@@ -0,0 +1 @@
+-++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++-+++++-+-new file mode 100644
+-++++-+++++-+-index 0000000..e1ef0f0
+-++++-+++++-+---- /dev/null
+-++++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++-+++++-+-@@ -0,0 +1,5 @@
+-++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++-+++++-++-          System.debug('Hi');
+-++++-+++++-+++          System.debug('Hi Hello');
+-++++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++++-+++++--index 1ec7a54..870d508 100644
+-++++-+++++-+index 870d508..5eafcac 100644
+-++++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+-++++-+++++---          System.debug('Hi');
+-++++-+++++--+          System.debug('Hi Hello');
+-++++-+++++-+-          System.debug('Hi Hello');
+-++++-+++++-++          System.debug('Happy');
+-++++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-index 5eafcac..1ec7a54 100644
+-++++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-+++++--          System.debug('Happy');
+-++++-+++++-+          System.debug('Hi');
+-++++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++index 73696e2..9e21e88 100644
+-++++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
+-++++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-+++++-          System.debug('Hello and Hi');
+-++++-++++++          System.debug('Hi AND');
+-++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++-+++++deleted file mode 100644
+-++++-+++++index 5a3a1ac..0000000
+-++++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++-++++++++ /dev/null
+-++++-+++++@@ -1 +0,0 @@
+-++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++-+++++new file mode 100644
+-++++-+++++index 0000000..ebc3aa5
+-++++-+++++--- /dev/null
+-++++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++-+++++@@ -0,0 +1,30 @@
+-++++-++++++[
+-++++-++++++  {
+-++++-++++++    "engine": "pmd",
+-++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-++++-++++++    "violations": [
+-+++++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++++-index daf61a1..3603bae 100644
+-++++++index daf61a1..1328704 100644
+-+++++@@ -11 +11,3 @@ index daf61a1..3603bae 100644
+-+++++-@@ -32 +32 @@ while IFS= read -r file; do
+-++++++@@ -30,3 +30,3 @@ while IFS= read -r file; do
+-++++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+-++++++-    inside && /^[+][^+]/ {print start_line + line_offset++}
+-+++++@@ -12,0 +15,2 @@ index daf61a1..3603bae 100644
+-+++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
+-+++++++    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
+-+++++@@ -19 +23 @@ new file mode 100644
+-+++++-index 0000000..a6452b3
+-++++++index 0000000..1f4c0b2
+-+++++@@ -22 +26 @@ index 0000000..a6452b3
+-+++++-@@ -0,0 +1,1262 @@
+-++++++@@ -0,0 +1,1293 @@
+-+++++@@ -41 +45 @@ index 0000000..a6452b3
+-+++++-+index 0000000..1831031
+-+++++++index 0000000..a6452b3
+-+++++@@ -44 +48 @@ index 0000000..a6452b3
+-+++++-+@@ -0,0 +1,1158 @@
+-+++++++@@ -0,0 +1,1262 @@
+-+++++@@ -46 +50 @@ index 0000000..a6452b3
+-+++++-++index daf61a1..d6ae40b 100644
+-++++++++index daf61a1..3603bae 100644
+-+++++@@ -48,0 +53,3 @@ index 0000000..a6452b3
+-++++++++@@ -16 +16 @@ mkdir -p scanner-reports
+-++++++++-git diff --unified=0 --cached > changes.diff
+-+++++++++git diff --cached --unified=0 > changes.diff
+-+++++@@ -60 +67 @@ index 0000000..a6452b3
+-+++++-++index 0000000..47b6c1c
+-++++++++index 0000000..1831031
+-+++++@@ -63 +70 @@ index 0000000..a6452b3
+-+++++-++@@ -0,0 +1,1078 @@
+-++++++++@@ -0,0 +1,1158 @@
+-+++++@@ -79 +86 @@ index 0000000..a6452b3
+-+++++-+++index 0000000..8cd4f1a
+-+++++++++index 0000000..47b6c1c
+-+++++@@ -82 +89 @@ index 0000000..a6452b3
+-+++++-+++@@ -0,0 +1,977 @@
+-+++++++++@@ -0,0 +1,1078 @@
+-+++++@@ -84 +91 @@ index 0000000..a6452b3
+-+++++-++++index daf61a1..73bb862 100644
+-++++++++++index daf61a1..d6ae40b 100644
+-+++++@@ -86,0 +94,6 @@ index 0000000..a6452b3
+-++++++++++@@ -25 +25 @@ while IFS= read -r file; do
+-++++++++++-  # Extract only the changed line numbers for the file
+-+++++++++++  # Extract only the added or modified lines for .cls and .lwc files
+-++++++++++@@ -32 +32 @@ while IFS= read -r file; do
+-++++++++++-  ' changes.diff)
+-+++++++++++  ' changes.diff | uniq)
+-+++++@@ -92 +105 @@ index 0000000..a6452b3
+-+++++-++++index 0000000..f9d24dc
+-++++++++++index 0000000..8cd4f1a
+-+++++@@ -95 +108 @@ index 0000000..a6452b3
+-+++++-++++@@ -0,0 +1,876 @@
+-++++++++++@@ -0,0 +1,977 @@
+-+++++@@ -97 +110 @@ index 0000000..a6452b3
+-+++++-+++++index 19cfdbc..daf61a1 100644
+-+++++++++++index daf61a1..73bb862 100644
+-+++++@@ -100,107 +113,3 @@ index 0000000..a6452b3
+-+++++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+-+++++-+++++-  # Define the output path for the scanner report in CSV format
+-+++++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++++-++++++  # Extract only the changed line numbers for the file
+-+++++-++++++  line_numbers=$(awk -v file="$file" '
+-+++++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+-+++++-++++++    /^diff --git/ {inside=0}
+-+++++-++++++    $0 ~ file {inside=1}
+-+++++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+-+++++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-+++++-++++++  ' changes.diff)
+-+++++-++++++
+-+++++-++++++  # If no changed lines are found for this file, skip it
+-+++++-++++++  if [ -z "$line_numbers" ]; then
+-+++++-++++++    echo "No changed lines found in $file"
+-+++++-++++++    continue
+-+++++-++++++  fi
+-+++++-++++++
+-+++++-++++++  # Convert the line numbers to a JSON array format for jq filtering
+-+++++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+-+++++-++++++
+-+++++-++++++  echo "Changed lines for $file: $line_numbers_array"
+-+++++-++++++
+-+++++-++++++  # Define the output path for the scanner report in JSON format
+-+++++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+-+++++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+-+++++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+-+++++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+-+++++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
+-+++++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+-+++++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+-+++++-++++++  jq --argjson lines "$line_numbers_array" '
+-+++++-++++++    [.[] | 
+-+++++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+++++-++++++      select(.violations | length > 0)]
+-+++++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+-+++++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++++-+++++-    echo "No issues found for line '70' in $file"
+-+++++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++++-++++++    echo "No issues found for changed lines in $file"
+-+++++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+-+++++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
+-+++++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-++++++  echo "Filtered scanner report for $file (Changed lines):"
+-+++++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++@@ -53 +77 @@ done <<< "$changed_files"
+-+++++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+-+++++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+-+++++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+-+++++-+++++@@ -60,2 +84,2 @@ fi
+-+++++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+-+++++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+-+++++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++++-+++++-echo "Final filtered scanner report (Line '70'):"
+-+++++-++++++echo "Final filtered scanner report (Changed lines):"
+-+++++-+++++@@ -67 +91 @@ cat "$final_report"
+-+++++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+-+++++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+-+++++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+-+++++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+-+++++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+-+++++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+-+++++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+-+++++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+-+++++-+++++@@ -77 +101 @@ else
+-+++++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+-+++++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+-+++++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++++-+++++deleted file mode 100644
+-+++++-+++++index 9d692ac..0000000
+-+++++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++++-++++++++ /dev/null
+-+++++-+++++@@ -1,24 +0,0 @@
+-+++++-+++++-0
+-+++++-+++++-1
+-+++++-+++++-2
+-+++++-+++++-3
+-+++++-+++++-4
+-+++++-+++++-5
+-+++++-+++++-60
+-+++++-+++++-642
+-+++++-+++++-643
+-+++++-+++++-644
+-+++++-+++++-645
+-+++++-+++++-646
+-+++++-+++++-647
+-+++++-+++++-648
+-+++++-+++++-649
+-+++++-+++++-650
+-+++++-+++++-651
+-+++++-+++++-652
+-+++++-+++++-653
+-+++++-+++++-654
+-+++++-+++++-655
+-+++++-+++++-656
+-+++++-+++++-657
+-+++++-+++++-70
+-+++++++++++@@ -61 +61 @@ while IFS= read -r file; do
+-+++++++++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-++++++++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
+-+++++@@ -208,652 +117,881 @@ index 0000000..a6452b3
+-+++++-+++++deleted file mode 100644
+-+++++-+++++index 61d162d..0000000
+-+++++-+++++--- a/changes.diff
+-+++++-++++++++ /dev/null
+-+++++-+++++@@ -1,647 +0,0 @@
+-+++++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++++-+++++-index 5b262e4..8c05f52 100644
+-+++++-+++++---- a/.husky/pre-commit
+-+++++-+++++-+++ b/.husky/pre-commit
+-+++++-+++++-@@ -113 +113 @@ cat "$final_report"
+-+++++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-+++++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+-+++++-+++++-diff --git a/changes.diff b/changes.diff
+-+++++-+++++-index 9a218e6..4fe1995 100644
+-+++++-+++++---- a/changes.diff
+-+++++-+++++-+++ b/changes.diff
+-+++++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++++-+++++--index aa6762f..586962b 100644
+-+++++-+++++-+index 586962b..5b262e4 100644
+-+++++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+-+++++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
+-+++++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-+++++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+-+++++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-+++++-+++++---  # Extract line numbers as a comma-separated string for filtering later
+-+++++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-+++++-+++++--+  # Extract line numbers as an array for filtering later
+-+++++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-+++++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
+-+++++-+++++---  if [ -z "$line_numbers" ]; then
+-+++++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+-+++++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-+++++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
+-+++++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-+++++-+++++--+  lines_for_filter="${lines_for_filter:1}"
+-+++++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+-+++++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+-+++++-+++++-+-  awk -v file="$file" '
+-+++++-+++++-++  # Extract only the changed line numbers for the file
+-+++++-+++++-++  line_numbers=$(awk -v file="$file" '
+-+++++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
+-+++++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+-+++++-+++++-++  ' changes.diff)
+-+++++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
+-+++++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+-+++++-+++++-++  if [ -z "$line_numbers" ]; then
+-+++++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+-+++++-+++++-+-  # Extract line numbers as an array for filtering later
+-+++++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-+++++-+++++-++  # Convert the line numbers to a comma-separated string for matching
+-+++++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+-+++++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+-+++++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
+-+++++-+++++---  awk -v lines="$line_numbers" '
+-+++++-+++++--+  awk -v lines="$lines_for_filter" '
+-+++++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
+-+++++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+++++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-+++++-+++++--@@ -111 +115 @@ cat "$final_report"
+-+++++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-+++++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
+-+++++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+-+++++-+++++-+-  # Ensure that line_numbers is not empty
+-+++++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+-+++++-+++++-++  # Ensure that line_numbers_string is not empty
+-+++++-+++++-++  if [ -z "$line_numbers_string" ]; then
+-+++++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+-+++++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
+-+++++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-+++++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
+-+++++-+++++-+-
+-+++++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
+-+++++-+++++-+-  awk -v lines="$lines_for_filter" '
+-+++++-+++++-++  awk -v lines="$line_numbers_string" '
+-+++++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-+++++-+++++--index 0e43eee..a206584 100644
+-+++++-+++++-+index a206584..9d692ac 100644
+-+++++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+-+++++-+++++--@@ -1 +1,6 @@
+-+++++-+++++---70 :           System.debug('Hi Hello');
+-+++++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++--+1 : index 1ec7a54..870d508 100644
+-+++++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++++-+++++--+4 : -          System.debug('Hi');
+-+++++-+++++--+70 :           System.debug('Hi');
+-+++++-+++++-+@@ -1,6 +1,24 @@
+-+++++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-+-1 : index 1ec7a54..870d508 100644
+-+++++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++++-+++++-+-4 : -          System.debug('Hi');
+-+++++-+++++-+-70 :           System.debug('Hi');
+-+++++-+++++-++0
+-+++++-+++++-++1
+-+++++-+++++-++2
+-+++++-+++++-++3
+-+++++-+++++-++4
+-+++++-+++++-++5
+-+++++-+++++-++60
+-+++++-+++++-++642
+-+++++-+++++-++643
+-+++++-+++++-++644
+-+++++-+++++-++645
+-+++++-+++++-++646
+-+++++-+++++-++647
+-+++++-+++++-++648
+-+++++-+++++-++649
+-+++++-+++++-++650
+-+++++-+++++-++651
+-+++++-+++++-++652
+-+++++-+++++-++653
+-+++++-+++++-++654
+-+++++-+++++-++655
+-+++++-+++++-++656
+-+++++-+++++-++657
+-+++++-+++++-++70
+-+++++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+-+++++-+++++--index 760971b..3dfa538 100644
+-+++++-+++++-+index 3dfa538..9a218e6 100644
+-+++++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+-+++++-+++++---index 255a037..525d43a 100644
+-+++++-+++++--+index 525d43a..aa6762f 100644
+-+++++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-+++++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
+-+++++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+-+++++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
+-+++++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+++++-+++++----  # Define the output path for the scanner report
+-+++++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++++-+++++---+  # Define the output path for the scanner report in CSV format
+-+++++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+++++-+++++----  # Run the SFDX scanner on the file and generate the report
+-+++++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
+-+++++-+++++----  # Filter the scanner report based on the changed line numbers
+-+++++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
+-+++++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+++++-+++++----  jq --arg lines "$line_numbers" '
+-+++++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+++++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++---+  awk -v lines="$line_numbers" '
+-+++++-+++++---+  BEGIN {
+-+++++-+++++---+    FS=OFS=",";
+-+++++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+-+++++-+++++---+    for (i in arr) {
+-+++++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+++++-+++++---+    }
+-+++++-+++++---+  }
+-+++++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
+-+++++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
+-+++++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
+-+++++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++++-+++++---@@ -95,2 +102,4 @@ fi
+-+++++-+++++----# Combine all filtered reports into one final report
+-+++++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+++++-+++++---+# Combine all filtered reports into one final report (optional)
+-+++++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+++++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+++++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
+-+++++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+++++-+++++---+echo "Final filtered scanner report:"
+-+++++-+++++---+cat "$final_report"
+-+++++-+++++---+
+-+++++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+++++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
+-+++++-+++++--+-    FS=OFS=",";
+-+++++-+++++--++    FS=OFS=",";  # Define CSV format
+-+++++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
+-+++++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+++++-+++++--+@@ -111 +111 @@ cat "$final_report"
+-+++++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++++-+++++--+new file mode 100644
+-+++++-+++++--+index 0000000..0e43eee
+-+++++-+++++--+--- /dev/null
+-+++++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++++-+++++--+@@ -0,0 +1 @@
+-+++++-+++++--++70 :           System.debug('Hi Hello');
+-+++++-+++++--+diff --git a/changes.diff b/changes.diff
+-+++++-+++++--+new file mode 100644
+-+++++-+++++--+index 0000000..760971b
+-+++++-+++++--+--- /dev/null
+-+++++-+++++--++++ b/changes.diff
+-+++++-+++++--+@@ -0,0 +1,65 @@
+-+++++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++++-+++++--++index 255a037..525d43a 100644
+-+++++-+++++--++--- a/.husky/pre-commit
+-+++++-+++++--+++++ b/.husky/pre-commit
+-+++++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
+-+++++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-+++++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
+-+++++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+++++-+++++--++-  # Define the output path for the scanner report
+-+++++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++++-+++++--+++  # Define the output path for the scanner report in CSV format
+-+++++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+++++-+++++--++-  # Run the SFDX scanner on the file and generate the report
+-+++++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
+-+++++-+++++--++-  # Filter the scanner report based on the changed line numbers
+-+++++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
+-+++++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+++++-+++++--++-  jq --arg lines "$line_numbers" '
+-+++++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+++++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++--+++  awk -v lines="$line_numbers" '
+-+++++-+++++--+++  BEGIN {
+-+++++-+++++--+++    FS=OFS=",";
+-+++++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+-+++++-+++++--+++    for (i in arr) {
+-+++++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+++++-+++++--+++    }
+-+++++-+++++--+++  }
+-+++++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
+-+++++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
+-+++++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
+-+++++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++++-+++++--++@@ -95,2 +102,4 @@ fi
+-+++++-+++++--++-# Combine all filtered reports into one final report
+-+++++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+++++-+++++--+++# Combine all filtered reports into one final report (optional)
+-+++++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+++++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+++++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+-+++++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+++++-+++++--+++echo "Final filtered scanner report:"
+-+++++-+++++--+++cat "$final_report"
+-+++++-+++++--+++
+-+++++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+++++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++--++index 1ec7a54..870d508 100644
+-+++++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++++-+++++--++-          System.debug('Hi');
+-+++++-+++++--+++          System.debug('Hi Hello');
+-+++++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+++++-+++++---index 1ec7a54..870d508 100644
+-+++++-+++++--+index 870d508..1ec7a54 100644
+-+++++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-+++++-+++++----          System.debug('Hi');
+-+++++-+++++---+          System.debug('Hi Hello');
+-+++++-+++++--+-          System.debug('Hi Hello');
+-+++++-+++++--++          System.debug('Hi');
+-+++++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++++-+++++--+new file mode 100644
+-+++++-+++++--+index 0000000..5a3a1ac
+-+++++-+++++--+--- /dev/null
+-+++++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++++-+++++--+@@ -0,0 +1 @@
+-+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+++++-+++++--+new file mode 100644
+-+++++-+++++--+index 0000000..5a3a1ac
+-+++++-+++++--+--- /dev/null
+-+++++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+-+++++-+++++--+@@ -0,0 +1 @@
+-+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++++-+++++--+new file mode 100644
+-+++++-+++++--+index 0000000..e1ef0f0
+-+++++-+++++--+--- /dev/null
+-+++++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++++-+++++--+@@ -0,0 +1,5 @@
+-+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++++-+++++-+-index 525d43a..aa6762f 100644
+-+++++-+++++-++index aa6762f..586962b 100644
+-+++++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+-+++++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+-+++++-+++++-+--    FS=OFS=",";
+-+++++-+++++-+-+    FS=OFS=",";  # Define CSV format
+-+++++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+-+++++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+++++-+++++-+-@@ -111 +111 @@ cat "$final_report"
+-+++++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
+-+++++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-+++++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-+++++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-+++++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
+-+++++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-+++++-+++++-+++  # Extract line numbers as an array for filtering later
+-+++++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-+++++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
+-+++++-+++++-++-  if [ -z "$line_numbers" ]; then
+-+++++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+-+++++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-+++++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
+-+++++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-+++++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
+-+++++-+++++-+++
+-+++++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
+-+++++-+++++-++-  awk -v lines="$line_numbers" '
+-+++++-+++++-+++  awk -v lines="$lines_for_filter" '
+-+++++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
+-+++++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+++++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-+++++-+++++-++@@ -111 +115 @@ cat "$final_report"
+-+++++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-+++++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-+++++-+++++-+-new file mode 100644
+-+++++-+++++-+-index 0000000..0e43eee
+-+++++-+++++-+---- /dev/null
+-+++++-+++++-++index 0e43eee..a206584 100644
+-+++++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+-+++++-+++++-+-@@ -0,0 +1 @@
+-+++++-+++++-+-+70 :           System.debug('Hi Hello');
+-+++++-+++++-++@@ -1 +1,6 @@
+-+++++-+++++-++-70 :           System.debug('Hi Hello');
+-+++++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-+++1 : index 1ec7a54..870d508 100644
+-+++++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++++-+++++-+++4 : -          System.debug('Hi');
+-+++++-+++++-+++70 :           System.debug('Hi');
+-+++++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+-+++++-+++++-+-new file mode 100644
+-+++++-+++++-+-index 0000000..760971b
+-+++++-+++++-+---- /dev/null
+-+++++-+++++-++index 760971b..3dfa538 100644
+-+++++-+++++-++--- a/changes.diff
+-+++++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+-+++++-+++++-+-@@ -0,0 +1,65 @@
+-+++++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++++-+++++-+-+index 255a037..525d43a 100644
+-+++++-+++++-+-+--- a/.husky/pre-commit
+-+++++-+++++-+-++++ b/.husky/pre-commit
+-+++++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+-+++++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+-+++++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+-+++++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+++++-+++++-+-+-  # Define the output path for the scanner report
+-+++++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++++-+++++-+-++  # Define the output path for the scanner report in CSV format
+-+++++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+++++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
+-+++++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+-+++++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
+-+++++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+-+++++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+++++-+++++-+-+-  jq --arg lines "$line_numbers" '
+-+++++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+++++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++-+-++  awk -v lines="$line_numbers" '
+-+++++-+++++-+-++  BEGIN {
+-+++++-+++++-+-++    FS=OFS=",";
+-+++++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+-+++++-+++++-+-++    for (i in arr) {
+-+++++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+++++-+++++-+-++    }
+-+++++-+++++-+-++  }
+-+++++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+-+++++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+-+++++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+-+++++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++++-+++++-+-+@@ -95,2 +102,4 @@ fi
+-+++++-+++++-+-+-# Combine all filtered reports into one final report
+-+++++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+++++-+++++-+-++# Combine all filtered reports into one final report (optional)
+-+++++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+++++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+++++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+-+++++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+++++-+++++-+-++echo "Final filtered scanner report:"
+-+++++-+++++-+-++cat "$final_report"
+-+++++-+++++-+-++
+-+++++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+++++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-+-+index 1ec7a54..870d508 100644
+-+++++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++++-+++++-+-+-          System.debug('Hi');
+-+++++-+++++-+-++          System.debug('Hi Hello');
+-+++++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++++-+++++-++-index 255a037..525d43a 100644
+-+++++-+++++-+++index 525d43a..aa6762f 100644
+-+++++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-+++++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+-+++++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+-+++++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+-+++++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+++++-+++++-++--  # Define the output path for the scanner report
+-+++++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++++-+++++-++-+  # Define the output path for the scanner report in CSV format
+-+++++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+++++-+++++-++--  # Run the SFDX scanner on the file and generate the report
+-+++++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+-+++++-+++++-++--  # Filter the scanner report based on the changed line numbers
+-+++++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+-+++++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+++++-+++++-++--  jq --arg lines "$line_numbers" '
+-+++++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+++++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++-++-+  awk -v lines="$line_numbers" '
+-+++++-+++++-++-+  BEGIN {
+-+++++-+++++-++-+    FS=OFS=",";
+-+++++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+-+++++-+++++-++-+    for (i in arr) {
+-+++++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+++++-+++++-++-+    }
+-+++++-+++++-++-+  }
+-+++++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+-+++++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+-+++++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+-+++++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++++-+++++-++-@@ -95,2 +102,4 @@ fi
+-+++++-+++++-++--# Combine all filtered reports into one final report
+-+++++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+++++-+++++-++-+# Combine all filtered reports into one final report (optional)
+-+++++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+++++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+++++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+-+++++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+++++-+++++-++-+echo "Final filtered scanner report:"
+-+++++-+++++-++-+cat "$final_report"
+-+++++-+++++-++-+
+-+++++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+++++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+-+++++-+++++-+++-    FS=OFS=",";
+-+++++-+++++-++++    FS=OFS=",";  # Define CSV format
+-+++++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+-+++++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-+++++-+++++-+++@@ -111 +111 @@ cat "$final_report"
+-+++++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++++-+++++-+++new file mode 100644
+-+++++-+++++-+++index 0000000..0e43eee
+-+++++-+++++-+++--- /dev/null
+-+++++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++++-+++++-+++@@ -0,0 +1 @@
+-+++++-+++++-++++70 :           System.debug('Hi Hello');
+-+++++-+++++-+++diff --git a/changes.diff b/changes.diff
+-+++++-+++++-+++new file mode 100644
+-+++++-+++++-+++index 0000000..760971b
+-+++++-+++++-+++--- /dev/null
+-+++++-+++++-++++++ b/changes.diff
+-+++++-+++++-+++@@ -0,0 +1,65 @@
+-+++++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-+++++-+++++-++++index 255a037..525d43a 100644
+-+++++-+++++-++++--- a/.husky/pre-commit
+-+++++-+++++-+++++++ b/.husky/pre-commit
+-+++++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+-+++++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-+++++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+-+++++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-+++++-+++++-++++-  # Define the output path for the scanner report
+-+++++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-+++++-+++++-+++++  # Define the output path for the scanner report in CSV format
+-+++++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-+++++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
+-+++++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-+++++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+-+++++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+-+++++-+++++-++++-  # Filter the scanner report based on the changed line numbers
+-+++++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+-+++++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-+++++-+++++-++++-  jq --arg lines "$line_numbers" '
+-+++++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-+++++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++-+++++  awk -v lines="$line_numbers" '
+-+++++-+++++-+++++  BEGIN {
+-+++++-+++++-+++++    FS=OFS=",";
+-+++++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+-+++++-+++++-+++++    for (i in arr) {
+-+++++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-+++++-+++++-+++++    }
+-+++++-+++++-+++++  }
+-+++++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-+++++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+-+++++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-+++++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+-+++++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-+++++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+-+++++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-+++++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++++-+++++-++++@@ -95,2 +102,4 @@ fi
+-+++++-+++++-++++-# Combine all filtered reports into one final report
+-+++++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-+++++-+++++-+++++# Combine all filtered reports into one final report (optional)
+-+++++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-+++++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-+++++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-+++++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+-+++++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-+++++-+++++-+++++echo "Final filtered scanner report:"
+-+++++-+++++-+++++cat "$final_report"
+-+++++-+++++-+++++
+-+++++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-+++++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-+++++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-++++index 1ec7a54..870d508 100644
+-+++++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++++-+++++-++++-          System.debug('Hi');
+-+++++-+++++-+++++          System.debug('Hi Hello');
+-+++++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+++++-+++++-++-index 1ec7a54..870d508 100644
+-+++++-+++++-+++index 870d508..1ec7a54 100644
+-+++++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-+++++-+++++-++--          System.debug('Hi');
+-+++++-+++++-++-+          System.debug('Hi Hello');
+-+++++-+++++-+++-          System.debug('Hi Hello');
+-+++++-+++++-++++          System.debug('Hi');
+-+++++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++++-+++++-+++new file mode 100644
+-+++++-+++++-+++index 0000000..5a3a1ac
+-+++++-+++++-+++--- /dev/null
+-+++++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++++-+++++-+++@@ -0,0 +1 @@
+-+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+++++-+++++-+++new file mode 100644
+-+++++-+++++-+++index 0000000..5a3a1ac
+-+++++-+++++-+++--- /dev/null
+-+++++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+-+++++-+++++-+++@@ -0,0 +1 @@
+-+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++++-+++++-+++new file mode 100644
+-+++++-+++++-+++index 0000000..e1ef0f0
+-+++++-+++++-+++--- /dev/null
+-+++++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++++-+++++-+++@@ -0,0 +1,5 @@
+-+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+++++-+++++-+-index 870d508..1ec7a54 100644
+-+++++-+++++-++index 1ec7a54..870d508 100644
+-+++++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+-+++++-+++++-+--          System.debug('Hi Hello');
+-+++++-+++++-+-+          System.debug('Hi');
+-+++++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++++-+++++-+-new file mode 100644
+-+++++-+++++-+-index 0000000..5a3a1ac
+-+++++-+++++-+---- /dev/null
+-+++++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++++-+++++-+-@@ -0,0 +1 @@
+-+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+++++-+++++-+-new file mode 100644
+-+++++-+++++-+-index 0000000..5a3a1ac
+-+++++-+++++-+---- /dev/null
+-+++++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+-+++++-+++++-+-@@ -0,0 +1 @@
+-+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++++-+++++-+-new file mode 100644
+-+++++-+++++-+-index 0000000..e1ef0f0
+-+++++-+++++-+---- /dev/null
+-+++++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++++-+++++-+-@@ -0,0 +1,5 @@
+-+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++++-+++++-++-          System.debug('Hi');
+-+++++-+++++-+++          System.debug('Hi Hello');
+-+++++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+++++-+++++--index 1ec7a54..870d508 100644
+-+++++-+++++-+index 870d508..5eafcac 100644
+-+++++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+-+++++-+++++---          System.debug('Hi');
+-+++++-+++++--+          System.debug('Hi Hello');
+-+++++-+++++-+-          System.debug('Hi Hello');
+-+++++-+++++-++          System.debug('Happy');
+-+++++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-index 5eafcac..1ec7a54 100644
+-+++++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+-+++++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++++-+++++--          System.debug('Happy');
+-+++++-+++++-+          System.debug('Hi');
+-+++++++++++new file mode 100644
+-+++++++++++index 0000000..f9d24dc
+-+++++++++++--- /dev/null
+-++++++++++++++ b/changes.diff
+-+++++++++++@@ -0,0 +1,876 @@
+-++++++++++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++++++++++index 19cfdbc..daf61a1 100644
+-++++++++++++--- a/.husky/pre-commit
+-+++++++++++++++ b/.husky/pre-commit
+-++++++++++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
+-++++++++++++-  # Define the output path for the scanner report in CSV format
+-++++++++++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-+++++++++++++  # Extract only the changed line numbers for the file
+-+++++++++++++  line_numbers=$(awk -v file="$file" '
+-+++++++++++++    BEGIN {inside=0; start_line=0; line_offset=0}
+-+++++++++++++    /^diff --git/ {inside=0}
+-+++++++++++++    $0 ~ file {inside=1}
+-+++++++++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
+-+++++++++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-+++++++++++++  ' changes.diff)
+-+++++++++++++
+-+++++++++++++  # If no changed lines are found for this file, skip it
+-+++++++++++++  if [ -z "$line_numbers" ]; then
+-+++++++++++++    echo "No changed lines found in $file"
+-+++++++++++++    continue
+-+++++++++++++  fi
+-+++++++++++++
+-+++++++++++++  # Convert the line numbers to a JSON array format for jq filtering
+-+++++++++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
+-+++++++++++++
+-+++++++++++++  echo "Changed lines for $file: $line_numbers_array"
+-+++++++++++++
+-+++++++++++++  # Define the output path for the scanner report in JSON format
+-+++++++++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++++++++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
+-++++++++++++-  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++++++++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-+++++++++++++  # Run the SFDX scanner on the file and generate the report in JSON format
+-+++++++++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++++++++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
+-++++++++++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
+-++++++++++++-  echo "Filtering scanner report for $file for Line '70'..."
+-++++++++++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++++++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
+-+++++++++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
+-+++++++++++++  jq --argjson lines "$line_numbers_array" '
+-+++++++++++++    [.[] | 
+-+++++++++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
+-+++++++++++++      select(.violations | length > 0)]
+-+++++++++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
+-++++++++++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++++++++++-    echo "No issues found for line '70' in $file"
+-+++++++++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-+++++++++++++    echo "No issues found for changed lines in $file"
+-++++++++++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
+-++++++++++++-  echo "Filtered scanner report for $file (Line '70'):"
+-++++++++++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-+++++++++++++  echo "Filtered scanner report for $file (Changed lines):"
+-+++++++++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++@@ -53 +77 @@ done <<< "$changed_files"
+-++++++++++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-+++++++++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++++++++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
+-++++++++++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
+-+++++++++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
+-++++++++++++@@ -60,2 +84,2 @@ fi
+-++++++++++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++++++++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-+++++++++++++final_report="scanner-reports/final-filtered-scanner-report.json"
+-+++++++++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
+-++++++++++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++++++++++-echo "Final filtered scanner report (Line '70'):"
+-+++++++++++++echo "Final filtered scanner report (Changed lines):"
+-++++++++++++@@ -67 +91 @@ cat "$final_report"
+-++++++++++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
+-+++++++++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
+-++++++++++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
+-++++++++++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
+-+++++++++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
+-++++++++++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
+-++++++++++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
+-+++++++++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
+-++++++++++++@@ -77 +101 @@ else
+-++++++++++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
+-+++++++++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
+-++++++++++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++++++++++deleted file mode 100644
+-++++++++++++index 9d692ac..0000000
+-++++++++++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-+++++++++++++++ /dev/null
+-++++++++++++@@ -1,24 +0,0 @@
+-++++++++++++-0
+-++++++++++++-1
+-++++++++++++-2
+-++++++++++++-3
+-++++++++++++-4
+-++++++++++++-5
+-++++++++++++-60
+-++++++++++++-642
+-++++++++++++-643
+-++++++++++++-644
+-++++++++++++-645
+-++++++++++++-646
+-++++++++++++-647
+-++++++++++++-648
+-++++++++++++-649
+-++++++++++++-650
+-++++++++++++-651
+-++++++++++++-652
+-++++++++++++-653
+-++++++++++++-654
+-++++++++++++-655
+-++++++++++++-656
+-++++++++++++-657
+-++++++++++++-70
+-++++++++++++diff --git a/changes.diff b/changes.diff
+-++++++++++++deleted file mode 100644
+-++++++++++++index 61d162d..0000000
+-++++++++++++--- a/changes.diff
+-+++++++++++++++ /dev/null
+-++++++++++++@@ -1,647 +0,0 @@
+-++++++++++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++++++++++-index 5b262e4..8c05f52 100644
+-++++++++++++---- a/.husky/pre-commit
+-++++++++++++-+++ b/.husky/pre-commit
+-++++++++++++-@@ -113 +113 @@ cat "$final_report"
+-++++++++++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-++++++++++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
+-++++++++++++-diff --git a/changes.diff b/changes.diff
+-++++++++++++-index 9a218e6..4fe1995 100644
+-++++++++++++---- a/changes.diff
+-++++++++++++-+++ b/changes.diff
+-++++++++++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++++++++++--index aa6762f..586962b 100644
+-++++++++++++-+index 586962b..5b262e4 100644
+-++++++++++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
+-++++++++++++--@@ -41 +41 @@ while IFS= read -r file; do
+-++++++++++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-++++++++++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
+-++++++++++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-++++++++++++---  # Extract line numbers as a comma-separated string for filtering later
+-++++++++++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-++++++++++++--+  # Extract line numbers as an array for filtering later
+-++++++++++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-++++++++++++--@@ -66 +66 @@ while IFS= read -r file; do
+-++++++++++++---  if [ -z "$line_numbers" ]; then
+-++++++++++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
+-++++++++++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-++++++++++++--+  # Convert the array of line numbers into a format that can be used by awk
+-++++++++++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-++++++++++++--+  lines_for_filter="${lines_for_filter:1}"
+-++++++++++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
+-++++++++++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
+-++++++++++++-+-  awk -v file="$file" '
+-++++++++++++-++  # Extract only the changed line numbers for the file
+-++++++++++++-++  line_numbers=$(awk -v file="$file" '
+-++++++++++++-+@@ -42 +42 @@ while IFS= read -r file; do
+-++++++++++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
+-++++++++++++-++  ' changes.diff)
+-++++++++++++-+@@ -45 +45 @@ while IFS= read -r file; do
+-++++++++++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
+-++++++++++++-++  if [ -z "$line_numbers" ]; then
+-++++++++++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
+-++++++++++++-+-  # Extract line numbers as an array for filtering later
+-++++++++++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-++++++++++++-++  # Convert the line numbers to a comma-separated string for matching
+-++++++++++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
+-++++++++++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
+-++++++++++++--@@ -73 +77 @@ while IFS= read -r file; do
+-++++++++++++---  awk -v lines="$line_numbers" '
+-++++++++++++--+  awk -v lines="$lines_for_filter" '
+-++++++++++++--@@ -81 +85 @@ while IFS= read -r file; do
+-++++++++++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++++++++++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-++++++++++++--@@ -111 +115 @@ cat "$final_report"
+-++++++++++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-++++++++++++-++  echo "Changed lines for $file: $line_numbers_string"
+-++++++++++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
+-++++++++++++-+-  # Ensure that line_numbers is not empty
+-++++++++++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
+-++++++++++++-++  # Ensure that line_numbers_string is not empty
+-++++++++++++-++  if [ -z "$line_numbers_string" ]; then
+-++++++++++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
+-++++++++++++-+-  # Convert the array of line numbers into a format that can be used by awk
+-++++++++++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-++++++++++++-+-  lines_for_filter="${lines_for_filter:1}"
+-++++++++++++-+-
+-++++++++++++-+@@ -77 +75 @@ while IFS= read -r file; do
+-++++++++++++-+-  awk -v lines="$lines_for_filter" '
+-++++++++++++-++  awk -v lines="$line_numbers_string" '
+-++++++++++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-++++++++++++--index 0e43eee..a206584 100644
+-++++++++++++-+index a206584..9d692ac 100644
+-++++++++++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
+-++++++++++++--@@ -1 +1,6 @@
+-++++++++++++---70 :           System.debug('Hi Hello');
+-++++++++++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++--+1 : index 1ec7a54..870d508 100644
+-++++++++++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++++++++++--+4 : -          System.debug('Hi');
+-++++++++++++--+70 :           System.debug('Hi');
+-++++++++++++-+@@ -1,6 +1,24 @@
+-++++++++++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-+-1 : index 1ec7a54..870d508 100644
+-++++++++++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++++++++++-+-4 : -          System.debug('Hi');
+-++++++++++++-+-70 :           System.debug('Hi');
+-++++++++++++-++0
+-++++++++++++-++1
+-++++++++++++-++2
+-++++++++++++-++3
+-++++++++++++-++4
+-++++++++++++-++5
+-++++++++++++-++60
+-++++++++++++-++642
+-++++++++++++-++643
+-++++++++++++-++644
+-++++++++++++-++645
+-++++++++++++-++646
+-++++++++++++-++647
+-++++++++++++-++648
+-++++++++++++-++649
+-++++++++++++-++650
+-++++++++++++-++651
+-++++++++++++-++652
+-++++++++++++-++653
+-++++++++++++-++654
+-++++++++++++-++655
+-++++++++++++-++656
+-++++++++++++-++657
+-++++++++++++-++70
+-++++++++++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
+-++++++++++++--index 760971b..3dfa538 100644
+-++++++++++++-+index 3dfa538..9a218e6 100644
+-++++++++++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
+-++++++++++++---index 255a037..525d43a 100644
+-++++++++++++--+index 525d43a..aa6762f 100644
+-++++++++++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-++++++++++++---@@ -50 +50 @@ while IFS= read -r file; do
+-++++++++++++----  # Extract line numbers as a comma-separated string for use in jq filtering
+-++++++++++++---+  # Extract line numbers as a comma-separated string for filtering later
+-++++++++++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++++++++++++----  # Define the output path for the scanner report
+-++++++++++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++++++++++---+  # Define the output path for the scanner report in CSV format
+-++++++++++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++++++++++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++++++++++++----  # Run the SFDX scanner on the file and generate the report
+-++++++++++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++++++++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++++++++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++++++++++++---@@ -71 +71 @@ while IFS= read -r file; do
+-++++++++++++----  # Filter the scanner report based on the changed line numbers
+-++++++++++++---+  # Filter the CSV scanner report based on the changed line numbers
+-++++++++++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++++++++++++----  jq --arg lines "$line_numbers" '
+-++++++++++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++++++++++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++---+  awk -v lines="$line_numbers" '
+-++++++++++++---+  BEGIN {
+-++++++++++++---+    FS=OFS=",";
+-++++++++++++---+    split(lines, arr, ",");  # Split the line numbers into an array
+-++++++++++++---+    for (i in arr) {
+-++++++++++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++++++++++++---+    }
+-++++++++++++---+  }
+-++++++++++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++++++++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++++++++++---@@ -78 +85 @@ while IFS= read -r file; do
+-++++++++++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++++++++++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++++++++++---@@ -84 +91 @@ while IFS= read -r file; do
+-++++++++++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++++++++++---@@ -89 +96 @@ done <<< "$changed_files"
+-++++++++++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++++++++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++++++++++++---@@ -95,2 +102,4 @@ fi
+-++++++++++++----# Combine all filtered reports into one final report
+-++++++++++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++++++++++++---+# Combine all filtered reports into one final report (optional)
+-++++++++++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++++++++++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++++++++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++++++++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++++++++++++----# Parse the final filtered scanner report and check for severity 3 issues
+-++++++++++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++++++++++++---+echo "Final filtered scanner report:"
+-++++++++++++---+cat "$final_report"
+-++++++++++++---+
+-++++++++++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++++++++++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++--+@@ -75 +75 @@ while IFS= read -r file; do
+-++++++++++++--+-    FS=OFS=",";
+-++++++++++++--++    FS=OFS=",";  # Define CSV format
+-++++++++++++--+@@ -81 +81 @@ while IFS= read -r file; do
+-++++++++++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++++++++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++++++++++++--+@@ -111 +111 @@ cat "$final_report"
+-++++++++++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++++++++++--+new file mode 100644
+-++++++++++++--+index 0000000..0e43eee
+-++++++++++++--+--- /dev/null
+-++++++++++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++++++++++--+@@ -0,0 +1 @@
+-++++++++++++--++70 :           System.debug('Hi Hello');
+-++++++++++++--+diff --git a/changes.diff b/changes.diff
+-++++++++++++--+new file mode 100644
+-++++++++++++--+index 0000000..760971b
+-++++++++++++--+--- /dev/null
+-++++++++++++--++++ b/changes.diff
+-++++++++++++--+@@ -0,0 +1,65 @@
+-++++++++++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++++++++++--++index 255a037..525d43a 100644
+-++++++++++++--++--- a/.husky/pre-commit
+-++++++++++++--+++++ b/.husky/pre-commit
+-++++++++++++--++@@ -50 +50 @@ while IFS= read -r file; do
+-++++++++++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-++++++++++++--+++  # Extract line numbers as a comma-separated string for filtering later
+-++++++++++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++++++++++++--++-  # Define the output path for the scanner report
+-++++++++++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++++++++++--+++  # Define the output path for the scanner report in CSV format
+-++++++++++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++++++++++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++++++++++++--++-  # Run the SFDX scanner on the file and generate the report
+-++++++++++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++++++++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++++++++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++++++++++++--++@@ -71 +71 @@ while IFS= read -r file; do
+-++++++++++++--++-  # Filter the scanner report based on the changed line numbers
+-++++++++++++--+++  # Filter the CSV scanner report based on the changed line numbers
+-++++++++++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++++++++++++--++-  jq --arg lines "$line_numbers" '
+-++++++++++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++++++++++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++--+++  awk -v lines="$line_numbers" '
+-++++++++++++--+++  BEGIN {
+-++++++++++++--+++    FS=OFS=",";
+-++++++++++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
+-++++++++++++--+++    for (i in arr) {
+-++++++++++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++++++++++++--+++    }
+-++++++++++++--+++  }
+-++++++++++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++++++++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++++++++++--++@@ -78 +85 @@ while IFS= read -r file; do
+-++++++++++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++++++++++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++++++++++--++@@ -84 +91 @@ while IFS= read -r file; do
+-++++++++++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++++++++++--++@@ -89 +96 @@ done <<< "$changed_files"
+-++++++++++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++++++++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++++++++++++--++@@ -95,2 +102,4 @@ fi
+-++++++++++++--++-# Combine all filtered reports into one final report
+-++++++++++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++++++++++++--+++# Combine all filtered reports into one final report (optional)
+-++++++++++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++++++++++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++++++++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++++++++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++++++++++++--++-# Parse the final filtered scanner report and check for severity 3 issues
+-++++++++++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++++++++++++--+++echo "Final filtered scanner report:"
+-++++++++++++--+++cat "$final_report"
+-++++++++++++--+++
+-++++++++++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++++++++++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++--++index 1ec7a54..870d508 100644
+-++++++++++++--++--- a/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++++++++++--++-          System.debug('Hi');
+-++++++++++++--+++          System.debug('Hi Hello');
+-++++++++++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++++++++++++---index 1ec7a54..870d508 100644
+-++++++++++++--+index 870d508..1ec7a54 100644
+-++++++++++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-++++++++++++----          System.debug('Hi');
+-++++++++++++---+          System.debug('Hi Hello');
+-++++++++++++--+-          System.debug('Hi Hello');
+-++++++++++++--++          System.debug('Hi');
+-++++++++++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++++++++++--+new file mode 100644
+-++++++++++++--+index 0000000..5a3a1ac
+-++++++++++++--+--- /dev/null
+-++++++++++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++++++++++--+@@ -0,0 +1 @@
+-++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++++++++++++--+new file mode 100644
+-++++++++++++--+index 0000000..5a3a1ac
+-++++++++++++--+--- /dev/null
+-++++++++++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
+-++++++++++++--+@@ -0,0 +1 @@
+-++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++++++++++--+new file mode 100644
+-++++++++++++--+index 0000000..e1ef0f0
+-++++++++++++--+--- /dev/null
+-++++++++++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++++++++++--+@@ -0,0 +1,5 @@
+-++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++++++++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++++++++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++++++++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++++++++++-+-index 525d43a..aa6762f 100644
+-++++++++++++-++index aa6762f..586962b 100644
+-++++++++++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
+-++++++++++++-+-@@ -75 +75 @@ while IFS= read -r file; do
+-++++++++++++-+--    FS=OFS=",";
+-++++++++++++-+-+    FS=OFS=",";  # Define CSV format
+-++++++++++++-+-@@ -81 +81 @@ while IFS= read -r file; do
+-++++++++++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++++++++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++++++++++++-+-@@ -111 +111 @@ cat "$final_report"
+-++++++++++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++-++@@ -41 +41 @@ while IFS= read -r file; do
+-++++++++++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
+-++++++++++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
+-++++++++++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
+-++++++++++++-++-  # Extract line numbers as a comma-separated string for filtering later
+-++++++++++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
+-++++++++++++-+++  # Extract line numbers as an array for filtering later
+-++++++++++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
+-++++++++++++-++@@ -66 +66 @@ while IFS= read -r file; do
+-++++++++++++-++-  if [ -z "$line_numbers" ]; then
+-++++++++++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
+-++++++++++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
+-++++++++++++-+++  # Convert the array of line numbers into a format that can be used by awk
+-++++++++++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
+-++++++++++++-+++  lines_for_filter="${lines_for_filter:1}"
+-++++++++++++-+++
+-++++++++++++-++@@ -73 +77 @@ while IFS= read -r file; do
+-++++++++++++-++-  awk -v lines="$line_numbers" '
+-++++++++++++-+++  awk -v lines="$lines_for_filter" '
+-++++++++++++-++@@ -81 +85 @@ while IFS= read -r file; do
+-++++++++++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++++++++++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
+-++++++++++++-++@@ -111 +115 @@ cat "$final_report"
+-++++++++++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
+-++++++++++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
+-++++++++++++-+-new file mode 100644
+-++++++++++++-+-index 0000000..0e43eee
+-++++++++++++-+---- /dev/null
+-++++++++++++-++index 0e43eee..a206584 100644
+-++++++++++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++++++++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
+-++++++++++++-+-@@ -0,0 +1 @@
+-++++++++++++-+-+70 :           System.debug('Hi Hello');
+-++++++++++++-++@@ -1 +1,6 @@
+-++++++++++++-++-70 :           System.debug('Hi Hello');
+-++++++++++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-+++1 : index 1ec7a54..870d508 100644
+-++++++++++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++++++++++-+++4 : -          System.debug('Hi');
+-++++++++++++-+++70 :           System.debug('Hi');
+-++++++++++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
+-++++++++++++-+-new file mode 100644
+-++++++++++++-+-index 0000000..760971b
+-++++++++++++-+---- /dev/null
+-++++++++++++-++index 760971b..3dfa538 100644
+-++++++++++++-++--- a/changes.diff
+-++++++++++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
+-++++++++++++-+-@@ -0,0 +1,65 @@
+-++++++++++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++++++++++-+-+index 255a037..525d43a 100644
+-++++++++++++-+-+--- a/.husky/pre-commit
+-++++++++++++-+-++++ b/.husky/pre-commit
+-++++++++++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
+-++++++++++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
+-++++++++++++-+-++  # Extract line numbers as a comma-separated string for filtering later
+-++++++++++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++++++++++++-+-+-  # Define the output path for the scanner report
+-++++++++++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++++++++++-+-++  # Define the output path for the scanner report in CSV format
+-++++++++++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++++++++++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++++++++++++-+-+-  # Run the SFDX scanner on the file and generate the report
+-++++++++++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++++++++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++++++++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++++++++++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
+-++++++++++++-+-+-  # Filter the scanner report based on the changed line numbers
+-++++++++++++-+-++  # Filter the CSV scanner report based on the changed line numbers
+-++++++++++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++++++++++++-+-+-  jq --arg lines "$line_numbers" '
+-++++++++++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++++++++++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++-+-++  awk -v lines="$line_numbers" '
+-++++++++++++-+-++  BEGIN {
+-++++++++++++-+-++    FS=OFS=",";
+-++++++++++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
+-++++++++++++-+-++    for (i in arr) {
+-++++++++++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++++++++++++-+-++    }
+-++++++++++++-+-++  }
+-++++++++++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++++++++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++++++++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
+-++++++++++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++++++++++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++++++++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
+-++++++++++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++++++++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
+-++++++++++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++++++++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++++++++++++-+-+@@ -95,2 +102,4 @@ fi
+-++++++++++++-+-+-# Combine all filtered reports into one final report
+-++++++++++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++++++++++++-+-++# Combine all filtered reports into one final report (optional)
+-++++++++++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++++++++++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++++++++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++++++++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++++++++++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
+-++++++++++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++++++++++++-+-++echo "Final filtered scanner report:"
+-++++++++++++-+-++cat "$final_report"
+-++++++++++++-+-++
+-++++++++++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++++++++++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-+-+index 1ec7a54..870d508 100644
+-++++++++++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++++++++++-+-+-          System.debug('Hi');
+-++++++++++++-+-++          System.debug('Hi Hello');
+-++++++++++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++++++++++-++-index 255a037..525d43a 100644
+-++++++++++++-+++index 525d43a..aa6762f 100644
+-++++++++++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
+-++++++++++++-++-@@ -50 +50 @@ while IFS= read -r file; do
+-++++++++++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
+-++++++++++++-++-+  # Extract line numbers as a comma-separated string for filtering later
+-++++++++++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++++++++++++-++--  # Define the output path for the scanner report
+-++++++++++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++++++++++-++-+  # Define the output path for the scanner report in CSV format
+-++++++++++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++++++++++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++++++++++++-++--  # Run the SFDX scanner on the file and generate the report
+-++++++++++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++++++++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++++++++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++++++++++++-++-@@ -71 +71 @@ while IFS= read -r file; do
+-++++++++++++-++--  # Filter the scanner report based on the changed line numbers
+-++++++++++++-++-+  # Filter the CSV scanner report based on the changed line numbers
+-++++++++++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++++++++++++-++--  jq --arg lines "$line_numbers" '
+-++++++++++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++++++++++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++-++-+  awk -v lines="$line_numbers" '
+-++++++++++++-++-+  BEGIN {
+-++++++++++++-++-+    FS=OFS=",";
+-++++++++++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
+-++++++++++++-++-+    for (i in arr) {
+-++++++++++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++++++++++++-++-+    }
+-++++++++++++-++-+  }
+-++++++++++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++++++++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++++++++++-++-@@ -78 +85 @@ while IFS= read -r file; do
+-++++++++++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++++++++++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++++++++++-++-@@ -84 +91 @@ while IFS= read -r file; do
+-++++++++++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++++++++++-++-@@ -89 +96 @@ done <<< "$changed_files"
+-++++++++++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++++++++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++++++++++++-++-@@ -95,2 +102,4 @@ fi
+-++++++++++++-++--# Combine all filtered reports into one final report
+-++++++++++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++++++++++++-++-+# Combine all filtered reports into one final report (optional)
+-++++++++++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++++++++++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++++++++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++++++++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++++++++++++-++--# Parse the final filtered scanner report and check for severity 3 issues
+-++++++++++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++++++++++++-++-+echo "Final filtered scanner report:"
+-++++++++++++-++-+cat "$final_report"
+-++++++++++++-++-+
+-++++++++++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++++++++++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++-+++@@ -75 +75 @@ while IFS= read -r file; do
+-++++++++++++-+++-    FS=OFS=",";
+-++++++++++++-++++    FS=OFS=",";  # Define CSV format
+-++++++++++++-+++@@ -81 +81 @@ while IFS= read -r file; do
+-++++++++++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++++++++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
+-++++++++++++-+++@@ -111 +111 @@ cat "$final_report"
+-++++++++++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++++++++++-+++new file mode 100644
+-++++++++++++-+++index 0000000..0e43eee
+-++++++++++++-+++--- /dev/null
+-++++++++++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
+-++++++++++++-+++@@ -0,0 +1 @@
+-++++++++++++-++++70 :           System.debug('Hi Hello');
+-++++++++++++-+++diff --git a/changes.diff b/changes.diff
+-++++++++++++-+++new file mode 100644
+-++++++++++++-+++index 0000000..760971b
+-++++++++++++-+++--- /dev/null
+-++++++++++++-++++++ b/changes.diff
+-++++++++++++-+++@@ -0,0 +1,65 @@
+-++++++++++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
+-++++++++++++-++++index 255a037..525d43a 100644
+-++++++++++++-++++--- a/.husky/pre-commit
+-++++++++++++-+++++++ b/.husky/pre-commit
+-++++++++++++-++++@@ -50 +50 @@ while IFS= read -r file; do
+-++++++++++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
+-++++++++++++-+++++  # Extract line numbers as a comma-separated string for filtering later
+-++++++++++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
+-++++++++++++-++++-  # Define the output path for the scanner report
+-++++++++++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
+-++++++++++++-+++++  # Define the output path for the scanner report in CSV format
+-++++++++++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
+-++++++++++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
+-++++++++++++-++++-  # Run the SFDX scanner on the file and generate the report
+-++++++++++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
+-++++++++++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
+-++++++++++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
+-++++++++++++-++++@@ -71 +71 @@ while IFS= read -r file; do
+-++++++++++++-++++-  # Filter the scanner report based on the changed line numbers
+-++++++++++++-+++++  # Filter the CSV scanner report based on the changed line numbers
+-++++++++++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
+-++++++++++++-++++-  jq --arg lines "$line_numbers" '
+-++++++++++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
+-++++++++++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++-+++++  awk -v lines="$line_numbers" '
+-++++++++++++-+++++  BEGIN {
+-++++++++++++-+++++    FS=OFS=",";
+-++++++++++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
+-++++++++++++-+++++    for (i in arr) {
+-++++++++++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
+-++++++++++++-+++++    }
+-++++++++++++-+++++  }
+-++++++++++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
+-++++++++++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++++++++++-++++@@ -78 +85 @@ while IFS= read -r file; do
+-++++++++++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
+-++++++++++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
+-++++++++++++-++++@@ -84 +91 @@ while IFS= read -r file; do
+-++++++++++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
+-++++++++++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
+-++++++++++++-++++@@ -89 +96 @@ done <<< "$changed_files"
+-++++++++++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
+-++++++++++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
+-++++++++++++-++++@@ -95,2 +102,4 @@ fi
+-++++++++++++-++++-# Combine all filtered reports into one final report
+-++++++++++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
+-++++++++++++-+++++# Combine all filtered reports into one final report (optional)
+-++++++++++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
+-++++++++++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
+-++++++++++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
+-++++++++++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
+-++++++++++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
+-++++++++++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
+-++++++++++++-+++++echo "Final filtered scanner report:"
+-++++++++++++-+++++cat "$final_report"
+-++++++++++++-+++++
+-++++++++++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
+-++++++++++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
+-++++++++++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-++++index 1ec7a54..870d508 100644
+-++++++++++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++++++++++-++++-          System.debug('Hi');
+-++++++++++++-+++++          System.debug('Hi Hello');
+-++++++++++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++++++++++++-++-index 1ec7a54..870d508 100644
+-++++++++++++-+++index 870d508..1ec7a54 100644
+-++++++++++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
+-++++++++++++-++--          System.debug('Hi');
+-++++++++++++-++-+          System.debug('Hi Hello');
+-++++++++++++-+++-          System.debug('Hi Hello');
+-++++++++++++-++++          System.debug('Hi');
+-++++++++++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++++++++++-+++new file mode 100644
+-++++++++++++-+++index 0000000..5a3a1ac
+-++++++++++++-+++--- /dev/null
+-++++++++++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++++++++++-+++@@ -0,0 +1 @@
+-++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++++++++++++-+++new file mode 100644
+-++++++++++++-+++index 0000000..5a3a1ac
+-++++++++++++-+++--- /dev/null
+-++++++++++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
+-++++++++++++-+++@@ -0,0 +1 @@
+-++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++++++++++-+++new file mode 100644
+-++++++++++++-+++index 0000000..e1ef0f0
+-++++++++++++-+++--- /dev/null
+-++++++++++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++++++++++-+++@@ -0,0 +1,5 @@
+-++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++++++++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++++++++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++++++++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++++++++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++++++++++++-+-index 870d508..1ec7a54 100644
+-++++++++++++-++index 1ec7a54..870d508 100644
+-++++++++++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
+-++++++++++++-+--          System.debug('Hi Hello');
+-++++++++++++-+-+          System.debug('Hi');
+-++++++++++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++++++++++-+-new file mode 100644
+-++++++++++++-+-index 0000000..5a3a1ac
+-++++++++++++-+---- /dev/null
+-++++++++++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++++++++++-+-@@ -0,0 +1 @@
+-++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++++++++++++-+-new file mode 100644
+-++++++++++++-+-index 0000000..5a3a1ac
+-++++++++++++-+---- /dev/null
+-++++++++++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
+-++++++++++++-+-@@ -0,0 +1 @@
+-++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++++++++++-+-new file mode 100644
+-++++++++++++-+-index 0000000..e1ef0f0
+-++++++++++++-+---- /dev/null
+-++++++++++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++++++++++-+-@@ -0,0 +1,5 @@
+-++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++++++++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++++++++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++++++++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++++++++++-++-          System.debug('Hi');
+-++++++++++++-+++          System.debug('Hi Hello');
+-++++++++++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++++++++++++--index 1ec7a54..870d508 100644
+-++++++++++++-+index 870d508..5eafcac 100644
+-++++++++++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
+-++++++++++++---          System.debug('Hi');
+-++++++++++++--+          System.debug('Hi Hello');
+-++++++++++++-+-          System.debug('Hi Hello');
+-++++++++++++-++          System.debug('Happy');
+-++++++++++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-index 5eafcac..1ec7a54 100644
+-++++++++++++---- a/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-+++ b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++++++++++--          System.debug('Happy');
+-++++++++++++-+          System.debug('Hi');
+-++++++++++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++index 73696e2..9e21e88 100644
+-++++++++++++--- a/force-app/main/default/classes/Account_Insert.cls
+-+++++++++++++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++++++++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++++++++++-          System.debug('Hello and Hi');
+-+++++++++++++          System.debug('Hi AND');
+-++++++++++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-++++++++++++deleted file mode 100644
+-++++++++++++index 5a3a1ac..0000000
+-++++++++++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++++++++++++++ /dev/null
+-++++++++++++@@ -1 +0,0 @@
+-++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++++++++++new file mode 100644
+-++++++++++++index 0000000..ebc3aa5
+-++++++++++++--- /dev/null
+-+++++++++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++++++++++@@ -0,0 +1,30 @@
+-+++++++++++++[
+-+++++++++++++  {
+-+++++++++++++    "engine": "pmd",
+-+++++++++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++++++++++++    "violations": [
+-+++++++++++++      {
+-+++++++++++++        "line": 70,
+-+++++++++++++        "column": 11,
+-+++++++++++++        "endLine": 70,
+-+++++++++++++        "endColumn": 29,
+-+++++++++++++        "severity": 3,
+-+++++++++++++        "ruleName": "AvoidDebugStatements",
+-+++++++++++++        "category": "Performance",
+-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++++++++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++++++++++++      },
+-+++++++++++++      {
+-+++++++++++++        "line": 70,
+-+++++++++++++        "column": 11,
+-+++++++++++++        "endLine": 70,
+-+++++++++++++        "endColumn": 29,
+-+++++++++++++        "severity": 3,
+-+++++++++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++++++++++++        "category": "Best Practices",
+-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++++++++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++++++++++++      }
+-+++++++++++++    ]
+-+++++++++++++  }
+-+++++++++++++]
+-++++++++++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++++++++++++deleted file mode 100644
+-++++++++++++index 5a3a1ac..0000000
+-++++++++++++--- a/scanner-reports/final-filtered-scanner-report.csv
+-+++++++++++++++ /dev/null
+-++++++++++++@@ -1 +0,0 @@
+-++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-++++++++++++new file mode 100644
+-++++++++++++index 0000000..ebc3aa5
+-++++++++++++--- /dev/null
+-+++++++++++++++ b/scanner-reports/final-filtered-scanner-report.json
+-++++++++++++@@ -0,0 +1,30 @@
+-+++++++++++++[
+-+++++++++++++  {
+-+++++++++++++    "engine": "pmd",
+-+++++++++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++++++++++++    "violations": [
+-+++++++++++++      {
+-+++++++++++++        "line": 70,
+-+++++++++++++        "column": 11,
+-+++++++++++++        "endLine": 70,
+-+++++++++++++        "endColumn": 29,
+-+++++++++++++        "severity": 3,
+-+++++++++++++        "ruleName": "AvoidDebugStatements",
+-+++++++++++++        "category": "Performance",
+-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++++++++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++++++++++++      },
+-+++++++++++++      {
+-+++++++++++++        "line": 70,
+-+++++++++++++        "column": 11,
+-+++++++++++++        "endLine": 70,
+-+++++++++++++        "endColumn": 29,
+-+++++++++++++        "severity": 3,
+-+++++++++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++++++++++++        "category": "Best Practices",
+-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++++++++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++++++++++++      }
+-+++++++++++++    ]
+-+++++++++++++  }
+-+++++++++++++]
+-++++++++++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++++++++++deleted file mode 100644
+-++++++++++++index e1ef0f0..0000000
+-++++++++++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++++++++++++++ /dev/null
+-++++++++++++@@ -1,5 +0,0 @@
+-++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++++++++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++++++++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++++++++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++++++++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++++++++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++++++++++++new file mode 100644
+-++++++++++++index 0000000..c973918
+-++++++++++++--- /dev/null
+-+++++++++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++++++++++++@@ -0,0 +1 @@
+-+++++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++++++++++++\ No newline at end of file
+-+++++@@ -861 +999 @@ index 0000000..a6452b3
+-+++++-+++++index 73696e2..9e21e88 100644
+-+++++++++++index 9e21e88..800635e 100644
+-+++++@@ -865,9 +1003,2 @@ index 0000000..a6452b3
+-+++++-+++++-          System.debug('Hello and Hi');
+-+++++-++++++          System.debug('Hi AND');
+-+++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++++-+++++deleted file mode 100644
+-+++++-+++++index 5a3a1ac..0000000
+-+++++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
+-+++++-++++++++ /dev/null
+-+++++-+++++@@ -1 +0,0 @@
+-+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++++++++-          System.debug('Hi AND');
+-++++++++++++          System.debug('Hi AND Hello');
+-+++++@@ -875,3 +1006,2 @@ index 0000000..a6452b3
+-+++++-+++++new file mode 100644
+-+++++-+++++index 0000000..ebc3aa5
+-+++++-+++++--- /dev/null
+-+++++++++++index ebc3aa5..fe51488 100644
+-+++++++++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++++@@ -879,38 +1009,32 @@ index 0000000..a6452b3
+-+++++-+++++@@ -0,0 +1,30 @@
+-+++++-++++++[
+-+++++-++++++  {
+-+++++-++++++    "engine": "pmd",
+-+++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++++-++++++    "violations": [
+-+++++-++++++      {
+-+++++-++++++        "line": 70,
+-+++++-++++++        "column": 11,
+-+++++-++++++        "endLine": 70,
+-+++++-++++++        "endColumn": 29,
+-+++++-++++++        "severity": 3,
+-+++++-++++++        "ruleName": "AvoidDebugStatements",
+-+++++-++++++        "category": "Performance",
+-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++++-++++++      },
+-+++++-++++++      {
+-+++++-++++++        "line": 70,
+-+++++-++++++        "column": 11,
+-+++++-++++++        "endLine": 70,
+-+++++-++++++        "endColumn": 29,
+-+++++-++++++        "severity": 3,
+-+++++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++++-++++++        "category": "Best Practices",
+-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++++-++++++      }
+-+++++-++++++    ]
+-+++++-++++++  }
+-+++++-++++++]
+-+++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-+++++-+++++deleted file mode 100644
+-+++++-+++++index 5a3a1ac..0000000
+-+++++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+-+++++-++++++++ /dev/null
+-+++++-+++++@@ -1 +0,0 @@
+-+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++++++++@@ -1,30 +1 @@
+-+++++++++++-[
+-+++++++++++-  {
+-+++++++++++-    "engine": "pmd",
+-+++++++++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++++++++++-    "violations": [
+-+++++++++++-      {
+-+++++++++++-        "line": 70,
+-+++++++++++-        "column": 11,
+-+++++++++++-        "endLine": 70,
+-+++++++++++-        "endColumn": 29,
+-+++++++++++-        "severity": 3,
+-+++++++++++-        "ruleName": "AvoidDebugStatements",
+-+++++++++++-        "category": "Performance",
+-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++++++++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++++++++++-      },
+-+++++++++++-      {
+-+++++++++++-        "line": 70,
+-+++++++++++-        "column": 11,
+-+++++++++++-        "endLine": 70,
+-+++++++++++-        "endColumn": 29,
+-+++++++++++-        "severity": 3,
+-+++++++++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++++++++++-        "category": "Best Practices",
+-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++++++++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++++++++++-      }
+-+++++++++++-    ]
+-+++++++++++-  }
+-+++++++++++-]
+-++++++++++++[]
+-+++++@@ -918,3 +1042,2 @@ index 0000000..a6452b3
+-+++++-+++++new file mode 100644
+-+++++-+++++index 0000000..ebc3aa5
+-+++++-+++++--- /dev/null
+-+++++++++++index ebc3aa5..fe51488 100644
+-+++++++++++--- a/scanner-reports/final-filtered-scanner-report.json
+-+++++@@ -922,42 +1045,32 @@ index 0000000..a6452b3
+-+++++-+++++@@ -0,0 +1,30 @@
+-+++++-++++++[
+-+++++-++++++  {
+-+++++-++++++    "engine": "pmd",
+-+++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++++-++++++    "violations": [
+-+++++-++++++      {
+-+++++-++++++        "line": 70,
+-+++++-++++++        "column": 11,
+-+++++-++++++        "endLine": 70,
+-+++++-++++++        "endColumn": 29,
+-+++++-++++++        "severity": 3,
+-+++++-++++++        "ruleName": "AvoidDebugStatements",
+-+++++-++++++        "category": "Performance",
+-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++++-++++++      },
+-+++++-++++++      {
+-+++++-++++++        "line": 70,
+-+++++-++++++        "column": 11,
+-+++++-++++++        "endLine": 70,
+-+++++-++++++        "endColumn": 29,
+-+++++-++++++        "severity": 3,
+-+++++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++++-++++++        "category": "Best Practices",
+-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++++-++++++      }
+-+++++-++++++    ]
+-+++++-++++++  }
+-+++++-++++++]
+-+++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++++-+++++deleted file mode 100644
+-+++++-+++++index e1ef0f0..0000000
+-+++++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+-+++++-++++++++ /dev/null
+-+++++-+++++@@ -1,5 +0,0 @@
+-+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-+++++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-+++++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-+++++++++++@@ -1,30 +1 @@
+-+++++++++++-[
+-+++++++++++-  {
+-+++++++++++-    "engine": "pmd",
+-+++++++++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++++++++++-    "violations": [
+-+++++++++++-      {
+-+++++++++++-        "line": 70,
+-+++++++++++-        "column": 11,
+-+++++++++++-        "endLine": 70,
+-+++++++++++-        "endColumn": 29,
+-+++++++++++-        "severity": 3,
+-+++++++++++-        "ruleName": "AvoidDebugStatements",
+-+++++++++++-        "category": "Performance",
+-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++++++++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++++++++++-      },
+-+++++++++++-      {
+-+++++++++++-        "line": 70,
+-+++++++++++-        "column": 11,
+-+++++++++++-        "endLine": 70,
+-+++++++++++-        "endColumn": 29,
+-+++++++++++-        "severity": 3,
+-+++++++++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++++++++++-        "category": "Best Practices",
+-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++++++++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++++++++++-      }
+-+++++++++++-    ]
+-+++++++++++-  }
+-+++++++++++-]
+-++++++++++++[]
+-+++++@@ -965,3 +1078,2 @@ index 0000000..a6452b3
+-+++++-+++++new file mode 100644
+-+++++-+++++index 0000000..c973918
+-+++++-+++++--- /dev/null
+-+++++++++++index c973918..a14d61d 100644
+-+++++++++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++++@@ -969,2 +1081,4 @@ index 0000000..a6452b3
+-+++++-+++++@@ -0,0 +1 @@
+-+++++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++++++++@@ -1 +1 @@
+-+++++++++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++++++++\ No newline at end of file
+-++++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++@@ -973 +1087 @@ index 0000000..a6452b3
+-+++++-++++index 9e21e88..800635e 100644
+-++++++++++index 9e21e88..1ec7a54 100644
+-+++++@@ -978 +1092 @@ index 0000000..a6452b3
+-+++++-+++++          System.debug('Hi AND Hello');
+-+++++++++++          System.debug('Hi');
+-+++++@@ -980 +1094 @@ index 0000000..a6452b3
+-+++++-++++index ebc3aa5..fe51488 100644
+-++++++++++index ebc3aa5..bb2caee 100644
+-+++++@@ -983,10 +1097,24 @@ index 0000000..a6452b3
+-+++++-++++@@ -1,30 +1 @@
+-+++++-++++-[
+-+++++-++++-  {
+-+++++-++++-    "engine": "pmd",
+-+++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++++-++++-    "violations": [
+-+++++-++++-      {
+-+++++-++++-        "line": 70,
+-+++++-++++-        "column": 11,
+-+++++-++++-        "endLine": 70,
+-++++++++++@@ -5,0 +6,22 @@
+-++++@@ -886 +1928 @@ index 0000000..a6452b3
+-++++-++++++        "line": 70,
+-+++++++++++        "line": 20,
+-++++@@ -888,2 +1930,2 @@ index 0000000..a6452b3
+-++++-++++++        "endLine": 70,
+-++++-++++++        "endColumn": 29,
+-+++++++++++        "endLine": 20,
+-+++++++++++        "endColumn": 35,
+-++++@@ -897 +1939 @@ index 0000000..a6452b3
+-++++-++++++        "line": 70,
+-+++++++++++        "line": 20,
+-++++@@ -899,2 +1941,2 @@ index 0000000..a6452b3
+-++++-++++++        "endLine": 70,
+-++++-++++++        "endColumn": 29,
+-+++++++++++        "endLine": 20,
+-+++++++++++        "endColumn": 35,
+-++++@@ -906,22 +1948,42 @@ index 0000000..a6452b3
+-++++-++++++      }
+-++++-++++++    ]
+-++++-++++++  }
+-++++-++++++]
+-++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
+-++++-+++++deleted file mode 100644
+-++++-+++++index 5a3a1ac..0000000
+-++++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
+-++++-++++++++ /dev/null
+-++++-+++++@@ -1 +0,0 @@
+-++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-++++-+++++new file mode 100644
+-++++-+++++index 0000000..ebc3aa5
+-++++-+++++--- /dev/null
+-++++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
+-++++-+++++@@ -0,0 +1,30 @@
+-++++-++++++[
+-++++-++++++  {
+-++++-++++++    "engine": "pmd",
+-++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-++++-++++++    "violations": [
+-+++++++++++      },
+-++++++++++@@ -10 +32 @@
+-+++++@@ -994,10 +1122,2 @@ index 0000000..a6452b3
+-+++++-++++-        "severity": 3,
+-+++++-++++-        "ruleName": "AvoidDebugStatements",
+-+++++-++++-        "category": "Performance",
+-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++++-++++-      },
+-+++++-++++-      {
+-+++++-++++-        "line": 70,
+-+++++-++++-        "column": 11,
+-+++++-++++-        "endLine": 70,
+-+++++++++++        "endColumn": 39,
+-++++++++++@@ -21 +43 @@
+-+++++@@ -1005,10 +1125 @@ index 0000000..a6452b3
+-+++++-++++-        "severity": 3,
+-+++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++++-++++-        "category": "Best Practices",
+-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++++-++++-      }
+-+++++-++++-    ]
+-+++++-++++-  }
+-+++++-++++-]
+-+++++-+++++[]
+-+++++++++++        "endColumn": 39,
+-+++++@@ -1016 +1127 @@ index 0000000..a6452b3
+-+++++-++++index ebc3aa5..fe51488 100644
+-++++++++++index ebc3aa5..bb2caee 100644
+-+++++@@ -1019,10 +1130,24 @@ index 0000000..a6452b3
+-+++++-++++@@ -1,30 +1 @@
+-+++++-++++-[
+-+++++-++++-  {
+-+++++-++++-    "engine": "pmd",
+-+++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+++++-++++-    "violations": [
+-+++++-++++-      {
+-+++++-++++-        "line": 70,
+-+++++-++++-        "column": 11,
+-+++++-++++-        "endLine": 70,
+-++++++++++@@ -5,0 +6,22 @@
+-++++@@ -929 +1991 @@ index 0000000..a6452b3
+-++++-++++++        "line": 70,
+-+++++++++++        "line": 20,
+-++++@@ -931,2 +1993,2 @@ index 0000000..a6452b3
+-++++-++++++        "endLine": 70,
+-++++-++++++        "endColumn": 29,
+-+++++++++++        "endLine": 20,
+-+++++++++++        "endColumn": 35,
+-++++@@ -940 +2002 @@ index 0000000..a6452b3
+-++++-++++++        "line": 70,
+-+++++++++++        "line": 20,
+-++++@@ -942,2 +2004,2 @@ index 0000000..a6452b3
+-++++-++++++        "endLine": 70,
+-++++-++++++        "endColumn": 29,
+-+++++++++++        "endLine": 20,
+-+++++++++++        "endColumn": 35,
+-++++@@ -949,112 +2011,70 @@ index 0000000..a6452b3
+-++++-++++++      }
+-++++-++++++    ]
+-++++-++++++  }
+-++++-++++++]
+-++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++-+++++deleted file mode 100644
+-++++-+++++index e1ef0f0..0000000
+-++++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
+-++++-++++++++ /dev/null
+-++++-+++++@@ -1,5 +0,0 @@
+-++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+-++++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+-++++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+-++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++++-+++++new file mode 100644
+-++++-+++++index 0000000..c973918
+-++++-+++++--- /dev/null
+-++++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++++-+++++@@ -0,0 +1 @@
+-++++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++++-+++++\ No newline at end of file
+-++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++-++++index 9e21e88..800635e 100644
+-++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-++++-          System.debug('Hi AND');
+-++++-+++++          System.debug('Hi AND Hello');
+-++++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++-++++index ebc3aa5..fe51488 100644
+-++++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++-++++@@ -1,30 +1 @@
+-++++-++++-[
+-++++-++++-  {
+-++++-++++-    "engine": "pmd",
+-++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-++++-++++-    "violations": [
+-++++-++++-      {
+-++++-++++-        "line": 70,
+-++++-++++-        "column": 11,
+-++++-++++-        "endLine": 70,
+-++++-++++-        "endColumn": 29,
+-++++-++++-        "severity": 3,
+-++++-++++-        "ruleName": "AvoidDebugStatements",
+-++++-++++-        "category": "Performance",
+-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++++-++++-      },
+-++++-++++-      {
+-++++-++++-        "line": 70,
+-++++-++++-        "column": 11,
+-++++-++++-        "endLine": 70,
+-++++-++++-        "endColumn": 29,
+-++++-++++-        "severity": 3,
+-++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-++++-++++-        "category": "Best Practices",
+-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++++-++++-      }
+-++++-++++-    ]
+-++++-++++-  }
+-++++-++++-]
+-++++-+++++[]
+-++++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-++++-++++index ebc3aa5..fe51488 100644
+-++++-++++--- a/scanner-reports/final-filtered-scanner-report.json
+-++++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
+-++++-++++@@ -1,30 +1 @@
+-++++-++++-[
+-++++-++++-  {
+-++++-++++-    "engine": "pmd",
+-++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-++++-++++-    "violations": [
+-++++-++++-      {
+-++++-++++-        "line": 70,
+-++++-++++-        "column": 11,
+-++++-++++-        "endLine": 70,
+-++++-++++-        "endColumn": 29,
+-++++-++++-        "severity": 3,
+-++++-++++-        "ruleName": "AvoidDebugStatements",
+-++++-++++-        "category": "Performance",
+-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++++-++++-      },
+-++++-++++-      {
+-++++-++++-        "line": 70,
+-++++-++++-        "column": 11,
+-++++-++++-        "endLine": 70,
+-++++-++++-        "endColumn": 29,
+-++++-++++-        "severity": 3,
+-++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-++++-++++-        "category": "Best Practices",
+-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++++-++++-      }
+-++++-++++-    ]
+-++++-++++-  }
+-++++-++++-]
+-++++-+++++[]
+-++++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++++-++++index c973918..a14d61d 100644
+-++++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-++++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++++-++++@@ -1 +1 @@
+-++++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++++-++++\ No newline at end of file
+-++++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++++-++++\ No newline at end of file
+-++++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+++++++++++      },
+-++++++++++@@ -10 +32 @@
+-+++++@@ -1030,10 +1155,2 @@ index 0000000..a6452b3
+-+++++-++++-        "severity": 3,
+-+++++-++++-        "ruleName": "AvoidDebugStatements",
+-+++++-++++-        "category": "Performance",
+-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++++-++++-      },
+-+++++-++++-      {
+-+++++-++++-        "line": 70,
+-+++++-++++-        "column": 11,
+-+++++-++++-        "endLine": 70,
+-+++++++++++        "endColumn": 39,
+-++++++++++@@ -21 +43 @@
+-+++++@@ -1041,10 +1158 @@ index 0000000..a6452b3
+-+++++-++++-        "severity": 3,
+-+++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++++-++++-        "category": "Best Practices",
+-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++++-++++-      }
+-+++++-++++-    ]
+-+++++-++++-  }
+-+++++-++++-]
+-+++++-+++++[]
+-+++++++++++        "endColumn": 39,
+-+++++@@ -1052 +1160 @@ index 0000000..a6452b3
+-+++++-++++index c973918..a14d61d 100644
+-++++++++++index c973918..866c0b7 100644
+-+++++@@ -1058 +1166 @@ index 0000000..a6452b3
+-+++++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++@@ -1061 +1169 @@ index 0000000..a6452b3
+-+++++-+++index 9e21e88..1ec7a54 100644
+-+++++++++index 9e21e88..9a5148a 100644
+-+++++@@ -1066 +1174 @@ index 0000000..a6452b3
@@ -824,72 +17217,286 @@ index 1f4c0b2..3afa5f1 100644
--+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
--+++++-+++new file mode 100644
--+++++-+++index 0000000..5a3a1ac
--+++++-+++--- /dev/null
--+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
--+++++-+++@@ -0,0 +1 @@
--+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
--+++++-+++new file mode 100644
--+++++-+++index 0000000..5a3a1ac
--+++++-+++--- /dev/null
--+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
--+++++-+++@@ -0,0 +1 @@
--+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
--+++++-+++new file mode 100644
--+++++-+++index 0000000..e1ef0f0
--+++++-+++--- /dev/null
--+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
--+++++-+++@@ -0,0 +1,5 @@
--+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
--+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
--+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
--+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
--+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
--+++++-+-index 870d508..1ec7a54 100644
--+++++-++index 1ec7a54..870d508 100644
--+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
--+++++-+--          System.debug('Hi Hello');
--+++++-+-+          System.debug('Hi');
--+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
--+++++-+-new file mode 100644
--+++++-+-index 0000000..5a3a1ac
--+++++-+---- /dev/null
--+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
--+++++-+-@@ -0,0 +1 @@
--+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
--+++++-+-new file mode 100644
--+++++-+-index 0000000..5a3a1ac
--+++++-+---- /dev/null
--+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
--+++++-+-@@ -0,0 +1 @@
--+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
--+++++-+-new file mode 100644
--+++++-+-index 0000000..e1ef0f0
--+++++-+---- /dev/null
--+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
--+++++-+-@@ -0,0 +1,5 @@
--+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
--+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
--+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
--+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
--+++++-++-          System.debug('Hi');
--+++++-+++          System.debug('Hi Hello');
--+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
--+++++--index 1ec7a54..870d508 100644
--+++++-+index 870d508..5eafcac 100644
--+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
--+++++---          System.debug('Hi');
--+++++--+          System.debug('Hi Hello');
--+++++-+-          System.debug('Hi Hello');
--+++++-++          System.debug('Happy');
--+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--+++++-index 5eafcac..1ec7a54 100644
--+++++---- a/force-app/main/default/classes/Account_Insert.cls
--+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
--+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
--+++++--          System.debug('Happy');
+-++++++++++          System.debug('Hello');
+-+++++@@ -1068 +1176 @@ index 0000000..a6452b3
+-+++++-+++index ebc3aa5..bb2caee 100644
+-+++++++++index ebc3aa5..b33da59 100644
+-+++++@@ -1094,6 +1201,0 @@ index 0000000..a6452b3
+-+++++-+++@@ -10 +32 @@
+-+++++-+++-        "endColumn": 29,
+-+++++-++++        "endColumn": 39,
+-+++++-+++@@ -21 +43 @@
+-+++++-+++-        "endColumn": 29,
+-+++++-++++        "endColumn": 39,
+-+++++@@ -1101 +1203 @@ index 0000000..a6452b3
+-+++++-+++index ebc3aa5..bb2caee 100644
+-+++++++++index ebc3aa5..b33da59 100644
+-+++++@@ -1127,15 +1228,0 @@ index 0000000..a6452b3
+-+++++-+++@@ -10 +32 @@
+-+++++-+++-        "endColumn": 29,
+-+++++-++++        "endColumn": 39,
+-+++++-+++@@ -21 +43 @@
+-+++++-+++-        "endColumn": 29,
+-+++++-++++        "endColumn": 39,
+-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++++-+++index c973918..866c0b7 100644
+-+++++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++++-+++@@ -1 +1 @@
+-+++++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++-+++\ No newline at end of file
+-+++++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++-+++\ No newline at end of file
+-+++++@@ -1143 +1230 @@ index 0000000..a6452b3
+-+++++-++index 9e21e88..9a5148a 100644
+-++++@@ -1062,4 +2082,2 @@ index 0000000..a6452b3
+-++++-+++--- a/force-app/main/default/classes/Account_Insert.cls
+-++++-++++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-+++-          System.debug('Hi AND');
+-+++++@@ -1148 +1235 @@ index 0000000..a6452b3
+-+++++-+++          System.debug('Hello');
+-++++@@ -1067,27 +2085,4 @@ index 0000000..a6452b3
+-++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++-+++index ebc3aa5..bb2caee 100644
+-++++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++-+++@@ -5,0 +6,22 @@
+-++++-++++      {
+-++++-++++        "line": 20,
+-++++-++++        "column": 11,
+-++++-++++        "endLine": 20,
+-++++-++++        "endColumn": 35,
+-++++-++++        "severity": 3,
+-++++-++++        "ruleName": "AvoidDebugStatements",
+-++++-++++        "category": "Performance",
+-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++++-++++      },
+-++++-++++      {
+-++++-++++        "line": 20,
+-++++-++++        "column": 11,
+-++++-++++        "endLine": 20,
+-++++-++++        "endColumn": 35,
+-++++-++++        "severity": 3,
+-++++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++++-++++        "category": "Best Practices",
+-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++++-++++      },
+-+++++@@ -1150 +1237 @@ index 0000000..a6452b3
+-+++++-++index ebc3aa5..b33da59 100644
+-++++++++index ebc3aa5..d4945e4 100644
+-+++++@@ -1175,0 +1263,6 @@ index 0000000..a6452b3
+-++++@@ -1096 +2091 @@ index 0000000..a6452b3
+-++++-++++        "endColumn": 39,
+-+++++++++        "endColumn": 32,
+-++++@@ -1099,28 +2094,5 @@ index 0000000..a6452b3
+-++++-++++        "endColumn": 39,
+-++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-++++-+++index ebc3aa5..bb2caee 100644
+-++++-+++--- a/scanner-reports/final-filtered-scanner-report.json
+-++++-++++++ b/scanner-reports/final-filtered-scanner-report.json
+-++++-+++@@ -5,0 +6,22 @@
+-++++-++++      {
+-++++-++++        "line": 20,
+-++++-++++        "column": 11,
+-++++-++++        "endLine": 20,
+-++++-++++        "endColumn": 35,
+-++++-++++        "severity": 3,
+-++++-++++        "ruleName": "AvoidDebugStatements",
+-++++-++++        "category": "Performance",
+-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++++-++++      },
+-++++-++++      {
+-++++-++++        "line": 20,
+-++++-++++        "column": 11,
+-++++-++++        "endLine": 20,
+-++++-++++        "endColumn": 35,
+-++++-++++        "severity": 3,
+-++++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++++-++++        "category": "Best Practices",
+-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++++-++++      },
+-+++++++++        "endColumn": 32,
+-+++++@@ -1177 +1270 @@ index 0000000..a6452b3
+-+++++-++index ebc3aa5..b33da59 100644
+-++++++++index ebc3aa5..d4945e4 100644
+-+++++@@ -1202,0 +1296,15 @@ index 0000000..a6452b3
+-++++@@ -1129 +2101 @@ index 0000000..a6452b3
+-++++-++++        "endColumn": 39,
+-+++++++++        "endColumn": 32,
+-++++@@ -1132 +2104 @@ index 0000000..a6452b3
+-++++-++++        "endColumn": 39,
+-+++++++++        "endColumn": 32,
+-++++@@ -1134 +2106 @@ index 0000000..a6452b3
+-++++-+++index c973918..866c0b7 100644
+-++++++++index c973918..e670f52 100644
+-++++@@ -1140 +2112 @@ index 0000000..a6452b3
+-++++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++++@@ -1142,68 +2114,98 @@ index 0000000..a6452b3
+-++++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++-++index 9e21e88..9a5148a 100644
+-++++-++--- a/force-app/main/default/classes/Account_Insert.cls
+-++++-+++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-++-          System.debug('Hi AND');
+-++++-+++          System.debug('Hello');
+-++++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++-++index ebc3aa5..b33da59 100644
+-++++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++-++@@ -5,0 +6,22 @@
+-++++-+++      {
+-++++-+++        "line": 20,
+-++++-+++        "column": 11,
+-++++-+++        "endLine": 20,
+-++++-+++        "endColumn": 35,
+-++++-+++        "severity": 3,
+-++++-+++        "ruleName": "AvoidDebugStatements",
+-++++-+++        "category": "Performance",
+-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++++-+++      },
+-++++-+++      {
+-++++-+++        "line": 20,
+-++++-+++        "column": 11,
+-++++-+++        "endLine": 20,
+-++++-+++        "endColumn": 35,
+-++++-+++        "severity": 3,
+-++++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++++-+++        "category": "Best Practices",
+-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++++-+++      },
+-++++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-++++-++index ebc3aa5..b33da59 100644
+-++++-++--- a/scanner-reports/final-filtered-scanner-report.json
+-++++-+++++ b/scanner-reports/final-filtered-scanner-report.json
+-++++-++@@ -5,0 +6,22 @@
+-++++-+++      {
+-++++-+++        "line": 20,
+-++++-+++        "column": 11,
+-++++-+++        "endLine": 20,
+-++++-+++        "endColumn": 35,
+-++++-+++        "severity": 3,
+-++++-+++        "ruleName": "AvoidDebugStatements",
+-++++-+++        "category": "Performance",
+-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++++-+++      },
+-++++-+++      {
+-++++-+++        "line": 20,
+-++++-+++        "column": 11,
+-++++-+++        "endLine": 20,
+-++++-+++        "endColumn": 35,
+-++++-+++        "severity": 3,
+-++++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++++-+++        "category": "Best Practices",
+-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++++-+++      },
+-++++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++++-+index 9e21e88..1ec7a54 100644
+-++++-+--- a/force-app/main/default/classes/Account_Insert.cls
+-++++-++++ b/force-app/main/default/classes/Account_Insert.cls
+-++++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++++-+-          System.debug('Hi AND');
+-++++-++          System.debug('Hi');
+-+++++@@ -1204 +1312 @@ index 0000000..a6452b3
+-+++++-+index 9e21e88..1ec7a54 100644
+-+++++++index 9e21e88..d522ad0 100644
+-+++++@@ -1207 +1315,3 @@ index 0000000..a6452b3
+-+++++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+++++++@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+-++++++++        System.debug('Happy');
+-+++++++@@ -70 +71 @@ public with sharing class AccountInsertClass {
+-+++++@@ -1210,75 +1319,0 @@ index 0000000..a6452b3
+-+++++-+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++++-+index ebc3aa5..d4945e4 100644
+-+++++-+--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++++-++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++++-+@@ -5,0 +6,22 @@
+-+++++-++      {
+-+++++-++        "line": 20,
+-+++++-++        "column": 11,
+-+++++-++        "endLine": 20,
+-+++++-++        "endColumn": 35,
+-+++++-++        "severity": 3,
+-+++++-++        "ruleName": "AvoidDebugStatements",
+-+++++-++        "category": "Performance",
+-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++++-++      },
+-+++++-++      {
+-+++++-++        "line": 20,
+-+++++-++        "column": 11,
+-+++++-++        "endLine": 20,
+-+++++-++        "endColumn": 35,
+-+++++-++        "severity": 3,
+-+++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++++-++        "category": "Best Practices",
+-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++++-++      },
+-+++++-+@@ -10 +32 @@
+-+++++-+-        "endColumn": 29,
+-+++++-++        "endColumn": 32,
+-+++++-+@@ -21 +43 @@
+-+++++-+-        "endColumn": 29,
+-+++++-++        "endColumn": 32,
+-+++++-+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-+++++-+index ebc3aa5..d4945e4 100644
+-+++++-+--- a/scanner-reports/final-filtered-scanner-report.json
+-+++++-++++ b/scanner-reports/final-filtered-scanner-report.json
+-+++++-+@@ -5,0 +6,22 @@
+-+++++-++      {
+-+++++-++        "line": 20,
+-+++++-++        "column": 11,
+-+++++-++        "endLine": 20,
+-+++++-++        "endColumn": 35,
+-+++++-++        "severity": 3,
+-+++++-++        "ruleName": "AvoidDebugStatements",
+-+++++-++        "category": "Performance",
+-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++++-++      },
+-+++++-++      {
+-+++++-++        "line": 20,
+-+++++-++        "column": 11,
+-+++++-++        "endLine": 20,
+-+++++-++        "endColumn": 35,
+-+++++-++        "severity": 3,
+-+++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++++-++        "category": "Best Practices",
+-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++++-++      },
+-+++++-+@@ -10 +32 @@
+-+++++-+-        "endColumn": 29,
+-+++++-++        "endColumn": 32,
+-+++++-+@@ -21 +43 @@
+-+++++-+-        "endColumn": 29,
+-+++++-++        "endColumn": 32,
+-+++++-+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++++-+index c973918..e670f52 100644
+-+++++-+--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++++-++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++++-+@@ -1 +1 @@
+-+++++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++-+\ No newline at end of file
+-+++++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++-+\ No newline at end of file
+-+++++@@ -1286 +1321 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+++++-index 9e21e88..d522ad0 100644
+-++++++index 9e21e88..add3f8c 100644
+-+++++@@ -1289,3 +1324,5 @@ index 9e21e88..d522ad0 100644
+-+++++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+-+++++-+        System.debug('Happy');
+-+++++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
+-++++++@@ -16,0 +17 @@ public with sharing class AccountInsertClass {
+-+++++++          System.debug('Happy');
+-++++++@@ -20 +20,0 @@ public with sharing class AccountInsertClass {
+-++++++-          System.debug('Hello Hi');
+-++++++@@ -70 +69,0 @@ public with sharing class AccountInsertClass {
+-+++++@@ -1293 +1330,49 @@ index 9e21e88..d522ad0 100644
@@ -897,7344 +17504,1882 @@ index 1f4c0b2..3afa5f1 100644
--+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--+++++index 73696e2..9e21e88 100644
--+++++--- a/force-app/main/default/classes/Account_Insert.cls
--++++++++ b/force-app/main/default/classes/Account_Insert.cls
--+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
--+++++-          System.debug('Hello and Hi');
--++++++          System.debug('Hi AND');
--+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
--+++++deleted file mode 100644
--+++++index 5a3a1ac..0000000
--+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
--++++++++ /dev/null
--+++++@@ -1 +0,0 @@
--+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
--+++++new file mode 100644
--+++++index 0000000..ebc3aa5
--+++++--- /dev/null
--++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
--+++++@@ -0,0 +1,30 @@
--++++++[
--++++++  {
--++++++    "engine": "pmd",
--++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
--++++++    "violations": [
--++++++      {
--++++++        "line": 70,
--++++++        "column": 11,
--++++++        "endLine": 70,
--++++++        "endColumn": 29,
--++++++        "severity": 3,
--++++++        "ruleName": "AvoidDebugStatements",
--++++++        "category": "Performance",
--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
--++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
--++++++      },
--++++++      {
--++++++        "line": 70,
--++++++        "column": 11,
--++++++        "endLine": 70,
--++++++        "endColumn": 29,
--++++++        "severity": 3,
--++++++        "ruleName": "DebugsShouldUseLoggingLevel",
--++++++        "category": "Best Practices",
--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
--++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
--++++++      }
--++++++    ]
--++++++  }
--++++++]
--+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
--+++++deleted file mode 100644
--+++++index 5a3a1ac..0000000
--+++++--- a/scanner-reports/final-filtered-scanner-report.csv
--++++++++ /dev/null
--+++++@@ -1 +0,0 @@
--+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
--+++++new file mode 100644
--+++++index 0000000..ebc3aa5
--+++++--- /dev/null
--++++++++ b/scanner-reports/final-filtered-scanner-report.json
--+++++@@ -0,0 +1,30 @@
--++++++[
--++++++  {
--++++++    "engine": "pmd",
--++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
--++++++    "violations": [
--++++++      {
--++++++        "line": 70,
--++++++        "column": 11,
--++++++        "endLine": 70,
--++++++        "endColumn": 29,
--++++++        "severity": 3,
--++++++        "ruleName": "AvoidDebugStatements",
--++++++        "category": "Performance",
--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
--++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
--++++++      },
--++++++      {
--++++++        "line": 70,
--++++++        "column": 11,
--++++++        "endLine": 70,
--++++++        "endColumn": 29,
--++++++        "severity": 3,
--++++++        "ruleName": "DebugsShouldUseLoggingLevel",
--++++++        "category": "Best Practices",
--++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
--++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
--++++++      }
--++++++    ]
--++++++  }
--++++++]
--+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
--+++++deleted file mode 100644
--+++++index e1ef0f0..0000000
--+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
--++++++++ /dev/null
--+++++@@ -1,5 +0,0 @@
--+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
--+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
--+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
--+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
--+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
--+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
--+++++new file mode 100644
--+++++index 0000000..c973918
--+++++--- /dev/null
--++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
--+++++@@ -0,0 +1 @@
--++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
--+++++\ No newline at end of file
--++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--++++index 9e21e88..800635e 100644
--++++--- a/force-app/main/default/classes/Account_Insert.cls
--+++++++ b/force-app/main/default/classes/Account_Insert.cls
--++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
--++++-          System.debug('Hi AND');
--+++++          System.debug('Hi AND Hello');
--++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
--++++index ebc3aa5..fe51488 100644
--++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
--+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-index daf61a1..3603bae 100644
-++index 1328704..8004c80 100644
-+@@ -5,12 +5,9 @@ index daf61a1..3603bae 100644
-+-@@ -16 +16 @@ mkdir -p scanner-reports
-+--git diff --unified=0 --cached > changes.diff
-+-+git diff --cached --unified=0 > changes.diff
-+-@@ -25 +25 @@ while IFS= read -r file; do
-+--  # Extract only the changed line numbers for the file
-+-+  # Extract only the added or modified lines for .cls and .lwc files
-+-@@ -32 +32 @@ while IFS= read -r file; do
-+--  ' changes.diff)
-+-+  ' changes.diff | uniq)
-+-@@ -61 +61 @@ while IFS= read -r file; do
-+--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-++@@ -29,4 +29,4 @@ while IFS= read -r file; do
-++-    $0 ~ file {inside=1}
-++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
-++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
-++-  ' changes.diff | uniq)
-+++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
-+++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
-+++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
-+++  ' changes.diff | sort -n | uniq)
-+@@ -18,3 +15,2 @@ diff --git a/changes.diff b/changes.diff
-+-new file mode 100644
-+-index 0000000..a6452b3
-+---- /dev/null
-++index 1f4c0b2..eb6e437 100644
-++--- a/changes.diff
-+@@ -22,968 +18,5667 @@ index 0000000..a6452b3
-+-@@ -0,0 +1,1262 @@
-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-+index daf61a1..3603bae 100644
-+-+--- a/.husky/pre-commit
-+-++++ b/.husky/pre-commit
-+-+@@ -16 +16 @@ mkdir -p scanner-reports
-+-+-git diff --unified=0 --cached > changes.diff
-+-++git diff --cached --unified=0 > changes.diff
-+-+@@ -25 +25 @@ while IFS= read -r file; do
-+-+-  # Extract only the changed line numbers for the file
-+-++  # Extract only the added or modified lines for .cls and .lwc files
-+-+@@ -32 +32 @@ while IFS= read -r file; do
-+-+-  ' changes.diff)
-+-++  ' changes.diff | uniq)
-+-+@@ -61 +61 @@ while IFS= read -r file; do
-+-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+-+diff --git a/changes.diff b/changes.diff
-+-+new file mode 100644
-+-+index 0000000..1831031
-+-+--- /dev/null
-+-++++ b/changes.diff
-+-+@@ -0,0 +1,1158 @@
-+-++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-++index daf61a1..d6ae40b 100644
-+-++--- a/.husky/pre-commit
-+-+++++ b/.husky/pre-commit
-+-++@@ -25 +25 @@ while IFS= read -r file; do
-+-++-  # Extract only the changed line numbers for the file
-+-+++  # Extract only the added or modified lines for .cls and .lwc files
-+-++@@ -32 +32 @@ while IFS= read -r file; do
-+-++-  ' changes.diff)
-+-+++  ' changes.diff | uniq)
-+-++@@ -61 +61 @@ while IFS= read -r file; do
-+-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+-++diff --git a/changes.diff b/changes.diff
-+-++new file mode 100644
-+-++index 0000000..47b6c1c
-+-++--- /dev/null
-+-+++++ b/changes.diff
-+-++@@ -0,0 +1,1078 @@
-+-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-+++index daf61a1..d6ae40b 100644
-+-+++--- a/.husky/pre-commit
-+-++++++ b/.husky/pre-commit
-+-+++@@ -25 +25 @@ while IFS= read -r file; do
-+-+++-  # Extract only the changed line numbers for the file
-+-++++  # Extract only the added or modified lines for .cls and .lwc files
-+-+++@@ -32 +32 @@ while IFS= read -r file; do
-+-+++-  ' changes.diff)
-+-++++  ' changes.diff | uniq)
-+-+++@@ -61 +61 @@ while IFS= read -r file; do
-+-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+-+++diff --git a/changes.diff b/changes.diff
-+-+++new file mode 100644
-+-+++index 0000000..8cd4f1a
-+-+++--- /dev/null
-+-++++++ b/changes.diff
-+-+++@@ -0,0 +1,977 @@
-+-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-++++index daf61a1..73bb862 100644
-+-++++--- a/.husky/pre-commit
-+-+++++++ b/.husky/pre-commit
-+-++++@@ -61 +61 @@ while IFS= read -r file; do
-+-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+-++++diff --git a/changes.diff b/changes.diff
-+-++++new file mode 100644
-+-++++index 0000000..f9d24dc
-+-++++--- /dev/null
-+-+++++++ b/changes.diff
-+-++++@@ -0,0 +1,876 @@
-+-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-+++++index 19cfdbc..daf61a1 100644
-+-+++++--- a/.husky/pre-commit
-+-++++++++ b/.husky/pre-commit
-+-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
-+-+++++-  # Define the output path for the scanner report in CSV format
-+-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+-++++++  # Extract only the changed line numbers for the file
-+-++++++  line_numbers=$(awk -v file="$file" '
-+-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
-+-++++++    /^diff --git/ {inside=0}
-+-++++++    $0 ~ file {inside=1}
-+-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
-+-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
-+-++++++  ' changes.diff)
-+-++++++
-+-++++++  # If no changed lines are found for this file, skip it
-+-++++++  if [ -z "$line_numbers" ]; then
-+-++++++    echo "No changed lines found in $file"
-+-++++++    continue
-+-++++++  fi
-+-++++++
-+-++++++  # Convert the line numbers to a JSON array format for jq filtering
-+-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
-+-++++++
-+-++++++  echo "Changed lines for $file: $line_numbers_array"
-+-++++++
-+-++++++  # Define the output path for the scanner report in JSON format
-+-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
-+-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
-+-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
-+-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
-+-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
-+-+++++-  echo "Filtering scanner report for $file for Line '70'..."
-+-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
-+-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
-+-++++++  jq --argjson lines "$line_numbers_array" '
-+-++++++    [.[] | 
-+-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+-++++++      select(.violations | length > 0)]
-+-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
-+-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+-+++++-    echo "No issues found for line '70' in $file"
-+-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+-++++++    echo "No issues found for changed lines in $file"
-+-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
-+-+++++-  echo "Filtered scanner report for $file (Line '70'):"
-+-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-++++++  echo "Filtered scanner report for $file (Changed lines):"
-+-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++@@ -53 +77 @@ done <<< "$changed_files"
-+-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
-+-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
-+-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
-+-+++++@@ -60,2 +84,2 @@ fi
-+-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
-+-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
-+-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
-+-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+-+++++-echo "Final filtered scanner report (Line '70'):"
-+-++++++echo "Final filtered scanner report (Changed lines):"
-+-+++++@@ -67 +91 @@ cat "$final_report"
-+-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
-+-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
-+-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
-+-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
-+-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
-+-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
-+-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
-+-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
-+-+++++@@ -77 +101 @@ else
-+-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
-+-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
-+-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+-+++++deleted file mode 100644
-+-+++++index 9d692ac..0000000
-+-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-+-++++++++ /dev/null
-+-+++++@@ -1,24 +0,0 @@
-+-+++++-0
-+-+++++-1
-+-+++++-2
-+-+++++-3
-+-+++++-4
-+-+++++-5
-+-+++++-60
-+-+++++-642
-+-+++++-643
-+-+++++-644
-+-+++++-645
-+-+++++-646
-+-+++++-647
-+-+++++-648
-+-+++++-649
-+-+++++-650
-+-+++++-651
-+-+++++-652
-+-+++++-653
-+-+++++-654
-+-+++++-655
-+-+++++-656
-+-+++++-657
-+-+++++-70
-+-+++++diff --git a/changes.diff b/changes.diff
-+-+++++deleted file mode 100644
-+-+++++index 61d162d..0000000
-+-+++++--- a/changes.diff
-+-++++++++ /dev/null
-+-+++++@@ -1,647 +0,0 @@
-+-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-+++++-index 5b262e4..8c05f52 100644
-+-+++++---- a/.husky/pre-commit
-+-+++++-+++ b/.husky/pre-commit
-+-+++++-@@ -113 +113 @@ cat "$final_report"
-+-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-+-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
-+-+++++-diff --git a/changes.diff b/changes.diff
-+-+++++-index 9a218e6..4fe1995 100644
-+-+++++---- a/changes.diff
-+-+++++-+++ b/changes.diff
-+-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-+++++--index aa6762f..586962b 100644
-+-+++++-+index 586962b..5b262e4 100644
-+-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
-+-+++++--@@ -41 +41 @@ while IFS= read -r file; do
-+-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-+-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
-+-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
-+-+++++---  # Extract line numbers as a comma-separated string for filtering later
-+-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-+-+++++--+  # Extract line numbers as an array for filtering later
-+-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-+-+++++--@@ -66 +66 @@ while IFS= read -r file; do
-+-+++++---  if [ -z "$line_numbers" ]; then
-+-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
-+-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
-+-+++++--+  # Convert the array of line numbers into a format that can be used by awk
-+-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-+-+++++--+  lines_for_filter="${lines_for_filter:1}"
-+-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
-+-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
-+-+++++-+-  awk -v file="$file" '
-+-+++++-++  # Extract only the changed line numbers for the file
-+-+++++-++  line_numbers=$(awk -v file="$file" '
-+-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
-+-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
-+-+++++-++  ' changes.diff)
-+-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
-+-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
-+-+++++-++  if [ -z "$line_numbers" ]; then
-+-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
-+-+++++-+-  # Extract line numbers as an array for filtering later
-+-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-+-+++++-++  # Convert the line numbers to a comma-separated string for matching
-+-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
-+-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
-+-+++++--@@ -73 +77 @@ while IFS= read -r file; do
-+-+++++---  awk -v lines="$line_numbers" '
-+-+++++--+  awk -v lines="$lines_for_filter" '
-+-+++++--@@ -81 +85 @@ while IFS= read -r file; do
-+-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-+-+++++--@@ -111 +115 @@ cat "$final_report"
-+-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-+-+++++-++  echo "Changed lines for $file: $line_numbers_string"
-+-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
-+-+++++-+-  # Ensure that line_numbers is not empty
-+-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
-+-+++++-++  # Ensure that line_numbers_string is not empty
-+-+++++-++  if [ -z "$line_numbers_string" ]; then
-+-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
-+-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
-+-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-+-+++++-+-  lines_for_filter="${lines_for_filter:1}"
-+-+++++-+-
-+-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
-+-+++++-+-  awk -v lines="$lines_for_filter" '
-+-+++++-++  awk -v lines="$line_numbers_string" '
-+-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-+-+++++--index 0e43eee..a206584 100644
-+-+++++-+index a206584..9d692ac 100644
-+-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
-+-+++++--@@ -1 +1,6 @@
-+-+++++---70 :           System.debug('Hi Hello');
-+-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-+++++--+1 : index 1ec7a54..870d508 100644
-+-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
-+-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-+++++--+4 : -          System.debug('Hi');
-+-+++++--+70 :           System.debug('Hi');
-+-+++++-+@@ -1,6 +1,24 @@
-+-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-+++++-+-1 : index 1ec7a54..870d508 100644
-+-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
-+-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-+++++-+-4 : -          System.debug('Hi');
-+-+++++-+-70 :           System.debug('Hi');
-+-+++++-++0
-+-+++++-++1
-+-+++++-++2
-+-+++++-++3
-+-+++++-++4
-+-+++++-++5
-+-+++++-++60
-+-+++++-++642
-+-+++++-++643
-+-+++++-++644
-+-+++++-++645
-+-+++++-++646
-+-+++++-++647
-+-+++++-++648
-+-+++++-++649
-+-+++++-++650
-+-+++++-++651
-+-+++++-++652
-+-+++++-++653
-+-+++++-++654
-+-+++++-++655
-+-+++++-++656
-+-+++++-++657
-+-+++++-++70
-+-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
-+-+++++--index 760971b..3dfa538 100644
-+-+++++-+index 3dfa538..9a218e6 100644
-+-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
-+-+++++---index 255a037..525d43a 100644
-+-+++++--+index 525d43a..aa6762f 100644
-+-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-+-+++++---@@ -50 +50 @@ while IFS= read -r file; do
-+-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
-+-+++++---+  # Extract line numbers as a comma-separated string for filtering later
-+-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+-+++++----  # Define the output path for the scanner report
-+-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+-+++++---+  # Define the output path for the scanner report in CSV format
-+-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+-+++++----  # Run the SFDX scanner on the file and generate the report
-+-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
-+-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+-+++++---@@ -71 +71 @@ while IFS= read -r file; do
-+-+++++----  # Filter the scanner report based on the changed line numbers
-+-+++++---+  # Filter the CSV scanner report based on the changed line numbers
-+-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+-+++++----  jq --arg lines "$line_numbers" '
-+-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++---+  awk -v lines="$line_numbers" '
-+-+++++---+  BEGIN {
-+-+++++---+    FS=OFS=",";
-+-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
-+-+++++---+    for (i in arr) {
-+-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+-+++++---+    }
-+-+++++---+  }
-+-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-+++++---@@ -78 +85 @@ while IFS= read -r file; do
-+-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+-+++++---@@ -84 +91 @@ while IFS= read -r file; do
-+-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-+++++---@@ -89 +96 @@ done <<< "$changed_files"
-+-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+-+++++---@@ -95,2 +102,4 @@ fi
-+-+++++----# Combine all filtered reports into one final report
-+-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+-+++++---+# Combine all filtered reports into one final report (optional)
-+-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
-+-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+-+++++----# Parse the final filtered scanner report and check for severity 3 issues
-+-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+-+++++---+echo "Final filtered scanner report:"
-+-+++++---+cat "$final_report"
-+-+++++---+
-+-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
-+-+++++--+-    FS=OFS=",";
-+-+++++--++    FS=OFS=",";  # Define CSV format
-+-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
-+-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+-+++++--+@@ -111 +111 @@ cat "$final_report"
-+-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+-+++++--+new file mode 100644
-+-+++++--+index 0000000..0e43eee
-+-+++++--+--- /dev/null
-+-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+-+++++--+@@ -0,0 +1 @@
-+-+++++--++70 :           System.debug('Hi Hello');
-+-+++++--+diff --git a/changes.diff b/changes.diff
-+-+++++--+new file mode 100644
-+-+++++--+index 0000000..760971b
-+-+++++--+--- /dev/null
-+-+++++--++++ b/changes.diff
-+-+++++--+@@ -0,0 +1,65 @@
-+-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-+++++--++index 255a037..525d43a 100644
-+-+++++--++--- a/.husky/pre-commit
-+-+++++--+++++ b/.husky/pre-commit
-+-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
-+-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
-+-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
-+-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+-+++++--++-  # Define the output path for the scanner report
-+-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+-+++++--+++  # Define the output path for the scanner report in CSV format
-+-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+-+++++--++-  # Run the SFDX scanner on the file and generate the report
-+-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
-+-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
-+-+++++--++-  # Filter the scanner report based on the changed line numbers
-+-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
-+-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+-+++++--++-  jq --arg lines "$line_numbers" '
-+-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++--+++  awk -v lines="$line_numbers" '
-+-+++++--+++  BEGIN {
-+-+++++--+++    FS=OFS=",";
-+-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
-+-+++++--+++    for (i in arr) {
-+-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+-+++++--+++    }
-+-+++++--+++  }
-+-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
-+-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
-+-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
-+-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+-+++++--++@@ -95,2 +102,4 @@ fi
-+-+++++--++-# Combine all filtered reports into one final report
-+-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+-+++++--+++# Combine all filtered reports into one final report (optional)
-+-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
-+-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
-+-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+-+++++--+++echo "Final filtered scanner report:"
-+-+++++--+++cat "$final_report"
-+-+++++--+++
-+-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-+++++--++index 1ec7a54..870d508 100644
-+-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
-+-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
-+-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-+++++--++-          System.debug('Hi');
-+-+++++--+++          System.debug('Hi Hello');
-+-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+-+++++---index 1ec7a54..870d508 100644
-+-+++++--+index 870d508..1ec7a54 100644
-+-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-+-+++++----          System.debug('Hi');
-+-+++++---+          System.debug('Hi Hello');
-+-+++++--+-          System.debug('Hi Hello');
-+-+++++--++          System.debug('Hi');
-+-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+-+++++--+new file mode 100644
-+-+++++--+index 0000000..5a3a1ac
-+-+++++--+--- /dev/null
-+-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+-+++++--+@@ -0,0 +1 @@
-+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+-+++++--+new file mode 100644
-+-+++++--+index 0000000..5a3a1ac
-+-+++++--+--- /dev/null
-+-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
-+-+++++--+@@ -0,0 +1 @@
-+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+-+++++--+new file mode 100644
-+-+++++--+index 0000000..e1ef0f0
-+-+++++--+--- /dev/null
-+-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+-+++++--+@@ -0,0 +1,5 @@
-+-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+-+++++-+-index 525d43a..aa6762f 100644
-+-+++++-++index aa6762f..586962b 100644
-+-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
-+-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
-+-+++++-+--    FS=OFS=",";
-+-+++++-+-+    FS=OFS=",";  # Define CSV format
-+-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
-+-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+-+++++-+-@@ -111 +111 @@ cat "$final_report"
-+-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
-+-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-+-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
-+-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
-+-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
-+-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-+-+++++-+++  # Extract line numbers as an array for filtering later
-+-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-+-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
-+-+++++-++-  if [ -z "$line_numbers" ]; then
-+-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
-+-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
-+-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
-+-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-+-+++++-+++  lines_for_filter="${lines_for_filter:1}"
-+-+++++-+++
-+-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
-+-+++++-++-  awk -v lines="$line_numbers" '
-+-+++++-+++  awk -v lines="$lines_for_filter" '
-+-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
-+-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-+-+++++-++@@ -111 +115 @@ cat "$final_report"
-+-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-+-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-+-+++++-+-new file mode 100644
-+-+++++-+-index 0000000..0e43eee
-+-+++++-+---- /dev/null
-+-+++++-++index 0e43eee..a206584 100644
-+-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-+-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
-+-+++++-+-@@ -0,0 +1 @@
-+-+++++-+-+70 :           System.debug('Hi Hello');
-+-+++++-++@@ -1 +1,6 @@
-+-+++++-++-70 :           System.debug('Hi Hello');
-+-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-+++++-+++1 : index 1ec7a54..870d508 100644
-+-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
-+-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-+++++-+++4 : -          System.debug('Hi');
-+-+++++-+++70 :           System.debug('Hi');
-+-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
-+-+++++-+-new file mode 100644
-+-+++++-+-index 0000000..760971b
-+-+++++-+---- /dev/null
-+-+++++-++index 760971b..3dfa538 100644
-+-+++++-++--- a/changes.diff
-+-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
-+-+++++-+-@@ -0,0 +1,65 @@
-+-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-+++++-+-+index 255a037..525d43a 100644
-+-+++++-+-+--- a/.husky/pre-commit
-+-+++++-+-++++ b/.husky/pre-commit
-+-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
-+-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
-+-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
-+-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+-+++++-+-+-  # Define the output path for the scanner report
-+-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+-+++++-+-++  # Define the output path for the scanner report in CSV format
-+-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
-+-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
-+-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
-+-+++++-+-+-  # Filter the scanner report based on the changed line numbers
-+-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
-+-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+-+++++-+-+-  jq --arg lines "$line_numbers" '
-+-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++-+-++  awk -v lines="$line_numbers" '
-+-+++++-+-++  BEGIN {
-+-+++++-+-++    FS=OFS=",";
-+-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
-+-+++++-+-++    for (i in arr) {
-+-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+-+++++-+-++    }
-+-+++++-+-++  }
-+-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
-+-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
-+-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
-+-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+-+++++-+-+@@ -95,2 +102,4 @@ fi
-+-+++++-+-+-# Combine all filtered reports into one final report
-+-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+-+++++-+-++# Combine all filtered reports into one final report (optional)
-+-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
-+-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
-+-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+-+++++-+-++echo "Final filtered scanner report:"
-+-+++++-+-++cat "$final_report"
-+-+++++-+-++
-+-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-+++++-+-+index 1ec7a54..870d508 100644
-+-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
-+-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
-+-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-+++++-+-+-          System.debug('Hi');
-+-+++++-+-++          System.debug('Hi Hello');
-+-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-+++++-++-index 255a037..525d43a 100644
-+-+++++-+++index 525d43a..aa6762f 100644
-+-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-+-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
-+-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
-+-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
-+-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+-+++++-++--  # Define the output path for the scanner report
-+-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+-+++++-++-+  # Define the output path for the scanner report in CSV format
-+-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+-+++++-++--  # Run the SFDX scanner on the file and generate the report
-+-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
-+-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
-+-+++++-++--  # Filter the scanner report based on the changed line numbers
-+-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
-+-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+-+++++-++--  jq --arg lines "$line_numbers" '
-+-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++-++-+  awk -v lines="$line_numbers" '
-+-+++++-++-+  BEGIN {
-+-+++++-++-+    FS=OFS=",";
-+-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
-+-+++++-++-+    for (i in arr) {
-+-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+-+++++-++-+    }
-+-+++++-++-+  }
-+-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
-+-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
-+-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
-+-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+-+++++-++-@@ -95,2 +102,4 @@ fi
-+-+++++-++--# Combine all filtered reports into one final report
-+-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+-+++++-++-+# Combine all filtered reports into one final report (optional)
-+-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
-+-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
-+-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+-+++++-++-+echo "Final filtered scanner report:"
-+-+++++-++-+cat "$final_report"
-+-+++++-++-+
-+-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
-+-+++++-+++-    FS=OFS=",";
-+-+++++-++++    FS=OFS=",";  # Define CSV format
-+-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
-+-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+-+++++-+++@@ -111 +111 @@ cat "$final_report"
-+-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+-+++++-+++new file mode 100644
-+-+++++-+++index 0000000..0e43eee
-+-+++++-+++--- /dev/null
-+-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+-+++++-+++@@ -0,0 +1 @@
-+-+++++-++++70 :           System.debug('Hi Hello');
-+-+++++-+++diff --git a/changes.diff b/changes.diff
-+-+++++-+++new file mode 100644
-+-+++++-+++index 0000000..760971b
-+-+++++-+++--- /dev/null
-+-+++++-++++++ b/changes.diff
-+-+++++-+++@@ -0,0 +1,65 @@
-+-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+-+++++-++++index 255a037..525d43a 100644
-+-+++++-++++--- a/.husky/pre-commit
-+-+++++-+++++++ b/.husky/pre-commit
-+-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
-+-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
-+-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
-+-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+-+++++-++++-  # Define the output path for the scanner report
-+-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+-+++++-+++++  # Define the output path for the scanner report in CSV format
-+-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+-+++++-++++-  # Run the SFDX scanner on the file and generate the report
-+-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
-+-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
-+-+++++-++++-  # Filter the scanner report based on the changed line numbers
-+-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
-+-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+-+++++-++++-  jq --arg lines "$line_numbers" '
-+-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++-+++++  awk -v lines="$line_numbers" '
-+-+++++-+++++  BEGIN {
-+-+++++-+++++    FS=OFS=",";
-+-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
-+-+++++-+++++    for (i in arr) {
-+-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+-+++++-+++++    }
-+-+++++-+++++  }
-+-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
-+-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
-+-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
-+-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+-+++++-++++@@ -95,2 +102,4 @@ fi
-+-+++++-++++-# Combine all filtered reports into one final report
-+-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+-+++++-+++++# Combine all filtered reports into one final report (optional)
-+-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
-+-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
-+-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+-+++++-+++++echo "Final filtered scanner report:"
-+-+++++-+++++cat "$final_report"
-+-+++++-+++++
-+-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-+++++-++++index 1ec7a54..870d508 100644
-+-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
-+-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
-+-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-+++++-++++-          System.debug('Hi');
-+-+++++-+++++          System.debug('Hi Hello');
-+-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+-+++++-++-index 1ec7a54..870d508 100644
-+-+++++-+++index 870d508..1ec7a54 100644
-+-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-+-+++++-++--          System.debug('Hi');
-+-+++++-++-+          System.debug('Hi Hello');
-+-+++++-+++-          System.debug('Hi Hello');
-+-+++++-++++          System.debug('Hi');
-+-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+-+++++-+++new file mode 100644
-+-+++++-+++index 0000000..5a3a1ac
-+-+++++-+++--- /dev/null
-+-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+-+++++-+++@@ -0,0 +1 @@
-+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+-+++++-+++new file mode 100644
-+-+++++-+++index 0000000..5a3a1ac
-+-+++++-+++--- /dev/null
-+-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
-+-+++++-+++@@ -0,0 +1 @@
-+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+-+++++-+++new file mode 100644
-+-+++++-+++index 0000000..e1ef0f0
-+-+++++-+++--- /dev/null
-+-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+-+++++-+++@@ -0,0 +1,5 @@
-+-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+-+++++-+-index 870d508..1ec7a54 100644
-+-+++++-++index 1ec7a54..870d508 100644
-+-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
-+-+++++-+--          System.debug('Hi Hello');
-+-+++++-+-+          System.debug('Hi');
-+-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+-+++++-+-new file mode 100644
-+-+++++-+-index 0000000..5a3a1ac
-+-+++++-+---- /dev/null
-+-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+-+++++-+-@@ -0,0 +1 @@
-+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+-+++++-+-new file mode 100644
-+-+++++-+-index 0000000..5a3a1ac
-+-+++++-+---- /dev/null
-+-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
-+-+++++-+-@@ -0,0 +1 @@
-+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+-+++++-+-new file mode 100644
-+-+++++-+-index 0000000..e1ef0f0
-+-+++++-+---- /dev/null
-+-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+-+++++-+-@@ -0,0 +1,5 @@
-+-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+-+++++-++-          System.debug('Hi');
-+-+++++-+++          System.debug('Hi Hello');
-+-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+-+++++--index 1ec7a54..870d508 100644
-+-+++++-+index 870d508..5eafcac 100644
-+-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
-+-+++++---          System.debug('Hi');
-+-+++++--+          System.debug('Hi Hello');
-+-+++++-+-          System.debug('Hi Hello');
-+-+++++-++          System.debug('Happy');
-+-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-+++++-index 5eafcac..1ec7a54 100644
-+-+++++---- a/force-app/main/default/classes/Account_Insert.cls
-+-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
-+-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-+++++--          System.debug('Happy');
-+-+++++-+          System.debug('Hi');
-+-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-+++++index 73696e2..9e21e88 100644
-+-+++++--- a/force-app/main/default/classes/Account_Insert.cls
-+-++++++++ b/force-app/main/default/classes/Account_Insert.cls
-+-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-+++++-          System.debug('Hello and Hi');
-+-++++++          System.debug('Hi AND');
-+-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+-+++++deleted file mode 100644
-+-+++++index 5a3a1ac..0000000
-+-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+-++++++++ /dev/null
-+-+++++@@ -1 +0,0 @@
-+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+-+++++new file mode 100644
-+-+++++index 0000000..ebc3aa5
-+-+++++--- /dev/null
-+-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+-+++++@@ -0,0 +1,30 @@
-+-++++++[
-+-++++++  {
-+-++++++    "engine": "pmd",
-+-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+-++++++    "violations": [
-+-++++++      {
-+-++++++        "line": 70,
-+-++++++        "column": 11,
-+-++++++        "endLine": 70,
-+-++++++        "endColumn": 29,
-+-++++++        "severity": 3,
-+-++++++        "ruleName": "AvoidDebugStatements",
-+-++++++        "category": "Performance",
-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+-++++++      },
-+-++++++      {
-+-++++++        "line": 70,
-+-++++++        "column": 11,
-+-++++++        "endLine": 70,
-+-++++++        "endColumn": 29,
-+-++++++        "severity": 3,
-+-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+-++++++        "category": "Best Practices",
-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+-++++++      }
-+-++++++    ]
-+-++++++  }
-+-++++++]
-+-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+-+++++deleted file mode 100644
-+-+++++index 5a3a1ac..0000000
-+-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
-+-++++++++ /dev/null
-+-+++++@@ -1 +0,0 @@
-+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-+-+++++new file mode 100644
-+-+++++index 0000000..ebc3aa5
-+-+++++--- /dev/null
-+-++++++++ b/scanner-reports/final-filtered-scanner-report.json
-+-+++++@@ -0,0 +1,30 @@
-+-++++++[
-+-++++++  {
-+-++++++    "engine": "pmd",
-+-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+-++++++    "violations": [
-+-++++++      {
-+-++++++        "line": 70,
-+-++++++        "column": 11,
-+-++++++        "endLine": 70,
-+-++++++        "endColumn": 29,
-+-++++++        "severity": 3,
-+-++++++        "ruleName": "AvoidDebugStatements",
-+-++++++        "category": "Performance",
-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+-++++++      },
-+-++++++      {
-+-++++++        "line": 70,
-+-++++++        "column": 11,
-+-++++++        "endLine": 70,
-+-++++++        "endColumn": 29,
-+-++++++        "severity": 3,
-+-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+-++++++        "category": "Best Practices",
-+-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+-++++++      }
-+-++++++    ]
-+-++++++  }
-+-++++++]
-+-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+-+++++deleted file mode 100644
-+-+++++index e1ef0f0..0000000
-+-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
-+-++++++++ /dev/null
-+-+++++@@ -1,5 +0,0 @@
-+-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-+-+++++new file mode 100644
-+-+++++index 0000000..c973918
-+-+++++--- /dev/null
-+-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-+-+++++@@ -0,0 +1 @@
-+-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+-+++++\ No newline at end of file
-+-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-++++index 9e21e88..800635e 100644
-+-++++--- a/force-app/main/default/classes/Account_Insert.cls
-+-+++++++ b/force-app/main/default/classes/Account_Insert.cls
-+-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-++++-          System.debug('Hi AND');
-+-+++++          System.debug('Hi AND Hello');
-+-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+-++++index ebc3aa5..fe51488 100644
-+-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+-++++@@ -1,30 +1 @@
-+-++++-[
-+-++++-  {
-+-++++-    "engine": "pmd",
-+-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+-++++-    "violations": [
-+-++++-      {
-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-index daf61a1..3603bae 100644
-+++index 1328704..8004c80 100644
-++@@ -5,12 +5,9 @@ index daf61a1..3603bae 100644
-++-@@ -16 +16 @@ mkdir -p scanner-reports
-++--git diff --unified=0 --cached > changes.diff
-++-+git diff --cached --unified=0 > changes.diff
-++-@@ -25 +25 @@ while IFS= read -r file; do
-++--  # Extract only the changed line numbers for the file
-++-+  # Extract only the added or modified lines for .cls and .lwc files
-++-@@ -32 +32 @@ while IFS= read -r file; do
-++--  ' changes.diff)
-++-+  ' changes.diff | uniq)
-++-@@ -61 +61 @@ while IFS= read -r file; do
-++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+++@@ -29,4 +29,4 @@ while IFS= read -r file; do
-+++-    $0 ~ file {inside=1}
-+++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
-+++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
-+++-  ' changes.diff | uniq)
-++++    $0 ~ file {inside=1}  # Start processing when the correct file section starts
-++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}  # Process the line number changes in git diff
-++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}  # Print only the added or modified lines, excluding unchanged or deleted ones
-++++  ' changes.diff | sort -n | uniq)
-++@@ -18,3 +15,2 @@ diff --git a/changes.diff b/changes.diff
-++-new file mode 100644
-++-index 0000000..a6452b3
-++---- /dev/null
-+++index 1f4c0b2..6a026dd 100644
-+++--- a/changes.diff
-++@@ -22,1073 +18,4567 @@ index 0000000..a6452b3
-++-@@ -0,0 +1,1262 @@
-++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-+index daf61a1..3603bae 100644
-++-+--- a/.husky/pre-commit
-++-++++ b/.husky/pre-commit
-++-+@@ -16 +16 @@ mkdir -p scanner-reports
-++-+-git diff --unified=0 --cached > changes.diff
-++-++git diff --cached --unified=0 > changes.diff
-++-+@@ -25 +25 @@ while IFS= read -r file; do
-++-+-  # Extract only the changed line numbers for the file
-++-++  # Extract only the added or modified lines for .cls and .lwc files
-++-+@@ -32 +32 @@ while IFS= read -r file; do
-++-+-  ' changes.diff)
-++-++  ' changes.diff | uniq)
-++-+@@ -61 +61 @@ while IFS= read -r file; do
-++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-++-+diff --git a/changes.diff b/changes.diff
-++-+new file mode 100644
-++-+index 0000000..1831031
-++-+--- /dev/null
-++-++++ b/changes.diff
-++-+@@ -0,0 +1,1158 @@
-++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-++index daf61a1..d6ae40b 100644
-++-++--- a/.husky/pre-commit
-++-+++++ b/.husky/pre-commit
-++-++@@ -25 +25 @@ while IFS= read -r file; do
-++-++-  # Extract only the changed line numbers for the file
-++-+++  # Extract only the added or modified lines for .cls and .lwc files
-++-++@@ -32 +32 @@ while IFS= read -r file; do
-++-++-  ' changes.diff)
-++-+++  ' changes.diff | uniq)
-++-++@@ -61 +61 @@ while IFS= read -r file; do
-++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-++-++diff --git a/changes.diff b/changes.diff
-++-++new file mode 100644
-++-++index 0000000..47b6c1c
-++-++--- /dev/null
-++-+++++ b/changes.diff
-++-++@@ -0,0 +1,1078 @@
-++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-+++index daf61a1..d6ae40b 100644
-++-+++--- a/.husky/pre-commit
-++-++++++ b/.husky/pre-commit
-++-+++@@ -25 +25 @@ while IFS= read -r file; do
-++-+++-  # Extract only the changed line numbers for the file
-++-++++  # Extract only the added or modified lines for .cls and .lwc files
-++-+++@@ -32 +32 @@ while IFS= read -r file; do
-++-+++-  ' changes.diff)
-++-++++  ' changes.diff | uniq)
-++-+++@@ -61 +61 @@ while IFS= read -r file; do
-++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-++-+++diff --git a/changes.diff b/changes.diff
-++-+++new file mode 100644
-++-+++index 0000000..8cd4f1a
-++-+++--- /dev/null
-++-++++++ b/changes.diff
-++-+++@@ -0,0 +1,977 @@
-++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-++++index daf61a1..73bb862 100644
-++-++++--- a/.husky/pre-commit
-++-+++++++ b/.husky/pre-commit
-++-++++@@ -61 +61 @@ while IFS= read -r file; do
-++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-++-++++diff --git a/changes.diff b/changes.diff
-++-++++new file mode 100644
-++-++++index 0000000..f9d24dc
-++-++++--- /dev/null
-++-+++++++ b/changes.diff
-++-++++@@ -0,0 +1,876 @@
-++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-+++++index 19cfdbc..daf61a1 100644
-++-+++++--- a/.husky/pre-commit
-++-++++++++ b/.husky/pre-commit
-++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
-++-+++++-  # Define the output path for the scanner report in CSV format
-++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++-++++++  # Extract only the changed line numbers for the file
-++-++++++  line_numbers=$(awk -v file="$file" '
-++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
-++-++++++    /^diff --git/ {inside=0}
-++-++++++    $0 ~ file {inside=1}
-++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
-++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
-++-++++++  ' changes.diff)
-++-++++++
-++-++++++  # If no changed lines are found for this file, skip it
-++-++++++  if [ -z "$line_numbers" ]; then
-++-++++++    echo "No changed lines found in $file"
-++-++++++    continue
-++-++++++  fi
-++-++++++
-++-++++++  # Convert the line numbers to a JSON array format for jq filtering
-++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
-++-++++++
-++-++++++  echo "Changed lines for $file: $line_numbers_array"
-++-++++++
-++-++++++  # Define the output path for the scanner report in JSON format
-++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
-++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
-++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
-++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
-++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
-++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
-++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
-++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
-++-++++++  jq --argjson lines "$line_numbers_array" '
-++-++++++    [.[] | 
-++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++-++++++      select(.violations | length > 0)]
-++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
-++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++-+++++-    echo "No issues found for line '70' in $file"
-++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++-++++++    echo "No issues found for changed lines in $file"
-++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
-++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
-++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-++++++  echo "Filtered scanner report for $file (Changed lines):"
-++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++@@ -53 +77 @@ done <<< "$changed_files"
-++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
-++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
-++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
-++-+++++@@ -60,2 +84,2 @@ fi
-++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
-++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
-++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
-++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++-+++++-echo "Final filtered scanner report (Line '70'):"
-++-++++++echo "Final filtered scanner report (Changed lines):"
-++-+++++@@ -67 +91 @@ cat "$final_report"
-++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
-++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
-++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
-++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
-++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
-++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
-++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
-++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
-++-+++++@@ -77 +101 @@ else
-++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
-++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
-++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++-+++++deleted file mode 100644
-++-+++++index 9d692ac..0000000
-++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-++-++++++++ /dev/null
-++-+++++@@ -1,24 +0,0 @@
-++-+++++-0
-++-+++++-1
-++-+++++-2
-++-+++++-3
-++-+++++-4
-++-+++++-5
-++-+++++-60
-++-+++++-642
-++-+++++-643
-++-+++++-644
-++-+++++-645
-++-+++++-646
-++-+++++-647
-++-+++++-648
-++-+++++-649
-++-+++++-650
-++-+++++-651
-++-+++++-652
-++-+++++-653
-++-+++++-654
-++-+++++-655
-++-+++++-656
-++-+++++-657
-++-+++++-70
-++-+++++diff --git a/changes.diff b/changes.diff
-++-+++++deleted file mode 100644
-++-+++++index 61d162d..0000000
-++-+++++--- a/changes.diff
-++-++++++++ /dev/null
-++-+++++@@ -1,647 +0,0 @@
-++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-+++++-index 5b262e4..8c05f52 100644
-++-+++++---- a/.husky/pre-commit
-++-+++++-+++ b/.husky/pre-commit
-++-+++++-@@ -113 +113 @@ cat "$final_report"
-++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
-++-+++++-diff --git a/changes.diff b/changes.diff
-++-+++++-index 9a218e6..4fe1995 100644
-++-+++++---- a/changes.diff
-++-+++++-+++ b/changes.diff
-++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-+++++--index aa6762f..586962b 100644
-++-+++++-+index 586962b..5b262e4 100644
-++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
-++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
-++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
-++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
-++-+++++---  # Extract line numbers as a comma-separated string for filtering later
-++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-++-+++++--+  # Extract line numbers as an array for filtering later
-++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
-++-+++++---  if [ -z "$line_numbers" ]; then
-++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
-++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
-++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
-++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-++-+++++--+  lines_for_filter="${lines_for_filter:1}"
-++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
-++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
-++-+++++-+-  awk -v file="$file" '
-++-+++++-++  # Extract only the changed line numbers for the file
-++-+++++-++  line_numbers=$(awk -v file="$file" '
-++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
-++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
-++-+++++-++  ' changes.diff)
-++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
-++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
-++-+++++-++  if [ -z "$line_numbers" ]; then
-++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
-++-+++++-+-  # Extract line numbers as an array for filtering later
-++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-++-+++++-++  # Convert the line numbers to a comma-separated string for matching
-++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
-++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
-++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
-++-+++++---  awk -v lines="$line_numbers" '
-++-+++++--+  awk -v lines="$lines_for_filter" '
-++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
-++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-++-+++++--@@ -111 +115 @@ cat "$final_report"
-++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
-++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
-++-+++++-+-  # Ensure that line_numbers is not empty
-++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
-++-+++++-++  # Ensure that line_numbers_string is not empty
-++-+++++-++  if [ -z "$line_numbers_string" ]; then
-++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
-++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
-++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
-++-+++++-+-
-++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
-++-+++++-+-  awk -v lines="$lines_for_filter" '
-++-+++++-++  awk -v lines="$line_numbers_string" '
-++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-++-+++++--index 0e43eee..a206584 100644
-++-+++++-+index a206584..9d692ac 100644
-++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
-++-+++++--@@ -1 +1,6 @@
-++-+++++---70 :           System.debug('Hi Hello');
-++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-+++++--+1 : index 1ec7a54..870d508 100644
-++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
-++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-+++++--+4 : -          System.debug('Hi');
-++-+++++--+70 :           System.debug('Hi');
-++-+++++-+@@ -1,6 +1,24 @@
-++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-+++++-+-1 : index 1ec7a54..870d508 100644
-++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
-++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-+++++-+-4 : -          System.debug('Hi');
-++-+++++-+-70 :           System.debug('Hi');
-++-+++++-++0
-++-+++++-++1
-++-+++++-++2
-++-+++++-++3
-++-+++++-++4
-++-+++++-++5
-++-+++++-++60
-++-+++++-++642
-++-+++++-++643
-++-+++++-++644
-++-+++++-++645
-++-+++++-++646
-++-+++++-++647
-++-+++++-++648
-++-+++++-++649
-++-+++++-++650
-++-+++++-++651
-++-+++++-++652
-++-+++++-++653
-++-+++++-++654
-++-+++++-++655
-++-+++++-++656
-++-+++++-++657
-++-+++++-++70
-++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
-++-+++++--index 760971b..3dfa538 100644
-++-+++++-+index 3dfa538..9a218e6 100644
-++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
-++-+++++---index 255a037..525d43a 100644
-++-+++++--+index 525d43a..aa6762f 100644
-++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
-++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
-++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
-++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++-+++++----  # Define the output path for the scanner report
-++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++-+++++---+  # Define the output path for the scanner report in CSV format
-++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++-+++++----  # Run the SFDX scanner on the file and generate the report
-++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
-++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
-++-+++++----  # Filter the scanner report based on the changed line numbers
-++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
-++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++-+++++----  jq --arg lines "$line_numbers" '
-++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++---+  awk -v lines="$line_numbers" '
-++-+++++---+  BEGIN {
-++-+++++---+    FS=OFS=",";
-++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
-++-+++++---+    for (i in arr) {
-++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++-+++++---+    }
-++-+++++---+  }
-++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
-++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
-++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
-++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++-+++++---@@ -95,2 +102,4 @@ fi
-++-+++++----# Combine all filtered reports into one final report
-++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++-+++++---+# Combine all filtered reports into one final report (optional)
-++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
-++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
-++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++-+++++---+echo "Final filtered scanner report:"
-++-+++++---+cat "$final_report"
-++-+++++---+
-++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
-++-+++++--+-    FS=OFS=",";
-++-+++++--++    FS=OFS=",";  # Define CSV format
-++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
-++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++-+++++--+@@ -111 +111 @@ cat "$final_report"
-++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++-+++++--+new file mode 100644
-++-+++++--+index 0000000..0e43eee
-++-+++++--+--- /dev/null
-++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++-+++++--+@@ -0,0 +1 @@
-++-+++++--++70 :           System.debug('Hi Hello');
-++-+++++--+diff --git a/changes.diff b/changes.diff
-++-+++++--+new file mode 100644
-++-+++++--+index 0000000..760971b
-++-+++++--+--- /dev/null
-++-+++++--++++ b/changes.diff
-++-+++++--+@@ -0,0 +1,65 @@
-++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-+++++--++index 255a037..525d43a 100644
-++-+++++--++--- a/.husky/pre-commit
-++-+++++--+++++ b/.husky/pre-commit
-++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
-++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
-++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
-++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++-+++++--++-  # Define the output path for the scanner report
-++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++-+++++--+++  # Define the output path for the scanner report in CSV format
-++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++-+++++--++-  # Run the SFDX scanner on the file and generate the report
-++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
-++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
-++-+++++--++-  # Filter the scanner report based on the changed line numbers
-++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
-++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++-+++++--++-  jq --arg lines "$line_numbers" '
-++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++--+++  awk -v lines="$line_numbers" '
-++-+++++--+++  BEGIN {
-++-+++++--+++    FS=OFS=",";
-++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
-++-+++++--+++    for (i in arr) {
-++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++-+++++--+++    }
-++-+++++--+++  }
-++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
-++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
-++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
-++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++-+++++--++@@ -95,2 +102,4 @@ fi
-++-+++++--++-# Combine all filtered reports into one final report
-++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++-+++++--+++# Combine all filtered reports into one final report (optional)
-++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
-++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
-++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++-+++++--+++echo "Final filtered scanner report:"
-++-+++++--+++cat "$final_report"
-++-+++++--+++
-++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-+++++--++index 1ec7a54..870d508 100644
-++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
-++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
-++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-+++++--++-          System.debug('Hi');
-++-+++++--+++          System.debug('Hi Hello');
-++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++-+++++---index 1ec7a54..870d508 100644
-++-+++++--+index 870d508..1ec7a54 100644
-++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-++-+++++----          System.debug('Hi');
-++-+++++---+          System.debug('Hi Hello');
-++-+++++--+-          System.debug('Hi Hello');
-++-+++++--++          System.debug('Hi');
-++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++-+++++--+new file mode 100644
-++-+++++--+index 0000000..5a3a1ac
-++-+++++--+--- /dev/null
-++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++-+++++--+@@ -0,0 +1 @@
-++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++-+++++--+new file mode 100644
-++-+++++--+index 0000000..5a3a1ac
-++-+++++--+--- /dev/null
-++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
-++-+++++--+@@ -0,0 +1 @@
-++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++-+++++--+new file mode 100644
-++-+++++--+index 0000000..e1ef0f0
-++-+++++--+--- /dev/null
-++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++-+++++--+@@ -0,0 +1,5 @@
-++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++-+++++-+-index 525d43a..aa6762f 100644
-++-+++++-++index aa6762f..586962b 100644
-++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
-++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
-++-+++++-+--    FS=OFS=",";
-++-+++++-+-+    FS=OFS=",";  # Define CSV format
-++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
-++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++-+++++-+-@@ -111 +111 @@ cat "$final_report"
-++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
-++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
-++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
-++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
-++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-++-+++++-+++  # Extract line numbers as an array for filtering later
-++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
-++-+++++-++-  if [ -z "$line_numbers" ]; then
-++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
-++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
-++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
-++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
-++-+++++-+++
-++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
-++-+++++-++-  awk -v lines="$line_numbers" '
-++-+++++-+++  awk -v lines="$lines_for_filter" '
-++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
-++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-++-+++++-++@@ -111 +115 @@ cat "$final_report"
-++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-++-+++++-+-new file mode 100644
-++-+++++-+-index 0000000..0e43eee
-++-+++++-+---- /dev/null
-++-+++++-++index 0e43eee..a206584 100644
-++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
-++-+++++-+-@@ -0,0 +1 @@
-++-+++++-+-+70 :           System.debug('Hi Hello');
-++-+++++-++@@ -1 +1,6 @@
-++-+++++-++-70 :           System.debug('Hi Hello');
-++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-+++++-+++1 : index 1ec7a54..870d508 100644
-++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
-++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-+++++-+++4 : -          System.debug('Hi');
-++-+++++-+++70 :           System.debug('Hi');
-++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
-++-+++++-+-new file mode 100644
-++-+++++-+-index 0000000..760971b
-++-+++++-+---- /dev/null
-++-+++++-++index 760971b..3dfa538 100644
-++-+++++-++--- a/changes.diff
-++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
-++-+++++-+-@@ -0,0 +1,65 @@
-++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-+++++-+-+index 255a037..525d43a 100644
-++-+++++-+-+--- a/.husky/pre-commit
-++-+++++-+-++++ b/.husky/pre-commit
-++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
-++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
-++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
-++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++-+++++-+-+-  # Define the output path for the scanner report
-++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++-+++++-+-++  # Define the output path for the scanner report in CSV format
-++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
-++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
-++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
-++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
-++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
-++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++-+++++-+-+-  jq --arg lines "$line_numbers" '
-++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++-+-++  awk -v lines="$line_numbers" '
-++-+++++-+-++  BEGIN {
-++-+++++-+-++    FS=OFS=",";
-++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
-++-+++++-+-++    for (i in arr) {
-++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++-+++++-+-++    }
-++-+++++-+-++  }
-++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
-++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
-++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
-++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++-+++++-+-+@@ -95,2 +102,4 @@ fi
-++-+++++-+-+-# Combine all filtered reports into one final report
-++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++-+++++-+-++# Combine all filtered reports into one final report (optional)
-++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
-++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
-++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++-+++++-+-++echo "Final filtered scanner report:"
-++-+++++-+-++cat "$final_report"
-++-+++++-+-++
-++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-+++++-+-+index 1ec7a54..870d508 100644
-++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
-++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
-++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-+++++-+-+-          System.debug('Hi');
-++-+++++-+-++          System.debug('Hi Hello');
-++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-+++++-++-index 255a037..525d43a 100644
-++-+++++-+++index 525d43a..aa6762f 100644
-++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
-++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
-++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
-++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++-+++++-++--  # Define the output path for the scanner report
-++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++-+++++-++-+  # Define the output path for the scanner report in CSV format
-++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++-+++++-++--  # Run the SFDX scanner on the file and generate the report
-++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
-++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
-++-+++++-++--  # Filter the scanner report based on the changed line numbers
-++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
-++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++-+++++-++--  jq --arg lines "$line_numbers" '
-++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++-++-+  awk -v lines="$line_numbers" '
-++-+++++-++-+  BEGIN {
-++-+++++-++-+    FS=OFS=",";
-++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
-++-+++++-++-+    for (i in arr) {
-++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++-+++++-++-+    }
-++-+++++-++-+  }
-++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
-++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
-++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
-++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++-+++++-++-@@ -95,2 +102,4 @@ fi
-++-+++++-++--# Combine all filtered reports into one final report
-++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++-+++++-++-+# Combine all filtered reports into one final report (optional)
-++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
-++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
-++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++-+++++-++-+echo "Final filtered scanner report:"
-++-+++++-++-+cat "$final_report"
-++-+++++-++-+
-++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
-++-+++++-+++-    FS=OFS=",";
-++-+++++-++++    FS=OFS=",";  # Define CSV format
-++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
-++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++-+++++-+++@@ -111 +111 @@ cat "$final_report"
-++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++-+++++-+++new file mode 100644
-++-+++++-+++index 0000000..0e43eee
-++-+++++-+++--- /dev/null
-++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++-+++++-+++@@ -0,0 +1 @@
-++-+++++-++++70 :           System.debug('Hi Hello');
-++-+++++-+++diff --git a/changes.diff b/changes.diff
-++-+++++-+++new file mode 100644
-++-+++++-+++index 0000000..760971b
-++-+++++-+++--- /dev/null
-++-+++++-++++++ b/changes.diff
-++-+++++-+++@@ -0,0 +1,65 @@
-++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++-+++++-++++index 255a037..525d43a 100644
-++-+++++-++++--- a/.husky/pre-commit
-++-+++++-+++++++ b/.husky/pre-commit
-++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
-++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
-++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
-++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++-+++++-++++-  # Define the output path for the scanner report
-++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++-+++++-+++++  # Define the output path for the scanner report in CSV format
-++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
-++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
-++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
-++-+++++-++++-  # Filter the scanner report based on the changed line numbers
-++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
-++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++-+++++-++++-  jq --arg lines "$line_numbers" '
-++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++-+++++  awk -v lines="$line_numbers" '
-++-+++++-+++++  BEGIN {
-++-+++++-+++++    FS=OFS=",";
-++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
-++-+++++-+++++    for (i in arr) {
-++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++-+++++-+++++    }
-++-+++++-+++++  }
-++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
-++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
-++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
-++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++-+++++-++++@@ -95,2 +102,4 @@ fi
-++-+++++-++++-# Combine all filtered reports into one final report
-++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++-+++++-+++++# Combine all filtered reports into one final report (optional)
-++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
-++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
-++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++-+++++-+++++echo "Final filtered scanner report:"
-++-+++++-+++++cat "$final_report"
-++-+++++-+++++
-++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-+++++-++++index 1ec7a54..870d508 100644
-++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
-++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
-++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-+++++-++++-          System.debug('Hi');
-++-+++++-+++++          System.debug('Hi Hello');
-++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++-+++++-++-index 1ec7a54..870d508 100644
-++-+++++-+++index 870d508..1ec7a54 100644
-++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-++-+++++-++--          System.debug('Hi');
-++-+++++-++-+          System.debug('Hi Hello');
-++-+++++-+++-          System.debug('Hi Hello');
-++-+++++-++++          System.debug('Hi');
-++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++-+++++-+++new file mode 100644
-++-+++++-+++index 0000000..5a3a1ac
-++-+++++-+++--- /dev/null
-++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++-+++++-+++@@ -0,0 +1 @@
-++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++-+++++-+++new file mode 100644
-++-+++++-+++index 0000000..5a3a1ac
-++-+++++-+++--- /dev/null
-++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
-++-+++++-+++@@ -0,0 +1 @@
-++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++-+++++-+++new file mode 100644
-++-+++++-+++index 0000000..e1ef0f0
-++-+++++-+++--- /dev/null
-++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++-+++++-+++@@ -0,0 +1,5 @@
-++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++-+++++-+-index 870d508..1ec7a54 100644
-++-+++++-++index 1ec7a54..870d508 100644
-++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
-++-+++++-+--          System.debug('Hi Hello');
-++-+++++-+-+          System.debug('Hi');
-++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++-+++++-+-new file mode 100644
-++-+++++-+-index 0000000..5a3a1ac
-++-+++++-+---- /dev/null
-++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++-+++++-+-@@ -0,0 +1 @@
-++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++-+++++-+-new file mode 100644
-++-+++++-+-index 0000000..5a3a1ac
-++-+++++-+---- /dev/null
-++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
-++-+++++-+-@@ -0,0 +1 @@
-++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++-+++++-+-new file mode 100644
-++-+++++-+-index 0000000..e1ef0f0
-++-+++++-+---- /dev/null
-++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++-+++++-+-@@ -0,0 +1,5 @@
-++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++-+++++-++-          System.debug('Hi');
-++-+++++-+++          System.debug('Hi Hello');
-++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++-+++++--index 1ec7a54..870d508 100644
-++-+++++-+index 870d508..5eafcac 100644
-++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
-++-+++++---          System.debug('Hi');
-++-+++++--+          System.debug('Hi Hello');
-++-+++++-+-          System.debug('Hi Hello');
-++-+++++-++          System.debug('Happy');
-++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-+++++-index 5eafcac..1ec7a54 100644
-++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
-++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
-++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-+++++--          System.debug('Happy');
-++-+++++-+          System.debug('Hi');
-++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-+++++index 73696e2..9e21e88 100644
-++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
-++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
-++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-+++++-          System.debug('Hello and Hi');
-++-++++++          System.debug('Hi AND');
-++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++-+++++deleted file mode 100644
-++-+++++index 5a3a1ac..0000000
-++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++-++++++++ /dev/null
-++-+++++@@ -1 +0,0 @@
-++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++-+++++new file mode 100644
-++-+++++index 0000000..ebc3aa5
-++-+++++--- /dev/null
-++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++-+++++@@ -0,0 +1,30 @@
-++-++++++[
-++-++++++  {
-++-++++++    "engine": "pmd",
-++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-++-++++++    "violations": [
-++-++++++      {
-++-++++++        "line": 70,
-++-++++++        "column": 11,
-++-++++++        "endLine": 70,
-++-++++++        "endColumn": 29,
-++-++++++        "severity": 3,
-++-++++++        "ruleName": "AvoidDebugStatements",
-++-++++++        "category": "Performance",
-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++-++++++      },
-++-++++++      {
-++-++++++        "line": 70,
-++-++++++        "column": 11,
-++-++++++        "endLine": 70,
-++-++++++        "endColumn": 29,
-++-++++++        "severity": 3,
-++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
-++-++++++        "category": "Best Practices",
-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++-++++++      }
-++-++++++    ]
-++-++++++  }
-++-++++++]
-++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++-+++++deleted file mode 100644
-++-+++++index 5a3a1ac..0000000
-++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
-++-++++++++ /dev/null
-++-+++++@@ -1 +0,0 @@
-++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-++-+++++new file mode 100644
-++-+++++index 0000000..ebc3aa5
-++-+++++--- /dev/null
-++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
-++-+++++@@ -0,0 +1,30 @@
-++-++++++[
-++-++++++  {
-++-++++++    "engine": "pmd",
-++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-++-++++++    "violations": [
-++-++++++      {
-++-++++++        "line": 70,
-++-++++++        "column": 11,
-++-++++++        "endLine": 70,
-++-++++++        "endColumn": 29,
-++-++++++        "severity": 3,
-++-++++++        "ruleName": "AvoidDebugStatements",
-++-++++++        "category": "Performance",
-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++-++++++      },
-++-++++++      {
-++-++++++        "line": 70,
-++-++++++        "column": 11,
-++-++++++        "endLine": 70,
-++-++++++        "endColumn": 29,
-++-++++++        "severity": 3,
-++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
-++-++++++        "category": "Best Practices",
-++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++-++++++      }
-++-++++++    ]
-++-++++++  }
-++-++++++]
-++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++-+++++deleted file mode 100644
-++-+++++index e1ef0f0..0000000
-++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
-++-++++++++ /dev/null
-++-+++++@@ -1,5 +0,0 @@
-++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-++-+++++new file mode 100644
-++-+++++index 0000000..c973918
-++-+++++--- /dev/null
-++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-++-+++++@@ -0,0 +1 @@
-++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++-+++++\ No newline at end of file
-++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-++++index 9e21e88..800635e 100644
-++-++++--- a/force-app/main/default/classes/Account_Insert.cls
-++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
-++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-++++-          System.debug('Hi AND');
-++-+++++          System.debug('Hi AND Hello');
-++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++-++++index ebc3aa5..fe51488 100644
-++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++-++++@@ -1,30 +1 @@
-++-++++-[
-++-++++-  {
-++-++++-    "engine": "pmd",
-++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-++-++++-    "violations": [
-++-++++-      {
-++-++++-        "line": 70,
-++-++++-        "column": 11,
-++-++++-        "endLine": 70,
-++-++++-        "endColumn": 29,
-++-++++-        "severity": 3,
-++-++++-        "ruleName": "AvoidDebugStatements",
-++-++++-        "category": "Performance",
-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++-++++-      },
-++-++++-      {
-++-++++-        "line": 70,
-++-++++-        "column": 11,
-++-++++-        "endLine": 70,
-++-++++-        "endColumn": 29,
-++-++++-        "severity": 3,
-++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-++-++++-        "category": "Best Practices",
-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++-++++-      }
-++-++++-    ]
-++-++++-  }
-++-++++-]
-++-+++++[]
-++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-++-++++index ebc3aa5..fe51488 100644
-++-++++--- a/scanner-reports/final-filtered-scanner-report.json
-++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
-++-++++@@ -1,30 +1 @@
-++-++++-[
-++-++++-  {
-++-++++-    "engine": "pmd",
-++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-++-++++-    "violations": [
-++-++++-      {
-++-++++-        "line": 70,
-++-++++-        "column": 11,
-++-++++-        "endLine": 70,
-++-++++-        "endColumn": 29,
-++-++++-        "severity": 3,
-++-++++-        "ruleName": "AvoidDebugStatements",
-++-++++-        "category": "Performance",
-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++-++++-      },
-++-++++-      {
-++-++++-        "line": 70,
-++-++++-        "column": 11,
-++-++++-        "endLine": 70,
-++-++++-        "endColumn": 29,
-++-++++-        "severity": 3,
-++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-++-++++-        "category": "Best Practices",
-++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++-++++-      }
-++-++++-    ]
-++-++++-  }
-++-++++-]
-++-+++++[]
-++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-++-++++index c973918..a14d61d 100644
-++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
-++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-++-++++@@ -1 +1 @@
-++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++-++++\ No newline at end of file
-++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++-++++\ No newline at end of file
-++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-+++index 9e21e88..1ec7a54 100644
-++-+++--- a/force-app/main/default/classes/Account_Insert.cls
-++-++++++ b/force-app/main/default/classes/Account_Insert.cls
-++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-+++-          System.debug('Hi AND');
-++-++++          System.debug('Hi');
-++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++-+++index ebc3aa5..bb2caee 100644
-++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++-+++@@ -5,0 +6,22 @@
-++-++++      {
-++-++++        "line": 20,
-++-++++        "column": 11,
-++-++++        "endLine": 20,
-++-++++        "endColumn": 35,
-++-++++        "severity": 3,
-++-++++        "ruleName": "AvoidDebugStatements",
-++-++++        "category": "Performance",
-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++-++++      },
-++-++++      {
-++-++++        "line": 20,
-++-++++        "column": 11,
-++-++++        "endLine": 20,
-++-++++        "endColumn": 35,
-++-++++        "severity": 3,
-++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
-++-++++        "category": "Best Practices",
-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++-++++      },
-++-+++@@ -10 +32 @@
-+++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-index daf61a1..3603bae 100644
-++++index 1328704..5ea091f 100644
-+++@@ -5,12 +5,5 @@ index daf61a1..3603bae 100644
-+++-@@ -16 +16 @@ mkdir -p scanner-reports
-+++--git diff --unified=0 --cached > changes.diff
-+++-+git diff --cached --unified=0 > changes.diff
-+++-@@ -25 +25 @@ while IFS= read -r file; do
-+++--  # Extract only the changed line numbers for the file
-+++-+  # Extract only the added or modified lines for .cls and .lwc files
-+++-@@ -32 +32 @@ while IFS= read -r file; do
-+++--  ' changes.diff)
-+++-+  ' changes.diff | uniq)
-+++-@@ -61 +61 @@ while IFS= read -r file; do
-+++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-++++@@ -30,2 +30,2 @@ while IFS= read -r file; do
-++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
-++++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
-+++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
-+++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}
-+++@@ -18,3 +11,2 @@ diff --git a/changes.diff b/changes.diff
-+++-new file mode 100644
-+++-index 0000000..a6452b3
-+++---- /dev/null
-++++index 1f4c0b2..4035686 100644
-++++--- a/changes.diff
-+++@@ -22,1188 +14,3438 @@ index 0000000..a6452b3
-+++-@@ -0,0 +1,1262 @@
-+++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-+index daf61a1..3603bae 100644
-+++-+--- a/.husky/pre-commit
-+++-++++ b/.husky/pre-commit
-+++-+@@ -16 +16 @@ mkdir -p scanner-reports
-+++-+-git diff --unified=0 --cached > changes.diff
-+++-++git diff --cached --unified=0 > changes.diff
-+++-+@@ -25 +25 @@ while IFS= read -r file; do
-+++-+-  # Extract only the changed line numbers for the file
-+++-++  # Extract only the added or modified lines for .cls and .lwc files
-+++-+@@ -32 +32 @@ while IFS= read -r file; do
-+++-+-  ' changes.diff)
-+++-++  ' changes.diff | uniq)
-+++-+@@ -61 +61 @@ while IFS= read -r file; do
-+++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+++-+diff --git a/changes.diff b/changes.diff
-+++-+new file mode 100644
-+++-+index 0000000..1831031
-+++-+--- /dev/null
-+++-++++ b/changes.diff
-+++-+@@ -0,0 +1,1158 @@
-+++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-++index daf61a1..d6ae40b 100644
-+++-++--- a/.husky/pre-commit
-+++-+++++ b/.husky/pre-commit
-+++-++@@ -25 +25 @@ while IFS= read -r file; do
-+++-++-  # Extract only the changed line numbers for the file
-+++-+++  # Extract only the added or modified lines for .cls and .lwc files
-+++-++@@ -32 +32 @@ while IFS= read -r file; do
-+++-++-  ' changes.diff)
-+++-+++  ' changes.diff | uniq)
-+++-++@@ -61 +61 @@ while IFS= read -r file; do
-+++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+++-++diff --git a/changes.diff b/changes.diff
-+++-++new file mode 100644
-+++-++index 0000000..47b6c1c
-+++-++--- /dev/null
-+++-+++++ b/changes.diff
-+++-++@@ -0,0 +1,1078 @@
-+++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-+++index daf61a1..d6ae40b 100644
-+++-+++--- a/.husky/pre-commit
-+++-++++++ b/.husky/pre-commit
-+++-+++@@ -25 +25 @@ while IFS= read -r file; do
-+++-+++-  # Extract only the changed line numbers for the file
-+++-++++  # Extract only the added or modified lines for .cls and .lwc files
-+++-+++@@ -32 +32 @@ while IFS= read -r file; do
-+++-+++-  ' changes.diff)
-+++-++++  ' changes.diff | uniq)
-+++-+++@@ -61 +61 @@ while IFS= read -r file; do
-+++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+++-+++diff --git a/changes.diff b/changes.diff
-+++-+++new file mode 100644
-+++-+++index 0000000..8cd4f1a
-+++-+++--- /dev/null
-+++-++++++ b/changes.diff
-+++-+++@@ -0,0 +1,977 @@
-+++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-++++index daf61a1..73bb862 100644
-+++-++++--- a/.husky/pre-commit
-+++-+++++++ b/.husky/pre-commit
-+++-++++@@ -61 +61 @@ while IFS= read -r file; do
-+++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+++-++++diff --git a/changes.diff b/changes.diff
-+++-++++new file mode 100644
-+++-++++index 0000000..f9d24dc
-+++-++++--- /dev/null
-+++-+++++++ b/changes.diff
-+++-++++@@ -0,0 +1,876 @@
-+++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-+++++index 19cfdbc..daf61a1 100644
-+++-+++++--- a/.husky/pre-commit
-+++-++++++++ b/.husky/pre-commit
-+++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
-+++-+++++-  # Define the output path for the scanner report in CSV format
-+++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++-++++++  # Extract only the changed line numbers for the file
-+++-++++++  line_numbers=$(awk -v file="$file" '
-+++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
-+++-++++++    /^diff --git/ {inside=0}
-+++-++++++    $0 ~ file {inside=1}
-+++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
-+++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
-+++-++++++  ' changes.diff)
-+++-++++++
-+++-++++++  # If no changed lines are found for this file, skip it
-+++-++++++  if [ -z "$line_numbers" ]; then
-+++-++++++    echo "No changed lines found in $file"
-+++-++++++    continue
-+++-++++++  fi
-+++-++++++
-+++-++++++  # Convert the line numbers to a JSON array format for jq filtering
-+++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
-+++-++++++
-+++-++++++  echo "Changed lines for $file: $line_numbers_array"
-+++-++++++
-+++-++++++  # Define the output path for the scanner report in JSON format
-+++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
-+++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
-+++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
-+++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
-+++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
-+++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
-+++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
-+++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
-+++-++++++  jq --argjson lines "$line_numbers_array" '
-+++-++++++    [.[] | 
-+++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+++-++++++      select(.violations | length > 0)]
-+++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
-+++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++-+++++-    echo "No issues found for line '70' in $file"
-+++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++-++++++    echo "No issues found for changed lines in $file"
-+++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
-+++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
-+++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-++++++  echo "Filtered scanner report for $file (Changed lines):"
-+++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++@@ -53 +77 @@ done <<< "$changed_files"
-+++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
-+++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
-+++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
-+++-+++++@@ -60,2 +84,2 @@ fi
-+++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
-+++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
-+++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++-+++++-echo "Final filtered scanner report (Line '70'):"
-+++-++++++echo "Final filtered scanner report (Changed lines):"
-+++-+++++@@ -67 +91 @@ cat "$final_report"
-+++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
-+++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
-+++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
-+++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
-+++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
-+++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
-+++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
-+++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
-+++-+++++@@ -77 +101 @@ else
-+++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
-+++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
-+++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++-+++++deleted file mode 100644
-+++-+++++index 9d692ac..0000000
-+++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++-++++++++ /dev/null
-+++-+++++@@ -1,24 +0,0 @@
-+++-+++++-0
-+++-+++++-1
-+++-+++++-2
-+++-+++++-3
-+++-+++++-4
-+++-+++++-5
-+++-+++++-60
-+++-+++++-642
-+++-+++++-643
-+++-+++++-644
-+++-+++++-645
-+++-+++++-646
-+++-+++++-647
-+++-+++++-648
-+++-+++++-649
-+++-+++++-650
-+++-+++++-651
-+++-+++++-652
-+++-+++++-653
-+++-+++++-654
-+++-+++++-655
-+++-+++++-656
-+++-+++++-657
-+++-+++++-70
-+++-+++++diff --git a/changes.diff b/changes.diff
-+++-+++++deleted file mode 100644
-+++-+++++index 61d162d..0000000
-+++-+++++--- a/changes.diff
-+++-++++++++ /dev/null
-+++-+++++@@ -1,647 +0,0 @@
-+++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-+++++-index 5b262e4..8c05f52 100644
-+++-+++++---- a/.husky/pre-commit
-+++-+++++-+++ b/.husky/pre-commit
-+++-+++++-@@ -113 +113 @@ cat "$final_report"
-+++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-+++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
-+++-+++++-diff --git a/changes.diff b/changes.diff
-+++-+++++-index 9a218e6..4fe1995 100644
-+++-+++++---- a/changes.diff
-+++-+++++-+++ b/changes.diff
-+++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-+++++--index aa6762f..586962b 100644
-+++-+++++-+index 586962b..5b262e4 100644
-+++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
-+++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
-+++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-+++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
-+++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
-+++-+++++---  # Extract line numbers as a comma-separated string for filtering later
-+++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-+++-+++++--+  # Extract line numbers as an array for filtering later
-+++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-+++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
-+++-+++++---  if [ -z "$line_numbers" ]; then
-+++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
-+++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
-+++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
-+++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-+++-+++++--+  lines_for_filter="${lines_for_filter:1}"
-+++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
-+++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
-+++-+++++-+-  awk -v file="$file" '
-+++-+++++-++  # Extract only the changed line numbers for the file
-+++-+++++-++  line_numbers=$(awk -v file="$file" '
-+++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
-+++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
-+++-+++++-++  ' changes.diff)
-+++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
-+++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
-+++-+++++-++  if [ -z "$line_numbers" ]; then
-+++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
-+++-+++++-+-  # Extract line numbers as an array for filtering later
-+++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-+++-+++++-++  # Convert the line numbers to a comma-separated string for matching
-+++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
-+++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
-+++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
-+++-+++++---  awk -v lines="$line_numbers" '
-+++-+++++--+  awk -v lines="$lines_for_filter" '
-+++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
-+++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-+++-+++++--@@ -111 +115 @@ cat "$final_report"
-+++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-+++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
-+++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
-+++-+++++-+-  # Ensure that line_numbers is not empty
-+++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
-+++-+++++-++  # Ensure that line_numbers_string is not empty
-+++-+++++-++  if [ -z "$line_numbers_string" ]; then
-+++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
-+++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
-+++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-+++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
-+++-+++++-+-
-+++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
-+++-+++++-+-  awk -v lines="$lines_for_filter" '
-+++-+++++-++  awk -v lines="$line_numbers_string" '
-+++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-+++-+++++--index 0e43eee..a206584 100644
-+++-+++++-+index a206584..9d692ac 100644
-+++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
-+++-+++++--@@ -1 +1,6 @@
-+++-+++++---70 :           System.debug('Hi Hello');
-+++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++--+1 : index 1ec7a54..870d508 100644
-+++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
-+++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-+++++--+4 : -          System.debug('Hi');
-+++-+++++--+70 :           System.debug('Hi');
-+++-+++++-+@@ -1,6 +1,24 @@
-+++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-+-1 : index 1ec7a54..870d508 100644
-+++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-+++++-+-4 : -          System.debug('Hi');
-+++-+++++-+-70 :           System.debug('Hi');
-+++-+++++-++0
-+++-+++++-++1
-+++-+++++-++2
-+++-+++++-++3
-+++-+++++-++4
-+++-+++++-++5
-+++-+++++-++60
-+++-+++++-++642
-+++-+++++-++643
-+++-+++++-++644
-+++-+++++-++645
-+++-+++++-++646
-+++-+++++-++647
-+++-+++++-++648
-+++-+++++-++649
-+++-+++++-++650
-+++-+++++-++651
-+++-+++++-++652
-+++-+++++-++653
-+++-+++++-++654
-+++-+++++-++655
-+++-+++++-++656
-+++-+++++-++657
-+++-+++++-++70
-+++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
-+++-+++++--index 760971b..3dfa538 100644
-+++-+++++-+index 3dfa538..9a218e6 100644
-+++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
-+++-+++++---index 255a037..525d43a 100644
-+++-+++++--+index 525d43a..aa6762f 100644
-+++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-+++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
-+++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
-+++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
-+++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+++-+++++----  # Define the output path for the scanner report
-+++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++-+++++---+  # Define the output path for the scanner report in CSV format
-+++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+++-+++++----  # Run the SFDX scanner on the file and generate the report
-+++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
-+++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
-+++-+++++----  # Filter the scanner report based on the changed line numbers
-+++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
-+++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+++-+++++----  jq --arg lines "$line_numbers" '
-+++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++---+  awk -v lines="$line_numbers" '
-+++-+++++---+  BEGIN {
-+++-+++++---+    FS=OFS=",";
-+++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
-+++-+++++---+    for (i in arr) {
-+++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+++-+++++---+    }
-+++-+++++---+  }
-+++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
-+++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
-+++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
-+++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++-+++++---@@ -95,2 +102,4 @@ fi
-+++-+++++----# Combine all filtered reports into one final report
-+++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+++-+++++---+# Combine all filtered reports into one final report (optional)
-+++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
-+++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+++-+++++---+echo "Final filtered scanner report:"
-+++-+++++---+cat "$final_report"
-+++-+++++---+
-+++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
-+++-+++++--+-    FS=OFS=",";
-+++-+++++--++    FS=OFS=",";  # Define CSV format
-+++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
-+++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+++-+++++--+@@ -111 +111 @@ cat "$final_report"
-+++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++-+++++--+new file mode 100644
-+++-+++++--+index 0000000..0e43eee
-+++-+++++--+--- /dev/null
-+++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++-+++++--+@@ -0,0 +1 @@
-+++-+++++--++70 :           System.debug('Hi Hello');
-+++-+++++--+diff --git a/changes.diff b/changes.diff
-+++-+++++--+new file mode 100644
-+++-+++++--+index 0000000..760971b
-+++-+++++--+--- /dev/null
-+++-+++++--++++ b/changes.diff
-+++-+++++--+@@ -0,0 +1,65 @@
-+++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-+++++--++index 255a037..525d43a 100644
-+++-+++++--++--- a/.husky/pre-commit
-+++-+++++--+++++ b/.husky/pre-commit
-+++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
-+++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
-+++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
-+++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+++-+++++--++-  # Define the output path for the scanner report
-+++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++-+++++--+++  # Define the output path for the scanner report in CSV format
-+++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+++-+++++--++-  # Run the SFDX scanner on the file and generate the report
-+++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
-+++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
-+++-+++++--++-  # Filter the scanner report based on the changed line numbers
-+++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
-+++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+++-+++++--++-  jq --arg lines "$line_numbers" '
-+++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++--+++  awk -v lines="$line_numbers" '
-+++-+++++--+++  BEGIN {
-+++-+++++--+++    FS=OFS=",";
-+++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
-+++-+++++--+++    for (i in arr) {
-+++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+++-+++++--+++    }
-+++-+++++--+++  }
-+++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
-+++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
-+++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
-+++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++-+++++--++@@ -95,2 +102,4 @@ fi
-+++-+++++--++-# Combine all filtered reports into one final report
-+++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+++-+++++--+++# Combine all filtered reports into one final report (optional)
-+++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
-+++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+++-+++++--+++echo "Final filtered scanner report:"
-+++-+++++--+++cat "$final_report"
-+++-+++++--+++
-+++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++--++index 1ec7a54..870d508 100644
-+++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
-+++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-+++++--++-          System.debug('Hi');
-+++-+++++--+++          System.debug('Hi Hello');
-+++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+++-+++++---index 1ec7a54..870d508 100644
-+++-+++++--+index 870d508..1ec7a54 100644
-+++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-+++-+++++----          System.debug('Hi');
-+++-+++++---+          System.debug('Hi Hello');
-+++-+++++--+-          System.debug('Hi Hello');
-+++-+++++--++          System.debug('Hi');
-+++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++-+++++--+new file mode 100644
-+++-+++++--+index 0000000..5a3a1ac
-+++-+++++--+--- /dev/null
-+++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++-+++++--+@@ -0,0 +1 @@
-+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+++-+++++--+new file mode 100644
-+++-+++++--+index 0000000..5a3a1ac
-+++-+++++--+--- /dev/null
-+++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
-+++-+++++--+@@ -0,0 +1 @@
-+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++-+++++--+new file mode 100644
-+++-+++++--+index 0000000..e1ef0f0
-+++-+++++--+--- /dev/null
-+++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++-+++++--+@@ -0,0 +1,5 @@
-+++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++-+++++-+-index 525d43a..aa6762f 100644
-+++-+++++-++index aa6762f..586962b 100644
-+++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
-+++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
-+++-+++++-+--    FS=OFS=",";
-+++-+++++-+-+    FS=OFS=",";  # Define CSV format
-+++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
-+++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+++-+++++-+-@@ -111 +111 @@ cat "$final_report"
-+++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
-+++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-+++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
-+++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
-+++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
-+++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-+++-+++++-+++  # Extract line numbers as an array for filtering later
-+++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-+++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
-+++-+++++-++-  if [ -z "$line_numbers" ]; then
-+++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
-+++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
-+++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
-+++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-+++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
-+++-+++++-+++
-+++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
-+++-+++++-++-  awk -v lines="$line_numbers" '
-+++-+++++-+++  awk -v lines="$lines_for_filter" '
-+++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
-+++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-+++-+++++-++@@ -111 +115 @@ cat "$final_report"
-+++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-+++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-+++-+++++-+-new file mode 100644
-+++-+++++-+-index 0000000..0e43eee
-+++-+++++-+---- /dev/null
-+++-+++++-++index 0e43eee..a206584 100644
-+++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
-+++-+++++-+-@@ -0,0 +1 @@
-+++-+++++-+-+70 :           System.debug('Hi Hello');
-+++-+++++-++@@ -1 +1,6 @@
-+++-+++++-++-70 :           System.debug('Hi Hello');
-+++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-+++1 : index 1ec7a54..870d508 100644
-+++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-+++++-+++4 : -          System.debug('Hi');
-+++-+++++-+++70 :           System.debug('Hi');
-+++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
-+++-+++++-+-new file mode 100644
-+++-+++++-+-index 0000000..760971b
-+++-+++++-+---- /dev/null
-+++-+++++-++index 760971b..3dfa538 100644
-+++-+++++-++--- a/changes.diff
-+++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
-+++-+++++-+-@@ -0,0 +1,65 @@
-+++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-+++++-+-+index 255a037..525d43a 100644
-+++-+++++-+-+--- a/.husky/pre-commit
-+++-+++++-+-++++ b/.husky/pre-commit
-+++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
-+++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
-+++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
-+++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+++-+++++-+-+-  # Define the output path for the scanner report
-+++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++-+++++-+-++  # Define the output path for the scanner report in CSV format
-+++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
-+++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
-+++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
-+++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
-+++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
-+++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+++-+++++-+-+-  jq --arg lines "$line_numbers" '
-+++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++-+-++  awk -v lines="$line_numbers" '
-+++-+++++-+-++  BEGIN {
-+++-+++++-+-++    FS=OFS=",";
-+++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
-+++-+++++-+-++    for (i in arr) {
-+++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+++-+++++-+-++    }
-+++-+++++-+-++  }
-+++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
-+++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
-+++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
-+++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++-+++++-+-+@@ -95,2 +102,4 @@ fi
-+++-+++++-+-+-# Combine all filtered reports into one final report
-+++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+++-+++++-+-++# Combine all filtered reports into one final report (optional)
-+++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
-+++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+++-+++++-+-++echo "Final filtered scanner report:"
-+++-+++++-+-++cat "$final_report"
-+++-+++++-+-++
-+++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-+-+index 1ec7a54..870d508 100644
-+++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-+++++-+-+-          System.debug('Hi');
-+++-+++++-+-++          System.debug('Hi Hello');
-+++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-+++++-++-index 255a037..525d43a 100644
-+++-+++++-+++index 525d43a..aa6762f 100644
-+++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-+++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
-+++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
-+++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
-+++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+++-+++++-++--  # Define the output path for the scanner report
-+++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++-+++++-++-+  # Define the output path for the scanner report in CSV format
-+++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+++-+++++-++--  # Run the SFDX scanner on the file and generate the report
-+++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
-+++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
-+++-+++++-++--  # Filter the scanner report based on the changed line numbers
-+++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
-+++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+++-+++++-++--  jq --arg lines "$line_numbers" '
-+++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++-++-+  awk -v lines="$line_numbers" '
-+++-+++++-++-+  BEGIN {
-+++-+++++-++-+    FS=OFS=",";
-+++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
-+++-+++++-++-+    for (i in arr) {
-+++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+++-+++++-++-+    }
-+++-+++++-++-+  }
-+++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
-+++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
-+++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
-+++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++-+++++-++-@@ -95,2 +102,4 @@ fi
-+++-+++++-++--# Combine all filtered reports into one final report
-+++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+++-+++++-++-+# Combine all filtered reports into one final report (optional)
-+++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
-+++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+++-+++++-++-+echo "Final filtered scanner report:"
-+++-+++++-++-+cat "$final_report"
-+++-+++++-++-+
-+++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
-+++-+++++-+++-    FS=OFS=",";
-+++-+++++-++++    FS=OFS=",";  # Define CSV format
-+++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
-+++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+++-+++++-+++@@ -111 +111 @@ cat "$final_report"
-+++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++-+++++-+++new file mode 100644
-+++-+++++-+++index 0000000..0e43eee
-+++-+++++-+++--- /dev/null
-+++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++-+++++-+++@@ -0,0 +1 @@
-+++-+++++-++++70 :           System.debug('Hi Hello');
-+++-+++++-+++diff --git a/changes.diff b/changes.diff
-+++-+++++-+++new file mode 100644
-+++-+++++-+++index 0000000..760971b
-+++-+++++-+++--- /dev/null
-+++-+++++-++++++ b/changes.diff
-+++-+++++-+++@@ -0,0 +1,65 @@
-+++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++-+++++-++++index 255a037..525d43a 100644
-+++-+++++-++++--- a/.husky/pre-commit
-+++-+++++-+++++++ b/.husky/pre-commit
-+++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
-+++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
-+++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
-+++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+++-+++++-++++-  # Define the output path for the scanner report
-+++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++-+++++-+++++  # Define the output path for the scanner report in CSV format
-+++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
-+++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
-+++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
-+++-+++++-++++-  # Filter the scanner report based on the changed line numbers
-+++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
-+++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+++-+++++-++++-  jq --arg lines "$line_numbers" '
-+++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++-+++++  awk -v lines="$line_numbers" '
-+++-+++++-+++++  BEGIN {
-+++-+++++-+++++    FS=OFS=",";
-+++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
-+++-+++++-+++++    for (i in arr) {
-+++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+++-+++++-+++++    }
-+++-+++++-+++++  }
-+++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
-+++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
-+++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
-+++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++-+++++-++++@@ -95,2 +102,4 @@ fi
-+++-+++++-++++-# Combine all filtered reports into one final report
-+++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+++-+++++-+++++# Combine all filtered reports into one final report (optional)
-+++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
-+++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+++-+++++-+++++echo "Final filtered scanner report:"
-+++-+++++-+++++cat "$final_report"
-+++-+++++-+++++
-+++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-++++index 1ec7a54..870d508 100644
-+++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-+++++-++++-          System.debug('Hi');
-+++-+++++-+++++          System.debug('Hi Hello');
-+++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+++-+++++-++-index 1ec7a54..870d508 100644
-+++-+++++-+++index 870d508..1ec7a54 100644
-+++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-+++-+++++-++--          System.debug('Hi');
-+++-+++++-++-+          System.debug('Hi Hello');
-+++-+++++-+++-          System.debug('Hi Hello');
-+++-+++++-++++          System.debug('Hi');
-+++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++-+++++-+++new file mode 100644
-+++-+++++-+++index 0000000..5a3a1ac
-+++-+++++-+++--- /dev/null
-+++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++-+++++-+++@@ -0,0 +1 @@
-+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+++-+++++-+++new file mode 100644
-+++-+++++-+++index 0000000..5a3a1ac
-+++-+++++-+++--- /dev/null
-+++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
-+++-+++++-+++@@ -0,0 +1 @@
-+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++-+++++-+++new file mode 100644
-+++-+++++-+++index 0000000..e1ef0f0
-+++-+++++-+++--- /dev/null
-+++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++-+++++-+++@@ -0,0 +1,5 @@
-+++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+++-+++++-+-index 870d508..1ec7a54 100644
-+++-+++++-++index 1ec7a54..870d508 100644
-+++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
-+++-+++++-+--          System.debug('Hi Hello');
-+++-+++++-+-+          System.debug('Hi');
-+++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++-+++++-+-new file mode 100644
-+++-+++++-+-index 0000000..5a3a1ac
-+++-+++++-+---- /dev/null
-+++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++-+++++-+-@@ -0,0 +1 @@
-+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+++-+++++-+-new file mode 100644
-+++-+++++-+-index 0000000..5a3a1ac
-+++-+++++-+---- /dev/null
-+++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
-+++-+++++-+-@@ -0,0 +1 @@
-+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++-+++++-+-new file mode 100644
-+++-+++++-+-index 0000000..e1ef0f0
-+++-+++++-+---- /dev/null
-+++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++-+++++-+-@@ -0,0 +1,5 @@
-+++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++-+++++-++-          System.debug('Hi');
-+++-+++++-+++          System.debug('Hi Hello');
-+++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+++-+++++--index 1ec7a54..870d508 100644
-+++-+++++-+index 870d508..5eafcac 100644
-+++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
-+++-+++++---          System.debug('Hi');
-+++-+++++--+          System.debug('Hi Hello');
-+++-+++++-+-          System.debug('Hi Hello');
-+++-+++++-++          System.debug('Happy');
-+++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-index 5eafcac..1ec7a54 100644
-+++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-+++++--          System.debug('Happy');
-+++-+++++-+          System.debug('Hi');
-+++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++index 73696e2..9e21e88 100644
-+++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
-+++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
-+++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-+++++-          System.debug('Hello and Hi');
-+++-++++++          System.debug('Hi AND');
-+++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++-+++++deleted file mode 100644
-+++-+++++index 5a3a1ac..0000000
-+++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++-++++++++ /dev/null
-+++-+++++@@ -1 +0,0 @@
-+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++-+++++new file mode 100644
-+++-+++++index 0000000..ebc3aa5
-+++-+++++--- /dev/null
-+++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++-+++++@@ -0,0 +1,30 @@
-+++-++++++[
-+++-++++++  {
-+++-++++++    "engine": "pmd",
-+++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++-++++++    "violations": [
-+++-++++++      {
-+++-++++++        "line": 70,
-+++-++++++        "column": 11,
-+++-++++++        "endLine": 70,
-+++-++++++        "endColumn": 29,
-+++-++++++        "severity": 3,
-+++-++++++        "ruleName": "AvoidDebugStatements",
-+++-++++++        "category": "Performance",
-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++-++++++      },
-+++-++++++      {
-+++-++++++        "line": 70,
-+++-++++++        "column": 11,
-+++-++++++        "endLine": 70,
-+++-++++++        "endColumn": 29,
-+++-++++++        "severity": 3,
-+++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++-++++++        "category": "Best Practices",
-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++-++++++      }
-+++-++++++    ]
-+++-++++++  }
-+++-++++++]
-+++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+++-+++++deleted file mode 100644
-+++-+++++index 5a3a1ac..0000000
-+++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
-+++-++++++++ /dev/null
-+++-+++++@@ -1 +0,0 @@
-+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-+++-+++++new file mode 100644
-+++-+++++index 0000000..ebc3aa5
-+++-+++++--- /dev/null
-+++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
-+++-+++++@@ -0,0 +1,30 @@
-+++-++++++[
-+++-++++++  {
-+++-++++++    "engine": "pmd",
-+++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++-++++++    "violations": [
-+++-++++++      {
-+++-++++++        "line": 70,
-+++-++++++        "column": 11,
-+++-++++++        "endLine": 70,
-+++-++++++        "endColumn": 29,
-+++-++++++        "severity": 3,
-+++-++++++        "ruleName": "AvoidDebugStatements",
-+++-++++++        "category": "Performance",
-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++-++++++      },
-+++-++++++      {
-+++-++++++        "line": 70,
-+++-++++++        "column": 11,
-+++-++++++        "endLine": 70,
-+++-++++++        "endColumn": 29,
-+++-++++++        "severity": 3,
-+++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++-++++++        "category": "Best Practices",
-+++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++-++++++      }
-+++-++++++    ]
-+++-++++++  }
-+++-++++++]
-+++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++-+++++deleted file mode 100644
-+++-+++++index e1ef0f0..0000000
-+++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++-++++++++ /dev/null
-+++-+++++@@ -1,5 +0,0 @@
-+++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-+++-+++++new file mode 100644
-+++-+++++index 0000000..c973918
-+++-+++++--- /dev/null
-+++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-+++-+++++@@ -0,0 +1 @@
-+++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++-+++++\ No newline at end of file
-+++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-++++index 9e21e88..800635e 100644
-+++-++++--- a/force-app/main/default/classes/Account_Insert.cls
-+++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
-+++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-++++-          System.debug('Hi AND');
-+++-+++++          System.debug('Hi AND Hello');
-+++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++-++++index ebc3aa5..fe51488 100644
-+++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++-++++@@ -1,30 +1 @@
-+++-++++-[
-+++-++++-  {
-+++-++++-    "engine": "pmd",
-+++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++-++++-    "violations": [
-+++-++++-      {
-+++-++++-        "line": 70,
-+++-++++-        "column": 11,
-+++-++++-        "endLine": 70,
-+++-++++-        "endColumn": 29,
-+++-++++-        "severity": 3,
-+++-++++-        "ruleName": "AvoidDebugStatements",
-+++-++++-        "category": "Performance",
-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++-++++-      },
-+++-++++-      {
-+++-++++-        "line": 70,
-+++-++++-        "column": 11,
-+++-++++-        "endLine": 70,
-+++-++++-        "endColumn": 29,
-+++-++++-        "severity": 3,
-+++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-+++-++++-        "category": "Best Practices",
-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++-++++-      }
-+++-++++-    ]
-+++-++++-  }
-+++-++++-]
-+++-+++++[]
-+++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-+++-++++index ebc3aa5..fe51488 100644
-+++-++++--- a/scanner-reports/final-filtered-scanner-report.json
-+++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
-+++-++++@@ -1,30 +1 @@
-+++-++++-[
-+++-++++-  {
-+++-++++-    "engine": "pmd",
-+++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++-++++-    "violations": [
-+++-++++-      {
-+++-++++-        "line": 70,
-+++-++++-        "column": 11,
-+++-++++-        "endLine": 70,
-+++-++++-        "endColumn": 29,
-+++-++++-        "severity": 3,
-+++-++++-        "ruleName": "AvoidDebugStatements",
-+++-++++-        "category": "Performance",
-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++-++++-      },
-+++-++++-      {
-+++-++++-        "line": 70,
-+++-++++-        "column": 11,
-+++-++++-        "endLine": 70,
-+++-++++-        "endColumn": 29,
-+++-++++-        "severity": 3,
-+++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-+++-++++-        "category": "Best Practices",
-+++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++-++++-      }
-+++-++++-    ]
-+++-++++-  }
-+++-++++-]
-+++-+++++[]
-+++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-+++-++++index c973918..a14d61d 100644
-+++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
-+++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-+++-++++@@ -1 +1 @@
-+++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++-++++\ No newline at end of file
-+++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++-++++\ No newline at end of file
-+++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-+++index 9e21e88..1ec7a54 100644
-+++-+++--- a/force-app/main/default/classes/Account_Insert.cls
-+++-++++++ b/force-app/main/default/classes/Account_Insert.cls
-+++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-+++-          System.debug('Hi AND');
-+++-++++          System.debug('Hi');
-+++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++-+++index ebc3aa5..bb2caee 100644
-+++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++-+++@@ -5,0 +6,22 @@
-+++-++++      {
-+++-++++        "line": 20,
-+++-++++        "column": 11,
-+++-++++        "endLine": 20,
-+++-++++        "endColumn": 35,
-+++-++++        "severity": 3,
-+++-++++        "ruleName": "AvoidDebugStatements",
-+++-++++        "category": "Performance",
-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++-++++      },
-+++-++++      {
-+++-++++        "line": 20,
-+++-++++        "column": 11,
-+++-++++        "endLine": 20,
-+++-++++        "endColumn": 35,
-+++-++++        "severity": 3,
-+++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++-++++        "category": "Best Practices",
-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++-++++      },
-+++-+++@@ -10 +32 @@
-+++-+++-        "endColumn": 29,
-+++-++++        "endColumn": 39,
-+++-+++@@ -21 +43 @@
-+++-+++-        "endColumn": 29,
-+++-++++        "endColumn": 39,
-+++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-+++-+++index ebc3aa5..bb2caee 100644
-+++-+++--- a/scanner-reports/final-filtered-scanner-report.json
-+++-++++++ b/scanner-reports/final-filtered-scanner-report.json
-+++-+++@@ -5,0 +6,22 @@
-+++-++++      {
-+++-++++        "line": 20,
-+++-++++        "column": 11,
-+++-++++        "endLine": 20,
-+++-++++        "endColumn": 35,
-+++-++++        "severity": 3,
-+++-++++        "ruleName": "AvoidDebugStatements",
-+++-++++        "category": "Performance",
-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++-++++      },
-+++-++++      {
-+++-++++        "line": 20,
-+++-++++        "column": 11,
-+++-++++        "endLine": 20,
-+++-++++        "endColumn": 35,
-+++-++++        "severity": 3,
-+++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++-++++        "category": "Best Practices",
-+++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++-++++      },
-+++-+++@@ -10 +32 @@
-+++-+++-        "endColumn": 29,
-+++-++++        "endColumn": 39,
-+++-+++@@ -21 +43 @@
-+++-+++-        "endColumn": 29,
-+++-++++        "endColumn": 39,
-+++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-+++-+++index c973918..866c0b7 100644
-+++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
-+++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-+++-+++@@ -1 +1 @@
-+++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++-+++\ No newline at end of file
-+++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++-+++\ No newline at end of file
-+++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-++index 9e21e88..9a5148a 100644
-+++-++--- a/force-app/main/default/classes/Account_Insert.cls
-+++-+++++ b/force-app/main/default/classes/Account_Insert.cls
-+++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-++-          System.debug('Hi AND');
-+++-+++          System.debug('Hello');
-+++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++-++index ebc3aa5..b33da59 100644
-+++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++-++@@ -5,0 +6,22 @@
-+++-+++      {
-+++-+++        "line": 20,
-+++-+++        "column": 11,
-+++-+++        "endLine": 20,
-+++-+++        "endColumn": 35,
-+++-+++        "severity": 3,
-+++-+++        "ruleName": "AvoidDebugStatements",
-+++-+++        "category": "Performance",
-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++-+++      },
-+++-+++      {
-+++-+++        "line": 20,
-+++-+++        "column": 11,
-+++-+++        "endLine": 20,
-+++-+++        "endColumn": 35,
-+++-+++        "severity": 3,
-+++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++-+++        "category": "Best Practices",
-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++-+++      },
-+++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-+++-++index ebc3aa5..b33da59 100644
-+++-++--- a/scanner-reports/final-filtered-scanner-report.json
-+++-+++++ b/scanner-reports/final-filtered-scanner-report.json
-+++-++@@ -5,0 +6,22 @@
-+++-+++      {
-+++-+++        "line": 20,
-+++-+++        "column": 11,
-+++-+++        "endLine": 20,
-+++-+++        "endColumn": 35,
-+++-+++        "severity": 3,
-+++-+++        "ruleName": "AvoidDebugStatements",
-+++-+++        "category": "Performance",
-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++-+++      },
-+++-+++      {
-+++-+++        "line": 20,
-+++-+++        "column": 11,
-+++-+++        "endLine": 20,
-+++-+++        "endColumn": 35,
-+++-+++        "severity": 3,
-+++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++-+++        "category": "Best Practices",
-+++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++-+++      },
-+++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++-+index 9e21e88..1ec7a54 100644
-+++-+--- a/force-app/main/default/classes/Account_Insert.cls
-+++-++++ b/force-app/main/default/classes/Account_Insert.cls
-+++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++-+-          System.debug('Hi AND');
-+++-++          System.debug('Hi');
-++++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-index daf61a1..3603bae 100644
-+++++index 1328704..5ea091f 100644
-++++@@ -5,12 +5,5 @@ index daf61a1..3603bae 100644
-++++-@@ -16 +16 @@ mkdir -p scanner-reports
-++++--git diff --unified=0 --cached > changes.diff
-++++-+git diff --cached --unified=0 > changes.diff
-++++-@@ -25 +25 @@ while IFS= read -r file; do
-++++--  # Extract only the changed line numbers for the file
-++++-+  # Extract only the added or modified lines for .cls and .lwc files
-++++-@@ -32 +32 @@ while IFS= read -r file; do
-++++--  ' changes.diff)
-++++-+  ' changes.diff | uniq)
-++++-@@ -61 +61 @@ while IFS= read -r file; do
-++++--      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++++-+      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+++++@@ -30,2 +30,2 @@ while IFS= read -r file; do
-+++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
-+++++-    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
-++++++    inside && /^[+][^+]/ {print start_line + line_offset; line_offset++}
-++++@@ -18,3 +11,2 @@ diff --git a/changes.diff b/changes.diff
-++++-new file mode 100644
-++++-index 0000000..a6452b3
-++++---- /dev/null
-+++++index 1f4c0b2..1b1df18 100644
-+++++--- a/changes.diff
-++++@@ -22,863 +14,1913 @@ index 0000000..a6452b3
-++++-@@ -0,0 +1,1262 @@
-++++-+diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-+index daf61a1..3603bae 100644
-++++-+--- a/.husky/pre-commit
-++++-++++ b/.husky/pre-commit
-++++-+@@ -16 +16 @@ mkdir -p scanner-reports
-++++-+-git diff --unified=0 --cached > changes.diff
-++++-++git diff --cached --unified=0 > changes.diff
-++++-+@@ -25 +25 @@ while IFS= read -r file; do
-++++-+-  # Extract only the changed line numbers for the file
-++++-++  # Extract only the added or modified lines for .cls and .lwc files
-++++-+@@ -32 +32 @@ while IFS= read -r file; do
-++++-+-  ' changes.diff)
-++++-++  ' changes.diff | uniq)
-++++-+@@ -61 +61 @@ while IFS= read -r file; do
-++++-+-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++++-++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-++++-+diff --git a/changes.diff b/changes.diff
-++++-+new file mode 100644
-++++-+index 0000000..1831031
-++++-+--- /dev/null
-++++-++++ b/changes.diff
-++++-+@@ -0,0 +1,1158 @@
-++++-++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-++index daf61a1..d6ae40b 100644
-++++-++--- a/.husky/pre-commit
-++++-+++++ b/.husky/pre-commit
-++++-++@@ -25 +25 @@ while IFS= read -r file; do
-++++-++-  # Extract only the changed line numbers for the file
-++++-+++  # Extract only the added or modified lines for .cls and .lwc files
-++++-++@@ -32 +32 @@ while IFS= read -r file; do
-++++-++-  ' changes.diff)
-++++-+++  ' changes.diff | uniq)
-++++-++@@ -61 +61 @@ while IFS= read -r file; do
-++++-++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++++-+++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-++++-++diff --git a/changes.diff b/changes.diff
-++++-++new file mode 100644
-++++-++index 0000000..47b6c1c
-++++-++--- /dev/null
-++++-+++++ b/changes.diff
-++++-++@@ -0,0 +1,1078 @@
-++++-+++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-+++index daf61a1..d6ae40b 100644
-++++-+++--- a/.husky/pre-commit
-++++-++++++ b/.husky/pre-commit
-++++-+++@@ -25 +25 @@ while IFS= read -r file; do
-++++-+++-  # Extract only the changed line numbers for the file
-++++-++++  # Extract only the added or modified lines for .cls and .lwc files
-++++-+++@@ -32 +32 @@ while IFS= read -r file; do
-++++-+++-  ' changes.diff)
-++++-++++  ' changes.diff | uniq)
-++++-+++@@ -61 +61 @@ while IFS= read -r file; do
-++++-+++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++++-++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-++++-+++diff --git a/changes.diff b/changes.diff
-++++-+++new file mode 100644
-++++-+++index 0000000..8cd4f1a
-++++-+++--- /dev/null
-++++-++++++ b/changes.diff
-++++-+++@@ -0,0 +1,977 @@
-++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-++++index daf61a1..73bb862 100644
-++++-++++--- a/.husky/pre-commit
-++++-+++++++ b/.husky/pre-commit
-++++-++++@@ -61 +61 @@ while IFS= read -r file; do
-++++-++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++++-+++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-++++-++++diff --git a/changes.diff b/changes.diff
-++++-++++new file mode 100644
-++++-++++index 0000000..f9d24dc
-++++-++++--- /dev/null
-++++-+++++++ b/changes.diff
-++++-++++@@ -0,0 +1,876 @@
-++++-+++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-+++++index 19cfdbc..daf61a1 100644
-++++-+++++--- a/.husky/pre-commit
-++++-++++++++ b/.husky/pre-commit
-++++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
-++++-+++++-  # Define the output path for the scanner report in CSV format
-++++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++++-++++++  # Extract only the changed line numbers for the file
-++++-++++++  line_numbers=$(awk -v file="$file" '
-++++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
-++++-++++++    /^diff --git/ {inside=0}
-++++-++++++    $0 ~ file {inside=1}
-++++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
-++++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
-++++-++++++  ' changes.diff)
-++++-++++++
-++++-++++++  # If no changed lines are found for this file, skip it
-++++-++++++  if [ -z "$line_numbers" ]; then
-++++-++++++    echo "No changed lines found in $file"
-++++-++++++    continue
-++++-++++++  fi
-++++-++++++
-++++-++++++  # Convert the line numbers to a JSON array format for jq filtering
-++++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
-++++-++++++
-++++-++++++  echo "Changed lines for $file: $line_numbers_array"
-++++-++++++
-++++-++++++  # Define the output path for the scanner report in JSON format
-++++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
-++++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
-++++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
-++++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
-++++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
-++++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
-++++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
-++++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
-++++-++++++  jq --argjson lines "$line_numbers_array" '
-++++-++++++    [.[] | 
-++++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++++-++++++      select(.violations | length > 0)]
-++++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
-++++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++-+++++-    echo "No issues found for line '70' in $file"
-++++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++++-++++++    echo "No issues found for changed lines in $file"
-++++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
-++++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
-++++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-++++++  echo "Filtered scanner report for $file (Changed lines):"
-++++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++@@ -53 +77 @@ done <<< "$changed_files"
-++++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
-++++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
-++++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
-++++-+++++@@ -60,2 +84,2 @@ fi
-++++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
-++++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
-++++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++-+++++-echo "Final filtered scanner report (Line '70'):"
-++++-++++++echo "Final filtered scanner report (Changed lines):"
-++++-+++++@@ -67 +91 @@ cat "$final_report"
-++++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
-++++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
-++++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
-++++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
-++++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
-++++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
-++++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
-++++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
-++++-+++++@@ -77 +101 @@ else
-++++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
-++++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
-++++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++-+++++deleted file mode 100644
-++++-+++++index 9d692ac..0000000
-++++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++-++++++++ /dev/null
-++++-+++++@@ -1,24 +0,0 @@
-++++-+++++-0
-++++-+++++-1
-++++-+++++-2
-++++-+++++-3
-++++-+++++-4
-++++-+++++-5
-++++-+++++-60
-++++-+++++-642
-++++-+++++-643
-++++-+++++-644
-++++-+++++-645
-++++-+++++-646
-++++-+++++-647
-++++-+++++-648
-++++-+++++-649
-++++-+++++-650
-++++-+++++-651
-++++-+++++-652
-++++-+++++-653
-++++-+++++-654
-++++-+++++-655
-++++-+++++-656
-++++-+++++-657
-++++-+++++-70
-++++-+++++diff --git a/changes.diff b/changes.diff
-++++-+++++deleted file mode 100644
-++++-+++++index 61d162d..0000000
-++++-+++++--- a/changes.diff
-++++-++++++++ /dev/null
-++++-+++++@@ -1,647 +0,0 @@
-++++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-+++++-index 5b262e4..8c05f52 100644
-++++-+++++---- a/.husky/pre-commit
-++++-+++++-+++ b/.husky/pre-commit
-++++-+++++-@@ -113 +113 @@ cat "$final_report"
-++++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-++++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
-++++-+++++-diff --git a/changes.diff b/changes.diff
-++++-+++++-index 9a218e6..4fe1995 100644
-++++-+++++---- a/changes.diff
-++++-+++++-+++ b/changes.diff
-++++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-+++++--index aa6762f..586962b 100644
-++++-+++++-+index 586962b..5b262e4 100644
-++++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
-++++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
-++++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-++++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
-++++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
-++++-+++++---  # Extract line numbers as a comma-separated string for filtering later
-++++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-++++-+++++--+  # Extract line numbers as an array for filtering later
-++++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-++++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
-++++-+++++---  if [ -z "$line_numbers" ]; then
-++++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
-++++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
-++++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
-++++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-++++-+++++--+  lines_for_filter="${lines_for_filter:1}"
-++++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
-++++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
-++++-+++++-+-  awk -v file="$file" '
-++++-+++++-++  # Extract only the changed line numbers for the file
-++++-+++++-++  line_numbers=$(awk -v file="$file" '
-++++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
-++++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
-++++-+++++-++  ' changes.diff)
-++++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
-++++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
-++++-+++++-++  if [ -z "$line_numbers" ]; then
-++++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
-++++-+++++-+-  # Extract line numbers as an array for filtering later
-++++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-++++-+++++-++  # Convert the line numbers to a comma-separated string for matching
-++++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
-++++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
-++++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
-++++-+++++---  awk -v lines="$line_numbers" '
-++++-+++++--+  awk -v lines="$lines_for_filter" '
-++++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
-++++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-++++-+++++--@@ -111 +115 @@ cat "$final_report"
-++++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-++++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
-++++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
-++++-+++++-+-  # Ensure that line_numbers is not empty
-++++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
-++++-+++++-++  # Ensure that line_numbers_string is not empty
-++++-+++++-++  if [ -z "$line_numbers_string" ]; then
-++++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
-++++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
-++++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-++++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
-++++-+++++-+-
-++++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
-++++-+++++-+-  awk -v lines="$lines_for_filter" '
-++++-+++++-++  awk -v lines="$line_numbers_string" '
-++++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-++++-+++++--index 0e43eee..a206584 100644
-++++-+++++-+index a206584..9d692ac 100644
-++++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
-++++-+++++--@@ -1 +1,6 @@
-++++-+++++---70 :           System.debug('Hi Hello');
-++++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++--+1 : index 1ec7a54..870d508 100644
-++++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
-++++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-+++++--+4 : -          System.debug('Hi');
-++++-+++++--+70 :           System.debug('Hi');
-++++-+++++-+@@ -1,6 +1,24 @@
-++++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-+-1 : index 1ec7a54..870d508 100644
-++++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-+++++-+-4 : -          System.debug('Hi');
-++++-+++++-+-70 :           System.debug('Hi');
-++++-+++++-++0
-++++-+++++-++1
-++++-+++++-++2
-++++-+++++-++3
-++++-+++++-++4
-++++-+++++-++5
-++++-+++++-++60
-++++-+++++-++642
-++++-+++++-++643
-++++-+++++-++644
-++++-+++++-++645
-++++-+++++-++646
-++++-+++++-++647
-++++-+++++-++648
-++++-+++++-++649
-++++-+++++-++650
-++++-+++++-++651
-++++-+++++-++652
-++++-+++++-++653
-++++-+++++-++654
-++++-+++++-++655
-++++-+++++-++656
-++++-+++++-++657
-++++-+++++-++70
-++++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
-++++-+++++--index 760971b..3dfa538 100644
-++++-+++++-+index 3dfa538..9a218e6 100644
-++++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
-++++-+++++---index 255a037..525d43a 100644
-++++-+++++--+index 525d43a..aa6762f 100644
-++++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-++++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
-++++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
-++++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
-++++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++++-+++++----  # Define the output path for the scanner report
-++++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++-+++++---+  # Define the output path for the scanner report in CSV format
-++++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++++-+++++----  # Run the SFDX scanner on the file and generate the report
-++++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
-++++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
-++++-+++++----  # Filter the scanner report based on the changed line numbers
-++++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
-++++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++++-+++++----  jq --arg lines "$line_numbers" '
-++++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++---+  awk -v lines="$line_numbers" '
-++++-+++++---+  BEGIN {
-++++-+++++---+    FS=OFS=",";
-++++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
-++++-+++++---+    for (i in arr) {
-++++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++++-+++++---+    }
-++++-+++++---+  }
-++++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
-++++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
-++++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
-++++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++++-+++++---@@ -95,2 +102,4 @@ fi
-++++-+++++----# Combine all filtered reports into one final report
-++++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++++-+++++---+# Combine all filtered reports into one final report (optional)
-++++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
-++++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++++-+++++---+echo "Final filtered scanner report:"
-++++-+++++---+cat "$final_report"
-++++-+++++---+
-++++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
-++++-+++++--+-    FS=OFS=",";
-++++-+++++--++    FS=OFS=",";  # Define CSV format
-++++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
-++++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++++-+++++--+@@ -111 +111 @@ cat "$final_report"
-++++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++-+++++--+new file mode 100644
-++++-+++++--+index 0000000..0e43eee
-++++-+++++--+--- /dev/null
-++++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++-+++++--+@@ -0,0 +1 @@
-++++-+++++--++70 :           System.debug('Hi Hello');
-++++-+++++--+diff --git a/changes.diff b/changes.diff
-++++-+++++--+new file mode 100644
-++++-+++++--+index 0000000..760971b
-++++-+++++--+--- /dev/null
-++++-+++++--++++ b/changes.diff
-++++-+++++--+@@ -0,0 +1,65 @@
-++++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-+++++--++index 255a037..525d43a 100644
-++++-+++++--++--- a/.husky/pre-commit
-++++-+++++--+++++ b/.husky/pre-commit
-++++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
-++++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
-++++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
-++++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++++-+++++--++-  # Define the output path for the scanner report
-++++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++-+++++--+++  # Define the output path for the scanner report in CSV format
-++++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++++-+++++--++-  # Run the SFDX scanner on the file and generate the report
-++++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
-++++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
-++++-+++++--++-  # Filter the scanner report based on the changed line numbers
-++++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
-++++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++++-+++++--++-  jq --arg lines "$line_numbers" '
-++++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++--+++  awk -v lines="$line_numbers" '
-++++-+++++--+++  BEGIN {
-++++-+++++--+++    FS=OFS=",";
-++++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
-++++-+++++--+++    for (i in arr) {
-++++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++++-+++++--+++    }
-++++-+++++--+++  }
-++++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
-++++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
-++++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
-++++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++++-+++++--++@@ -95,2 +102,4 @@ fi
-++++-+++++--++-# Combine all filtered reports into one final report
-++++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++++-+++++--+++# Combine all filtered reports into one final report (optional)
-++++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
-++++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++++-+++++--+++echo "Final filtered scanner report:"
-++++-+++++--+++cat "$final_report"
-++++-+++++--+++
-++++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++--++index 1ec7a54..870d508 100644
-++++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
-++++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-+++++--++-          System.debug('Hi');
-++++-+++++--+++          System.debug('Hi Hello');
-++++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++++-+++++---index 1ec7a54..870d508 100644
-++++-+++++--+index 870d508..1ec7a54 100644
-++++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-++++-+++++----          System.debug('Hi');
-++++-+++++---+          System.debug('Hi Hello');
-++++-+++++--+-          System.debug('Hi Hello');
-++++-+++++--++          System.debug('Hi');
-++++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++-+++++--+new file mode 100644
-++++-+++++--+index 0000000..5a3a1ac
-++++-+++++--+--- /dev/null
-++++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++-+++++--+@@ -0,0 +1 @@
-++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++++-+++++--+new file mode 100644
-++++-+++++--+index 0000000..5a3a1ac
-++++-+++++--+--- /dev/null
-++++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
-++++-+++++--+@@ -0,0 +1 @@
-++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++-+++++--+new file mode 100644
-++++-+++++--+index 0000000..e1ef0f0
-++++-+++++--+--- /dev/null
-++++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++-+++++--+@@ -0,0 +1,5 @@
-++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++-+++++-+-index 525d43a..aa6762f 100644
-++++-+++++-++index aa6762f..586962b 100644
-++++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
-++++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
-++++-+++++-+--    FS=OFS=",";
-++++-+++++-+-+    FS=OFS=",";  # Define CSV format
-++++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
-++++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++++-+++++-+-@@ -111 +111 @@ cat "$final_report"
-++++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
-++++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-++++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
-++++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
-++++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
-++++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-++++-+++++-+++  # Extract line numbers as an array for filtering later
-++++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-++++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
-++++-+++++-++-  if [ -z "$line_numbers" ]; then
-++++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
-++++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
-++++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
-++++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-++++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
-++++-+++++-+++
-++++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
-++++-+++++-++-  awk -v lines="$line_numbers" '
-++++-+++++-+++  awk -v lines="$lines_for_filter" '
-++++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
-++++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-++++-+++++-++@@ -111 +115 @@ cat "$final_report"
-++++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-++++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-++++-+++++-+-new file mode 100644
-++++-+++++-+-index 0000000..0e43eee
-++++-+++++-+---- /dev/null
-++++-+++++-++index 0e43eee..a206584 100644
-++++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
-++++-+++++-+-@@ -0,0 +1 @@
-++++-+++++-+-+70 :           System.debug('Hi Hello');
-++++-+++++-++@@ -1 +1,6 @@
-++++-+++++-++-70 :           System.debug('Hi Hello');
-++++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-+++1 : index 1ec7a54..870d508 100644
-++++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-+++++-+++4 : -          System.debug('Hi');
-++++-+++++-+++70 :           System.debug('Hi');
-++++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
-++++-+++++-+-new file mode 100644
-++++-+++++-+-index 0000000..760971b
-++++-+++++-+---- /dev/null
-++++-+++++-++index 760971b..3dfa538 100644
-++++-+++++-++--- a/changes.diff
-++++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
-++++-+++++-+-@@ -0,0 +1,65 @@
-++++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-+++++-+-+index 255a037..525d43a 100644
-++++-+++++-+-+--- a/.husky/pre-commit
-++++-+++++-+-++++ b/.husky/pre-commit
-++++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
-++++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
-++++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
-++++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++++-+++++-+-+-  # Define the output path for the scanner report
-++++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++-+++++-+-++  # Define the output path for the scanner report in CSV format
-++++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
-++++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
-++++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
-++++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
-++++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
-++++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++++-+++++-+-+-  jq --arg lines "$line_numbers" '
-++++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++-+-++  awk -v lines="$line_numbers" '
-++++-+++++-+-++  BEGIN {
-++++-+++++-+-++    FS=OFS=",";
-++++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
-++++-+++++-+-++    for (i in arr) {
-++++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++++-+++++-+-++    }
-++++-+++++-+-++  }
-++++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
-++++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
-++++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
-++++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++++-+++++-+-+@@ -95,2 +102,4 @@ fi
-++++-+++++-+-+-# Combine all filtered reports into one final report
-++++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++++-+++++-+-++# Combine all filtered reports into one final report (optional)
-++++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
-++++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++++-+++++-+-++echo "Final filtered scanner report:"
-++++-+++++-+-++cat "$final_report"
-++++-+++++-+-++
-++++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-+-+index 1ec7a54..870d508 100644
-++++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-+++++-+-+-          System.debug('Hi');
-++++-+++++-+-++          System.debug('Hi Hello');
-++++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-+++++-++-index 255a037..525d43a 100644
-++++-+++++-+++index 525d43a..aa6762f 100644
-++++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-++++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
-++++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
-++++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
-++++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++++-+++++-++--  # Define the output path for the scanner report
-++++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++-+++++-++-+  # Define the output path for the scanner report in CSV format
-++++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++++-+++++-++--  # Run the SFDX scanner on the file and generate the report
-++++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
-++++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
-++++-+++++-++--  # Filter the scanner report based on the changed line numbers
-++++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
-++++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++++-+++++-++--  jq --arg lines "$line_numbers" '
-++++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++-++-+  awk -v lines="$line_numbers" '
-++++-+++++-++-+  BEGIN {
-++++-+++++-++-+    FS=OFS=",";
-++++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
-++++-+++++-++-+    for (i in arr) {
-++++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++++-+++++-++-+    }
-++++-+++++-++-+  }
-++++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
-++++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
-++++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
-++++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++++-+++++-++-@@ -95,2 +102,4 @@ fi
-++++-+++++-++--# Combine all filtered reports into one final report
-++++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++++-+++++-++-+# Combine all filtered reports into one final report (optional)
-++++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
-++++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++++-+++++-++-+echo "Final filtered scanner report:"
-++++-+++++-++-+cat "$final_report"
-++++-+++++-++-+
-++++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
-++++-+++++-+++-    FS=OFS=",";
-++++-+++++-++++    FS=OFS=",";  # Define CSV format
-++++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
-++++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++++-+++++-+++@@ -111 +111 @@ cat "$final_report"
-++++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++-+++++-+++new file mode 100644
-++++-+++++-+++index 0000000..0e43eee
-++++-+++++-+++--- /dev/null
-++++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++-+++++-+++@@ -0,0 +1 @@
-++++-+++++-++++70 :           System.debug('Hi Hello');
-++++-+++++-+++diff --git a/changes.diff b/changes.diff
-++++-+++++-+++new file mode 100644
-++++-+++++-+++index 0000000..760971b
-++++-+++++-+++--- /dev/null
-++++-+++++-++++++ b/changes.diff
-++++-+++++-+++@@ -0,0 +1,65 @@
-++++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++-+++++-++++index 255a037..525d43a 100644
-++++-+++++-++++--- a/.husky/pre-commit
-++++-+++++-+++++++ b/.husky/pre-commit
-++++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
-++++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
-++++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
-++++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++++-+++++-++++-  # Define the output path for the scanner report
-++++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++-+++++-+++++  # Define the output path for the scanner report in CSV format
-++++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
-++++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
-++++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
-++++-+++++-++++-  # Filter the scanner report based on the changed line numbers
-++++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
-++++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++++-+++++-++++-  jq --arg lines "$line_numbers" '
-++++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++-+++++  awk -v lines="$line_numbers" '
-++++-+++++-+++++  BEGIN {
-++++-+++++-+++++    FS=OFS=",";
-++++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
-++++-+++++-+++++    for (i in arr) {
-++++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++++-+++++-+++++    }
-++++-+++++-+++++  }
-++++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
-++++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
-++++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
-++++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++++-+++++-++++@@ -95,2 +102,4 @@ fi
-++++-+++++-++++-# Combine all filtered reports into one final report
-++++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++++-+++++-+++++# Combine all filtered reports into one final report (optional)
-++++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
-++++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++++-+++++-+++++echo "Final filtered scanner report:"
-++++-+++++-+++++cat "$final_report"
-++++-+++++-+++++
-++++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-++++index 1ec7a54..870d508 100644
-++++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-+++++-++++-          System.debug('Hi');
-++++-+++++-+++++          System.debug('Hi Hello');
-++++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++++-+++++-++-index 1ec7a54..870d508 100644
-++++-+++++-+++index 870d508..1ec7a54 100644
-++++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-++++-+++++-++--          System.debug('Hi');
-++++-+++++-++-+          System.debug('Hi Hello');
-++++-+++++-+++-          System.debug('Hi Hello');
-++++-+++++-++++          System.debug('Hi');
-++++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++-+++++-+++new file mode 100644
-++++-+++++-+++index 0000000..5a3a1ac
-++++-+++++-+++--- /dev/null
-++++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++-+++++-+++@@ -0,0 +1 @@
-++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++++-+++++-+++new file mode 100644
-++++-+++++-+++index 0000000..5a3a1ac
-++++-+++++-+++--- /dev/null
-++++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
-++++-+++++-+++@@ -0,0 +1 @@
-++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++-+++++-+++new file mode 100644
-++++-+++++-+++index 0000000..e1ef0f0
-++++-+++++-+++--- /dev/null
-++++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++-+++++-+++@@ -0,0 +1,5 @@
-++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++++-+++++-+-index 870d508..1ec7a54 100644
-++++-+++++-++index 1ec7a54..870d508 100644
-++++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
-++++-+++++-+--          System.debug('Hi Hello');
-++++-+++++-+-+          System.debug('Hi');
-++++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++-+++++-+-new file mode 100644
-++++-+++++-+-index 0000000..5a3a1ac
-++++-+++++-+---- /dev/null
-++++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++-+++++-+-@@ -0,0 +1 @@
-++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++++-+++++-+-new file mode 100644
-++++-+++++-+-index 0000000..5a3a1ac
-++++-+++++-+---- /dev/null
-++++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
-++++-+++++-+-@@ -0,0 +1 @@
-++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++-+++++-+-new file mode 100644
-++++-+++++-+-index 0000000..e1ef0f0
-++++-+++++-+---- /dev/null
-++++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++-+++++-+-@@ -0,0 +1,5 @@
-++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++-+++++-++-          System.debug('Hi');
-++++-+++++-+++          System.debug('Hi Hello');
-++++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++++-+++++--index 1ec7a54..870d508 100644
-++++-+++++-+index 870d508..5eafcac 100644
-++++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
-++++-+++++---          System.debug('Hi');
-++++-+++++--+          System.debug('Hi Hello');
-++++-+++++-+-          System.debug('Hi Hello');
-++++-+++++-++          System.debug('Happy');
-++++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-index 5eafcac..1ec7a54 100644
-++++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-+++++--          System.debug('Happy');
-++++-+++++-+          System.debug('Hi');
-++++-+++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++index 73696e2..9e21e88 100644
-++++-+++++--- a/force-app/main/default/classes/Account_Insert.cls
-++++-++++++++ b/force-app/main/default/classes/Account_Insert.cls
-++++-+++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-+++++-          System.debug('Hello and Hi');
-++++-++++++          System.debug('Hi AND');
-++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++-+++++deleted file mode 100644
-++++-+++++index 5a3a1ac..0000000
-++++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++-++++++++ /dev/null
-++++-+++++@@ -1 +0,0 @@
-++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++-+++++new file mode 100644
-++++-+++++index 0000000..ebc3aa5
-++++-+++++--- /dev/null
-++++-++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++-+++++@@ -0,0 +1,30 @@
-++++-++++++[
-++++-++++++  {
-++++-++++++    "engine": "pmd",
-++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-++++-++++++    "violations": [
-+++++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++++-index daf61a1..3603bae 100644
-++++++index daf61a1..1328704 100644
-+++++@@ -11 +11,3 @@ index daf61a1..3603bae 100644
-+++++-@@ -32 +32 @@ while IFS= read -r file; do
-++++++@@ -30,3 +30,3 @@ while IFS= read -r file; do
-++++++-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
-++++++-    inside && /^[+][^+]/ {print start_line + line_offset++}
-+++++@@ -12,0 +15,2 @@ index daf61a1..3603bae 100644
-+++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); next}
-+++++++    inside && /^[+][^+]/ {line_offset++; print start_line + line_offset}
-+++++@@ -19 +23 @@ new file mode 100644
-+++++-index 0000000..a6452b3
-++++++index 0000000..1f4c0b2
-+++++@@ -22 +26 @@ index 0000000..a6452b3
-+++++-@@ -0,0 +1,1262 @@
-++++++@@ -0,0 +1,1293 @@
-+++++@@ -41 +45 @@ index 0000000..a6452b3
-+++++-+index 0000000..1831031
-+++++++index 0000000..a6452b3
-+++++@@ -44 +48 @@ index 0000000..a6452b3
-+++++-+@@ -0,0 +1,1158 @@
-+++++++@@ -0,0 +1,1262 @@
-+++++@@ -46 +50 @@ index 0000000..a6452b3
-+++++-++index daf61a1..d6ae40b 100644
-++++++++index daf61a1..3603bae 100644
-+++++@@ -48,0 +53,3 @@ index 0000000..a6452b3
-++++++++@@ -16 +16 @@ mkdir -p scanner-reports
-++++++++-git diff --unified=0 --cached > changes.diff
-+++++++++git diff --cached --unified=0 > changes.diff
-+++++@@ -60 +67 @@ index 0000000..a6452b3
-+++++-++index 0000000..47b6c1c
-++++++++index 0000000..1831031
-+++++@@ -63 +70 @@ index 0000000..a6452b3
-+++++-++@@ -0,0 +1,1078 @@
-++++++++@@ -0,0 +1,1158 @@
-+++++@@ -79 +86 @@ index 0000000..a6452b3
-+++++-+++index 0000000..8cd4f1a
-+++++++++index 0000000..47b6c1c
-+++++@@ -82 +89 @@ index 0000000..a6452b3
-+++++-+++@@ -0,0 +1,977 @@
-+++++++++@@ -0,0 +1,1078 @@
-+++++@@ -84 +91 @@ index 0000000..a6452b3
-+++++-++++index daf61a1..73bb862 100644
-++++++++++index daf61a1..d6ae40b 100644
-+++++@@ -86,0 +94,6 @@ index 0000000..a6452b3
-++++++++++@@ -25 +25 @@ while IFS= read -r file; do
-++++++++++-  # Extract only the changed line numbers for the file
-+++++++++++  # Extract only the added or modified lines for .cls and .lwc files
-++++++++++@@ -32 +32 @@ while IFS= read -r file; do
-++++++++++-  ' changes.diff)
-+++++++++++  ' changes.diff | uniq)
-+++++@@ -92 +105 @@ index 0000000..a6452b3
-+++++-++++index 0000000..f9d24dc
-++++++++++index 0000000..8cd4f1a
-+++++@@ -95 +108 @@ index 0000000..a6452b3
-+++++-++++@@ -0,0 +1,876 @@
-++++++++++@@ -0,0 +1,977 @@
-+++++@@ -97 +110 @@ index 0000000..a6452b3
-+++++-+++++index 19cfdbc..daf61a1 100644
-+++++++++++index daf61a1..73bb862 100644
-+++++@@ -100,107 +113,3 @@ index 0000000..a6452b3
-+++++-+++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
-+++++-+++++-  # Define the output path for the scanner report in CSV format
-+++++-+++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++++-++++++  # Extract only the changed line numbers for the file
-+++++-++++++  line_numbers=$(awk -v file="$file" '
-+++++-++++++    BEGIN {inside=0; start_line=0; line_offset=0}
-+++++-++++++    /^diff --git/ {inside=0}
-+++++-++++++    $0 ~ file {inside=1}
-+++++-++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
-+++++-++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
-+++++-++++++  ' changes.diff)
-+++++-++++++
-+++++-++++++  # If no changed lines are found for this file, skip it
-+++++-++++++  if [ -z "$line_numbers" ]; then
-+++++-++++++    echo "No changed lines found in $file"
-+++++-++++++    continue
-+++++-++++++  fi
-+++++-++++++
-+++++-++++++  # Convert the line numbers to a JSON array format for jq filtering
-+++++-++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
-+++++-++++++
-+++++-++++++  echo "Changed lines for $file: $line_numbers_array"
-+++++-++++++
-+++++-++++++  # Define the output path for the scanner report in JSON format
-+++++-++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++++-+++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
-+++++-+++++-  # Run the SFDX scanner on the file and generate the report in CSV format
-+++++-+++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++++-++++++  # Run the SFDX scanner on the file and generate the report in JSON format
-+++++-++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++++-+++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
-+++++-+++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
-+++++-+++++-  echo "Filtering scanner report for $file for Line '70'..."
-+++++-+++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
-+++++-++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
-+++++-++++++  jq --argjson lines "$line_numbers_array" '
-+++++-++++++    [.[] | 
-+++++-++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+++++-++++++      select(.violations | length > 0)]
-+++++-++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
-+++++-+++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++++-+++++-    echo "No issues found for line '70' in $file"
-+++++-++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++++-++++++    echo "No issues found for changed lines in $file"
-+++++-+++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
-+++++-+++++-  echo "Filtered scanner report for $file (Line '70'):"
-+++++-+++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-++++++  echo "Filtered scanner report for $file (Changed lines):"
-+++++-++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++@@ -53 +77 @@ done <<< "$changed_files"
-+++++-+++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++++-++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++++-+++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
-+++++-+++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
-+++++-++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
-+++++-+++++@@ -60,2 +84,2 @@ fi
-+++++-+++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++++-+++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++++-++++++final_report="scanner-reports/final-filtered-scanner-report.json"
-+++++-++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
-+++++-+++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++++-+++++-echo "Final filtered scanner report (Line '70'):"
-+++++-++++++echo "Final filtered scanner report (Changed lines):"
-+++++-+++++@@ -67 +91 @@ cat "$final_report"
-+++++-+++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
-+++++-++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
-+++++-+++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
-+++++-+++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
-+++++-++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
-+++++-+++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
-+++++-+++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
-+++++-++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
-+++++-+++++@@ -77 +101 @@ else
-+++++-+++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
-+++++-++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
-+++++-+++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++++-+++++deleted file mode 100644
-+++++-+++++index 9d692ac..0000000
-+++++-+++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++++-++++++++ /dev/null
-+++++-+++++@@ -1,24 +0,0 @@
-+++++-+++++-0
-+++++-+++++-1
-+++++-+++++-2
-+++++-+++++-3
-+++++-+++++-4
-+++++-+++++-5
-+++++-+++++-60
-+++++-+++++-642
-+++++-+++++-643
-+++++-+++++-644
-+++++-+++++-645
-+++++-+++++-646
-+++++-+++++-647
-+++++-+++++-648
-+++++-+++++-649
-+++++-+++++-650
-+++++-+++++-651
-+++++-+++++-652
-+++++-+++++-653
-+++++-+++++-654
-+++++-+++++-655
-+++++-+++++-656
-+++++-+++++-657
-+++++-+++++-70
-+++++++++++@@ -61 +61 @@ while IFS= read -r file; do
-+++++++++++-      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-++++++++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | ($lines | map(tonumber) | index($ln) != null))]} | 
-+++++@@ -208,652 +117,881 @@ index 0000000..a6452b3
-+++++-+++++deleted file mode 100644
-+++++-+++++index 61d162d..0000000
-+++++-+++++--- a/changes.diff
-+++++-++++++++ /dev/null
-+++++-+++++@@ -1,647 +0,0 @@
-+++++-+++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++++-+++++-index 5b262e4..8c05f52 100644
-+++++-+++++---- a/.husky/pre-commit
-+++++-+++++-+++ b/.husky/pre-commit
-+++++-+++++-@@ -113 +113 @@ cat "$final_report"
-+++++-+++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-+++++-+++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
-+++++-+++++-diff --git a/changes.diff b/changes.diff
-+++++-+++++-index 9a218e6..4fe1995 100644
-+++++-+++++---- a/changes.diff
-+++++-+++++-+++ b/changes.diff
-+++++-+++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++++-+++++--index aa6762f..586962b 100644
-+++++-+++++-+index 586962b..5b262e4 100644
-+++++-+++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
-+++++-+++++--@@ -41 +41 @@ while IFS= read -r file; do
-+++++-+++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-+++++-+++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
-+++++-+++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
-+++++-+++++---  # Extract line numbers as a comma-separated string for filtering later
-+++++-+++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-+++++-+++++--+  # Extract line numbers as an array for filtering later
-+++++-+++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-+++++-+++++--@@ -66 +66 @@ while IFS= read -r file; do
-+++++-+++++---  if [ -z "$line_numbers" ]; then
-+++++-+++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
-+++++-+++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
-+++++-+++++--+  # Convert the array of line numbers into a format that can be used by awk
-+++++-+++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-+++++-+++++--+  lines_for_filter="${lines_for_filter:1}"
-+++++-+++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
-+++++-+++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
-+++++-+++++-+-  awk -v file="$file" '
-+++++-+++++-++  # Extract only the changed line numbers for the file
-+++++-+++++-++  line_numbers=$(awk -v file="$file" '
-+++++-+++++-+@@ -42 +42 @@ while IFS= read -r file; do
-+++++-+++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
-+++++-+++++-++  ' changes.diff)
-+++++-+++++-+@@ -45 +45 @@ while IFS= read -r file; do
-+++++-+++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
-+++++-+++++-++  if [ -z "$line_numbers" ]; then
-+++++-+++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
-+++++-+++++-+-  # Extract line numbers as an array for filtering later
-+++++-+++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-+++++-+++++-++  # Convert the line numbers to a comma-separated string for matching
-+++++-+++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
-+++++-+++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
-+++++-+++++--@@ -73 +77 @@ while IFS= read -r file; do
-+++++-+++++---  awk -v lines="$line_numbers" '
-+++++-+++++--+  awk -v lines="$lines_for_filter" '
-+++++-+++++--@@ -81 +85 @@ while IFS= read -r file; do
-+++++-+++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+++++-+++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-+++++-+++++--@@ -111 +115 @@ cat "$final_report"
-+++++-+++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-+++++-+++++-++  echo "Changed lines for $file: $line_numbers_string"
-+++++-+++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
-+++++-+++++-+-  # Ensure that line_numbers is not empty
-+++++-+++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
-+++++-+++++-++  # Ensure that line_numbers_string is not empty
-+++++-+++++-++  if [ -z "$line_numbers_string" ]; then
-+++++-+++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
-+++++-+++++-+-  # Convert the array of line numbers into a format that can be used by awk
-+++++-+++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-+++++-+++++-+-  lines_for_filter="${lines_for_filter:1}"
-+++++-+++++-+-
-+++++-+++++-+@@ -77 +75 @@ while IFS= read -r file; do
-+++++-+++++-+-  awk -v lines="$lines_for_filter" '
-+++++-+++++-++  awk -v lines="$line_numbers_string" '
-+++++-+++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-+++++-+++++--index 0e43eee..a206584 100644
-+++++-+++++-+index a206584..9d692ac 100644
-+++++-+++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
-+++++-+++++--@@ -1 +1,6 @@
-+++++-+++++---70 :           System.debug('Hi Hello');
-+++++-+++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++--+1 : index 1ec7a54..870d508 100644
-+++++-+++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++++-+++++--+4 : -          System.debug('Hi');
-+++++-+++++--+70 :           System.debug('Hi');
-+++++-+++++-+@@ -1,6 +1,24 @@
-+++++-+++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-+-1 : index 1ec7a54..870d508 100644
-+++++-+++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++++-+++++-+-4 : -          System.debug('Hi');
-+++++-+++++-+-70 :           System.debug('Hi');
-+++++-+++++-++0
-+++++-+++++-++1
-+++++-+++++-++2
-+++++-+++++-++3
-+++++-+++++-++4
-+++++-+++++-++5
-+++++-+++++-++60
-+++++-+++++-++642
-+++++-+++++-++643
-+++++-+++++-++644
-+++++-+++++-++645
-+++++-+++++-++646
-+++++-+++++-++647
-+++++-+++++-++648
-+++++-+++++-++649
-+++++-+++++-++650
-+++++-+++++-++651
-+++++-+++++-++652
-+++++-+++++-++653
-+++++-+++++-++654
-+++++-+++++-++655
-+++++-+++++-++656
-+++++-+++++-++657
-+++++-+++++-++70
-+++++-+++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
-+++++-+++++--index 760971b..3dfa538 100644
-+++++-+++++-+index 3dfa538..9a218e6 100644
-+++++-+++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
-+++++-+++++---index 255a037..525d43a 100644
-+++++-+++++--+index 525d43a..aa6762f 100644
-+++++-+++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-+++++-+++++---@@ -50 +50 @@ while IFS= read -r file; do
-+++++-+++++----  # Extract line numbers as a comma-separated string for use in jq filtering
-+++++-+++++---+  # Extract line numbers as a comma-separated string for filtering later
-+++++-+++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+++++-+++++----  # Define the output path for the scanner report
-+++++-+++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++++-+++++---+  # Define the output path for the scanner report in CSV format
-+++++-+++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++++-+++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+++++-+++++----  # Run the SFDX scanner on the file and generate the report
-+++++-+++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++++-+++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
-+++++-+++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++++-+++++---@@ -71 +71 @@ while IFS= read -r file; do
-+++++-+++++----  # Filter the scanner report based on the changed line numbers
-+++++-+++++---+  # Filter the CSV scanner report based on the changed line numbers
-+++++-+++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+++++-+++++----  jq --arg lines "$line_numbers" '
-+++++-+++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+++++-+++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++---+  awk -v lines="$line_numbers" '
-+++++-+++++---+  BEGIN {
-+++++-+++++---+    FS=OFS=",";
-+++++-+++++---+    split(lines, arr, ",");  # Split the line numbers into an array
-+++++-+++++---+    for (i in arr) {
-+++++-+++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+++++-+++++---+    }
-+++++-+++++---+  }
-+++++-+++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++++-+++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-+++++---@@ -78 +85 @@ while IFS= read -r file; do
-+++++-+++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++++-+++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++++-+++++---@@ -84 +91 @@ while IFS= read -r file; do
-+++++-+++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-+++++---@@ -89 +96 @@ done <<< "$changed_files"
-+++++-+++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++++-+++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++++-+++++---@@ -95,2 +102,4 @@ fi
-+++++-+++++----# Combine all filtered reports into one final report
-+++++-+++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+++++-+++++---+# Combine all filtered reports into one final report (optional)
-+++++-+++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+++++-+++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++++-+++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++++-+++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+++++-+++++----# Parse the final filtered scanner report and check for severity 3 issues
-+++++-+++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+++++-+++++---+echo "Final filtered scanner report:"
-+++++-+++++---+cat "$final_report"
-+++++-+++++---+
-+++++-+++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+++++-+++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++--+@@ -75 +75 @@ while IFS= read -r file; do
-+++++-+++++--+-    FS=OFS=",";
-+++++-+++++--++    FS=OFS=",";  # Define CSV format
-+++++-+++++--+@@ -81 +81 @@ while IFS= read -r file; do
-+++++-+++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++++-+++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+++++-+++++--+@@ -111 +111 @@ cat "$final_report"
-+++++-+++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++++-+++++--+new file mode 100644
-+++++-+++++--+index 0000000..0e43eee
-+++++-+++++--+--- /dev/null
-+++++-+++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++++-+++++--+@@ -0,0 +1 @@
-+++++-+++++--++70 :           System.debug('Hi Hello');
-+++++-+++++--+diff --git a/changes.diff b/changes.diff
-+++++-+++++--+new file mode 100644
-+++++-+++++--+index 0000000..760971b
-+++++-+++++--+--- /dev/null
-+++++-+++++--++++ b/changes.diff
-+++++-+++++--+@@ -0,0 +1,65 @@
-+++++-+++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++++-+++++--++index 255a037..525d43a 100644
-+++++-+++++--++--- a/.husky/pre-commit
-+++++-+++++--+++++ b/.husky/pre-commit
-+++++-+++++--++@@ -50 +50 @@ while IFS= read -r file; do
-+++++-+++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
-+++++-+++++--+++  # Extract line numbers as a comma-separated string for filtering later
-+++++-+++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+++++-+++++--++-  # Define the output path for the scanner report
-+++++-+++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++++-+++++--+++  # Define the output path for the scanner report in CSV format
-+++++-+++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++++-+++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+++++-+++++--++-  # Run the SFDX scanner on the file and generate the report
-+++++-+++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++++-+++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
-+++++-+++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++++-+++++--++@@ -71 +71 @@ while IFS= read -r file; do
-+++++-+++++--++-  # Filter the scanner report based on the changed line numbers
-+++++-+++++--+++  # Filter the CSV scanner report based on the changed line numbers
-+++++-+++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+++++-+++++--++-  jq --arg lines "$line_numbers" '
-+++++-+++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+++++-+++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++--+++  awk -v lines="$line_numbers" '
-+++++-+++++--+++  BEGIN {
-+++++-+++++--+++    FS=OFS=",";
-+++++-+++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
-+++++-+++++--+++    for (i in arr) {
-+++++-+++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+++++-+++++--+++    }
-+++++-+++++--+++  }
-+++++-+++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++++-+++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-+++++--++@@ -78 +85 @@ while IFS= read -r file; do
-+++++-+++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++++-+++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++++-+++++--++@@ -84 +91 @@ while IFS= read -r file; do
-+++++-+++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-+++++--++@@ -89 +96 @@ done <<< "$changed_files"
-+++++-+++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++++-+++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++++-+++++--++@@ -95,2 +102,4 @@ fi
-+++++-+++++--++-# Combine all filtered reports into one final report
-+++++-+++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+++++-+++++--+++# Combine all filtered reports into one final report (optional)
-+++++-+++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+++++-+++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++++-+++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++++-+++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+++++-+++++--++-# Parse the final filtered scanner report and check for severity 3 issues
-+++++-+++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+++++-+++++--+++echo "Final filtered scanner report:"
-+++++-+++++--+++cat "$final_report"
-+++++-+++++--+++
-+++++-+++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+++++-+++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++--++index 1ec7a54..870d508 100644
-+++++-+++++--++--- a/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++++-+++++--++-          System.debug('Hi');
-+++++-+++++--+++          System.debug('Hi Hello');
-+++++-+++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+++++-+++++---index 1ec7a54..870d508 100644
-+++++-+++++--+index 870d508..1ec7a54 100644
-+++++-+++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-+++++-+++++----          System.debug('Hi');
-+++++-+++++---+          System.debug('Hi Hello');
-+++++-+++++--+-          System.debug('Hi Hello');
-+++++-+++++--++          System.debug('Hi');
-+++++-+++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++++-+++++--+new file mode 100644
-+++++-+++++--+index 0000000..5a3a1ac
-+++++-+++++--+--- /dev/null
-+++++-+++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++++-+++++--+@@ -0,0 +1 @@
-+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++-+++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+++++-+++++--+new file mode 100644
-+++++-+++++--+index 0000000..5a3a1ac
-+++++-+++++--+--- /dev/null
-+++++-+++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
-+++++-+++++--+@@ -0,0 +1 @@
-+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++-+++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++++-+++++--+new file mode 100644
-+++++-+++++--+index 0000000..e1ef0f0
-+++++-+++++--+--- /dev/null
-+++++-+++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++++-+++++--+@@ -0,0 +1,5 @@
-+++++-+++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++-+++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++++-+++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++++-+++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++++-+++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++++-+++++-+-index 525d43a..aa6762f 100644
-+++++-+++++-++index aa6762f..586962b 100644
-+++++-+++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
-+++++-+++++-+-@@ -75 +75 @@ while IFS= read -r file; do
-+++++-+++++-+--    FS=OFS=",";
-+++++-+++++-+-+    FS=OFS=",";  # Define CSV format
-+++++-+++++-+-@@ -81 +81 @@ while IFS= read -r file; do
-+++++-+++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++++-+++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+++++-+++++-+-@@ -111 +111 @@ cat "$final_report"
-+++++-+++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++-++@@ -41 +41 @@ while IFS= read -r file; do
-+++++-+++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-+++++-+++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
-+++++-+++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
-+++++-+++++-++-  # Extract line numbers as a comma-separated string for filtering later
-+++++-+++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-+++++-+++++-+++  # Extract line numbers as an array for filtering later
-+++++-+++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-+++++-+++++-++@@ -66 +66 @@ while IFS= read -r file; do
-+++++-+++++-++-  if [ -z "$line_numbers" ]; then
-+++++-+++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
-+++++-+++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
-+++++-+++++-+++  # Convert the array of line numbers into a format that can be used by awk
-+++++-+++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-+++++-+++++-+++  lines_for_filter="${lines_for_filter:1}"
-+++++-+++++-+++
-+++++-+++++-++@@ -73 +77 @@ while IFS= read -r file; do
-+++++-+++++-++-  awk -v lines="$line_numbers" '
-+++++-+++++-+++  awk -v lines="$lines_for_filter" '
-+++++-+++++-++@@ -81 +85 @@ while IFS= read -r file; do
-+++++-+++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+++++-+++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-+++++-+++++-++@@ -111 +115 @@ cat "$final_report"
-+++++-+++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-+++++-+++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-+++++-+++++-+-new file mode 100644
-+++++-+++++-+-index 0000000..0e43eee
-+++++-+++++-+---- /dev/null
-+++++-+++++-++index 0e43eee..a206584 100644
-+++++-+++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++++-+++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
-+++++-+++++-+-@@ -0,0 +1 @@
-+++++-+++++-+-+70 :           System.debug('Hi Hello');
-+++++-+++++-++@@ -1 +1,6 @@
-+++++-+++++-++-70 :           System.debug('Hi Hello');
-+++++-+++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-+++1 : index 1ec7a54..870d508 100644
-+++++-+++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++++-+++++-+++4 : -          System.debug('Hi');
-+++++-+++++-+++70 :           System.debug('Hi');
-+++++-+++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
-+++++-+++++-+-new file mode 100644
-+++++-+++++-+-index 0000000..760971b
-+++++-+++++-+---- /dev/null
-+++++-+++++-++index 760971b..3dfa538 100644
-+++++-+++++-++--- a/changes.diff
-+++++-+++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
-+++++-+++++-+-@@ -0,0 +1,65 @@
-+++++-+++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++++-+++++-+-+index 255a037..525d43a 100644
-+++++-+++++-+-+--- a/.husky/pre-commit
-+++++-+++++-+-++++ b/.husky/pre-commit
-+++++-+++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
-+++++-+++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
-+++++-+++++-+-++  # Extract line numbers as a comma-separated string for filtering later
-+++++-+++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+++++-+++++-+-+-  # Define the output path for the scanner report
-+++++-+++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++++-+++++-+-++  # Define the output path for the scanner report in CSV format
-+++++-+++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++++-+++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+++++-+++++-+-+-  # Run the SFDX scanner on the file and generate the report
-+++++-+++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++++-+++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
-+++++-+++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++++-+++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
-+++++-+++++-+-+-  # Filter the scanner report based on the changed line numbers
-+++++-+++++-+-++  # Filter the CSV scanner report based on the changed line numbers
-+++++-+++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+++++-+++++-+-+-  jq --arg lines "$line_numbers" '
-+++++-+++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+++++-+++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++-+-++  awk -v lines="$line_numbers" '
-+++++-+++++-+-++  BEGIN {
-+++++-+++++-+-++    FS=OFS=",";
-+++++-+++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
-+++++-+++++-+-++    for (i in arr) {
-+++++-+++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+++++-+++++-+-++    }
-+++++-+++++-+-++  }
-+++++-+++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++++-+++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-+++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
-+++++-+++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++++-+++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++++-+++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
-+++++-+++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-+++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
-+++++-+++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++++-+++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++++-+++++-+-+@@ -95,2 +102,4 @@ fi
-+++++-+++++-+-+-# Combine all filtered reports into one final report
-+++++-+++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+++++-+++++-+-++# Combine all filtered reports into one final report (optional)
-+++++-+++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+++++-+++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++++-+++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++++-+++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+++++-+++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
-+++++-+++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+++++-+++++-+-++echo "Final filtered scanner report:"
-+++++-+++++-+-++cat "$final_report"
-+++++-+++++-+-++
-+++++-+++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+++++-+++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-+-+index 1ec7a54..870d508 100644
-+++++-+++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++++-+++++-+-+-          System.debug('Hi');
-+++++-+++++-+-++          System.debug('Hi Hello');
-+++++-+++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++++-+++++-++-index 255a037..525d43a 100644
-+++++-+++++-+++index 525d43a..aa6762f 100644
-+++++-+++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-+++++-+++++-++-@@ -50 +50 @@ while IFS= read -r file; do
-+++++-+++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
-+++++-+++++-++-+  # Extract line numbers as a comma-separated string for filtering later
-+++++-+++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+++++-+++++-++--  # Define the output path for the scanner report
-+++++-+++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++++-+++++-++-+  # Define the output path for the scanner report in CSV format
-+++++-+++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++++-+++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+++++-+++++-++--  # Run the SFDX scanner on the file and generate the report
-+++++-+++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++++-+++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
-+++++-+++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++++-+++++-++-@@ -71 +71 @@ while IFS= read -r file; do
-+++++-+++++-++--  # Filter the scanner report based on the changed line numbers
-+++++-+++++-++-+  # Filter the CSV scanner report based on the changed line numbers
-+++++-+++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+++++-+++++-++--  jq --arg lines "$line_numbers" '
-+++++-+++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+++++-+++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++-++-+  awk -v lines="$line_numbers" '
-+++++-+++++-++-+  BEGIN {
-+++++-+++++-++-+    FS=OFS=",";
-+++++-+++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
-+++++-+++++-++-+    for (i in arr) {
-+++++-+++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+++++-+++++-++-+    }
-+++++-+++++-++-+  }
-+++++-+++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++++-+++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-+++++-++-@@ -78 +85 @@ while IFS= read -r file; do
-+++++-+++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++++-+++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++++-+++++-++-@@ -84 +91 @@ while IFS= read -r file; do
-+++++-+++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-+++++-++-@@ -89 +96 @@ done <<< "$changed_files"
-+++++-+++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++++-+++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++++-+++++-++-@@ -95,2 +102,4 @@ fi
-+++++-+++++-++--# Combine all filtered reports into one final report
-+++++-+++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+++++-+++++-++-+# Combine all filtered reports into one final report (optional)
-+++++-+++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+++++-+++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++++-+++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++++-+++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+++++-+++++-++--# Parse the final filtered scanner report and check for severity 3 issues
-+++++-+++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+++++-+++++-++-+echo "Final filtered scanner report:"
-+++++-+++++-++-+cat "$final_report"
-+++++-+++++-++-+
-+++++-+++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+++++-+++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++-+++@@ -75 +75 @@ while IFS= read -r file; do
-+++++-+++++-+++-    FS=OFS=",";
-+++++-+++++-++++    FS=OFS=",";  # Define CSV format
-+++++-+++++-+++@@ -81 +81 @@ while IFS= read -r file; do
-+++++-+++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++++-+++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-+++++-+++++-+++@@ -111 +111 @@ cat "$final_report"
-+++++-+++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++++-+++++-+++new file mode 100644
-+++++-+++++-+++index 0000000..0e43eee
-+++++-+++++-+++--- /dev/null
-+++++-+++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++++-+++++-+++@@ -0,0 +1 @@
-+++++-+++++-++++70 :           System.debug('Hi Hello');
-+++++-+++++-+++diff --git a/changes.diff b/changes.diff
-+++++-+++++-+++new file mode 100644
-+++++-+++++-+++index 0000000..760971b
-+++++-+++++-+++--- /dev/null
-+++++-+++++-++++++ b/changes.diff
-+++++-+++++-+++@@ -0,0 +1,65 @@
-+++++-+++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-+++++-+++++-++++index 255a037..525d43a 100644
-+++++-+++++-++++--- a/.husky/pre-commit
-+++++-+++++-+++++++ b/.husky/pre-commit
-+++++-+++++-++++@@ -50 +50 @@ while IFS= read -r file; do
-+++++-+++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
-+++++-+++++-+++++  # Extract line numbers as a comma-separated string for filtering later
-+++++-+++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-+++++-+++++-++++-  # Define the output path for the scanner report
-+++++-+++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-+++++-+++++-+++++  # Define the output path for the scanner report in CSV format
-+++++-+++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++++-+++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-+++++-+++++-++++-  # Run the SFDX scanner on the file and generate the report
-+++++-+++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-+++++-+++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
-+++++-+++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++++-+++++-++++@@ -71 +71 @@ while IFS= read -r file; do
-+++++-+++++-++++-  # Filter the scanner report based on the changed line numbers
-+++++-+++++-+++++  # Filter the CSV scanner report based on the changed line numbers
-+++++-+++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-+++++-+++++-++++-  jq --arg lines "$line_numbers" '
-+++++-+++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-+++++-+++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++-+++++  awk -v lines="$line_numbers" '
-+++++-+++++-+++++  BEGIN {
-+++++-+++++-+++++    FS=OFS=",";
-+++++-+++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
-+++++-+++++-+++++    for (i in arr) {
-+++++-+++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-+++++-+++++-+++++    }
-+++++-+++++-+++++  }
-+++++-+++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-+++++-+++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-+++++-++++@@ -78 +85 @@ while IFS= read -r file; do
-+++++-+++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++++-+++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-+++++-+++++-++++@@ -84 +91 @@ while IFS= read -r file; do
-+++++-+++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-+++++-+++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++-+++++-++++@@ -89 +96 @@ done <<< "$changed_files"
-+++++-+++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-+++++-+++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++++-+++++-++++@@ -95,2 +102,4 @@ fi
-+++++-+++++-++++-# Combine all filtered reports into one final report
-+++++-+++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-+++++-+++++-+++++# Combine all filtered reports into one final report (optional)
-+++++-+++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-+++++-+++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
-+++++-+++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++++-+++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-+++++-+++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
-+++++-+++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-+++++-+++++-+++++echo "Final filtered scanner report:"
-+++++-+++++-+++++cat "$final_report"
-+++++-+++++-+++++
-+++++-+++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-+++++-+++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-+++++-+++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-++++index 1ec7a54..870d508 100644
-+++++-+++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++++-+++++-++++-          System.debug('Hi');
-+++++-+++++-+++++          System.debug('Hi Hello');
-+++++-+++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+++++-+++++-++-index 1ec7a54..870d508 100644
-+++++-+++++-+++index 870d508..1ec7a54 100644
-+++++-+++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-+++++-+++++-++--          System.debug('Hi');
-+++++-+++++-++-+          System.debug('Hi Hello');
-+++++-+++++-+++-          System.debug('Hi Hello');
-+++++-+++++-++++          System.debug('Hi');
-+++++-+++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++++-+++++-+++new file mode 100644
-+++++-+++++-+++index 0000000..5a3a1ac
-+++++-+++++-+++--- /dev/null
-+++++-+++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++++-+++++-+++@@ -0,0 +1 @@
-+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++-+++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+++++-+++++-+++new file mode 100644
-+++++-+++++-+++index 0000000..5a3a1ac
-+++++-+++++-+++--- /dev/null
-+++++-+++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
-+++++-+++++-+++@@ -0,0 +1 @@
-+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++++-+++++-+++new file mode 100644
-+++++-+++++-+++index 0000000..e1ef0f0
-+++++-+++++-+++--- /dev/null
-+++++-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++++-+++++-+++@@ -0,0 +1,5 @@
-+++++-+++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++-+++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++++-+++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++++-+++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++++-+++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++++-+++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+++++-+++++-+-index 870d508..1ec7a54 100644
-+++++-+++++-++index 1ec7a54..870d508 100644
-+++++-+++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
-+++++-+++++-+--          System.debug('Hi Hello');
-+++++-+++++-+-+          System.debug('Hi');
-+++++-+++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++++-+++++-+-new file mode 100644
-+++++-+++++-+-index 0000000..5a3a1ac
-+++++-+++++-+---- /dev/null
-+++++-+++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++++-+++++-+-@@ -0,0 +1 @@
-+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++-+++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+++++-+++++-+-new file mode 100644
-+++++-+++++-+-index 0000000..5a3a1ac
-+++++-+++++-+---- /dev/null
-+++++-+++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
-+++++-+++++-+-@@ -0,0 +1 @@
-+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++-+++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++++-+++++-+-new file mode 100644
-+++++-+++++-+-index 0000000..e1ef0f0
-+++++-+++++-+---- /dev/null
-+++++-+++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++++-+++++-+-@@ -0,0 +1,5 @@
-+++++-+++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++-+++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++++-+++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++++-+++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++++-+++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++++-+++++-++-          System.debug('Hi');
-+++++-+++++-+++          System.debug('Hi Hello');
-+++++-+++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+++++-+++++--index 1ec7a54..870d508 100644
-+++++-+++++-+index 870d508..5eafcac 100644
-+++++-+++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
-+++++-+++++---          System.debug('Hi');
-+++++-+++++--+          System.debug('Hi Hello');
-+++++-+++++-+-          System.debug('Hi Hello');
-+++++-+++++-++          System.debug('Happy');
-+++++-+++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-index 5eafcac..1ec7a54 100644
-+++++-+++++---- a/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-+++ b/force-app/main/default/classes/Account_Insert.cls
-+++++-+++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++++-+++++--          System.debug('Happy');
-+++++-+++++-+          System.debug('Hi');
-+++++++++++new file mode 100644
-+++++++++++index 0000000..f9d24dc
-+++++++++++--- /dev/null
-++++++++++++++ b/changes.diff
-+++++++++++@@ -0,0 +1,876 @@
-++++++++++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++++++++++index 19cfdbc..daf61a1 100644
-++++++++++++--- a/.husky/pre-commit
-+++++++++++++++ b/.husky/pre-commit
-++++++++++++@@ -25,2 +25,22 @@ while IFS= read -r file; do
-++++++++++++-  # Define the output path for the scanner report in CSV format
-++++++++++++-  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-+++++++++++++  # Extract only the changed line numbers for the file
-+++++++++++++  line_numbers=$(awk -v file="$file" '
-+++++++++++++    BEGIN {inside=0; start_line=0; line_offset=0}
-+++++++++++++    /^diff --git/ {inside=0}
-+++++++++++++    $0 ~ file {inside=1}
-+++++++++++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start_line = substr(arr[2], 2); line_offset=0; next}
-+++++++++++++    inside && /^[+][^+]/ {print start_line + line_offset++}
-+++++++++++++  ' changes.diff)
-+++++++++++++
-+++++++++++++  # If no changed lines are found for this file, skip it
-+++++++++++++  if [ -z "$line_numbers" ]; then
-+++++++++++++    echo "No changed lines found in $file"
-+++++++++++++    continue
-+++++++++++++  fi
-+++++++++++++
-+++++++++++++  # Convert the line numbers to a JSON array format for jq filtering
-+++++++++++++  line_numbers_array=$(echo "$line_numbers" | jq -R . | jq -s .)
-+++++++++++++
-+++++++++++++  echo "Changed lines for $file: $line_numbers_array"
-+++++++++++++
-+++++++++++++  # Define the output path for the scanner report in JSON format
-+++++++++++++  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++++++++++@@ -28,2 +48,2 @@ while IFS= read -r file; do
-++++++++++++-  # Run the SFDX scanner on the file and generate the report in CSV format
-++++++++++++-  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-+++++++++++++  # Run the SFDX scanner on the file and generate the report in JSON format
-+++++++++++++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++++++++++@@ -37,3 +57,7 @@ while IFS= read -r file; do
-++++++++++++-  # Filter the CSV scanner report for rows where the "Line" field equals "70"
-++++++++++++-  echo "Filtering scanner report for $file for Line '70'..."
-++++++++++++-  awk -F, 'NR == 1 || $4 == "70"' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++++++++++  # Filter the JSON scanner report based on the dynamically extracted changed line numbers
-+++++++++++++  echo "Filtering scanner report for $file for changed lines: $line_numbers_array"
-+++++++++++++  jq --argjson lines "$line_numbers_array" '
-+++++++++++++    [.[] | 
-+++++++++++++      {engine, fileName, violations: [.violations[] | select(.line as $ln | $lines | index($ln) != null)]} | 
-+++++++++++++      select(.violations | length > 0)]
-+++++++++++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++@@ -42,2 +66,2 @@ while IFS= read -r file; do
-++++++++++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++++++++++-    echo "No issues found for line '70' in $file"
-+++++++++++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-+++++++++++++    echo "No issues found for changed lines in $file"
-++++++++++++@@ -47,2 +71,2 @@ while IFS= read -r file; do
-++++++++++++-  echo "Filtered scanner report for $file (Line '70'):"
-++++++++++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-+++++++++++++  echo "Filtered scanner report for $file (Changed lines):"
-+++++++++++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++@@ -53 +77 @@ done <<< "$changed_files"
-++++++++++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-+++++++++++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++++++++++@@ -55 +79 @@ if [ -z "$filtered_reports" ]; then
-++++++++++++-  echo "No vulnerabilities found on line '70'. Proceeding with commit."
-+++++++++++++  echo "No vulnerabilities found on the changed lines. Proceeding with commit."
-++++++++++++@@ -60,2 +84,2 @@ fi
-++++++++++++-final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++++++++++-cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-+++++++++++++final_report="scanner-reports/final-filtered-scanner-report.json"
-+++++++++++++jq -s 'add' scanner-reports/filtered-scanner-report-*.json > "$final_report"
-++++++++++++@@ -63 +87 @@ cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++++++++++-echo "Final filtered scanner report (Line '70'):"
-+++++++++++++echo "Final filtered scanner report (Changed lines):"
-++++++++++++@@ -67 +91 @@ cat "$final_report"
-++++++++++++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")
-+++++++++++++severity_fail_count=$(jq '[.[] | select(.violations[]?.severity == 3)] | length' "$final_report")
-++++++++++++@@ -70 +94 @@ severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_re
-++++++++++++-echo "Severity Fail Count (Line '70'): $severity_fail_count"
-+++++++++++++echo "Severity Fail Count (Changed lines): $severity_fail_count"
-++++++++++++@@ -74 +98 @@ if [ "$severity_fail_count" -gt 0 ]; then
-++++++++++++-  echo "Blocking your commit due to vulnerabilities found with severity 3 on Line '70'."
-+++++++++++++  echo "Blocking your commit due to vulnerabilities found with severity 3 on changed lines."
-++++++++++++@@ -77 +101 @@ else
-++++++++++++-  echo "No vulnerabilities with severity 3 found on Line '70'. Proceeding with commit."
-+++++++++++++  echo "No vulnerabilities with severity 3 found on changed lines. Proceeding with commit."
-++++++++++++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++++++++++deleted file mode 100644
-++++++++++++index 9d692ac..0000000
-++++++++++++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-+++++++++++++++ /dev/null
-++++++++++++@@ -1,24 +0,0 @@
-++++++++++++-0
-++++++++++++-1
-++++++++++++-2
-++++++++++++-3
-++++++++++++-4
-++++++++++++-5
-++++++++++++-60
-++++++++++++-642
-++++++++++++-643
-++++++++++++-644
-++++++++++++-645
-++++++++++++-646
-++++++++++++-647
-++++++++++++-648
-++++++++++++-649
-++++++++++++-650
-++++++++++++-651
-++++++++++++-652
-++++++++++++-653
-++++++++++++-654
-++++++++++++-655
-++++++++++++-656
-++++++++++++-657
-++++++++++++-70
-++++++++++++diff --git a/changes.diff b/changes.diff
-++++++++++++deleted file mode 100644
-++++++++++++index 61d162d..0000000
-++++++++++++--- a/changes.diff
-+++++++++++++++ /dev/null
-++++++++++++@@ -1,647 +0,0 @@
-++++++++++++-diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++++++++++-index 5b262e4..8c05f52 100644
-++++++++++++---- a/.husky/pre-commit
-++++++++++++-+++ b/.husky/pre-commit
-++++++++++++-@@ -113 +113 @@ cat "$final_report"
-++++++++++++--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-++++++++++++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count+0}' "$final_report")  # $2 is the Severity column
-++++++++++++-diff --git a/changes.diff b/changes.diff
-++++++++++++-index 9a218e6..4fe1995 100644
-++++++++++++---- a/changes.diff
-++++++++++++-+++ b/changes.diff
-++++++++++++-@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++++++++++--index aa6762f..586962b 100644
-++++++++++++-+index 586962b..5b262e4 100644
-++++++++++++-@@ -5,15 +5,16 @@ index aa6762f..586962b 100644
-++++++++++++--@@ -41 +41 @@ while IFS= read -r file; do
-++++++++++++---    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-++++++++++++--+    inside && /^[+][^+]/ {print start_line + line_offset++}
-++++++++++++--@@ -50,2 +50,2 @@ while IFS= read -r file; do
-++++++++++++---  # Extract line numbers as a comma-separated string for filtering later
-++++++++++++---  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-++++++++++++--+  # Extract line numbers as an array for filtering later
-++++++++++++--+  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-++++++++++++--@@ -66 +66 @@ while IFS= read -r file; do
-++++++++++++---  if [ -z "$line_numbers" ]; then
-++++++++++++--+  if [ ${#line_numbers[@]} -eq 0 ]; then
-++++++++++++--@@ -70,0 +71,4 @@ while IFS= read -r file; do
-++++++++++++--+  # Convert the array of line numbers into a format that can be used by awk
-++++++++++++--+  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-++++++++++++--+  lines_for_filter="${lines_for_filter:1}"
-++++++++++++-+@@ -35,2 +35,2 @@ while IFS= read -r file; do
-++++++++++++-+-  # Extract the actual changed lines and corresponding line numbers for the file
-++++++++++++-+-  awk -v file="$file" '
-++++++++++++-++  # Extract only the changed line numbers for the file
-++++++++++++-++  line_numbers=$(awk -v file="$file" '
-++++++++++++-+@@ -42 +42 @@ while IFS= read -r file; do
-++++++++++++-+-  ' changes.diff > "changed_cls_lwc_lines_${clean_file}.txt"
-++++++++++++-++  ' changes.diff)
-++++++++++++-+@@ -45 +45 @@ while IFS= read -r file; do
-++++++++++++-+-  if [ ! -s "changed_cls_lwc_lines_${clean_file}.txt" ]; then
-++++++++++++-++  if [ -z "$line_numbers" ]; then
-++++++++++++-+@@ -50,2 +50,4 @@ while IFS= read -r file; do
-++++++++++++-+-  # Extract line numbers as an array for filtering later
-++++++++++++-+-  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-++++++++++++-++  # Convert the line numbers to a comma-separated string for matching
-++++++++++++-++  line_numbers_string=$(echo "$line_numbers" | tr '\n' ',' | sed 's/,$//')
-++++++++++++-@@ -21,9 +22,14 @@ index aa6762f..586962b 100644
-++++++++++++--@@ -73 +77 @@ while IFS= read -r file; do
-++++++++++++---  awk -v lines="$line_numbers" '
-++++++++++++--+  awk -v lines="$lines_for_filter" '
-++++++++++++--@@ -81 +85 @@ while IFS= read -r file; do
-++++++++++++---  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++++++++++++--+  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-++++++++++++--@@ -111 +115 @@ cat "$final_report"
-++++++++++++---severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++--+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-++++++++++++-++  echo "Changed lines for $file: $line_numbers_string"
-++++++++++++-+@@ -65,2 +67,2 @@ while IFS= read -r file; do
-++++++++++++-+-  # Ensure that line_numbers is not empty
-++++++++++++-+-  if [ ${#line_numbers[@]} -eq 0 ]; then
-++++++++++++-++  # Ensure that line_numbers_string is not empty
-++++++++++++-++  if [ -z "$line_numbers_string" ]; then
-++++++++++++-+@@ -71,4 +72,0 @@ while IFS= read -r file; do
-++++++++++++-+-  # Convert the array of line numbers into a format that can be used by awk
-++++++++++++-+-  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-++++++++++++-+-  lines_for_filter="${lines_for_filter:1}"
-++++++++++++-+-
-++++++++++++-+@@ -77 +75 @@ while IFS= read -r file; do
-++++++++++++-+-  awk -v lines="$lines_for_filter" '
-++++++++++++-++  awk -v lines="$line_numbers_string" '
-++++++++++++-@@ -31 +37 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-++++++++++++--index 0e43eee..a206584 100644
-++++++++++++-+index a206584..9d692ac 100644
-++++++++++++-@@ -34,8 +40,31 @@ index 0e43eee..a206584 100644
-++++++++++++--@@ -1 +1,6 @@
-++++++++++++---70 :           System.debug('Hi Hello');
-++++++++++++--+0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++--+1 : index 1ec7a54..870d508 100644
-++++++++++++--+2 : --- a/force-app/main/default/classes/Account_Insert.cls
-++++++++++++--+3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++++++++++--+4 : -          System.debug('Hi');
-++++++++++++--+70 :           System.debug('Hi');
-++++++++++++-+@@ -1,6 +1,24 @@
-++++++++++++-+-0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-+-1 : index 1ec7a54..870d508 100644
-++++++++++++-+-2 : --- a/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-+-3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++++++++++-+-4 : -          System.debug('Hi');
-++++++++++++-+-70 :           System.debug('Hi');
-++++++++++++-++0
-++++++++++++-++1
-++++++++++++-++2
-++++++++++++-++3
-++++++++++++-++4
-++++++++++++-++5
-++++++++++++-++60
-++++++++++++-++642
-++++++++++++-++643
-++++++++++++-++644
-++++++++++++-++645
-++++++++++++-++646
-++++++++++++-++647
-++++++++++++-++648
-++++++++++++-++649
-++++++++++++-++650
-++++++++++++-++651
-++++++++++++-++652
-++++++++++++-++653
-++++++++++++-++654
-++++++++++++-++655
-++++++++++++-++656
-++++++++++++-++657
-++++++++++++-++70
-++++++++++++-@@ -43 +72 @@ diff --git a/changes.diff b/changes.diff
-++++++++++++--index 760971b..3dfa538 100644
-++++++++++++-+index 3dfa538..9a218e6 100644
-++++++++++++-@@ -47,177 +76,338 @@ index 760971b..3dfa538 100644
-++++++++++++---index 255a037..525d43a 100644
-++++++++++++--+index 525d43a..aa6762f 100644
-++++++++++++--@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-++++++++++++---@@ -50 +50 @@ while IFS= read -r file; do
-++++++++++++----  # Extract line numbers as a comma-separated string for use in jq filtering
-++++++++++++---+  # Extract line numbers as a comma-separated string for filtering later
-++++++++++++---@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++++++++++++----  # Define the output path for the scanner report
-++++++++++++----  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++++++++++---+  # Define the output path for the scanner report in CSV format
-++++++++++++---+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++++++++++++---@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++++++++++++----  # Run the SFDX scanner on the file and generate the report
-++++++++++++----  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++++++++++---+  # Run the SFDX scanner on the file and generate the report in CSV format
-++++++++++++---+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++++++++++++---@@ -71 +71 @@ while IFS= read -r file; do
-++++++++++++----  # Filter the scanner report based on the changed line numbers
-++++++++++++---+  # Filter the CSV scanner report based on the changed line numbers
-++++++++++++---@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++++++++++++----  jq --arg lines "$line_numbers" '
-++++++++++++----    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++++++++++++----  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++---+  awk -v lines="$line_numbers" '
-++++++++++++---+  BEGIN {
-++++++++++++---+    FS=OFS=",";
-++++++++++++---+    split(lines, arr, ",");  # Split the line numbers into an array
-++++++++++++---+    for (i in arr) {
-++++++++++++---+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++++++++++++---+    }
-++++++++++++---+  }
-++++++++++++---+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++++++++++---+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++++++++++---@@ -78 +85 @@ while IFS= read -r file; do
-++++++++++++----  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++++++++++++---+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++++++++++---@@ -84 +91 @@ while IFS= read -r file; do
-++++++++++++----  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++---+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++++++++++---@@ -89 +96 @@ done <<< "$changed_files"
-++++++++++++----filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++++++++++---+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++++++++++++---@@ -95,2 +102,4 @@ fi
-++++++++++++----# Combine all filtered reports into one final report
-++++++++++++----jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++++++++++++---+# Combine all filtered reports into one final report (optional)
-++++++++++++---+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++++++++++++---+final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++++++++++---+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++++++++++---@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++++++++++++----# Parse the final filtered scanner report and check for severity 3 issues
-++++++++++++----severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++++++++++++---+echo "Final filtered scanner report:"
-++++++++++++---+cat "$final_report"
-++++++++++++---+
-++++++++++++---+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++++++++++++---+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++--+@@ -75 +75 @@ while IFS= read -r file; do
-++++++++++++--+-    FS=OFS=",";
-++++++++++++--++    FS=OFS=",";  # Define CSV format
-++++++++++++--+@@ -81 +81 @@ while IFS= read -r file; do
-++++++++++++--+-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++++++++++--++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++++++++++++--+@@ -111 +111 @@ cat "$final_report"
-++++++++++++--+-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++--++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++--+diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++++++++++--+new file mode 100644
-++++++++++++--+index 0000000..0e43eee
-++++++++++++--+--- /dev/null
-++++++++++++--++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++++++++++--+@@ -0,0 +1 @@
-++++++++++++--++70 :           System.debug('Hi Hello');
-++++++++++++--+diff --git a/changes.diff b/changes.diff
-++++++++++++--+new file mode 100644
-++++++++++++--+index 0000000..760971b
-++++++++++++--+--- /dev/null
-++++++++++++--++++ b/changes.diff
-++++++++++++--+@@ -0,0 +1,65 @@
-++++++++++++--++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++++++++++--++index 255a037..525d43a 100644
-++++++++++++--++--- a/.husky/pre-commit
-++++++++++++--+++++ b/.husky/pre-commit
-++++++++++++--++@@ -50 +50 @@ while IFS= read -r file; do
-++++++++++++--++-  # Extract line numbers as a comma-separated string for use in jq filtering
-++++++++++++--+++  # Extract line numbers as a comma-separated string for filtering later
-++++++++++++--++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++++++++++++--++-  # Define the output path for the scanner report
-++++++++++++--++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++++++++++--+++  # Define the output path for the scanner report in CSV format
-++++++++++++--+++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++++++++++++--++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++++++++++++--++-  # Run the SFDX scanner on the file and generate the report
-++++++++++++--++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++++++++++--+++  # Run the SFDX scanner on the file and generate the report in CSV format
-++++++++++++--+++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++++++++++++--++@@ -71 +71 @@ while IFS= read -r file; do
-++++++++++++--++-  # Filter the scanner report based on the changed line numbers
-++++++++++++--+++  # Filter the CSV scanner report based on the changed line numbers
-++++++++++++--++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++++++++++++--++-  jq --arg lines "$line_numbers" '
-++++++++++++--++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++++++++++++--++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++--+++  awk -v lines="$line_numbers" '
-++++++++++++--+++  BEGIN {
-++++++++++++--+++    FS=OFS=",";
-++++++++++++--+++    split(lines, arr, ",");  # Split the line numbers into an array
-++++++++++++--+++    for (i in arr) {
-++++++++++++--+++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++++++++++++--+++    }
-++++++++++++--+++  }
-++++++++++++--+++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++++++++++--+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++++++++++--++@@ -78 +85 @@ while IFS= read -r file; do
-++++++++++++--++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++++++++++++--+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++++++++++--++@@ -84 +91 @@ while IFS= read -r file; do
-++++++++++++--++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++--+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++++++++++--++@@ -89 +96 @@ done <<< "$changed_files"
-++++++++++++--++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++++++++++--+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++++++++++++--++@@ -95,2 +102,4 @@ fi
-++++++++++++--++-# Combine all filtered reports into one final report
-++++++++++++--++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++++++++++++--+++# Combine all filtered reports into one final report (optional)
-++++++++++++--+++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++++++++++++--+++final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++++++++++--+++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++++++++++--++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++++++++++++--++-# Parse the final filtered scanner report and check for severity 3 issues
-++++++++++++--++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++++++++++++--+++echo "Final filtered scanner report:"
-++++++++++++--+++cat "$final_report"
-++++++++++++--+++
-++++++++++++--+++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++++++++++++--+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++--++index 1ec7a54..870d508 100644
-++++++++++++--++--- a/force-app/main/default/classes/Account_Insert.cls
-++++++++++++--+++++ b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++++++++++--++-          System.debug('Hi');
-++++++++++++--+++          System.debug('Hi Hello');
-++++++++++++--@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++++++++++++---index 1ec7a54..870d508 100644
-++++++++++++--+index 870d508..1ec7a54 100644
-++++++++++++--@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-++++++++++++----          System.debug('Hi');
-++++++++++++---+          System.debug('Hi Hello');
-++++++++++++--+-          System.debug('Hi Hello');
-++++++++++++--++          System.debug('Hi');
-++++++++++++--+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++++++++++--+new file mode 100644
-++++++++++++--+index 0000000..5a3a1ac
-++++++++++++--+--- /dev/null
-++++++++++++--++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++++++++++--+@@ -0,0 +1 @@
-++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++--+diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++++++++++++--+new file mode 100644
-++++++++++++--+index 0000000..5a3a1ac
-++++++++++++--+--- /dev/null
-++++++++++++--++++ b/scanner-reports/final-filtered-scanner-report.csv
-++++++++++++--+@@ -0,0 +1 @@
-++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++--+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++++++++++--+new file mode 100644
-++++++++++++--+index 0000000..e1ef0f0
-++++++++++++--+--- /dev/null
-++++++++++++--++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++++++++++--+@@ -0,0 +1,5 @@
-++++++++++++--++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++--++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++++++++++--++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++++++++++--++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++++++++++--++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++++++++++-+-index 525d43a..aa6762f 100644
-++++++++++++-++index aa6762f..586962b 100644
-++++++++++++-+@@ -5,9 +5,25 @@ index 525d43a..aa6762f 100644
-++++++++++++-+-@@ -75 +75 @@ while IFS= read -r file; do
-++++++++++++-+--    FS=OFS=",";
-++++++++++++-+-+    FS=OFS=",";  # Define CSV format
-++++++++++++-+-@@ -81 +81 @@ while IFS= read -r file; do
-++++++++++++-+--  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++++++++++-+-+  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++++++++++++-+-@@ -111 +111 @@ cat "$final_report"
-++++++++++++-+--severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++-+-+severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++-++@@ -41 +41 @@ while IFS= read -r file; do
-++++++++++++-++-    inside && /^[+][^+]/ {print start_line + line_offset++, ":", substr($0, 2)}
-++++++++++++-+++    inside && /^[+][^+]/ {print start_line + line_offset++}
-++++++++++++-++@@ -50,2 +50,2 @@ while IFS= read -r file; do
-++++++++++++-++-  # Extract line numbers as a comma-separated string for filtering later
-++++++++++++-++-  line_numbers=$(cut -d':' -f1 "changed_cls_lwc_lines_${clean_file}.txt" | tr '\n' ',' | sed 's/,$//')
-++++++++++++-+++  # Extract line numbers as an array for filtering later
-++++++++++++-+++  mapfile -t line_numbers < "changed_cls_lwc_lines_${clean_file}.txt"
-++++++++++++-++@@ -66 +66 @@ while IFS= read -r file; do
-++++++++++++-++-  if [ -z "$line_numbers" ]; then
-++++++++++++-+++  if [ ${#line_numbers[@]} -eq 0 ]; then
-++++++++++++-++@@ -70,0 +71,4 @@ while IFS= read -r file; do
-++++++++++++-+++  # Convert the array of line numbers into a format that can be used by awk
-++++++++++++-+++  lines_for_filter=$(printf ",%s" "${line_numbers[@]}")
-++++++++++++-+++  lines_for_filter="${lines_for_filter:1}"
-++++++++++++-+++
-++++++++++++-++@@ -73 +77 @@ while IFS= read -r file; do
-++++++++++++-++-  awk -v lines="$line_numbers" '
-++++++++++++-+++  awk -v lines="$lines_for_filter" '
-++++++++++++-++@@ -81 +85 @@ while IFS= read -r file; do
-++++++++++++-++-  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++++++++++++-+++  NR == 1 || (line_map[$4])  # $4 is the "Line" field in the CSV
-++++++++++++-++@@ -111 +115 @@ cat "$final_report"
-++++++++++++-++-severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++-+++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $2 is the Severity column
-++++++++++++-+@@ -15,3 +31,2 @@ diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_line
-++++++++++++-+-new file mode 100644
-++++++++++++-+-index 0000000..0e43eee
-++++++++++++-+---- /dev/null
-++++++++++++-++index 0e43eee..a206584 100644
-++++++++++++-++--- a/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++++++++++-+@@ -19,2 +34,8 @@ index 0000000..0e43eee
-++++++++++++-+-@@ -0,0 +1 @@
-++++++++++++-+-+70 :           System.debug('Hi Hello');
-++++++++++++-++@@ -1 +1,6 @@
-++++++++++++-++-70 :           System.debug('Hi Hello');
-++++++++++++-+++0 : diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-+++1 : index 1ec7a54..870d508 100644
-++++++++++++-+++2 : --- a/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-+++3 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++++++++++-+++4 : -          System.debug('Hi');
-++++++++++++-+++70 :           System.debug('Hi');
-++++++++++++-+@@ -22,3 +43,2 @@ diff --git a/changes.diff b/changes.diff
-++++++++++++-+-new file mode 100644
-++++++++++++-+-index 0000000..760971b
-++++++++++++-+---- /dev/null
-++++++++++++-++index 760971b..3dfa538 100644
-++++++++++++-++--- a/changes.diff
-++++++++++++-+@@ -26,66 +46,178 @@ index 0000000..760971b
-++++++++++++-+-@@ -0,0 +1,65 @@
-++++++++++++-+-+diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++++++++++-+-+index 255a037..525d43a 100644
-++++++++++++-+-+--- a/.husky/pre-commit
-++++++++++++-+-++++ b/.husky/pre-commit
-++++++++++++-+-+@@ -50 +50 @@ while IFS= read -r file; do
-++++++++++++-+-+-  # Extract line numbers as a comma-separated string for use in jq filtering
-++++++++++++-+-++  # Extract line numbers as a comma-separated string for filtering later
-++++++++++++-+-+@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++++++++++++-+-+-  # Define the output path for the scanner report
-++++++++++++-+-+-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++++++++++-+-++  # Define the output path for the scanner report in CSV format
-++++++++++++-+-++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++++++++++++-+-+@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++++++++++++-+-+-  # Run the SFDX scanner on the file and generate the report
-++++++++++++-+-+-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++++++++++-+-++  # Run the SFDX scanner on the file and generate the report in CSV format
-++++++++++++-+-++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++++++++++++-+-+@@ -71 +71 @@ while IFS= read -r file; do
-++++++++++++-+-+-  # Filter the scanner report based on the changed line numbers
-++++++++++++-+-++  # Filter the CSV scanner report based on the changed line numbers
-++++++++++++-+-+@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++++++++++++-+-+-  jq --arg lines "$line_numbers" '
-++++++++++++-+-+-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++++++++++++-+-+-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++-+-++  awk -v lines="$line_numbers" '
-++++++++++++-+-++  BEGIN {
-++++++++++++-+-++    FS=OFS=",";
-++++++++++++-+-++    split(lines, arr, ",");  # Split the line numbers into an array
-++++++++++++-+-++    for (i in arr) {
-++++++++++++-+-++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++++++++++++-+-++    }
-++++++++++++-+-++  }
-++++++++++++-+-++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++++++++++-+-++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++++++++++-+-+@@ -78 +85 @@ while IFS= read -r file; do
-++++++++++++-+-+-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++++++++++++-+-++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++++++++++-+-+@@ -84 +91 @@ while IFS= read -r file; do
-++++++++++++-+-+-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++-+-++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++++++++++-+-+@@ -89 +96 @@ done <<< "$changed_files"
-++++++++++++-+-+-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++++++++++-+-++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++++++++++++-+-+@@ -95,2 +102,4 @@ fi
-++++++++++++-+-+-# Combine all filtered reports into one final report
-++++++++++++-+-+-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++++++++++++-+-++# Combine all filtered reports into one final report (optional)
-++++++++++++-+-++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++++++++++++-+-++final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++++++++++-+-++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++++++++++-+-+@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++++++++++++-+-+-# Parse the final filtered scanner report and check for severity 3 issues
-++++++++++++-+-+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++++++++++++-+-++echo "Final filtered scanner report:"
-++++++++++++-+-++cat "$final_report"
-++++++++++++-+-++
-++++++++++++-+-++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++++++++++++-+-++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-+-+index 1ec7a54..870d508 100644
-++++++++++++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++++++++++-+-+-          System.debug('Hi');
-++++++++++++-+-++          System.debug('Hi Hello');
-++++++++++++-++@@ -2 +2 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++++++++++-++-index 255a037..525d43a 100644
-++++++++++++-+++index 525d43a..aa6762f 100644
-++++++++++++-++@@ -5,54 +5,87 @@ index 255a037..525d43a 100644
-++++++++++++-++-@@ -50 +50 @@ while IFS= read -r file; do
-++++++++++++-++--  # Extract line numbers as a comma-separated string for use in jq filtering
-++++++++++++-++-+  # Extract line numbers as a comma-separated string for filtering later
-++++++++++++-++-@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++++++++++++-++--  # Define the output path for the scanner report
-++++++++++++-++--  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++++++++++-++-+  # Define the output path for the scanner report in CSV format
-++++++++++++-++-+  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++++++++++++-++-@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++++++++++++-++--  # Run the SFDX scanner on the file and generate the report
-++++++++++++-++--  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++++++++++-++-+  # Run the SFDX scanner on the file and generate the report in CSV format
-++++++++++++-++-+  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++++++++++++-++-@@ -71 +71 @@ while IFS= read -r file; do
-++++++++++++-++--  # Filter the scanner report based on the changed line numbers
-++++++++++++-++-+  # Filter the CSV scanner report based on the changed line numbers
-++++++++++++-++-@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++++++++++++-++--  jq --arg lines "$line_numbers" '
-++++++++++++-++--    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++++++++++++-++--  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++-++-+  awk -v lines="$line_numbers" '
-++++++++++++-++-+  BEGIN {
-++++++++++++-++-+    FS=OFS=",";
-++++++++++++-++-+    split(lines, arr, ",");  # Split the line numbers into an array
-++++++++++++-++-+    for (i in arr) {
-++++++++++++-++-+      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++++++++++++-++-+    }
-++++++++++++-++-+  }
-++++++++++++-++-+  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++++++++++-++-+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++++++++++-++-@@ -78 +85 @@ while IFS= read -r file; do
-++++++++++++-++--  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++++++++++++-++-+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++++++++++-++-@@ -84 +91 @@ while IFS= read -r file; do
-++++++++++++-++--  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++-++-+  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++++++++++-++-@@ -89 +96 @@ done <<< "$changed_files"
-++++++++++++-++--filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++++++++++-++-+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++++++++++++-++-@@ -95,2 +102,4 @@ fi
-++++++++++++-++--# Combine all filtered reports into one final report
-++++++++++++-++--jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++++++++++++-++-+# Combine all filtered reports into one final report (optional)
-++++++++++++-++-+# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++++++++++++-++-+final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++++++++++-++-+cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++++++++++-++-@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++++++++++++-++--# Parse the final filtered scanner report and check for severity 3 issues
-++++++++++++-++--severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++++++++++++-++-+echo "Final filtered scanner report:"
-++++++++++++-++-+cat "$final_report"
-++++++++++++-++-+
-++++++++++++-++-+# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++++++++++++-++-+severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++-+++@@ -75 +75 @@ while IFS= read -r file; do
-++++++++++++-+++-    FS=OFS=",";
-++++++++++++-++++    FS=OFS=",";  # Define CSV format
-++++++++++++-+++@@ -81 +81 @@ while IFS= read -r file; do
-++++++++++++-+++-  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++++++++++-++++  NR == 1 || ($4 in line_map)  # $4 is the "Line" field in the CSV, this line checks if it exists in the map
-++++++++++++-+++@@ -111 +111 @@ cat "$final_report"
-++++++++++++-+++-severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++-++++severity_fail_count=$(awk -F, '$7 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++-+++diff --git a/changed_cls_lwc_lines_Account_Insert.cls.txt b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++++++++++-+++new file mode 100644
-++++++++++++-+++index 0000000..0e43eee
-++++++++++++-+++--- /dev/null
-++++++++++++-++++++ b/changed_cls_lwc_lines_Account_Insert.cls.txt
-++++++++++++-+++@@ -0,0 +1 @@
-++++++++++++-++++70 :           System.debug('Hi Hello');
-++++++++++++-+++diff --git a/changes.diff b/changes.diff
-++++++++++++-+++new file mode 100644
-++++++++++++-+++index 0000000..760971b
-++++++++++++-+++--- /dev/null
-++++++++++++-++++++ b/changes.diff
-++++++++++++-+++@@ -0,0 +1,65 @@
-++++++++++++-++++diff --git a/.husky/pre-commit b/.husky/pre-commit
-++++++++++++-++++index 255a037..525d43a 100644
-++++++++++++-++++--- a/.husky/pre-commit
-++++++++++++-+++++++ b/.husky/pre-commit
-++++++++++++-++++@@ -50 +50 @@ while IFS= read -r file; do
-++++++++++++-++++-  # Extract line numbers as a comma-separated string for use in jq filtering
-++++++++++++-+++++  # Extract line numbers as a comma-separated string for filtering later
-++++++++++++-++++@@ -53,2 +53,2 @@ while IFS= read -r file; do
-++++++++++++-++++-  # Define the output path for the scanner report
-++++++++++++-++++-  output_file="scanner-reports/scanner-report-${clean_file}.json"
-++++++++++++-+++++  # Define the output path for the scanner report in CSV format
-++++++++++++-+++++  output_file="scanner-reports/scanner-report-${clean_file}.csv"
-++++++++++++-++++@@ -56,2 +56,2 @@ while IFS= read -r file; do
-++++++++++++-++++-  # Run the SFDX scanner on the file and generate the report
-++++++++++++-++++-  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
-++++++++++++-+++++  # Run the SFDX scanner on the file and generate the report in CSV format
-++++++++++++-+++++  sf scanner:run --target "$file" --format "csv" --outfile "$output_file"
-++++++++++++-++++@@ -71 +71 @@ while IFS= read -r file; do
-++++++++++++-++++-  # Filter the scanner report based on the changed line numbers
-++++++++++++-+++++  # Filter the CSV scanner report based on the changed line numbers
-++++++++++++-++++@@ -73,3 +73,10 @@ while IFS= read -r file; do
-++++++++++++-++++-  jq --arg lines "$line_numbers" '
-++++++++++++-++++-    .[] | select(.violations[]? | ($lines | split(",") | index((.line|tostring))))
-++++++++++++-++++-  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++-+++++  awk -v lines="$line_numbers" '
-++++++++++++-+++++  BEGIN {
-++++++++++++-+++++    FS=OFS=",";
-++++++++++++-+++++    split(lines, arr, ",");  # Split the line numbers into an array
-++++++++++++-+++++    for (i in arr) {
-++++++++++++-+++++      line_map[arr[i]] = 1  # Create a lookup for valid line numbers
-++++++++++++-+++++    }
-++++++++++++-+++++  }
-++++++++++++-+++++  NR == 1 || line_map[$4]  # $4 is the "Line" field in the CSV
-++++++++++++-+++++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++++++++++-++++@@ -78 +85 @@ while IFS= read -r file; do
-++++++++++++-++++-  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
-++++++++++++-+++++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.csv" ]; then
-++++++++++++-++++@@ -84 +91 @@ while IFS= read -r file; do
-++++++++++++-++++-  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
-++++++++++++-+++++  cat "scanner-reports/filtered-scanner-report-${clean_file}.csv"
-++++++++++++-++++@@ -89 +96 @@ done <<< "$changed_files"
-++++++++++++-++++-filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
-++++++++++++-+++++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.csv 2> /dev/null)
-++++++++++++-++++@@ -95,2 +102,4 @@ fi
-++++++++++++-++++-# Combine all filtered reports into one final report
-++++++++++++-++++-jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
-++++++++++++-+++++# Combine all filtered reports into one final report (optional)
-++++++++++++-+++++# You can use a simple `cat` command for CSV, as there is no header duplication issue in CSV files
-++++++++++++-+++++final_report="scanner-reports/final-filtered-scanner-report.csv"
-++++++++++++-+++++cat scanner-reports/filtered-scanner-report-*.csv > "$final_report"
-++++++++++++-++++@@ -98,2 +107,5 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
-++++++++++++-++++-# Parse the final filtered scanner report and check for severity 3 issues
-++++++++++++-++++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
-++++++++++++-+++++echo "Final filtered scanner report:"
-++++++++++++-+++++cat "$final_report"
-++++++++++++-+++++
-++++++++++++-+++++# Parse the final filtered scanner report and check for severity 3 issues (optional, CSV parsing in bash)
-++++++++++++-+++++severity_fail_count=$(awk -F, '$2 == 3 {count++} END {print count}' "$final_report")  # $7 is the Severity column
-++++++++++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-++++index 1ec7a54..870d508 100644
-++++++++++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++++++++++-++++-          System.debug('Hi');
-++++++++++++-+++++          System.debug('Hi Hello');
-++++++++++++-++@@ -60 +93 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++++++++++++-++-index 1ec7a54..870d508 100644
-++++++++++++-+++index 870d508..1ec7a54 100644
-++++++++++++-++@@ -64,2 +97,27 @@ index 1ec7a54..870d508 100644
-++++++++++++-++--          System.debug('Hi');
-++++++++++++-++-+          System.debug('Hi Hello');
-++++++++++++-+++-          System.debug('Hi Hello');
-++++++++++++-++++          System.debug('Hi');
-++++++++++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++++++++++-+++new file mode 100644
-++++++++++++-+++index 0000000..5a3a1ac
-++++++++++++-+++--- /dev/null
-++++++++++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++++++++++-+++@@ -0,0 +1 @@
-++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++++++++++++-+++new file mode 100644
-++++++++++++-+++index 0000000..5a3a1ac
-++++++++++++-+++--- /dev/null
-++++++++++++-++++++ b/scanner-reports/final-filtered-scanner-report.csv
-++++++++++++-+++@@ -0,0 +1 @@
-++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++++++++++-+++new file mode 100644
-++++++++++++-+++index 0000000..e1ef0f0
-++++++++++++-+++--- /dev/null
-++++++++++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++++++++++-+++@@ -0,0 +1,5 @@
-++++++++++++-++++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++-++++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++++++++++-++++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++++++++++-++++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++++++++++-++++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++++++++++-+@@ -93 +225 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++++++++++++-+-index 870d508..1ec7a54 100644
-++++++++++++-++index 1ec7a54..870d508 100644
-++++++++++++-+@@ -97,27 +229,2 @@ index 870d508..1ec7a54 100644
-++++++++++++-+--          System.debug('Hi Hello');
-++++++++++++-+-+          System.debug('Hi');
-++++++++++++-+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++++++++++-+-new file mode 100644
-++++++++++++-+-index 0000000..5a3a1ac
-++++++++++++-+---- /dev/null
-++++++++++++-+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++++++++++-+-@@ -0,0 +1 @@
-++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++-+-diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++++++++++++-+-new file mode 100644
-++++++++++++-+-index 0000000..5a3a1ac
-++++++++++++-+---- /dev/null
-++++++++++++-+-+++ b/scanner-reports/final-filtered-scanner-report.csv
-++++++++++++-+-@@ -0,0 +1 @@
-++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++-+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++++++++++-+-new file mode 100644
-++++++++++++-+-index 0000000..e1ef0f0
-++++++++++++-+---- /dev/null
-++++++++++++-+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++++++++++-+-@@ -0,0 +1,5 @@
-++++++++++++-+-+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++-+-+"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++++++++++-+-+"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++++++++++-+-+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++++++++++-+-+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++++++++++-++-          System.debug('Hi');
-++++++++++++-+++          System.debug('Hi Hello');
-++++++++++++-@@ -225 +415 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++++++++++++--index 1ec7a54..870d508 100644
-++++++++++++-+index 870d508..5eafcac 100644
-++++++++++++-@@ -229,2 +419,2 @@ index 1ec7a54..870d508 100644
-++++++++++++---          System.debug('Hi');
-++++++++++++--+          System.debug('Hi Hello');
-++++++++++++-+-          System.debug('Hi Hello');
-++++++++++++-++          System.debug('Happy');
-++++++++++++-diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-index 5eafcac..1ec7a54 100644
-++++++++++++---- a/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-+++ b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++-@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++++++++++--          System.debug('Happy');
-++++++++++++-+          System.debug('Hi');
-++++++++++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++index 73696e2..9e21e88 100644
-++++++++++++--- a/force-app/main/default/classes/Account_Insert.cls
-+++++++++++++++ b/force-app/main/default/classes/Account_Insert.cls
-++++++++++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++++++++++-          System.debug('Hello and Hi');
-+++++++++++++          System.debug('Hi AND');
-++++++++++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-++++++++++++deleted file mode 100644
-++++++++++++index 5a3a1ac..0000000
-++++++++++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++++++++++++++ /dev/null
-++++++++++++@@ -1 +0,0 @@
-++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++++++++++new file mode 100644
-++++++++++++index 0000000..ebc3aa5
-++++++++++++--- /dev/null
-+++++++++++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++++++++++@@ -0,0 +1,30 @@
-+++++++++++++[
-+++++++++++++  {
-+++++++++++++    "engine": "pmd",
-+++++++++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++++++++++++    "violations": [
-+++++++++++++      {
-+++++++++++++        "line": 70,
-+++++++++++++        "column": 11,
-+++++++++++++        "endLine": 70,
-+++++++++++++        "endColumn": 29,
-+++++++++++++        "severity": 3,
-+++++++++++++        "ruleName": "AvoidDebugStatements",
-+++++++++++++        "category": "Performance",
-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++++++++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++++++++++++      },
-+++++++++++++      {
-+++++++++++++        "line": 70,
-+++++++++++++        "column": 11,
-+++++++++++++        "endLine": 70,
-+++++++++++++        "endColumn": 29,
-+++++++++++++        "severity": 3,
-+++++++++++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++++++++++++        "category": "Best Practices",
-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++++++++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++++++++++++      }
-+++++++++++++    ]
-+++++++++++++  }
-+++++++++++++]
-++++++++++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++++++++++++deleted file mode 100644
-++++++++++++index 5a3a1ac..0000000
-++++++++++++--- a/scanner-reports/final-filtered-scanner-report.csv
-+++++++++++++++ /dev/null
-++++++++++++@@ -1 +0,0 @@
-++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-++++++++++++new file mode 100644
-++++++++++++index 0000000..ebc3aa5
-++++++++++++--- /dev/null
-+++++++++++++++ b/scanner-reports/final-filtered-scanner-report.json
-++++++++++++@@ -0,0 +1,30 @@
-+++++++++++++[
-+++++++++++++  {
-+++++++++++++    "engine": "pmd",
-+++++++++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++++++++++++    "violations": [
-+++++++++++++      {
-+++++++++++++        "line": 70,
-+++++++++++++        "column": 11,
-+++++++++++++        "endLine": 70,
-+++++++++++++        "endColumn": 29,
-+++++++++++++        "severity": 3,
-+++++++++++++        "ruleName": "AvoidDebugStatements",
-+++++++++++++        "category": "Performance",
-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++++++++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++++++++++++      },
-+++++++++++++      {
-+++++++++++++        "line": 70,
-+++++++++++++        "column": 11,
-+++++++++++++        "endLine": 70,
-+++++++++++++        "endColumn": 29,
-+++++++++++++        "severity": 3,
-+++++++++++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++++++++++++        "category": "Best Practices",
-+++++++++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++++++++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++++++++++++      }
-+++++++++++++    ]
-+++++++++++++  }
-+++++++++++++]
-++++++++++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++++++++++deleted file mode 100644
-++++++++++++index e1ef0f0..0000000
-++++++++++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++++++++++++++ /dev/null
-++++++++++++@@ -1,5 +0,0 @@
-++++++++++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++++++++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++++++++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++++++++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++++++++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++++++++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-++++++++++++new file mode 100644
-++++++++++++index 0000000..c973918
-++++++++++++--- /dev/null
-+++++++++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-++++++++++++@@ -0,0 +1 @@
-+++++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++++++++++++\ No newline at end of file
-+++++@@ -861 +999 @@ index 0000000..a6452b3
-+++++-+++++index 73696e2..9e21e88 100644
-+++++++++++index 9e21e88..800635e 100644
-+++++@@ -865,9 +1003,2 @@ index 0000000..a6452b3
-+++++-+++++-          System.debug('Hello and Hi');
-+++++-++++++          System.debug('Hi AND');
-+++++-+++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv b/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++++-+++++deleted file mode 100644
-+++++-+++++index 5a3a1ac..0000000
-+++++-+++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.csv
-+++++-++++++++ /dev/null
-+++++-+++++@@ -1 +0,0 @@
-+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++++++++-          System.debug('Hi AND');
-++++++++++++          System.debug('Hi AND Hello');
-+++++@@ -875,3 +1006,2 @@ index 0000000..a6452b3
-+++++-+++++new file mode 100644
-+++++-+++++index 0000000..ebc3aa5
-+++++-+++++--- /dev/null
-+++++++++++index ebc3aa5..fe51488 100644
-+++++++++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++++@@ -879,38 +1009,32 @@ index 0000000..a6452b3
-+++++-+++++@@ -0,0 +1,30 @@
-+++++-++++++[
-+++++-++++++  {
-+++++-++++++    "engine": "pmd",
-+++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++++-++++++    "violations": [
-+++++-++++++      {
-+++++-++++++        "line": 70,
-+++++-++++++        "column": 11,
-+++++-++++++        "endLine": 70,
-+++++-++++++        "endColumn": 29,
-+++++-++++++        "severity": 3,
-+++++-++++++        "ruleName": "AvoidDebugStatements",
-+++++-++++++        "category": "Performance",
-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++++-++++++      },
-+++++-++++++      {
-+++++-++++++        "line": 70,
-+++++-++++++        "column": 11,
-+++++-++++++        "endLine": 70,
-+++++-++++++        "endColumn": 29,
-+++++-++++++        "severity": 3,
-+++++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++++-++++++        "category": "Best Practices",
-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++++-++++++      }
-+++++-++++++    ]
-+++++-++++++  }
-+++++-++++++]
-+++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-+++++-+++++deleted file mode 100644
-+++++-+++++index 5a3a1ac..0000000
-+++++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
-+++++-++++++++ /dev/null
-+++++-+++++@@ -1 +0,0 @@
-+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++++++++@@ -1,30 +1 @@
-+++++++++++-[
-+++++++++++-  {
-+++++++++++-    "engine": "pmd",
-+++++++++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++++++++++-    "violations": [
-+++++++++++-      {
-+++++++++++-        "line": 70,
-+++++++++++-        "column": 11,
-+++++++++++-        "endLine": 70,
-+++++++++++-        "endColumn": 29,
-+++++++++++-        "severity": 3,
-+++++++++++-        "ruleName": "AvoidDebugStatements",
-+++++++++++-        "category": "Performance",
-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++++++++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++++++++++-      },
-+++++++++++-      {
-+++++++++++-        "line": 70,
-+++++++++++-        "column": 11,
-+++++++++++-        "endLine": 70,
-+++++++++++-        "endColumn": 29,
-+++++++++++-        "severity": 3,
-+++++++++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-+++++++++++-        "category": "Best Practices",
-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++++++++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++++++++++-      }
-+++++++++++-    ]
-+++++++++++-  }
-+++++++++++-]
-++++++++++++[]
-+++++@@ -918,3 +1042,2 @@ index 0000000..a6452b3
-+++++-+++++new file mode 100644
-+++++-+++++index 0000000..ebc3aa5
-+++++-+++++--- /dev/null
-+++++++++++index ebc3aa5..fe51488 100644
-+++++++++++--- a/scanner-reports/final-filtered-scanner-report.json
-+++++@@ -922,42 +1045,32 @@ index 0000000..a6452b3
-+++++-+++++@@ -0,0 +1,30 @@
-+++++-++++++[
-+++++-++++++  {
-+++++-++++++    "engine": "pmd",
-+++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++++-++++++    "violations": [
-+++++-++++++      {
-+++++-++++++        "line": 70,
-+++++-++++++        "column": 11,
-+++++-++++++        "endLine": 70,
-+++++-++++++        "endColumn": 29,
-+++++-++++++        "severity": 3,
-+++++-++++++        "ruleName": "AvoidDebugStatements",
-+++++-++++++        "category": "Performance",
-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++++-++++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++++-++++++      },
-+++++-++++++      {
-+++++-++++++        "line": 70,
-+++++-++++++        "column": 11,
-+++++-++++++        "endLine": 70,
-+++++-++++++        "endColumn": 29,
-+++++-++++++        "severity": 3,
-+++++-++++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++++-++++++        "category": "Best Practices",
-+++++-++++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++++-++++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++++-++++++      }
-+++++-++++++    ]
-+++++-++++++  }
-+++++-++++++]
-+++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++++-+++++deleted file mode 100644
-+++++-+++++index e1ef0f0..0000000
-+++++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
-+++++-++++++++ /dev/null
-+++++-+++++@@ -1,5 +0,0 @@
-+++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-+++++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-+++++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-+++++++++++@@ -1,30 +1 @@
-+++++++++++-[
-+++++++++++-  {
-+++++++++++-    "engine": "pmd",
-+++++++++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++++++++++-    "violations": [
-+++++++++++-      {
-+++++++++++-        "line": 70,
-+++++++++++-        "column": 11,
-+++++++++++-        "endLine": 70,
-+++++++++++-        "endColumn": 29,
-+++++++++++-        "severity": 3,
-+++++++++++-        "ruleName": "AvoidDebugStatements",
-+++++++++++-        "category": "Performance",
-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++++++++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++++++++++-      },
-+++++++++++-      {
-+++++++++++-        "line": 70,
-+++++++++++-        "column": 11,
-+++++++++++-        "endLine": 70,
-+++++++++++-        "endColumn": 29,
-+++++++++++-        "severity": 3,
-+++++++++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-+++++++++++-        "category": "Best Practices",
-+++++++++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++++++++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++++++++++-      }
-+++++++++++-    ]
-+++++++++++-  }
-+++++++++++-]
-++++++++++++[]
-+++++@@ -965,3 +1078,2 @@ index 0000000..a6452b3
-+++++-+++++new file mode 100644
-+++++-+++++index 0000000..c973918
-+++++-+++++--- /dev/null
-+++++++++++index c973918..a14d61d 100644
-+++++++++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
-+++++@@ -969,2 +1081,4 @@ index 0000000..a6452b3
-+++++-+++++@@ -0,0 +1 @@
-+++++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++++++++@@ -1 +1 @@
-+++++++++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++++++++\ No newline at end of file
-++++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++@@ -973 +1087 @@ index 0000000..a6452b3
-+++++-++++index 9e21e88..800635e 100644
-++++++++++index 9e21e88..1ec7a54 100644
-+++++@@ -978 +1092 @@ index 0000000..a6452b3
-+++++-+++++          System.debug('Hi AND Hello');
-+++++++++++          System.debug('Hi');
-+++++@@ -980 +1094 @@ index 0000000..a6452b3
-+++++-++++index ebc3aa5..fe51488 100644
-++++++++++index ebc3aa5..bb2caee 100644
-+++++@@ -983,10 +1097,24 @@ index 0000000..a6452b3
-+++++-++++@@ -1,30 +1 @@
-+++++-++++-[
-+++++-++++-  {
-+++++-++++-    "engine": "pmd",
-+++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++++-++++-    "violations": [
-+++++-++++-      {
-+++++-++++-        "line": 70,
-+++++-++++-        "column": 11,
-+++++-++++-        "endLine": 70,
-++++++++++@@ -5,0 +6,22 @@
-++++@@ -886 +1928 @@ index 0000000..a6452b3
-++++-++++++        "line": 70,
-+++++++++++        "line": 20,
-++++@@ -888,2 +1930,2 @@ index 0000000..a6452b3
-++++-++++++        "endLine": 70,
-++++-++++++        "endColumn": 29,
-+++++++++++        "endLine": 20,
-+++++++++++        "endColumn": 35,
-++++@@ -897 +1939 @@ index 0000000..a6452b3
-++++-++++++        "line": 70,
-+++++++++++        "line": 20,
-++++@@ -899,2 +1941,2 @@ index 0000000..a6452b3
-++++-++++++        "endLine": 70,
-++++-++++++        "endColumn": 29,
-+++++++++++        "endLine": 20,
-+++++++++++        "endColumn": 35,
-++++@@ -906,22 +1948,42 @@ index 0000000..a6452b3
-++++-++++++      }
-++++-++++++    ]
-++++-++++++  }
-++++-++++++]
-++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.csv b/scanner-reports/final-filtered-scanner-report.csv
-++++-+++++deleted file mode 100644
-++++-+++++index 5a3a1ac..0000000
-++++-+++++--- a/scanner-reports/final-filtered-scanner-report.csv
-++++-++++++++ /dev/null
-++++-+++++@@ -1 +0,0 @@
-++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-++++-+++++new file mode 100644
-++++-+++++index 0000000..ebc3aa5
-++++-+++++--- /dev/null
-++++-++++++++ b/scanner-reports/final-filtered-scanner-report.json
-++++-+++++@@ -0,0 +1,30 @@
-++++-++++++[
-++++-++++++  {
-++++-++++++    "engine": "pmd",
-++++-++++++    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-++++-++++++    "violations": [
-+++++++++++      },
-++++++++++@@ -10 +32 @@
-+++++@@ -994,10 +1122,2 @@ index 0000000..a6452b3
-+++++-++++-        "severity": 3,
-+++++-++++-        "ruleName": "AvoidDebugStatements",
-+++++-++++-        "category": "Performance",
-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++++-++++-      },
-+++++-++++-      {
-+++++-++++-        "line": 70,
-+++++-++++-        "column": 11,
-+++++-++++-        "endLine": 70,
-+++++++++++        "endColumn": 39,
-++++++++++@@ -21 +43 @@
-+++++@@ -1005,10 +1125 @@ index 0000000..a6452b3
-+++++-++++-        "severity": 3,
-+++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-+++++-++++-        "category": "Best Practices",
-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++++-++++-      }
-+++++-++++-    ]
-+++++-++++-  }
-+++++-++++-]
-+++++-+++++[]
-+++++++++++        "endColumn": 39,
-+++++@@ -1016 +1127 @@ index 0000000..a6452b3
-+++++-++++index ebc3aa5..fe51488 100644
-++++++++++index ebc3aa5..bb2caee 100644
-+++++@@ -1019,10 +1130,24 @@ index 0000000..a6452b3
-+++++-++++@@ -1,30 +1 @@
-+++++-++++-[
-+++++-++++-  {
-+++++-++++-    "engine": "pmd",
-+++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+++++-++++-    "violations": [
-+++++-++++-      {
-+++++-++++-        "line": 70,
-+++++-++++-        "column": 11,
-+++++-++++-        "endLine": 70,
-++++++++++@@ -5,0 +6,22 @@
-++++@@ -929 +1991 @@ index 0000000..a6452b3
-++++-++++++        "line": 70,
-+++++++++++        "line": 20,
-++++@@ -931,2 +1993,2 @@ index 0000000..a6452b3
-++++-++++++        "endLine": 70,
-++++-++++++        "endColumn": 29,
-+++++++++++        "endLine": 20,
-+++++++++++        "endColumn": 35,
-++++@@ -940 +2002 @@ index 0000000..a6452b3
-++++-++++++        "line": 70,
-+++++++++++        "line": 20,
-++++@@ -942,2 +2004,2 @@ index 0000000..a6452b3
-++++-++++++        "endLine": 70,
-++++-++++++        "endColumn": 29,
-+++++++++++        "endLine": 20,
-+++++++++++        "endColumn": 35,
-++++@@ -949,112 +2011,70 @@ index 0000000..a6452b3
-++++-++++++      }
-++++-++++++    ]
-++++-++++++  }
-++++-++++++]
-++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.csv b/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++-+++++deleted file mode 100644
-++++-+++++index e1ef0f0..0000000
-++++-+++++--- a/scanner-reports/scanner-report-Account_Insert.cls.csv
-++++-++++++++ /dev/null
-++++-+++++@@ -1,5 +0,0 @@
-++++-+++++-"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
-++++-+++++-"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++-+++++-"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","20","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++-+++++-"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
-++++-+++++-"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","70","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
-++++-+++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-++++-+++++new file mode 100644
-++++-+++++index 0000000..c973918
-++++-+++++--- /dev/null
-++++-++++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-++++-+++++@@ -0,0 +1 @@
-++++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++++-+++++\ No newline at end of file
-++++-++++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++-++++index 9e21e88..800635e 100644
-++++-++++--- a/force-app/main/default/classes/Account_Insert.cls
-++++-+++++++ b/force-app/main/default/classes/Account_Insert.cls
-++++-++++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-++++-          System.debug('Hi AND');
-++++-+++++          System.debug('Hi AND Hello');
-++++-++++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++-++++index ebc3aa5..fe51488 100644
-++++-++++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++-+++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++-++++@@ -1,30 +1 @@
-++++-++++-[
-++++-++++-  {
-++++-++++-    "engine": "pmd",
-++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-++++-++++-    "violations": [
-++++-++++-      {
-++++-++++-        "line": 70,
-++++-++++-        "column": 11,
-++++-++++-        "endLine": 70,
-++++-++++-        "endColumn": 29,
-++++-++++-        "severity": 3,
-++++-++++-        "ruleName": "AvoidDebugStatements",
-++++-++++-        "category": "Performance",
-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++++-++++-      },
-++++-++++-      {
-++++-++++-        "line": 70,
-++++-++++-        "column": 11,
-++++-++++-        "endLine": 70,
-++++-++++-        "endColumn": 29,
-++++-++++-        "severity": 3,
-++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-++++-++++-        "category": "Best Practices",
-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++++-++++-      }
-++++-++++-    ]
-++++-++++-  }
-++++-++++-]
-++++-+++++[]
-++++-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-++++-++++index ebc3aa5..fe51488 100644
-++++-++++--- a/scanner-reports/final-filtered-scanner-report.json
-++++-+++++++ b/scanner-reports/final-filtered-scanner-report.json
-++++-++++@@ -1,30 +1 @@
-++++-++++-[
-++++-++++-  {
-++++-++++-    "engine": "pmd",
-++++-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-++++-++++-    "violations": [
-++++-++++-      {
-++++-++++-        "line": 70,
-++++-++++-        "column": 11,
-++++-++++-        "endLine": 70,
-++++-++++-        "endColumn": 29,
-++++-++++-        "severity": 3,
-++++-++++-        "ruleName": "AvoidDebugStatements",
-++++-++++-        "category": "Performance",
-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++++-++++-      },
-++++-++++-      {
-++++-++++-        "line": 70,
-++++-++++-        "column": 11,
-++++-++++-        "endLine": 70,
-++++-++++-        "endColumn": 29,
-++++-++++-        "severity": 3,
-++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-++++-++++-        "category": "Best Practices",
-++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++++-++++-      }
-++++-++++-    ]
-++++-++++-  }
-++++-++++-]
-++++-+++++[]
-++++-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-++++-++++index c973918..a14d61d 100644
-++++-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
-++++-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-++++-++++@@ -1 +1 @@
-++++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++++-++++\ No newline at end of file
-++++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++++-++++\ No newline at end of file
-++++-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+++++++++++      },
-++++++++++@@ -10 +32 @@
-+++++@@ -1030,10 +1155,2 @@ index 0000000..a6452b3
-+++++-++++-        "severity": 3,
-+++++-++++-        "ruleName": "AvoidDebugStatements",
-+++++-++++-        "category": "Performance",
-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++++-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++++-++++-      },
-+++++-++++-      {
-+++++-++++-        "line": 70,
-+++++-++++-        "column": 11,
-+++++-++++-        "endLine": 70,
-+++++++++++        "endColumn": 39,
-++++++++++@@ -21 +43 @@
-+++++@@ -1041,10 +1158 @@ index 0000000..a6452b3
-+++++-++++-        "severity": 3,
-+++++-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-+++++-++++-        "category": "Best Practices",
-+++++-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++++-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++++-++++-      }
-+++++-++++-    ]
-+++++-++++-  }
-+++++-++++-]
-+++++-+++++[]
-+++++++++++        "endColumn": 39,
-+++++@@ -1052 +1160 @@ index 0000000..a6452b3
-+++++-++++index c973918..a14d61d 100644
-++++++++++index c973918..866c0b7 100644
-+++++@@ -1058 +1166 @@ index 0000000..a6452b3
-+++++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++@@ -1061 +1169 @@ index 0000000..a6452b3
-+++++-+++index 9e21e88..1ec7a54 100644
-+++++++++index 9e21e88..9a5148a 100644
-+++++@@ -1066 +1174 @@ index 0000000..a6452b3
-+++++-++++          System.debug('Hi');
-++++++++++          System.debug('Hello');
-+++++@@ -1068 +1176 @@ index 0000000..a6452b3
-+++++-+++index ebc3aa5..bb2caee 100644
-+++++++++index ebc3aa5..b33da59 100644
-+++++@@ -1094,6 +1201,0 @@ index 0000000..a6452b3
-+++++-+++@@ -10 +32 @@
-+++++-+++-        "endColumn": 29,
-+++++-++++        "endColumn": 39,
-+++++-+++@@ -21 +43 @@
-+++++-+++-        "endColumn": 29,
-+++++-++++        "endColumn": 39,
-+++++@@ -1101 +1203 @@ index 0000000..a6452b3
-+++++-+++index ebc3aa5..bb2caee 100644
-+++++++++index ebc3aa5..b33da59 100644
-+++++@@ -1127,15 +1228,0 @@ index 0000000..a6452b3
-+++++-+++@@ -10 +32 @@
-+++++-+++-        "endColumn": 29,
-+++++-++++        "endColumn": 39,
-+++++-+++@@ -21 +43 @@
-+++++-+++-        "endColumn": 29,
-+++++-++++        "endColumn": 39,
-+++++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-+++++-+++index c973918..866c0b7 100644
-+++++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
-+++++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-+++++-+++@@ -1 +1 @@
-+++++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++-+++\ No newline at end of file
-+++++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++-+++\ No newline at end of file
-+++++@@ -1143 +1230 @@ index 0000000..a6452b3
-+++++-++index 9e21e88..9a5148a 100644
-++++@@ -1062,4 +2082,2 @@ index 0000000..a6452b3
-++++-+++--- a/force-app/main/default/classes/Account_Insert.cls
-++++-++++++ b/force-app/main/default/classes/Account_Insert.cls
-++++-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-+++-          System.debug('Hi AND');
-+++++@@ -1148 +1235 @@ index 0000000..a6452b3
-+++++-+++          System.debug('Hello');
-++++@@ -1067,27 +2085,4 @@ index 0000000..a6452b3
-++++-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++-+++index ebc3aa5..bb2caee 100644
-++++-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++-+++@@ -5,0 +6,22 @@
-++++-++++      {
-++++-++++        "line": 20,
-++++-++++        "column": 11,
-++++-++++        "endLine": 20,
-++++-++++        "endColumn": 35,
-++++-++++        "severity": 3,
-++++-++++        "ruleName": "AvoidDebugStatements",
-++++-++++        "category": "Performance",
-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++++-++++      },
-++++-++++      {
-++++-++++        "line": 20,
-++++-++++        "column": 11,
-++++-++++        "endLine": 20,
-++++-++++        "endColumn": 35,
-++++-++++        "severity": 3,
-++++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
-++++-++++        "category": "Best Practices",
-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++++-++++      },
-+++++@@ -1150 +1237 @@ index 0000000..a6452b3
-+++++-++index ebc3aa5..b33da59 100644
-++++++++index ebc3aa5..d4945e4 100644
-+++++@@ -1175,0 +1263,6 @@ index 0000000..a6452b3
-++++@@ -1096 +2091 @@ index 0000000..a6452b3
-++++-++++        "endColumn": 39,
-+++++++++        "endColumn": 32,
-++++@@ -1099,28 +2094,5 @@ index 0000000..a6452b3
-++++-++++        "endColumn": 39,
-++++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-++++-+++index ebc3aa5..bb2caee 100644
-++++-+++--- a/scanner-reports/final-filtered-scanner-report.json
-++++-++++++ b/scanner-reports/final-filtered-scanner-report.json
-++++-+++@@ -5,0 +6,22 @@
-++++-++++      {
-++++-++++        "line": 20,
-++++-++++        "column": 11,
-++++-++++        "endLine": 20,
-++++-++++        "endColumn": 35,
-++++-++++        "severity": 3,
-++++-++++        "ruleName": "AvoidDebugStatements",
-++++-++++        "category": "Performance",
-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++++-++++      },
-++++-++++      {
-++++-++++        "line": 20,
-++++-++++        "column": 11,
-++++-++++        "endLine": 20,
-++++-++++        "endColumn": 35,
-++++-++++        "severity": 3,
-++++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
-++++-++++        "category": "Best Practices",
-++++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++++-++++      },
-+++++++++        "endColumn": 32,
-+++++@@ -1177 +1270 @@ index 0000000..a6452b3
-+++++-++index ebc3aa5..b33da59 100644
-++++++++index ebc3aa5..d4945e4 100644
-+++++@@ -1202,0 +1296,15 @@ index 0000000..a6452b3
-++++@@ -1129 +2101 @@ index 0000000..a6452b3
-++++-++++        "endColumn": 39,
-+++++++++        "endColumn": 32,
-++++@@ -1132 +2104 @@ index 0000000..a6452b3
-++++-++++        "endColumn": 39,
-+++++++++        "endColumn": 32,
-++++@@ -1134 +2106 @@ index 0000000..a6452b3
-++++-+++index c973918..866c0b7 100644
-++++++++index c973918..e670f52 100644
-++++@@ -1140 +2112 @@ index 0000000..a6452b3
-++++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++++@@ -1142,68 +2114,98 @@ index 0000000..a6452b3
-++++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++-++index 9e21e88..9a5148a 100644
-++++-++--- a/force-app/main/default/classes/Account_Insert.cls
-++++-+++++ b/force-app/main/default/classes/Account_Insert.cls
-++++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-++-          System.debug('Hi AND');
-++++-+++          System.debug('Hello');
-++++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++-++index ebc3aa5..b33da59 100644
-++++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++-++@@ -5,0 +6,22 @@
-++++-+++      {
-++++-+++        "line": 20,
-++++-+++        "column": 11,
-++++-+++        "endLine": 20,
-++++-+++        "endColumn": 35,
-++++-+++        "severity": 3,
-++++-+++        "ruleName": "AvoidDebugStatements",
-++++-+++        "category": "Performance",
-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++++-+++      },
-++++-+++      {
-++++-+++        "line": 20,
-++++-+++        "column": 11,
-++++-+++        "endLine": 20,
-++++-+++        "endColumn": 35,
-++++-+++        "severity": 3,
-++++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
-++++-+++        "category": "Best Practices",
-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++++-+++      },
-++++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-++++-++index ebc3aa5..b33da59 100644
-++++-++--- a/scanner-reports/final-filtered-scanner-report.json
-++++-+++++ b/scanner-reports/final-filtered-scanner-report.json
-++++-++@@ -5,0 +6,22 @@
-++++-+++      {
-++++-+++        "line": 20,
-++++-+++        "column": 11,
-++++-+++        "endLine": 20,
-++++-+++        "endColumn": 35,
-++++-+++        "severity": 3,
-++++-+++        "ruleName": "AvoidDebugStatements",
-++++-+++        "category": "Performance",
-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++++-+++      },
-++++-+++      {
-++++-+++        "line": 20,
-++++-+++        "column": 11,
-++++-+++        "endLine": 20,
-++++-+++        "endColumn": 35,
-++++-+++        "severity": 3,
-++++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
-++++-+++        "category": "Best Practices",
-++++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++++-+++      },
-++++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++++-+index 9e21e88..1ec7a54 100644
-++++-+--- a/force-app/main/default/classes/Account_Insert.cls
-++++-++++ b/force-app/main/default/classes/Account_Insert.cls
-++++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++++-+-          System.debug('Hi AND');
-++++-++          System.debug('Hi');
-+++++@@ -1204 +1312 @@ index 0000000..a6452b3
-+++++-+index 9e21e88..1ec7a54 100644
-+++++++index 9e21e88..d522ad0 100644
-+++++@@ -1207 +1315,3 @@ index 0000000..a6452b3
-+++++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+++++++@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
-++++++++        System.debug('Happy');
-+++++++@@ -70 +71 @@ public with sharing class AccountInsertClass {
-+++++@@ -1210,75 +1319,0 @@ index 0000000..a6452b3
-+++++-+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++++-+index ebc3aa5..d4945e4 100644
-+++++-+--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++++-++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++++-+@@ -5,0 +6,22 @@
-+++++-++      {
-+++++-++        "line": 20,
-+++++-++        "column": 11,
-+++++-++        "endLine": 20,
-+++++-++        "endColumn": 35,
-+++++-++        "severity": 3,
-+++++-++        "ruleName": "AvoidDebugStatements",
-+++++-++        "category": "Performance",
-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++++-++      },
-+++++-++      {
-+++++-++        "line": 20,
-+++++-++        "column": 11,
-+++++-++        "endLine": 20,
-+++++-++        "endColumn": 35,
-+++++-++        "severity": 3,
-+++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++++-++        "category": "Best Practices",
-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++++-++      },
-+++++-+@@ -10 +32 @@
-+++++-+-        "endColumn": 29,
-+++++-++        "endColumn": 32,
-+++++-+@@ -21 +43 @@
-+++++-+-        "endColumn": 29,
-+++++-++        "endColumn": 32,
-+++++-+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-+++++-+index ebc3aa5..d4945e4 100644
-+++++-+--- a/scanner-reports/final-filtered-scanner-report.json
-+++++-++++ b/scanner-reports/final-filtered-scanner-report.json
-+++++-+@@ -5,0 +6,22 @@
-+++++-++      {
-+++++-++        "line": 20,
-+++++-++        "column": 11,
-+++++-++        "endLine": 20,
-+++++-++        "endColumn": 35,
-+++++-++        "severity": 3,
-+++++-++        "ruleName": "AvoidDebugStatements",
-+++++-++        "category": "Performance",
-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++++-++      },
-+++++-++      {
-+++++-++        "line": 20,
-+++++-++        "column": 11,
-+++++-++        "endLine": 20,
-+++++-++        "endColumn": 35,
-+++++-++        "severity": 3,
-+++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++++-++        "category": "Best Practices",
-+++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++++-++      },
-+++++-+@@ -10 +32 @@
-+++++-+-        "endColumn": 29,
-+++++-++        "endColumn": 32,
-+++++-+@@ -21 +43 @@
-+++++-+-        "endColumn": 29,
-+++++-++        "endColumn": 32,
-+++++-+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-+++++-+index c973918..e670f52 100644
-+++++-+--- a/scanner-reports/scanner-report-Account_Insert.cls.json
-+++++-++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-+++++-+@@ -1 +1 @@
-+++++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++-+\ No newline at end of file
-+++++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++-+\ No newline at end of file
-+++++@@ -1286 +1321 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+++++-index 9e21e88..d522ad0 100644
-++++++index 9e21e88..add3f8c 100644
-+++++@@ -1289,3 +1324,5 @@ index 9e21e88..d522ad0 100644
-+++++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
-+++++-+        System.debug('Happy');
-+++++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
-++++++@@ -16,0 +17 @@ public with sharing class AccountInsertClass {
-+++++++          System.debug('Happy');
-++++++@@ -20 +20,0 @@ public with sharing class AccountInsertClass {
-++++++-          System.debug('Hello Hi');
-++++++@@ -70 +69,0 @@ public with sharing class AccountInsertClass {
-+++++@@ -1293 +1330,49 @@ index 9e21e88..d522ad0 100644
-+++++-+          System.debug('Hi');
-++++@@ -1211 +2213 @@ index 0000000..a6452b3
-++++-+index ebc3aa5..d4945e4 100644
-++++++index ebc3aa5..3c0aa8c 100644
-++++@@ -1214,2 +2216,2 @@ index 0000000..a6452b3
-++++-+@@ -5,0 +6,22 @@
-++++-++      {
-++++++@@ -7 +7 @@
-+@@ -991 +5686,3 @@ index 0000000..a6452b3
-+-++++-        "column": 11,
-++++@@ -1217 +2219,3 @@ index 0000000..a6452b3
-++++-++        "column": 11,
-++++++@@ -9,2 +9,2 @@
-+@@ -993,8 +5690,12 @@ index 0000000..a6452b3
-+-++++-        "endColumn": 29,
-+-++++-        "severity": 3,
-+-++++-        "ruleName": "AvoidDebugStatements",
-+-++++-        "category": "Performance",
-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+-++++-      },
-+-++++-      {
-++@@ -1096,2 +4586,14 @@ index 0000000..a6452b3
-++-++++        "endColumn": 39,
-++-+++@@ -21 +43 @@
-++++@@ -1220,7 +2224,2 @@ index 0000000..a6452b3
-++++-++        "severity": 3,
-++++-++        "ruleName": "AvoidDebugStatements",
-++++-++        "category": "Performance",
-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++++-++      },
-++++-++      {
-++++++@@ -18 +18 @@
-+@@ -1002 +5703,3 @@ index 0000000..a6452b3
-+-++++-        "column": 11,
-++++@@ -1228 +2227,3 @@ index 0000000..a6452b3
-++++-++        "column": 11,
-++++++@@ -20,2 +20,2 @@
-+@@ -1004,22 +5707,50 @@ index 0000000..a6452b3
-+-++++-        "endColumn": 29,
-+-++++-        "severity": 3,
-+-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-+-++++-        "category": "Best Practices",
-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+-++++-      }
-+-++++-    ]
-+-++++-  }
-+-++++-]
-+-+++++[]
-+-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-+-++++index ebc3aa5..fe51488 100644
-+-++++--- a/scanner-reports/final-filtered-scanner-report.json
-+-+++++++ b/scanner-reports/final-filtered-scanner-report.json
-+-++++@@ -1,30 +1 @@
-+-++++-[
-+-++++-  {
-+-++++-    "engine": "pmd",
-+-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
-+-++++-    "violations": [
-+-++++-      {
-++@@ -1099,29 +4601,25 @@ index 0000000..a6452b3
-++-++++        "endColumn": 39,
-++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-++-+++index ebc3aa5..bb2caee 100644
-++-+++--- a/scanner-reports/final-filtered-scanner-report.json
-++-++++++ b/scanner-reports/final-filtered-scanner-report.json
-++-+++@@ -5,0 +6,22 @@
-++-++++      {
-++-++++        "line": 20,
-++-++++        "column": 11,
-++-++++        "endLine": 20,
-++-++++        "endColumn": 35,
-++-++++        "severity": 3,
-++-++++        "ruleName": "AvoidDebugStatements",
-++-++++        "category": "Performance",
-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++-++++      },
-++-++++      {
-++-++++        "line": 20,
-++-++++        "column": 11,
-++-++++        "endLine": 20,
-++-++++        "endColumn": 35,
-++-++++        "severity": 3,
-++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
-++-++++        "category": "Best Practices",
-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++-++++      },
-++-+++@@ -10 +32 @@
-++++@@ -1231,12 +2231,0 @@ index 0000000..a6452b3
-++++-++        "severity": 3,
-++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
-++++-++        "category": "Best Practices",
-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++++-++      },
-++++-+@@ -10 +32 @@
-++++-+-        "endColumn": 29,
-++++-++        "endColumn": 32,
-++++-+@@ -21 +43 @@
-++++-+-        "endColumn": 29,
-++++-++        "endColumn": 32,
-++++@@ -1244 +2233 @@ index 0000000..a6452b3
-++++-+index ebc3aa5..d4945e4 100644
-++++++index ebc3aa5..3c0aa8c 100644
-++++@@ -1247,2 +2236,2 @@ index 0000000..a6452b3
-++++-+@@ -5,0 +6,22 @@
-++++-++      {
-++++++@@ -7 +7 @@
-+@@ -1027 +5758,3 @@ index 0000000..a6452b3
-+-++++-        "column": 11,
-++++@@ -1250 +2239,3 @@ index 0000000..a6452b3
-++++-++        "column": 11,
-++++++@@ -9,2 +9,2 @@
-+@@ -1029,8 +5762,12 @@ index 0000000..a6452b3
-+-++++-        "endColumn": 29,
-+-++++-        "severity": 3,
-+-++++-        "ruleName": "AvoidDebugStatements",
-+-++++-        "category": "Performance",
-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+-++++-      },
-+-++++-      {
-++@@ -1129,2 +4627,14 @@ index 0000000..a6452b3
-++-++++        "endColumn": 39,
-++-+++@@ -21 +43 @@
-++++@@ -1253,7 +2244,2 @@ index 0000000..a6452b3
-++++-++        "severity": 3,
-++++-++        "ruleName": "AvoidDebugStatements",
-++++-++        "category": "Performance",
-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++++-++      },
-++++-++      {
-++++++@@ -18 +18 @@
-+@@ -1038 +5775,3 @@ index 0000000..a6452b3
-+-++++-        "column": 11,
-++++@@ -1261 +2247,3 @@ index 0000000..a6452b3
-++++-++        "column": 11,
-++++++@@ -20,2 +20,2 @@
-+@@ -1040,108 +5779,260 @@ index 0000000..a6452b3
-+-++++-        "endColumn": 29,
-+-++++-        "severity": 3,
-+-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
-+-++++-        "category": "Best Practices",
-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+-++++-      }
-+-++++-    ]
-+-++++-  }
-+-++++-]
-+-+++++[]
-+-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-+-++++index c973918..a14d61d 100644
-+-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
-+-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-+-++++@@ -1 +1 @@
-+-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+-++++\ No newline at end of file
-+-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+-++++\ No newline at end of file
-+-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-+++index 9e21e88..1ec7a54 100644
-+-+++--- a/force-app/main/default/classes/Account_Insert.cls
-+-++++++ b/force-app/main/default/classes/Account_Insert.cls
-+-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-+++-          System.debug('Hi AND');
-+-++++          System.debug('Hi');
-+-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+-+++index ebc3aa5..bb2caee 100644
-+-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+-+++@@ -5,0 +6,22 @@
-+-++++      {
-+-++++        "line": 20,
-+-++++        "column": 11,
-+-++++        "endLine": 20,
-+-++++        "endColumn": 35,
-+-++++        "severity": 3,
-+-++++        "ruleName": "AvoidDebugStatements",
-+-++++        "category": "Performance",
-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+-++++      },
-+-++++      {
-+-++++        "line": 20,
-+-++++        "column": 11,
-+-++++        "endLine": 20,
-+-++++        "endColumn": 35,
-+-++++        "severity": 3,
-+-++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+-++++        "category": "Best Practices",
-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+-++++      },
-+-+++@@ -10 +32 @@
-+-+++-        "endColumn": 29,
-+-++++        "endColumn": 39,
-+-+++@@ -21 +43 @@
-+-+++-        "endColumn": 29,
-+-++++        "endColumn": 39,
-+-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-+-+++index ebc3aa5..bb2caee 100644
-+-+++--- a/scanner-reports/final-filtered-scanner-report.json
-+-++++++ b/scanner-reports/final-filtered-scanner-report.json
-+-+++@@ -5,0 +6,22 @@
-+-++++      {
-+-++++        "line": 20,
-+-++++        "column": 11,
-+-++++        "endLine": 20,
-+-++++        "endColumn": 35,
-+-++++        "severity": 3,
-+-++++        "ruleName": "AvoidDebugStatements",
-+-++++        "category": "Performance",
-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+-++++      },
-+-++++      {
-+-++++        "line": 20,
-+-++++        "column": 11,
-+-++++        "endLine": 20,
-+-++++        "endColumn": 35,
-+-++++        "severity": 3,
-+-++++        "ruleName": "DebugsShouldUseLoggingLevel",
-+-++++        "category": "Best Practices",
-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+-++++      },
-+-+++@@ -10 +32 @@
-+-+++-        "endColumn": 29,
-+-++++        "endColumn": 39,
-+-+++@@ -21 +43 @@
-+-+++-        "endColumn": 29,
-+-++++        "endColumn": 39,
-+-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-+-+++index c973918..866c0b7 100644
-+-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
-+-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-+-+++@@ -1 +1 @@
-+-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+-+++\ No newline at end of file
-+-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+-+++\ No newline at end of file
-+-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-++index 9e21e88..9a5148a 100644
-+-++--- a/force-app/main/default/classes/Account_Insert.cls
-+-+++++ b/force-app/main/default/classes/Account_Insert.cls
-+-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-++-          System.debug('Hi AND');
-++@@ -1132,78 +4642,182 @@ index 0000000..a6452b3
-++-++++        "endColumn": 39,
-++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-++-+++index c973918..866c0b7 100644
-++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
-++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-++-+++@@ -1 +1 @@
-++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++-+++\ No newline at end of file
-++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++-+++\ No newline at end of file
-++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-++index 9e21e88..9a5148a 100644
-++-++--- a/force-app/main/default/classes/Account_Insert.cls
-++-+++++ b/force-app/main/default/classes/Account_Insert.cls
-++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-++-          System.debug('Hi AND');
-++-+++          System.debug('Hello');
-++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++-++index ebc3aa5..b33da59 100644
-++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++-++@@ -5,0 +6,22 @@
-++-+++      {
-++-+++        "line": 20,
-++-+++        "column": 11,
-++-+++        "endLine": 20,
-++-+++        "endColumn": 35,
-++-+++        "severity": 3,
-++-+++        "ruleName": "AvoidDebugStatements",
-++-+++        "category": "Performance",
-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++-+++      },
-++-+++      {
-++-+++        "line": 20,
-++-+++        "column": 11,
-++-+++        "endLine": 20,
-++-+++        "endColumn": 35,
-++-+++        "severity": 3,
-++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
-++-+++        "category": "Best Practices",
-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++-+++      },
-++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-++-++index ebc3aa5..b33da59 100644
-++-++--- a/scanner-reports/final-filtered-scanner-report.json
-++-+++++ b/scanner-reports/final-filtered-scanner-report.json
-++-++@@ -5,0 +6,22 @@
-++-+++      {
-++-+++        "line": 20,
-++-+++        "column": 11,
-++-+++        "endLine": 20,
-++-+++        "endColumn": 35,
-++-+++        "severity": 3,
-++-+++        "ruleName": "AvoidDebugStatements",
-++-+++        "category": "Performance",
-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++-+++      },
-++-+++      {
-++-+++        "line": 20,
-++-+++        "column": 11,
-++-+++        "endLine": 20,
-++-+++        "endColumn": 35,
-++-+++        "severity": 3,
-++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
-++-+++        "category": "Best Practices",
-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++-+++      },
-++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-++-+index 9e21e88..1ec7a54 100644
-++-+--- a/force-app/main/default/classes/Account_Insert.cls
-++-++++ b/force-app/main/default/classes/Account_Insert.cls
-++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-++-+-          System.debug('Hi AND');
-++-++          System.debug('Hi');
-++++@@ -1264,12 +2251,0 @@ index 0000000..a6452b3
-++++-++        "severity": 3,
-++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
-++++-++        "category": "Best Practices",
-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++++-++      },
-++++-+@@ -10 +32 @@
-++++-+-        "endColumn": 29,
-++++-++        "endColumn": 32,
-++++-+@@ -21 +43 @@
-++++-+-        "endColumn": 29,
-++++-++        "endColumn": 32,
-++++@@ -1277 +2253 @@ index 0000000..a6452b3
-++++-+index c973918..e670f52 100644
-++++++index c973918..343e8d0 100644
-++++@@ -1283 +2259 @@ index 0000000..a6452b3
-++++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++++@@ -1286 +2262 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++++-index 9e21e88..d522ad0 100644
-+++++index add3f8c..de2575f 100644
-++++@@ -1289,4 +2265,2 @@ index 9e21e88..d522ad0 100644
-++++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
-++++-+        System.debug('Happy');
-++++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
-++++--          System.debug('Hi AND');
-+++++@@ -17 +17 @@ public with sharing class AccountInsertClass {
-+++++-          System.debug('Happy');
-++++@@ -1293,0 +2268,81 @@ index 9e21e88..d522ad0 100644
-+++@@ -1211 +3453 @@ index 0000000..a6452b3
-+++-+index ebc3aa5..d4945e4 100644
-+++++index 3c0aa8c..fe51488 100644
-+++@@ -1214,29 +3456,32 @@ index 0000000..a6452b3
-+++-+@@ -5,0 +6,22 @@
-+++-++      {
-+++-++        "line": 20,
-+++-++        "column": 11,
-+++-++        "endLine": 20,
-+++-++        "endColumn": 35,
-+++-++        "severity": 3,
-+++-++        "ruleName": "AvoidDebugStatements",
-+++-++        "category": "Performance",
-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++-++      },
-+++-++      {
-+++-++        "line": 20,
-+++-++        "column": 11,
-+++-++        "endLine": 20,
-+++-++        "endColumn": 35,
-+++-++        "severity": 3,
-+++-++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++-++        "category": "Best Practices",
-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++-++      },
-+++-+@@ -10 +32 @@
-+++-+-        "endColumn": 29,
-+++-++        "endColumn": 32,
-+++-+@@ -21 +43 @@
-+++-+-        "endColumn": 29,
-+++-++        "endColumn": 32,
-@@ -990 +7085 @@ index 0000000..a6452b3
--++++-        "line": 70,
-+++++-        "line": 20,
-@@ -992,2 +7087,2 @@ index 0000000..a6452b3
--++++-        "endLine": 70,
--++++-        "endColumn": 29,
-+++++-        "endLine": 20,
-+++++-        "endColumn": 35,
-@@ -1001 +7096 @@ index 0000000..a6452b3
--++++-        "line": 70,
-+++++-        "line": 20,
-@@ -1003,2 +7098,2 @@ index 0000000..a6452b3
--++++-        "endLine": 70,
--++++-        "endColumn": 29,
-+++++-        "endLine": 20,
-+++++-        "endColumn": 35,
-@@ -1015,4 +7110,33 @@ index 0000000..a6452b3
--++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
--++++index ebc3aa5..fe51488 100644
--++++--- a/scanner-reports/final-filtered-scanner-report.json
--+++++++ b/scanner-reports/final-filtered-scanner-report.json
-+++@@ -1244 +3489 @@ index 0000000..a6452b3
-+++-+index ebc3aa5..d4945e4 100644
-+++++index 3c0aa8c..fe51488 100644
-+++@@ -1247,29 +3492,32 @@ index 0000000..a6452b3
-+++-+@@ -5,0 +6,22 @@
-+++-++      {
-+++-++        "line": 20,
-+++-++        "column": 11,
-+++-++        "endLine": 20,
-+++-++        "endColumn": 35,
-+++-++        "severity": 3,
-+++-++        "ruleName": "AvoidDebugStatements",
-+++-++        "category": "Performance",
-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+++-++      },
-+++-++      {
-+++-++        "line": 20,
-+++-++        "column": 11,
-+++-++        "endLine": 20,
-+++-++        "endColumn": 35,
-+++-++        "severity": 3,
-+++-++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++-++        "category": "Best Practices",
-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++-++      },
-+++-+@@ -10 +32 @@
-+++-+-        "endColumn": 29,
-+++-++        "endColumn": 32,
-+++-+@@ -21 +43 @@
-+++-+-        "endColumn": 29,
-+++-++        "endColumn": 32,
-@@ -1026 +7150 @@ index 0000000..a6452b3
--++++-        "line": 70,
-+++++-        "line": 20,
-@@ -1028,2 +7152,2 @@ index 0000000..a6452b3
--++++-        "endLine": 70,
--++++-        "endColumn": 29,
-+++++-        "endLine": 20,
-+++++-        "endColumn": 35,
-@@ -1037 +7161 @@ index 0000000..a6452b3
--++++-        "line": 70,
-+++++-        "line": 20,
-@@ -1039,2 +7163,2 @@ index 0000000..a6452b3
--++++-        "endLine": 70,
--++++-        "endColumn": 29,
-+++++-        "endLine": 20,
-+++++-        "endColumn": 35,
-@@ -1051,119 +7175,224 @@ index 0000000..a6452b3
--++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
--++++index c973918..a14d61d 100644
--++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
--+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
--++++@@ -1 +1 @@
--++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
--++++\ No newline at end of file
--+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
--++++\ No newline at end of file
--+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--+++index 9e21e88..1ec7a54 100644
--+++--- a/force-app/main/default/classes/Account_Insert.cls
--++++++ b/force-app/main/default/classes/Account_Insert.cls
--+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
--+++-          System.debug('Hi AND');
--++++          System.debug('Hi');
--+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
--+++index ebc3aa5..bb2caee 100644
--+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
--++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
--+++@@ -5,0 +6,22 @@
--++++      {
--++++        "line": 20,
--++++        "column": 11,
--++++        "endLine": 20,
--++++        "endColumn": 35,
--++++        "severity": 3,
--++++        "ruleName": "AvoidDebugStatements",
--++++        "category": "Performance",
--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
--++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
--++++      },
--++++      {
--++++        "line": 20,
--++++        "column": 11,
--++++        "endLine": 20,
--++++        "endColumn": 35,
--++++        "severity": 3,
--++++        "ruleName": "DebugsShouldUseLoggingLevel",
--++++        "category": "Best Practices",
--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
--++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
--++++      },
--+++@@ -10 +32 @@
--+++-        "endColumn": 29,
--++++        "endColumn": 39,
--+++@@ -21 +43 @@
--+++-        "endColumn": 29,
--++++        "endColumn": 39,
--+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
--+++index ebc3aa5..bb2caee 100644
--+++--- a/scanner-reports/final-filtered-scanner-report.json
--++++++ b/scanner-reports/final-filtered-scanner-report.json
--+++@@ -5,0 +6,22 @@
--++++      {
--++++        "line": 20,
--++++        "column": 11,
--++++        "endLine": 20,
--++++        "endColumn": 35,
--++++        "severity": 3,
--++++        "ruleName": "AvoidDebugStatements",
--++++        "category": "Performance",
--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
--++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
--++++      },
--++++      {
--++++        "line": 20,
--++++        "column": 11,
--++++        "endLine": 20,
--++++        "endColumn": 35,
--++++        "severity": 3,
--++++        "ruleName": "DebugsShouldUseLoggingLevel",
--++++        "category": "Best Practices",
--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
--++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
--++++      },
--+++@@ -10 +32 @@
--+++-        "endColumn": 29,
--++++        "endColumn": 39,
--+++@@ -21 +43 @@
--+++-        "endColumn": 29,
--++++        "endColumn": 39,
--+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
--+++index c973918..866c0b7 100644
--+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
--++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
--+++@@ -1 +1 @@
--+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
--+++\ No newline at end of file
--++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
--+++\ No newline at end of file
--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--++index 9e21e88..9a5148a 100644
--++--- a/force-app/main/default/classes/Account_Insert.cls
--+++++ b/force-app/main/default/classes/Account_Insert.cls
--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
--++-          System.debug('Hi AND');
+-++++@@ -1211 +2213 @@ index 0000000..a6452b3
+-++++-+index ebc3aa5..d4945e4 100644
+-++++++index ebc3aa5..3c0aa8c 100644
+-++++@@ -1214,2 +2216,2 @@ index 0000000..a6452b3
+-++++-+@@ -5,0 +6,22 @@
+-++++-++      {
+-++++++@@ -7 +7 @@
+-+@@ -991 +5686,3 @@ index 0000000..a6452b3
+-+-++++-        "column": 11,
+-++++@@ -1217 +2219,3 @@ index 0000000..a6452b3
+-++++-++        "column": 11,
+-++++++@@ -9,2 +9,2 @@
+-+@@ -993,8 +5690,12 @@ index 0000000..a6452b3
+-+-++++-        "endColumn": 29,
+-+-++++-        "severity": 3,
+-+-++++-        "ruleName": "AvoidDebugStatements",
+-+-++++-        "category": "Performance",
+-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+-++++-      },
+-+-++++-      {
+-++@@ -1096,2 +4586,14 @@ index 0000000..a6452b3
+-++-++++        "endColumn": 39,
+-++-+++@@ -21 +43 @@
+-++++@@ -1220,7 +2224,2 @@ index 0000000..a6452b3
+-++++-++        "severity": 3,
+-++++-++        "ruleName": "AvoidDebugStatements",
+-++++-++        "category": "Performance",
+-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++++-++      },
+-++++-++      {
+-++++++@@ -18 +18 @@
+-+@@ -1002 +5703,3 @@ index 0000000..a6452b3
+-+-++++-        "column": 11,
+-++++@@ -1228 +2227,3 @@ index 0000000..a6452b3
+-++++-++        "column": 11,
+-++++++@@ -20,2 +20,2 @@
+-+@@ -1004,22 +5707,50 @@ index 0000000..a6452b3
+-+-++++-        "endColumn": 29,
+-+-++++-        "severity": 3,
+-+-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-+-++++-        "category": "Best Practices",
+-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+-++++-      }
+-+-++++-    ]
+-+-++++-  }
+-+-++++-]
+-+-+++++[]
+-+-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-+-++++index ebc3aa5..fe51488 100644
+-+-++++--- a/scanner-reports/final-filtered-scanner-report.json
+-+-+++++++ b/scanner-reports/final-filtered-scanner-report.json
+-+-++++@@ -1,30 +1 @@
+-+-++++-[
+-+-++++-  {
+-+-++++-    "engine": "pmd",
+-+-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
+-+-++++-    "violations": [
+-+-++++-      {
+-++@@ -1099,29 +4601,25 @@ index 0000000..a6452b3
+-++-++++        "endColumn": 39,
+-++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-++-+++index ebc3aa5..bb2caee 100644
+-++-+++--- a/scanner-reports/final-filtered-scanner-report.json
+-++-++++++ b/scanner-reports/final-filtered-scanner-report.json
+-++-+++@@ -5,0 +6,22 @@
+-++-++++      {
+-++-++++        "line": 20,
+-++-++++        "column": 11,
+-++-++++        "endLine": 20,
+-++-++++        "endColumn": 35,
+-++-++++        "severity": 3,
+-++-++++        "ruleName": "AvoidDebugStatements",
+-++-++++        "category": "Performance",
+-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++-++++      },
+-++-++++      {
+-++-++++        "line": 20,
+-++-++++        "column": 11,
+-++-++++        "endLine": 20,
+-++-++++        "endColumn": 35,
+-++-++++        "severity": 3,
+-++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++-++++        "category": "Best Practices",
+-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++-++++      },
+-++-+++@@ -10 +32 @@
+-++++@@ -1231,12 +2231,0 @@ index 0000000..a6452b3
+-++++-++        "severity": 3,
+-++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++++-++        "category": "Best Practices",
+-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++++-++      },
+-++++-+@@ -10 +32 @@
+-++++-+-        "endColumn": 29,
+-++++-++        "endColumn": 32,
+-++++-+@@ -21 +43 @@
+-++++-+-        "endColumn": 29,
+-++++-++        "endColumn": 32,
+-++++@@ -1244 +2233 @@ index 0000000..a6452b3
+-++++-+index ebc3aa5..d4945e4 100644
+-++++++index ebc3aa5..3c0aa8c 100644
+-++++@@ -1247,2 +2236,2 @@ index 0000000..a6452b3
+-++++-+@@ -5,0 +6,22 @@
+-++++-++      {
+-++++++@@ -7 +7 @@
+-+@@ -1027 +5758,3 @@ index 0000000..a6452b3
+-+-++++-        "column": 11,
+-++++@@ -1250 +2239,3 @@ index 0000000..a6452b3
+-++++-++        "column": 11,
+-++++++@@ -9,2 +9,2 @@
+-+@@ -1029,8 +5762,12 @@ index 0000000..a6452b3
+-+-++++-        "endColumn": 29,
+-+-++++-        "severity": 3,
+-+-++++-        "ruleName": "AvoidDebugStatements",
+-+-++++-        "category": "Performance",
+-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+-++++-      },
+-+-++++-      {
+-++@@ -1129,2 +4627,14 @@ index 0000000..a6452b3
+-++-++++        "endColumn": 39,
+-++-+++@@ -21 +43 @@
+-++++@@ -1253,7 +2244,2 @@ index 0000000..a6452b3
+-++++-++        "severity": 3,
+-++++-++        "ruleName": "AvoidDebugStatements",
+-++++-++        "category": "Performance",
+-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++++-++      },
+-++++-++      {
+-++++++@@ -18 +18 @@
+-+@@ -1038 +5775,3 @@ index 0000000..a6452b3
+-+-++++-        "column": 11,
+-++++@@ -1261 +2247,3 @@ index 0000000..a6452b3
+-++++-++        "column": 11,
+-++++++@@ -20,2 +20,2 @@
+-+@@ -1040,108 +5779,260 @@ index 0000000..a6452b3
+-+-++++-        "endColumn": 29,
+-+-++++-        "severity": 3,
+-+-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
+-+-++++-        "category": "Best Practices",
+-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+-++++-      }
+-+-++++-    ]
+-+-++++-  }
+-+-++++-]
+-+-+++++[]
+-+-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+-++++index c973918..a14d61d 100644
+-+-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-+-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+-++++@@ -1 +1 @@
+-+-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+-++++\ No newline at end of file
+-+-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+-++++\ No newline at end of file
+-+-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-+++index 9e21e88..1ec7a54 100644
+-+-+++--- a/force-app/main/default/classes/Account_Insert.cls
+-+-++++++ b/force-app/main/default/classes/Account_Insert.cls
+-+-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-+++-          System.debug('Hi AND');
+-+-++++          System.debug('Hi');
+-+-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+-+++index ebc3aa5..bb2caee 100644
+-+-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+-+++@@ -5,0 +6,22 @@
+-+-++++      {
+-+-++++        "line": 20,
+-+-++++        "column": 11,
+-+-++++        "endLine": 20,
+-+-++++        "endColumn": 35,
+-+-++++        "severity": 3,
+-+-++++        "ruleName": "AvoidDebugStatements",
+-+-++++        "category": "Performance",
+-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+-++++      },
+-+-++++      {
+-+-++++        "line": 20,
+-+-++++        "column": 11,
+-+-++++        "endLine": 20,
+-+-++++        "endColumn": 35,
+-+-++++        "severity": 3,
+-+-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+-++++        "category": "Best Practices",
+-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+-++++      },
+-+-+++@@ -10 +32 @@
+-+-+++-        "endColumn": 29,
+-+-++++        "endColumn": 39,
+-+-+++@@ -21 +43 @@
+-+-+++-        "endColumn": 29,
+-+-++++        "endColumn": 39,
+-+-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-+-+++index ebc3aa5..bb2caee 100644
+-+-+++--- a/scanner-reports/final-filtered-scanner-report.json
+-+-++++++ b/scanner-reports/final-filtered-scanner-report.json
+-+-+++@@ -5,0 +6,22 @@
+-+-++++      {
+-+-++++        "line": 20,
+-+-++++        "column": 11,
+-+-++++        "endLine": 20,
+-+-++++        "endColumn": 35,
+-+-++++        "severity": 3,
+-+-++++        "ruleName": "AvoidDebugStatements",
+-+-++++        "category": "Performance",
+-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+-++++      },
+-+-++++      {
+-+-++++        "line": 20,
+-+-++++        "column": 11,
+-+-++++        "endLine": 20,
+-+-++++        "endColumn": 35,
+-+-++++        "severity": 3,
+-+-++++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+-++++        "category": "Best Practices",
+-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+-++++      },
+-+-+++@@ -10 +32 @@
+-+-+++-        "endColumn": 29,
+-+-++++        "endColumn": 39,
+-+-+++@@ -21 +43 @@
+-+-+++-        "endColumn": 29,
+-+-++++        "endColumn": 39,
+-+-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+-+++index c973918..866c0b7 100644
+-+-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-+-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+-+++@@ -1 +1 @@
+-+-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+-+++\ No newline at end of file
+-+-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+-+++\ No newline at end of file
+-+-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-++index 9e21e88..9a5148a 100644
+-+-++--- a/force-app/main/default/classes/Account_Insert.cls
+-+-+++++ b/force-app/main/default/classes/Account_Insert.cls
+-+-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-++-          System.debug('Hi AND');
+-++@@ -1132,78 +4642,182 @@ index 0000000..a6452b3
+-++-++++        "endColumn": 39,
+-++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++-+++index c973918..866c0b7 100644
+-++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-++-+++@@ -1 +1 @@
+-++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++-+++\ No newline at end of file
+-++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++-+++\ No newline at end of file
+-++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-++index 9e21e88..9a5148a 100644
+-++-++--- a/force-app/main/default/classes/Account_Insert.cls
+-++-+++++ b/force-app/main/default/classes/Account_Insert.cls
+-++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-++-          System.debug('Hi AND');
+-++-+++          System.debug('Hello');
+-++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++-++index ebc3aa5..b33da59 100644
+-++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++-++@@ -5,0 +6,22 @@
+-++-+++      {
+-++-+++        "line": 20,
+-++-+++        "column": 11,
+-++-+++        "endLine": 20,
+-++-+++        "endColumn": 35,
+-++-+++        "severity": 3,
+-++-+++        "ruleName": "AvoidDebugStatements",
+-++-+++        "category": "Performance",
+-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++-+++      },
+-++-+++      {
+-++-+++        "line": 20,
+-++-+++        "column": 11,
+-++-+++        "endLine": 20,
+-++-+++        "endColumn": 35,
+-++-+++        "severity": 3,
+-++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++-+++        "category": "Best Practices",
+-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++-+++      },
+-++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-++-++index ebc3aa5..b33da59 100644
+-++-++--- a/scanner-reports/final-filtered-scanner-report.json
+-++-+++++ b/scanner-reports/final-filtered-scanner-report.json
+-++-++@@ -5,0 +6,22 @@
+-++-+++      {
+-++-+++        "line": 20,
+-++-+++        "column": 11,
+-++-+++        "endLine": 20,
+-++-+++        "endColumn": 35,
+-++-+++        "severity": 3,
+-++-+++        "ruleName": "AvoidDebugStatements",
+-++-+++        "category": "Performance",
+-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++-+++      },
+-++-+++      {
+-++-+++        "line": 20,
+-++-+++        "column": 11,
+-++-+++        "endLine": 20,
+-++-+++        "endColumn": 35,
+-++-+++        "severity": 3,
+-++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++-+++        "category": "Best Practices",
+-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++-+++      },
+-++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-++-+index 9e21e88..1ec7a54 100644
+-++-+--- a/force-app/main/default/classes/Account_Insert.cls
+-++-++++ b/force-app/main/default/classes/Account_Insert.cls
+-++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-++-+-          System.debug('Hi AND');
+-++-++          System.debug('Hi');
+-++++@@ -1264,12 +2251,0 @@ index 0000000..a6452b3
+-++++-++        "severity": 3,
+-++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++++-++        "category": "Best Practices",
+-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++++-++      },
+-++++-+@@ -10 +32 @@
+-++++-+-        "endColumn": 29,
+-++++-++        "endColumn": 32,
+-++++-+@@ -21 +43 @@
+-++++-+-        "endColumn": 29,
+-++++-++        "endColumn": 32,
+-++++@@ -1277 +2253 @@ index 0000000..a6452b3
+-++++-+index c973918..e670f52 100644
+-++++++index c973918..343e8d0 100644
+-++++@@ -1283 +2259 @@ index 0000000..a6452b3
+-++++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++++@@ -1286 +2262 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++++-index 9e21e88..d522ad0 100644
+-+++++index add3f8c..de2575f 100644
+-++++@@ -1289,4 +2265,2 @@ index 9e21e88..d522ad0 100644
+-++++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+-++++-+        System.debug('Happy');
+-++++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
+-++++--          System.debug('Hi AND');
+-+++++@@ -17 +17 @@ public with sharing class AccountInsertClass {
+-+++++-          System.debug('Happy');
+-++++@@ -1293,0 +2268,81 @@ index 9e21e88..d522ad0 100644
+-+++@@ -1211 +3453 @@ index 0000000..a6452b3
+-+++-+index ebc3aa5..d4945e4 100644
+-+++++index 3c0aa8c..fe51488 100644
+-+++@@ -1214,29 +3456,32 @@ index 0000000..a6452b3
+-+++-+@@ -5,0 +6,22 @@
+-+++-++      {
+-+++-++        "line": 20,
+-+++-++        "column": 11,
+-+++-++        "endLine": 20,
+-+++-++        "endColumn": 35,
+-+++-++        "severity": 3,
+-+++-++        "ruleName": "AvoidDebugStatements",
+-+++-++        "category": "Performance",
+-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++-++      },
+-+++-++      {
+-+++-++        "line": 20,
+-+++-++        "column": 11,
+-+++-++        "endLine": 20,
+-+++-++        "endColumn": 35,
+-+++-++        "severity": 3,
+-+++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++-++        "category": "Best Practices",
+-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++-++      },
+-+++-+@@ -10 +32 @@
+-+++-+-        "endColumn": 29,
+-+++-++        "endColumn": 32,
+-+++-+@@ -21 +43 @@
+-+++-+-        "endColumn": 29,
+-+++-++        "endColumn": 32,
+-@@ -990 +7085 @@ index 0000000..a6452b3
+--++++-        "line": 70,
+-+++++-        "line": 20,
+-@@ -992,2 +7087,2 @@ index 0000000..a6452b3
+--++++-        "endLine": 70,
+--++++-        "endColumn": 29,
+-+++++-        "endLine": 20,
+-+++++-        "endColumn": 35,
+-@@ -1001 +7096 @@ index 0000000..a6452b3
+--++++-        "line": 70,
+-+++++-        "line": 20,
+-@@ -1003,2 +7098,2 @@ index 0000000..a6452b3
+--++++-        "endLine": 70,
+--++++-        "endColumn": 29,
+-+++++-        "endLine": 20,
+-+++++-        "endColumn": 35,
+-@@ -1015,4 +7110,33 @@ index 0000000..a6452b3
+--++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+--++++index ebc3aa5..fe51488 100644
+--++++--- a/scanner-reports/final-filtered-scanner-report.json
+--+++++++ b/scanner-reports/final-filtered-scanner-report.json
+-+++@@ -1244 +3489 @@ index 0000000..a6452b3
+-+++-+index ebc3aa5..d4945e4 100644
+-+++++index 3c0aa8c..fe51488 100644
+-+++@@ -1247,29 +3492,32 @@ index 0000000..a6452b3
+-+++-+@@ -5,0 +6,22 @@
+-+++-++      {
+-+++-++        "line": 20,
+-+++-++        "column": 11,
+-+++-++        "endLine": 20,
+-+++-++        "endColumn": 35,
+-+++-++        "severity": 3,
+-+++-++        "ruleName": "AvoidDebugStatements",
+-+++-++        "category": "Performance",
+-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+++-++      },
+-+++-++      {
+-+++-++        "line": 20,
+-+++-++        "column": 11,
+-+++-++        "endLine": 20,
+-+++-++        "endColumn": 35,
+-+++-++        "severity": 3,
+-+++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+++-++        "category": "Best Practices",
+-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+++-++      },
+-+++-+@@ -10 +32 @@
+-+++-+-        "endColumn": 29,
+-+++-++        "endColumn": 32,
+-+++-+@@ -21 +43 @@
+-+++-+-        "endColumn": 29,
+-+++-++        "endColumn": 32,
+-@@ -1026 +7150 @@ index 0000000..a6452b3
+--++++-        "line": 70,
+-+++++-        "line": 20,
+-@@ -1028,2 +7152,2 @@ index 0000000..a6452b3
+--++++-        "endLine": 70,
+--++++-        "endColumn": 29,
+-+++++-        "endLine": 20,
+-+++++-        "endColumn": 35,
+-@@ -1037 +7161 @@ index 0000000..a6452b3
+--++++-        "line": 70,
+-+++++-        "line": 20,
+-@@ -1039,2 +7163,2 @@ index 0000000..a6452b3
+--++++-        "endLine": 70,
+--++++-        "endColumn": 29,
+-+++++-        "endLine": 20,
+-+++++-        "endColumn": 35,
+-@@ -1051,119 +7175,224 @@ index 0000000..a6452b3
+--++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+--++++index c973918..a14d61d 100644
+--++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+--+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+--++++@@ -1 +1 @@
+--++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+--++++\ No newline at end of file
+--+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+--++++\ No newline at end of file
+--+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--+++index 9e21e88..1ec7a54 100644
+--+++--- a/force-app/main/default/classes/Account_Insert.cls
+--++++++ b/force-app/main/default/classes/Account_Insert.cls
+--+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+--+++-          System.debug('Hi AND');
+--++++          System.debug('Hi');
+--+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+--+++index ebc3aa5..bb2caee 100644
+--+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+--++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+--+++@@ -5,0 +6,22 @@
+--++++      {
+--++++        "line": 20,
+--++++        "column": 11,
+--++++        "endLine": 20,
+--++++        "endColumn": 35,
+--++++        "severity": 3,
+--++++        "ruleName": "AvoidDebugStatements",
+--++++        "category": "Performance",
+--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+--++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+--++++      },
+--++++      {
+--++++        "line": 20,
+--++++        "column": 11,
+--++++        "endLine": 20,
+--++++        "endColumn": 35,
+--++++        "severity": 3,
+--++++        "ruleName": "DebugsShouldUseLoggingLevel",
+--++++        "category": "Best Practices",
+--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+--++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+--++++      },
+--+++@@ -10 +32 @@
+--+++-        "endColumn": 29,
+--++++        "endColumn": 39,
+--+++@@ -21 +43 @@
+--+++-        "endColumn": 29,
+--++++        "endColumn": 39,
+--+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+--+++index ebc3aa5..bb2caee 100644
+--+++--- a/scanner-reports/final-filtered-scanner-report.json
+--++++++ b/scanner-reports/final-filtered-scanner-report.json
+--+++@@ -5,0 +6,22 @@
+--++++      {
+--++++        "line": 20,
+--++++        "column": 11,
+--++++        "endLine": 20,
+--++++        "endColumn": 35,
+--++++        "severity": 3,
+--++++        "ruleName": "AvoidDebugStatements",
+--++++        "category": "Performance",
+--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+--++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+--++++      },
+--++++      {
+--++++        "line": 20,
+--++++        "column": 11,
+--++++        "endLine": 20,
+--++++        "endColumn": 35,
+--++++        "severity": 3,
+--++++        "ruleName": "DebugsShouldUseLoggingLevel",
+--++++        "category": "Best Practices",
+--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+--++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+--++++      },
+--+++@@ -10 +32 @@
+--+++-        "endColumn": 29,
+--++++        "endColumn": 39,
+--+++@@ -21 +43 @@
+--+++-        "endColumn": 29,
+--++++        "endColumn": 39,
+--+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+--+++index c973918..866c0b7 100644
+--+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+--++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+--+++@@ -1 +1 @@
+--+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+--+++\ No newline at end of file
+--++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+--+++\ No newline at end of file
+--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--++index 9e21e88..9a5148a 100644
+--++--- a/force-app/main/default/classes/Account_Insert.cls
+--+++++ b/force-app/main/default/classes/Account_Insert.cls
+--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
+--++-          System.debug('Hi AND');
++-++++@@ -1211 +2213 @@ index 0000000..a6452b3
++-++++-+index ebc3aa5..d4945e4 100644
++-++++++index ebc3aa5..3c0aa8c 100644
++-++++@@ -1214,2 +2216,2 @@ index 0000000..a6452b3
++-++++-+@@ -5,0 +6,22 @@
++-++++-++      {
++-++++++@@ -7 +7 @@
++-+@@ -991 +5686,3 @@ index 0000000..a6452b3
++-+-++++-        "column": 11,
++-++++@@ -1217 +2219,3 @@ index 0000000..a6452b3
++-++++-++        "column": 11,
++-++++++@@ -9,2 +9,2 @@
++-+@@ -993,8 +5690,12 @@ index 0000000..a6452b3
++-+-++++-        "endColumn": 29,
++-+-++++-        "severity": 3,
++-+-++++-        "ruleName": "AvoidDebugStatements",
++-+-++++-        "category": "Performance",
++-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+-++++-      },
++-+-++++-      {
++-++@@ -1096,2 +4586,14 @@ index 0000000..a6452b3
++-++-++++        "endColumn": 39,
++-++-+++@@ -21 +43 @@
++-++++@@ -1220,7 +2224,2 @@ index 0000000..a6452b3
++-++++-++        "severity": 3,
++-++++-++        "ruleName": "AvoidDebugStatements",
++-++++-++        "category": "Performance",
++-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++++-++      },
++-++++-++      {
++-++++++@@ -18 +18 @@
++-+@@ -1002 +5703,3 @@ index 0000000..a6452b3
++-+-++++-        "column": 11,
++-++++@@ -1228 +2227,3 @@ index 0000000..a6452b3
++-++++-++        "column": 11,
++-++++++@@ -20,2 +20,2 @@
++-+@@ -1004,22 +5707,50 @@ index 0000000..a6452b3
++-+-++++-        "endColumn": 29,
++-+-++++-        "severity": 3,
++-+-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-+-++++-        "category": "Best Practices",
++-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+-++++-      }
++-+-++++-    ]
++-+-++++-  }
++-+-++++-]
++-+-+++++[]
++-+-++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-+-++++index ebc3aa5..fe51488 100644
++-+-++++--- a/scanner-reports/final-filtered-scanner-report.json
++-+-+++++++ b/scanner-reports/final-filtered-scanner-report.json
++-+-++++@@ -1,30 +1 @@
++-+-++++-[
++-+-++++-  {
++-+-++++-    "engine": "pmd",
++-+-++++-    "fileName": "C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls",
++-+-++++-    "violations": [
++-+-++++-      {
++-++@@ -1099,29 +4601,25 @@ index 0000000..a6452b3
++-++-++++        "endColumn": 39,
++-++-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-++-+++index ebc3aa5..bb2caee 100644
++-++-+++--- a/scanner-reports/final-filtered-scanner-report.json
++-++-++++++ b/scanner-reports/final-filtered-scanner-report.json
++-++-+++@@ -5,0 +6,22 @@
++-++-++++      {
++-++-++++        "line": 20,
++-++-++++        "column": 11,
++-++-++++        "endLine": 20,
++-++-++++        "endColumn": 35,
++-++-++++        "severity": 3,
++-++-++++        "ruleName": "AvoidDebugStatements",
++-++-++++        "category": "Performance",
++-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++-++++      },
++-++-++++      {
++-++-++++        "line": 20,
++-++-++++        "column": 11,
++-++-++++        "endLine": 20,
++-++-++++        "endColumn": 35,
++-++-++++        "severity": 3,
++-++-++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++-++++        "category": "Best Practices",
++-++-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++-++++      },
++-++-+++@@ -10 +32 @@
++-++++@@ -1231,12 +2231,0 @@ index 0000000..a6452b3
++-++++-++        "severity": 3,
++-++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++++-++        "category": "Best Practices",
++-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++++-++      },
++-++++-+@@ -10 +32 @@
++-++++-+-        "endColumn": 29,
++-++++-++        "endColumn": 32,
++-++++-+@@ -21 +43 @@
++-++++-+-        "endColumn": 29,
++-++++-++        "endColumn": 32,
++-++++@@ -1244 +2233 @@ index 0000000..a6452b3
++-++++-+index ebc3aa5..d4945e4 100644
++-++++++index ebc3aa5..3c0aa8c 100644
++-++++@@ -1247,2 +2236,2 @@ index 0000000..a6452b3
++-++++-+@@ -5,0 +6,22 @@
++-++++-++      {
++-++++++@@ -7 +7 @@
++-+@@ -1027 +5758,3 @@ index 0000000..a6452b3
++-+-++++-        "column": 11,
++-++++@@ -1250 +2239,3 @@ index 0000000..a6452b3
++-++++-++        "column": 11,
++-++++++@@ -9,2 +9,2 @@
++-+@@ -1029,8 +5762,12 @@ index 0000000..a6452b3
++-+-++++-        "endColumn": 29,
++-+-++++-        "severity": 3,
++-+-++++-        "ruleName": "AvoidDebugStatements",
++-+-++++-        "category": "Performance",
++-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+-++++-        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+-++++-      },
++-+-++++-      {
++-++@@ -1129,2 +4627,14 @@ index 0000000..a6452b3
++-++-++++        "endColumn": 39,
++-++-+++@@ -21 +43 @@
++-++++@@ -1253,7 +2244,2 @@ index 0000000..a6452b3
++-++++-++        "severity": 3,
++-++++-++        "ruleName": "AvoidDebugStatements",
++-++++-++        "category": "Performance",
++-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++++-++      },
++-++++-++      {
++-++++++@@ -18 +18 @@
++-+@@ -1038 +5775,3 @@ index 0000000..a6452b3
++-+-++++-        "column": 11,
++-++++@@ -1261 +2247,3 @@ index 0000000..a6452b3
++-++++-++        "column": 11,
++-++++++@@ -20,2 +20,2 @@
++-+@@ -1040,108 +5779,260 @@ index 0000000..a6452b3
++-+-++++-        "endColumn": 29,
++-+-++++-        "severity": 3,
++-+-++++-        "ruleName": "DebugsShouldUseLoggingLevel",
++-+-++++-        "category": "Best Practices",
++-+-++++-        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+-++++-        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+-++++-      }
++-+-++++-    ]
++-+-++++-  }
++-+-++++-]
++-+-+++++[]
++-+-++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+-++++index c973918..a14d61d 100644
++-+-++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-+-+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+-++++@@ -1 +1 @@
++-+-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+-++++\ No newline at end of file
++-+-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+-++++\ No newline at end of file
++-+-+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-+++index 9e21e88..1ec7a54 100644
++-+-+++--- a/force-app/main/default/classes/Account_Insert.cls
++-+-++++++ b/force-app/main/default/classes/Account_Insert.cls
++-+-+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-+++-          System.debug('Hi AND');
++-+-++++          System.debug('Hi');
++-+-+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+-+++index ebc3aa5..bb2caee 100644
++-+-+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+-++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+-+++@@ -5,0 +6,22 @@
++-+-++++      {
++-+-++++        "line": 20,
++-+-++++        "column": 11,
++-+-++++        "endLine": 20,
++-+-++++        "endColumn": 35,
++-+-++++        "severity": 3,
++-+-++++        "ruleName": "AvoidDebugStatements",
++-+-++++        "category": "Performance",
++-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+-++++      },
++-+-++++      {
++-+-++++        "line": 20,
++-+-++++        "column": 11,
++-+-++++        "endLine": 20,
++-+-++++        "endColumn": 35,
++-+-++++        "severity": 3,
++-+-++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+-++++        "category": "Best Practices",
++-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+-++++      },
++-+-+++@@ -10 +32 @@
++-+-+++-        "endColumn": 29,
++-+-++++        "endColumn": 39,
++-+-+++@@ -21 +43 @@
++-+-+++-        "endColumn": 29,
++-+-++++        "endColumn": 39,
++-+-+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-+-+++index ebc3aa5..bb2caee 100644
++-+-+++--- a/scanner-reports/final-filtered-scanner-report.json
++-+-++++++ b/scanner-reports/final-filtered-scanner-report.json
++-+-+++@@ -5,0 +6,22 @@
++-+-++++      {
++-+-++++        "line": 20,
++-+-++++        "column": 11,
++-+-++++        "endLine": 20,
++-+-++++        "endColumn": 35,
++-+-++++        "severity": 3,
++-+-++++        "ruleName": "AvoidDebugStatements",
++-+-++++        "category": "Performance",
++-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+-++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+-++++      },
++-+-++++      {
++-+-++++        "line": 20,
++-+-++++        "column": 11,
++-+-++++        "endLine": 20,
++-+-++++        "endColumn": 35,
++-+-++++        "severity": 3,
++-+-++++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+-++++        "category": "Best Practices",
++-+-++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+-++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+-++++      },
++-+-+++@@ -10 +32 @@
++-+-+++-        "endColumn": 29,
++-+-++++        "endColumn": 39,
++-+-+++@@ -21 +43 @@
++-+-+++-        "endColumn": 29,
++-+-++++        "endColumn": 39,
++-+-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+-+++index c973918..866c0b7 100644
++-+-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-+-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+-+++@@ -1 +1 @@
++-+-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+-+++\ No newline at end of file
++-+-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+-+++\ No newline at end of file
++-+-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-++index 9e21e88..9a5148a 100644
++-+-++--- a/force-app/main/default/classes/Account_Insert.cls
++-+-+++++ b/force-app/main/default/classes/Account_Insert.cls
++-+-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-++-          System.debug('Hi AND');
++-++@@ -1132,78 +4642,182 @@ index 0000000..a6452b3
++-++-++++        "endColumn": 39,
++-++-+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++-+++index c973918..866c0b7 100644
++-++-+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-++-++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-++-+++@@ -1 +1 @@
++-++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++-+++\ No newline at end of file
++-++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++-+++\ No newline at end of file
++-++-++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-++index 9e21e88..9a5148a 100644
++-++-++--- a/force-app/main/default/classes/Account_Insert.cls
++-++-+++++ b/force-app/main/default/classes/Account_Insert.cls
++-++-++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-++-          System.debug('Hi AND');
++-++-+++          System.debug('Hello');
++-++-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++-++index ebc3aa5..b33da59 100644
++-++-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++-++@@ -5,0 +6,22 @@
++-++-+++      {
++-++-+++        "line": 20,
++-++-+++        "column": 11,
++-++-+++        "endLine": 20,
++-++-+++        "endColumn": 35,
++-++-+++        "severity": 3,
++-++-+++        "ruleName": "AvoidDebugStatements",
++-++-+++        "category": "Performance",
++-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++-+++      },
++-++-+++      {
++-++-+++        "line": 20,
++-++-+++        "column": 11,
++-++-+++        "endLine": 20,
++-++-+++        "endColumn": 35,
++-++-+++        "severity": 3,
++-++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++-+++        "category": "Best Practices",
++-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++-+++      },
++-++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-++-++index ebc3aa5..b33da59 100644
++-++-++--- a/scanner-reports/final-filtered-scanner-report.json
++-++-+++++ b/scanner-reports/final-filtered-scanner-report.json
++-++-++@@ -5,0 +6,22 @@
++-++-+++      {
++-++-+++        "line": 20,
++-++-+++        "column": 11,
++-++-+++        "endLine": 20,
++-++-+++        "endColumn": 35,
++-++-+++        "severity": 3,
++-++-+++        "ruleName": "AvoidDebugStatements",
++-++-+++        "category": "Performance",
++-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++-+++      },
++-++-+++      {
++-++-+++        "line": 20,
++-++-+++        "column": 11,
++-++-+++        "endLine": 20,
++-++-+++        "endColumn": 35,
++-++-+++        "severity": 3,
++-++-+++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++-+++        "category": "Best Practices",
++-++-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++-+++      },
++-++-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-++-+index 9e21e88..1ec7a54 100644
++-++-+--- a/force-app/main/default/classes/Account_Insert.cls
++-++-++++ b/force-app/main/default/classes/Account_Insert.cls
++-++-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-++-+-          System.debug('Hi AND');
++-++-++          System.debug('Hi');
++-++++@@ -1264,12 +2251,0 @@ index 0000000..a6452b3
++-++++-++        "severity": 3,
++-++++-++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++++-++        "category": "Best Practices",
++-++++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++++-++      },
++-++++-+@@ -10 +32 @@
++-++++-+-        "endColumn": 29,
++-++++-++        "endColumn": 32,
++-++++-+@@ -21 +43 @@
++-++++-+-        "endColumn": 29,
++-++++-++        "endColumn": 32,
++-++++@@ -1277 +2253 @@ index 0000000..a6452b3
++-++++-+index c973918..e670f52 100644
++-++++++index c973918..343e8d0 100644
++-++++@@ -1283 +2259 @@ index 0000000..a6452b3
++-++++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++++@@ -1286 +2262 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++++-index 9e21e88..d522ad0 100644
++-+++++index add3f8c..de2575f 100644
++-++++@@ -1289,4 +2265,2 @@ index 9e21e88..d522ad0 100644
++-++++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
++-++++-+        System.debug('Happy');
++-++++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
++-++++--          System.debug('Hi AND');
++-+++++@@ -17 +17 @@ public with sharing class AccountInsertClass {
++-+++++-          System.debug('Happy');
++-++++@@ -1293,0 +2268,81 @@ index 9e21e88..d522ad0 100644
++-+++@@ -1211 +3453 @@ index 0000000..a6452b3
++-+++-+index ebc3aa5..d4945e4 100644
++-+++++index 3c0aa8c..fe51488 100644
++-+++@@ -1214,29 +3456,32 @@ index 0000000..a6452b3
++-+++-+@@ -5,0 +6,22 @@
++-+++-++      {
++-+++-++        "line": 20,
++-+++-++        "column": 11,
++-+++-++        "endLine": 20,
++-+++-++        "endColumn": 35,
++-+++-++        "severity": 3,
++-+++-++        "ruleName": "AvoidDebugStatements",
++-+++-++        "category": "Performance",
++-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++-++      },
++-+++-++      {
++-+++-++        "line": 20,
++-+++-++        "column": 11,
++-+++-++        "endLine": 20,
++-+++-++        "endColumn": 35,
++-+++-++        "severity": 3,
++-+++-++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++-++        "category": "Best Practices",
++-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++-++      },
++-+++-+@@ -10 +32 @@
++-+++-+-        "endColumn": 29,
++-+++-++        "endColumn": 32,
++-+++-+@@ -21 +43 @@
++-+++-+-        "endColumn": 29,
++-+++-++        "endColumn": 32,
++-@@ -990 +7085 @@ index 0000000..a6452b3
++--++++-        "line": 70,
++-+++++-        "line": 20,
++-@@ -992,2 +7087,2 @@ index 0000000..a6452b3
++--++++-        "endLine": 70,
++--++++-        "endColumn": 29,
++-+++++-        "endLine": 20,
++-+++++-        "endColumn": 35,
++-@@ -1001 +7096 @@ index 0000000..a6452b3
++--++++-        "line": 70,
++-+++++-        "line": 20,
++-@@ -1003,2 +7098,2 @@ index 0000000..a6452b3
++--++++-        "endLine": 70,
++--++++-        "endColumn": 29,
++-+++++-        "endLine": 20,
++-+++++-        "endColumn": 35,
++-@@ -1015,4 +7110,33 @@ index 0000000..a6452b3
++--++++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++--++++index ebc3aa5..fe51488 100644
++--++++--- a/scanner-reports/final-filtered-scanner-report.json
++--+++++++ b/scanner-reports/final-filtered-scanner-report.json
++-+++@@ -1244 +3489 @@ index 0000000..a6452b3
++-+++-+index ebc3aa5..d4945e4 100644
++-+++++index 3c0aa8c..fe51488 100644
++-+++@@ -1247,29 +3492,32 @@ index 0000000..a6452b3
++-+++-+@@ -5,0 +6,22 @@
++-+++-++      {
++-+++-++        "line": 20,
++-+++-++        "column": 11,
++-+++-++        "endLine": 20,
++-+++-++        "endColumn": 35,
++-+++-++        "severity": 3,
++-+++-++        "ruleName": "AvoidDebugStatements",
++-+++-++        "category": "Performance",
++-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+++-++      },
++-+++-++      {
++-+++-++        "line": 20,
++-+++-++        "column": 11,
++-+++-++        "endLine": 20,
++-+++-++        "endColumn": 35,
++-+++-++        "severity": 3,
++-+++-++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+++-++        "category": "Best Practices",
++-+++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+++-++      },
++-+++-+@@ -10 +32 @@
++-+++-+-        "endColumn": 29,
++-+++-++        "endColumn": 32,
++-+++-+@@ -21 +43 @@
++-+++-+-        "endColumn": 29,
++-+++-++        "endColumn": 32,
++-@@ -1026 +7150 @@ index 0000000..a6452b3
++--++++-        "line": 70,
++-+++++-        "line": 20,
++-@@ -1028,2 +7152,2 @@ index 0000000..a6452b3
++--++++-        "endLine": 70,
++--++++-        "endColumn": 29,
++-+++++-        "endLine": 20,
++-+++++-        "endColumn": 35,
++-@@ -1037 +7161 @@ index 0000000..a6452b3
++--++++-        "line": 70,
++-+++++-        "line": 20,
++-@@ -1039,2 +7163,2 @@ index 0000000..a6452b3
++--++++-        "endLine": 70,
++--++++-        "endColumn": 29,
++-+++++-        "endLine": 20,
++-+++++-        "endColumn": 35,
++-@@ -1051,119 +7175,224 @@ index 0000000..a6452b3
++--++++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++--++++index c973918..a14d61d 100644
++--++++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++--+++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++--++++@@ -1 +1 @@
++--++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++--++++\ No newline at end of file
++--+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":33,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++--++++\ No newline at end of file
++--+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--+++index 9e21e88..1ec7a54 100644
++--+++--- a/force-app/main/default/classes/Account_Insert.cls
++--++++++ b/force-app/main/default/classes/Account_Insert.cls
++--+++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++--+++-          System.debug('Hi AND');
++--++++          System.debug('Hi');
++--+++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++--+++index ebc3aa5..bb2caee 100644
++--+++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++--++++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++--+++@@ -5,0 +6,22 @@
++--++++      {
++--++++        "line": 20,
++--++++        "column": 11,
++--++++        "endLine": 20,
++--++++        "endColumn": 35,
++--++++        "severity": 3,
++--++++        "ruleName": "AvoidDebugStatements",
++--++++        "category": "Performance",
++--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++--++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++--++++      },
++--++++      {
++--++++        "line": 20,
++--++++        "column": 11,
++--++++        "endLine": 20,
++--++++        "endColumn": 35,
++--++++        "severity": 3,
++--++++        "ruleName": "DebugsShouldUseLoggingLevel",
++--++++        "category": "Best Practices",
++--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++--++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++--++++      },
++--+++@@ -10 +32 @@
++--+++-        "endColumn": 29,
++--++++        "endColumn": 39,
++--+++@@ -21 +43 @@
++--+++-        "endColumn": 29,
++--++++        "endColumn": 39,
++--+++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++--+++index ebc3aa5..bb2caee 100644
++--+++--- a/scanner-reports/final-filtered-scanner-report.json
++--++++++ b/scanner-reports/final-filtered-scanner-report.json
++--+++@@ -5,0 +6,22 @@
++--++++      {
++--++++        "line": 20,
++--++++        "column": 11,
++--++++        "endLine": 20,
++--++++        "endColumn": 35,
++--++++        "severity": 3,
++--++++        "ruleName": "AvoidDebugStatements",
++--++++        "category": "Performance",
++--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++--++++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++--++++      },
++--++++      {
++--++++        "line": 20,
++--++++        "column": 11,
++--++++        "endLine": 20,
++--++++        "endColumn": 35,
++--++++        "severity": 3,
++--++++        "ruleName": "DebugsShouldUseLoggingLevel",
++--++++        "category": "Best Practices",
++--++++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++--++++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++--++++      },
++--+++@@ -10 +32 @@
++--+++-        "endColumn": 29,
++--++++        "endColumn": 39,
++--+++@@ -21 +43 @@
++--+++-        "endColumn": 29,
++--++++        "endColumn": 39,
++--+++diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++--+++index c973918..866c0b7 100644
++--+++--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++--++++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++--+++@@ -1 +1 @@
++--+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++--+++\ No newline at end of file
++--++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":39,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++--+++\ No newline at end of file
++--++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--++index 9e21e88..9a5148a 100644
++--++--- a/force-app/main/default/classes/Account_Insert.cls
++--+++++ b/force-app/main/default/classes/Account_Insert.cls
++--++@@ -70 +70 @@ public with sharing class AccountInsertClass {
++--++-          System.debug('Hi AND');
++--+++          System.debug('Hello');
++--++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++--++index ebc3aa5..b33da59 100644
++--++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++--+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++--++@@ -5,0 +6,22 @@
++--+++      {
++--+++        "line": 20,
++--+++        "column": 11,
++--+++        "endLine": 20,
++--+++        "endColumn": 35,
++--+++        "severity": 3,
++--+++        "ruleName": "AvoidDebugStatements",
++--+++        "category": "Performance",
++--+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++--+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++--+++      },
++--+++      {
++--+++        "line": 20,
++--+++        "column": 11,
++--+++        "endLine": 20,
++--+++        "endColumn": 35,
++-+++@@ -1277 +3525 @@ index 0000000..a6452b3
++-+++-+index c973918..e670f52 100644
++-+++++index 343e8d0..baa723d 100644
++-+++@@ -1281 +3529 @@ index 0000000..a6452b3
++-+++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++@@ -1283 +3531 @@ index 0000000..a6452b3
++-+++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++@@ -1286 +3534 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+++-index 9e21e88..d522ad0 100644
++-++++index add3f8c..6d35ef2 100644
++-+++@@ -1289,4 +3537,2 @@ index 9e21e88..d522ad0 100644
++-+++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
++-+++-+        System.debug('Happy');
++-+++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
++-+++--          System.debug('Hi AND');
++-++++@@ -17 +17 @@ public with sharing class AccountInsertClass {
++-++++-          System.debug('Happy');
++-+++@@ -1293,0 +3540,51 @@ index 9e21e88..d522ad0 100644
++-++++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
++-+@@ -1149,61 +6040,120 @@ index 0000000..a6452b3
++-+-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+-++index ebc3aa5..b33da59 100644
++-+-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+-++@@ -5,0 +6,22 @@
++-+-+++      {
++-+-+++        "line": 20,
++-+-+++        "column": 11,
++-+-+++        "endLine": 20,
++-+-+++        "endColumn": 35,
++-+-+++        "severity": 3,
++-+-+++        "ruleName": "AvoidDebugStatements",
++-+-+++        "category": "Performance",
++-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+-+++      },
++-+-+++      {
++-+-+++        "line": 20,
++-+-+++        "column": 11,
++-+-+++        "endLine": 20,
++-+-+++        "endColumn": 35,
++-+-+++        "severity": 3,
++-+-+++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+-+++        "category": "Best Practices",
++-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+-+++      },
++-+-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-+-++index ebc3aa5..b33da59 100644
++-+-++--- a/scanner-reports/final-filtered-scanner-report.json
++-+-+++++ b/scanner-reports/final-filtered-scanner-report.json
++-+-++@@ -5,0 +6,22 @@
++-+-+++      {
++-+-+++        "line": 20,
++-+-+++        "column": 11,
++-+-+++        "endLine": 20,
++-+-+++        "endColumn": 35,
++-+-+++        "severity": 3,
++-+-+++        "ruleName": "AvoidDebugStatements",
++-+-+++        "category": "Performance",
++-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+-+++      },
++-+-+++      {
++-+-+++        "line": 20,
++-+-+++        "column": 11,
++-+-+++        "endLine": 20,
++-+-+++        "endColumn": 35,
++-+-+++        "severity": 3,
++-+-+++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+-+++        "category": "Best Practices",
++-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+-+++      },
++-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++-+-+index 9e21e88..1ec7a54 100644
++-+-+--- a/force-app/main/default/classes/Account_Insert.cls
++-+-++++ b/force-app/main/default/classes/Account_Insert.cls
++-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++-+-+-          System.debug('Hi AND');
++-+-++          System.debug('Hi');
++-++@@ -1211 +4825 @@ index 0000000..a6452b3
++-++-+index ebc3aa5..d4945e4 100644
++-++++index 3c0aa8c..d9025db 100644
++-++@@ -1214,29 +4828,16 @@ index 0000000..a6452b3
++-++-+@@ -5,0 +6,22 @@
++-++-++      {
++-++-++        "line": 20,
++-++-++        "column": 11,
++-++-++        "endLine": 20,
++-++-++        "endColumn": 35,
++-++-++        "severity": 3,
++-++-++        "ruleName": "AvoidDebugStatements",
++-++-++        "category": "Performance",
++-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++-++      },
++-++-++      {
++-++-++        "line": 20,
++-++-++        "column": 11,
++-++-++        "endLine": 20,
++-++-++        "endColumn": 35,
++-++-++        "severity": 3,
++-++-++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++-++        "category": "Best Practices",
++-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++-++      },
++-++-+@@ -10 +32 @@
++-++-+-        "endColumn": 29,
++-++-++        "endColumn": 32,
++-++-+@@ -21 +43 @@
++-++-+-        "endColumn": 29,
++-++-++        "endColumn": 32,
++-++++@@ -7 +7 @@
++-++++-        "line": 20,
++-+++++        "line": 17,
++-++++@@ -9,2 +9,2 @@
++-++++-        "endLine": 20,
++-++++-        "endColumn": 35,
++-+++++        "endLine": 17,
++-+++++        "endColumn": 29,
++-++++@@ -18 +18 @@
++-++++-        "line": 20,
++-+++++        "line": 17,
++-++++@@ -20,2 +20,2 @@
++-++++-        "endLine": 20,
++-++++-        "endColumn": 35,
++-+++++        "endLine": 17,
++-+++++        "endColumn": 29,
++-++@@ -1244 +4845 @@ index 0000000..a6452b3
++-++-+index ebc3aa5..d4945e4 100644
++-++++index 3c0aa8c..d9025db 100644
++-++@@ -1247,29 +4848,16 @@ index 0000000..a6452b3
++-++-+@@ -5,0 +6,22 @@
++-++-++      {
++-++-++        "line": 20,
++-++-++        "column": 11,
++-++-++        "endLine": 20,
++-++-++        "endColumn": 35,
++-++-++        "severity": 3,
++-++-++        "ruleName": "AvoidDebugStatements",
++-++-++        "category": "Performance",
++-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++-++      },
++-++-++      {
++-++-++        "line": 20,
++-++-++        "column": 11,
++-++-++        "endLine": 20,
++-++-++        "endColumn": 35,
++-++-++        "severity": 3,
++-++-++        "ruleName": "DebugsShouldUseLoggingLevel",
++-++-++        "category": "Best Practices",
++-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-++-++      },
++-++-+@@ -10 +32 @@
++-++-+-        "endColumn": 29,
++-++-++        "endColumn": 32,
++-++-+@@ -21 +43 @@
++-++-+-        "endColumn": 29,
++-++-++        "endColumn": 32,
++-++++@@ -7 +7 @@
++-++++-        "line": 20,
++-+++++        "line": 17,
++-++++@@ -9,2 +9,2 @@
++-++++-        "endLine": 20,
++-++++-        "endColumn": 35,
++-+++++        "endLine": 17,
++-+++++        "endColumn": 29,
++-++++@@ -18 +18 @@
++-++++-        "line": 20,
++-+++++        "line": 17,
++-++++@@ -20,2 +20,2 @@
++-++++-        "endLine": 20,
++-++++-        "endColumn": 35,
++-+++++        "endLine": 17,
++-+++++        "endColumn": 29,
++-++@@ -1277 +4865 @@ index 0000000..a6452b3
++-++-+index c973918..e670f52 100644
++-++++index 343e8d0..f6cdfcc 100644
++-++@@ -1281 +4869 @@ index 0000000..a6452b3
++-++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++@@ -1283 +4871 @@ index 0000000..a6452b3
++-++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++@@ -1286 +4874 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-++-index 9e21e88..d522ad0 100644
++-+++index add3f8c..9179d3f 100644
++-++@@ -1289,4 +4877,2 @@ index 9e21e88..d522ad0 100644
++-++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
++-++-+        System.debug('Happy');
++-++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
++-++--          System.debug('Hi AND');
++-+++@@ -17 +17 @@ public with sharing class AccountInsertClass {
++-+++-          System.debug('Happy');
++-++@@ -1293,0 +4880,95 @@ index 9e21e88..d522ad0 100644
++-+++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
++-++++          System.debug('He');
++-+@@ -1211 +6161 @@ index 0000000..a6452b3
++-+-+index ebc3aa5..d4945e4 100644
++-+++index 3c0aa8c..7785159 100644
++-+@@ -1214 +6164,22 @@ index 0000000..a6452b3
++-+-+@@ -5,0 +6,22 @@
++-+++@@ -7 +7 @@
++-+++-        "line": 20,
++-++++        "line": 17,
++-+++@@ -9,2 +9,2 @@
++-+++-        "endLine": 20,
++-+++-        "endColumn": 35,
++-++++        "endLine": 17,
++-++++        "endColumn": 29,
++-+++@@ -18 +18 @@
++-+++-        "line": 20,
++-++++        "line": 17,
++-+++@@ -20,2 +20,24 @@
++-+++-        "endLine": 20,
++-+++-        "endColumn": 35,
++-++++        "endLine": 17,
++-++++        "endColumn": 29,
++-@@ -1175,0 +7405,16 @@ index 0000000..a6452b3
++-+@@ -1216 +6187 @@ index 0000000..a6452b3
++-+-++        "line": 20,
++-++++        "line": 21,
++-+@@ -1218,2 +6189,2 @@ index 0000000..a6452b3
++-+-++        "endLine": 20,
++-+-++        "endColumn": 35,
++-++++        "endLine": 21,
++-++++        "endColumn": 32,
++-+@@ -1227 +6198 @@ index 0000000..a6452b3
++-+-++        "line": 20,
++-++++        "line": 21,
++-+@@ -1229,2 +6200,22 @@ index 0000000..a6452b3
++-+-++        "endLine": 20,
++-+-++        "endColumn": 35,
++-++++        "endLine": 21,
++-++++        "endColumn": 32,
++-@@ -1177 +7422 @@ index 0000000..a6452b3
++--++index ebc3aa5..b33da59 100644
++-+++index 3c0aa8c..7785159 100644
++-@@ -1180,30 +7425,76 @@ index 0000000..a6452b3
++--++@@ -5,0 +6,22 @@
++--+++      {
++--+++        "line": 20,
++--+++        "column": 11,
++--+++        "endLine": 20,
++--+++        "endColumn": 35,
++--+++        "severity": 3,
++--+++        "ruleName": "AvoidDebugStatements",
++--+++        "category": "Performance",
++--+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++--+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++--+++      },
++--+++      {
++--+++        "line": 20,
++--+++        "column": 11,
++--+++        "endLine": 20,
++--+++        "endColumn": 35,
++--+++        "severity": 3,
++--+++        "ruleName": "DebugsShouldUseLoggingLevel",
++--+++        "category": "Best Practices",
++--+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++--+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++--+++      },
++--+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
++--+index 9e21e88..1ec7a54 100644
++--+--- a/force-app/main/default/classes/Account_Insert.cls
++--++++ b/force-app/main/default/classes/Account_Insert.cls
++--+@@ -70 +70 @@ public with sharing class AccountInsertClass {
++--+-          System.debug('Hi AND');
++--++          System.debug('Hi');
++-+++@@ -7 +7 @@
++-+++-        "line": 20,
++-++++        "line": 17,
++-+++@@ -9,2 +9,2 @@
++-+++-        "endLine": 20,
++-+++-        "endColumn": 35,
++-++++        "endLine": 17,
++-++++        "endColumn": 29,
++-+++@@ -18 +18 @@
++-+++-        "line": 20,
++-++++        "line": 17,
++-+++@@ -20,2 +20,24 @@
++-+++-        "endLine": 20,
++-+++-        "endColumn": 35,
++-++++        "endLine": 17,
++-++++        "endColumn": 29,
++-+@@ -1237,11 +6227,0 @@ index 0000000..a6452b3
++-+-+@@ -10 +32 @@
++-+-+-        "endColumn": 29,
++-+-++        "endColumn": 32,
++-+-+@@ -21 +43 @@
++-+-+-        "endColumn": 29,
++-+-++        "endColumn": 32,
++-+-+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-+-+index ebc3aa5..d4945e4 100644
++-+-+--- a/scanner-reports/final-filtered-scanner-report.json
++-+-++++ b/scanner-reports/final-filtered-scanner-report.json
++-+-+@@ -5,0 +6,22 @@
++-+@@ -1249 +6229 @@ index 0000000..a6452b3
++-+-++        "line": 20,
++-++++        "line": 21,
++-+@@ -1251,2 +6231,2 @@ index 0000000..a6452b3
++-+-++        "endLine": 20,
++-+-++        "endColumn": 35,
++-++++        "endLine": 21,
++-++++        "endColumn": 32,
++-+@@ -1260 +6240 @@ index 0000000..a6452b3
++-+-++        "line": 20,
++-++++        "line": 21,
++-+@@ -1262,13 +6242 @@ index 0000000..a6452b3
++-+-++        "endLine": 20,
++-+-++        "endColumn": 35,
++-+-++        "severity": 3,
++-+-++        "ruleName": "DebugsShouldUseLoggingLevel",
++-+-++        "category": "Best Practices",
++-+-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+-++      },
++-+-+@@ -10 +32 @@
++-+-+-        "endColumn": 29,
++-+-++        "endColumn": 32,
++-+-+@@ -21 +43 @@
++-+-+-        "endColumn": 29,
++-++++        "endLine": 21,
++-+@@ -1277 +6245 @@ index 0000000..a6452b3
++-+-+index c973918..e670f52 100644
++-+++index 343e8d0..322e147 100644
++-+@@ -1281 +6249 @@ index 0000000..a6452b3
++-+-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+@@ -1283 +6251 @@ index 0000000..a6452b3
++-+-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+@@ -1286 +6254 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-+-index 9e21e88..d522ad0 100644
++-++index add3f8c..6d35ef2 100644
++-+@@ -1289,4 +6257,2 @@ index 9e21e88..d522ad0 100644
++-+-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
++-+-+        System.debug('Happy');
++-+-@@ -70 +71 @@ public with sharing class AccountInsertClass {
++-+--          System.debug('Hi AND');
++-++@@ -17 +17 @@ public with sharing class AccountInsertClass {
++-++-          System.debug('Happy');
++-+@@ -1293,0 +6260,95 @@ index 9e21e88..d522ad0 100644
++-++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
+@@ -8242,283 +9690,21 @@ index 1f4c0b2..3afa5f1 100644
+--++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+--++index ebc3aa5..b33da59 100644
+--++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+--+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+--++@@ -5,0 +6,22 @@
+--+++      {
+--+++        "line": 20,
+--+++        "column": 11,
+--+++        "endLine": 20,
+--+++        "endColumn": 35,
+--+++        "severity": 3,
+--+++        "ruleName": "AvoidDebugStatements",
+--+++        "category": "Performance",
+--+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+--+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+--+++      },
+--+++      {
+--+++        "line": 20,
+--+++        "column": 11,
+--+++        "endLine": 20,
+--+++        "endColumn": 35,
+-+++@@ -1277 +3525 @@ index 0000000..a6452b3
+-+++-+index c973918..e670f52 100644
+-+++++index 343e8d0..baa723d 100644
+-+++@@ -1281 +3529 @@ index 0000000..a6452b3
+-+++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++@@ -1283 +3531 @@ index 0000000..a6452b3
+-+++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++@@ -1286 +3534 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+++-index 9e21e88..d522ad0 100644
+-++++index add3f8c..6d35ef2 100644
+-+++@@ -1289,4 +3537,2 @@ index 9e21e88..d522ad0 100644
+-+++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+-+++-+        System.debug('Happy');
+-+++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
+-+++--          System.debug('Hi AND');
+-++++@@ -17 +17 @@ public with sharing class AccountInsertClass {
+-++++-          System.debug('Happy');
+-+++@@ -1293,0 +3540,51 @@ index 9e21e88..d522ad0 100644
+-++++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
+-+@@ -1149,61 +6040,120 @@ index 0000000..a6452b3
+-+-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+-++index ebc3aa5..b33da59 100644
+-+-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+-++@@ -5,0 +6,22 @@
+-+-+++      {
+-+-+++        "line": 20,
+-+-+++        "column": 11,
+-+-+++        "endLine": 20,
+-+-+++        "endColumn": 35,
+-+-+++        "severity": 3,
+-+-+++        "ruleName": "AvoidDebugStatements",
+-+-+++        "category": "Performance",
+-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+-+++      },
+-+-+++      {
+-+-+++        "line": 20,
+-+-+++        "column": 11,
+-+-+++        "endLine": 20,
+-+-+++        "endColumn": 35,
+-+-+++        "severity": 3,
+-+-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+-+++        "category": "Best Practices",
+-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+-+++      },
+-+-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-+-++index ebc3aa5..b33da59 100644
+-+-++--- a/scanner-reports/final-filtered-scanner-report.json
+-+-+++++ b/scanner-reports/final-filtered-scanner-report.json
+-+-++@@ -5,0 +6,22 @@
+-+-+++      {
+-+-+++        "line": 20,
+-+-+++        "column": 11,
+-+-+++        "endLine": 20,
+-+-+++        "endColumn": 35,
+-+-+++        "severity": 3,
+-+-+++        "ruleName": "AvoidDebugStatements",
+-+-+++        "category": "Performance",
+-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+-+++      },
+-+-+++      {
+-+-+++        "line": 20,
+-+-+++        "column": 11,
+-+-+++        "endLine": 20,
+-+-+++        "endColumn": 35,
+-+-+++        "severity": 3,
+-+-+++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+-+++        "category": "Best Practices",
+-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+-+++      },
+-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+-+-+index 9e21e88..1ec7a54 100644
+-+-+--- a/force-app/main/default/classes/Account_Insert.cls
+-+-++++ b/force-app/main/default/classes/Account_Insert.cls
+-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+-+-+-          System.debug('Hi AND');
+-+-++          System.debug('Hi');
+-++@@ -1211 +4825 @@ index 0000000..a6452b3
+-++-+index ebc3aa5..d4945e4 100644
+-++++index 3c0aa8c..d9025db 100644
+-++@@ -1214,29 +4828,16 @@ index 0000000..a6452b3
+-++-+@@ -5,0 +6,22 @@
+-++-++      {
+-++-++        "line": 20,
+-++-++        "column": 11,
+-++-++        "endLine": 20,
+-++-++        "endColumn": 35,
+-++-++        "severity": 3,
+-++-++        "ruleName": "AvoidDebugStatements",
+-++-++        "category": "Performance",
+-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++-++      },
+-++-++      {
+-++-++        "line": 20,
+-++-++        "column": 11,
+-++-++        "endLine": 20,
+-++-++        "endColumn": 35,
+-++-++        "severity": 3,
+-++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++-++        "category": "Best Practices",
+-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++-++      },
+-++-+@@ -10 +32 @@
+-++-+-        "endColumn": 29,
+-++-++        "endColumn": 32,
+-++-+@@ -21 +43 @@
+-++-+-        "endColumn": 29,
+-++-++        "endColumn": 32,
+-++++@@ -7 +7 @@
+-++++-        "line": 20,
+-+++++        "line": 17,
+-++++@@ -9,2 +9,2 @@
+-++++-        "endLine": 20,
+-++++-        "endColumn": 35,
+-+++++        "endLine": 17,
+-+++++        "endColumn": 29,
+-++++@@ -18 +18 @@
+-++++-        "line": 20,
+-+++++        "line": 17,
+-++++@@ -20,2 +20,2 @@
+-++++-        "endLine": 20,
+-++++-        "endColumn": 35,
+-+++++        "endLine": 17,
+-+++++        "endColumn": 29,
+-++@@ -1244 +4845 @@ index 0000000..a6452b3
+-++-+index ebc3aa5..d4945e4 100644
+-++++index 3c0aa8c..d9025db 100644
+-++@@ -1247,29 +4848,16 @@ index 0000000..a6452b3
+-++-+@@ -5,0 +6,22 @@
+-++-++      {
+-++-++        "line": 20,
+-++-++        "column": 11,
+-++-++        "endLine": 20,
+-++-++        "endColumn": 35,
+-++-++        "severity": 3,
+-++-++        "ruleName": "AvoidDebugStatements",
+-++-++        "category": "Performance",
+-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++-++      },
+-++-++      {
+-++-++        "line": 20,
+-++-++        "column": 11,
+-++-++        "endLine": 20,
+-++-++        "endColumn": 35,
+-++-++        "severity": 3,
+-++-++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++-++        "category": "Best Practices",
+-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++-++      },
+-++-+@@ -10 +32 @@
+-++-+-        "endColumn": 29,
+-++-++        "endColumn": 32,
+-++-+@@ -21 +43 @@
+-++-+-        "endColumn": 29,
+-++-++        "endColumn": 32,
+-++++@@ -7 +7 @@
+-++++-        "line": 20,
+-+++++        "line": 17,
+-++++@@ -9,2 +9,2 @@
+-++++-        "endLine": 20,
+-++++-        "endColumn": 35,
+-+++++        "endLine": 17,
+-+++++        "endColumn": 29,
+-++++@@ -18 +18 @@
+-++++-        "line": 20,
+-+++++        "line": 17,
+-++++@@ -20,2 +20,2 @@
+-++++-        "endLine": 20,
+-++++-        "endColumn": 35,
+-+++++        "endLine": 17,
+-+++++        "endColumn": 29,
+-++@@ -1277 +4865 @@ index 0000000..a6452b3
+-++-+index c973918..e670f52 100644
+-++++index 343e8d0..f6cdfcc 100644
+-++@@ -1281 +4869 @@ index 0000000..a6452b3
+-++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++@@ -1283 +4871 @@ index 0000000..a6452b3
+-++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++@@ -1286 +4874 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-++-index 9e21e88..d522ad0 100644
+-+++index add3f8c..9179d3f 100644
+-++@@ -1289,4 +4877,2 @@ index 9e21e88..d522ad0 100644
+-++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+-++-+        System.debug('Happy');
+-++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
+-++--          System.debug('Hi AND');
+-+++@@ -17 +17 @@ public with sharing class AccountInsertClass {
+-+++-          System.debug('Happy');
+-++@@ -1293,0 +4880,95 @@ index 9e21e88..d522ad0 100644
+-+++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
+-++++          System.debug('He');
+-+@@ -1211 +6161 @@ index 0000000..a6452b3
+-+-+index ebc3aa5..d4945e4 100644
+-+++index 3c0aa8c..7785159 100644
+-+@@ -1214 +6164,22 @@ index 0000000..a6452b3
+-+-+@@ -5,0 +6,22 @@
+-+++@@ -7 +7 @@
+-+++-        "line": 20,
+-++++        "line": 17,
+-+++@@ -9,2 +9,2 @@
+-+++-        "endLine": 20,
+-+++-        "endColumn": 35,
+-++++        "endLine": 17,
+-++++        "endColumn": 29,
+-+++@@ -18 +18 @@
+-+++-        "line": 20,
+-++++        "line": 17,
+-+++@@ -20,2 +20,24 @@
+-+++-        "endLine": 20,
+-+++-        "endColumn": 35,
+-++++        "endLine": 17,
+-++++        "endColumn": 29,
+-@@ -1175,0 +7405,16 @@ index 0000000..a6452b3
+-+@@ -1216 +6187 @@ index 0000000..a6452b3
+-+-++        "line": 20,
+-++++        "line": 21,
+-+@@ -1218,2 +6189,2 @@ index 0000000..a6452b3
+-+-++        "endLine": 20,
+-+-++        "endColumn": 35,
+-++++        "endLine": 21,
+-++++        "endColumn": 32,
+-+@@ -1227 +6198 @@ index 0000000..a6452b3
+-+-++        "line": 20,
+-++++        "line": 21,
+-+@@ -1229,2 +6200,22 @@ index 0000000..a6452b3
+-+-++        "endLine": 20,
+-+-++        "endColumn": 35,
+-++++        "endLine": 21,
+-++++        "endColumn": 32,
+-@@ -1177 +7422 @@ index 0000000..a6452b3
+--++index ebc3aa5..b33da59 100644
+-+++index 3c0aa8c..7785159 100644
+-@@ -1180,30 +7425,76 @@ index 0000000..a6452b3
+--++@@ -5,0 +6,22 @@
+--+++      {
+--+++        "line": 20,
+--+++        "column": 11,
+--+++        "endLine": 20,
+--+++        "endColumn": 35,
+--+++        "severity": 3,
+--+++        "ruleName": "AvoidDebugStatements",
+--+++        "category": "Performance",
+--+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+--+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+--+++      },
+--+++      {
+--+++        "line": 20,
+--+++        "column": 11,
+--+++        "endLine": 20,
+--+++        "endColumn": 35,
++-@@ -1211 +7502 @@ index 0000000..a6452b3
++--+index ebc3aa5..d4945e4 100644
++-++index 3c0aa8c..4535f73 100644
++-@@ -1214 +7505,22 @@ index 0000000..a6452b3
++--+@@ -5,0 +6,22 @@
++-++@@ -7 +7 @@
++-++-        "line": 20,
++-+++        "line": 17,
++-++@@ -9,2 +9,2 @@
++-++-        "endLine": 20,
++-++-        "endColumn": 35,
++-+++        "endLine": 17,
++-+++        "endColumn": 29,
++-++@@ -18 +18 @@
++-++-        "line": 20,
++-+++        "line": 17,
++-++@@ -20,2 +20,24 @@
++-++-        "endLine": 20,
++-++-        "endColumn": 35,
++-+++        "endLine": 17,
++-+++        "endColumn": 29,
+@@ -8531,149 +9717,128 @@ index 1f4c0b2..3afa5f1 100644
+--+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
+--+index 9e21e88..1ec7a54 100644
+--+--- a/force-app/main/default/classes/Account_Insert.cls
+--++++ b/force-app/main/default/classes/Account_Insert.cls
+--+@@ -70 +70 @@ public with sharing class AccountInsertClass {
+--+-          System.debug('Hi AND');
+--++          System.debug('Hi');
+-+++@@ -7 +7 @@
+-+++-        "line": 20,
+-++++        "line": 17,
+-+++@@ -9,2 +9,2 @@
+-+++-        "endLine": 20,
+-+++-        "endColumn": 35,
+-++++        "endLine": 17,
+-++++        "endColumn": 29,
+-+++@@ -18 +18 @@
+-+++-        "line": 20,
+-++++        "line": 17,
+-+++@@ -20,2 +20,24 @@
+-+++-        "endLine": 20,
+-+++-        "endColumn": 35,
+-++++        "endLine": 17,
+-++++        "endColumn": 29,
+-+@@ -1237,11 +6227,0 @@ index 0000000..a6452b3
+-+-+@@ -10 +32 @@
+-+-+-        "endColumn": 29,
+-+-++        "endColumn": 32,
+-+-+@@ -21 +43 @@
+-+-+-        "endColumn": 29,
+-+-++        "endColumn": 32,
+-+-+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-+-+index ebc3aa5..d4945e4 100644
+-+-+--- a/scanner-reports/final-filtered-scanner-report.json
+-+-++++ b/scanner-reports/final-filtered-scanner-report.json
+-+-+@@ -5,0 +6,22 @@
+-+@@ -1249 +6229 @@ index 0000000..a6452b3
+-+-++        "line": 20,
+-++++        "line": 21,
+-+@@ -1251,2 +6231,2 @@ index 0000000..a6452b3
+-+-++        "endLine": 20,
+-+-++        "endColumn": 35,
+-++++        "endLine": 21,
+-++++        "endColumn": 32,
+-+@@ -1260 +6240 @@ index 0000000..a6452b3
+-+-++        "line": 20,
+-++++        "line": 21,
+-+@@ -1262,13 +6242 @@ index 0000000..a6452b3
+-+-++        "endLine": 20,
+-+-++        "endColumn": 35,
+-+-++        "severity": 3,
+-+-++        "ruleName": "DebugsShouldUseLoggingLevel",
+-+-++        "category": "Best Practices",
+-+-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+-++      },
+-+-+@@ -10 +32 @@
+-+-+-        "endColumn": 29,
+-+-++        "endColumn": 32,
+-+-+@@ -21 +43 @@
+-+-+-        "endColumn": 29,
+-++++        "endLine": 21,
+-+@@ -1277 +6245 @@ index 0000000..a6452b3
+-+-+index c973918..e670f52 100644
+-+++index 343e8d0..322e147 100644
+-+@@ -1281 +6249 @@ index 0000000..a6452b3
+-+-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+@@ -1283 +6251 @@ index 0000000..a6452b3
+-+-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+@@ -1286 +6254 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-+-index 9e21e88..d522ad0 100644
+-++index add3f8c..6d35ef2 100644
+-+@@ -1289,4 +6257,2 @@ index 9e21e88..d522ad0 100644
+-+-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+-+-+        System.debug('Happy');
+-+-@@ -70 +71 @@ public with sharing class AccountInsertClass {
+-+--          System.debug('Hi AND');
+-++@@ -17 +17 @@ public with sharing class AccountInsertClass {
+-++-          System.debug('Happy');
+-+@@ -1293,0 +6260,95 @@ index 9e21e88..d522ad0 100644
+-++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
@@ -8242,283 +19387,21 @@ index 1f4c0b2..3afa5f1 100644
--++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
--++index ebc3aa5..b33da59 100644
--++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
--+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
--++@@ -5,0 +6,22 @@
--+++      {
--+++        "line": 20,
--+++        "column": 11,
--+++        "endLine": 20,
--+++        "endColumn": 35,
--+++        "severity": 3,
--+++        "ruleName": "AvoidDebugStatements",
--+++        "category": "Performance",
--+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
--+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
--+++      },
--+++      {
--+++        "line": 20,
--+++        "column": 11,
--+++        "endLine": 20,
--+++        "endColumn": 35,
-+++@@ -1277 +3525 @@ index 0000000..a6452b3
-+++-+index c973918..e670f52 100644
-+++++index 343e8d0..baa723d 100644
-+++@@ -1281 +3529 @@ index 0000000..a6452b3
-+++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++@@ -1283 +3531 @@ index 0000000..a6452b3
-+++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++@@ -1286 +3534 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+++-index 9e21e88..d522ad0 100644
-++++index add3f8c..6d35ef2 100644
-+++@@ -1289,4 +3537,2 @@ index 9e21e88..d522ad0 100644
-+++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
-+++-+        System.debug('Happy');
-+++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
-+++--          System.debug('Hi AND');
-++++@@ -17 +17 @@ public with sharing class AccountInsertClass {
-++++-          System.debug('Happy');
-+++@@ -1293,0 +3540,51 @@ index 9e21e88..d522ad0 100644
-++++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
-+@@ -1149,61 +6040,120 @@ index 0000000..a6452b3
-+-++diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+-++index ebc3aa5..b33da59 100644
-+-++--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+-+++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+-++@@ -5,0 +6,22 @@
-+-+++      {
-+-+++        "line": 20,
-+-+++        "column": 11,
-+-+++        "endLine": 20,
-+-+++        "endColumn": 35,
-+-+++        "severity": 3,
-+-+++        "ruleName": "AvoidDebugStatements",
-+-+++        "category": "Performance",
-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+-+++      },
-+-+++      {
-+-+++        "line": 20,
-+-+++        "column": 11,
-+-+++        "endLine": 20,
-+-+++        "endColumn": 35,
-+-+++        "severity": 3,
-+-+++        "ruleName": "DebugsShouldUseLoggingLevel",
-+-+++        "category": "Best Practices",
-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+-+++      },
-+-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-+-++index ebc3aa5..b33da59 100644
-+-++--- a/scanner-reports/final-filtered-scanner-report.json
-+-+++++ b/scanner-reports/final-filtered-scanner-report.json
-+-++@@ -5,0 +6,22 @@
-+-+++      {
-+-+++        "line": 20,
-+-+++        "column": 11,
-+-+++        "endLine": 20,
-+-+++        "endColumn": 35,
-+-+++        "severity": 3,
-+-+++        "ruleName": "AvoidDebugStatements",
-+-+++        "category": "Performance",
-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+-+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+-+++      },
-+-+++      {
-+-+++        "line": 20,
-+-+++        "column": 11,
-+-+++        "endLine": 20,
-+-+++        "endColumn": 35,
-+-+++        "severity": 3,
-+-+++        "ruleName": "DebugsShouldUseLoggingLevel",
-+-+++        "category": "Best Practices",
-+-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+-+++      },
-+-+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
-+-+index 9e21e88..1ec7a54 100644
-+-+--- a/force-app/main/default/classes/Account_Insert.cls
-+-++++ b/force-app/main/default/classes/Account_Insert.cls
-+-+@@ -70 +70 @@ public with sharing class AccountInsertClass {
-+-+-          System.debug('Hi AND');
-+-++          System.debug('Hi');
-++@@ -1211 +4825 @@ index 0000000..a6452b3
-++-+index ebc3aa5..d4945e4 100644
-++++index 3c0aa8c..d9025db 100644
-++@@ -1214,29 +4828,16 @@ index 0000000..a6452b3
-++-+@@ -5,0 +6,22 @@
-++-++      {
-++-++        "line": 20,
-++-++        "column": 11,
-++-++        "endLine": 20,
-++-++        "endColumn": 35,
-++-++        "severity": 3,
-++-++        "ruleName": "AvoidDebugStatements",
-++-++        "category": "Performance",
-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++-++      },
-++-++      {
-++-++        "line": 20,
-++-++        "column": 11,
-++-++        "endLine": 20,
-++-++        "endColumn": 35,
-++-++        "severity": 3,
-++-++        "ruleName": "DebugsShouldUseLoggingLevel",
-++-++        "category": "Best Practices",
-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++-++      },
-++-+@@ -10 +32 @@
-++-+-        "endColumn": 29,
-++-++        "endColumn": 32,
-++-+@@ -21 +43 @@
-++-+-        "endColumn": 29,
-++-++        "endColumn": 32,
-++++@@ -7 +7 @@
-++++-        "line": 20,
-+++++        "line": 17,
-++++@@ -9,2 +9,2 @@
-++++-        "endLine": 20,
-++++-        "endColumn": 35,
-+++++        "endLine": 17,
-+++++        "endColumn": 29,
-++++@@ -18 +18 @@
-++++-        "line": 20,
-+++++        "line": 17,
-++++@@ -20,2 +20,2 @@
-++++-        "endLine": 20,
-++++-        "endColumn": 35,
-+++++        "endLine": 17,
-+++++        "endColumn": 29,
-++@@ -1244 +4845 @@ index 0000000..a6452b3
-++-+index ebc3aa5..d4945e4 100644
-++++index 3c0aa8c..d9025db 100644
-++@@ -1247,29 +4848,16 @@ index 0000000..a6452b3
-++-+@@ -5,0 +6,22 @@
-++-++      {
-++-++        "line": 20,
-++-++        "column": 11,
-++-++        "endLine": 20,
-++-++        "endColumn": 35,
-++-++        "severity": 3,
-++-++        "ruleName": "AvoidDebugStatements",
-++-++        "category": "Performance",
-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++-++      },
-++-++      {
-++-++        "line": 20,
-++-++        "column": 11,
-++-++        "endLine": 20,
-++-++        "endColumn": 35,
-++-++        "severity": 3,
-++-++        "ruleName": "DebugsShouldUseLoggingLevel",
-++-++        "category": "Best Practices",
-++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++-++      },
-++-+@@ -10 +32 @@
-++-+-        "endColumn": 29,
-++-++        "endColumn": 32,
-++-+@@ -21 +43 @@
-++-+-        "endColumn": 29,
-++-++        "endColumn": 32,
-++++@@ -7 +7 @@
-++++-        "line": 20,
-+++++        "line": 17,
-++++@@ -9,2 +9,2 @@
-++++-        "endLine": 20,
-++++-        "endColumn": 35,
-+++++        "endLine": 17,
-+++++        "endColumn": 29,
-++++@@ -18 +18 @@
-++++-        "line": 20,
-+++++        "line": 17,
-++++@@ -20,2 +20,2 @@
-++++-        "endLine": 20,
-++++-        "endColumn": 35,
-+++++        "endLine": 17,
-+++++        "endColumn": 29,
-++@@ -1277 +4865 @@ index 0000000..a6452b3
-++-+index c973918..e670f52 100644
-++++index 343e8d0..f6cdfcc 100644
-++@@ -1281 +4869 @@ index 0000000..a6452b3
-++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++@@ -1283 +4871 @@ index 0000000..a6452b3
-++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++@@ -1286 +4874 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-++-index 9e21e88..d522ad0 100644
-+++index add3f8c..9179d3f 100644
-++@@ -1289,4 +4877,2 @@ index 9e21e88..d522ad0 100644
-++-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
-++-+        System.debug('Happy');
-++-@@ -70 +71 @@ public with sharing class AccountInsertClass {
-++--          System.debug('Hi AND');
-+++@@ -17 +17 @@ public with sharing class AccountInsertClass {
-+++-          System.debug('Happy');
-++@@ -1293,0 +4880,95 @@ index 9e21e88..d522ad0 100644
-+++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
-++++          System.debug('He');
-+@@ -1211 +6161 @@ index 0000000..a6452b3
-+-+index ebc3aa5..d4945e4 100644
-+++index 3c0aa8c..7785159 100644
-+@@ -1214 +6164,22 @@ index 0000000..a6452b3
-+-+@@ -5,0 +6,22 @@
-+++@@ -7 +7 @@
-+++-        "line": 20,
-++++        "line": 17,
-+++@@ -9,2 +9,2 @@
-+++-        "endLine": 20,
-+++-        "endColumn": 35,
-++++        "endLine": 17,
-++++        "endColumn": 29,
-+++@@ -18 +18 @@
-+++-        "line": 20,
-++++        "line": 17,
-+++@@ -20,2 +20,24 @@
-+++-        "endLine": 20,
-+++-        "endColumn": 35,
-++++        "endLine": 17,
-++++        "endColumn": 29,
-@@ -1175,0 +7405,16 @@ index 0000000..a6452b3
-+@@ -1216 +6187 @@ index 0000000..a6452b3
-+-++        "line": 20,
-++++        "line": 21,
-+@@ -1218,2 +6189,2 @@ index 0000000..a6452b3
-+-++        "endLine": 20,
-+-++        "endColumn": 35,
-++++        "endLine": 21,
-++++        "endColumn": 32,
-+@@ -1227 +6198 @@ index 0000000..a6452b3
-+-++        "line": 20,
-++++        "line": 21,
-+@@ -1229,2 +6200,22 @@ index 0000000..a6452b3
-+-++        "endLine": 20,
-+-++        "endColumn": 35,
-++++        "endLine": 21,
-++++        "endColumn": 32,
-@@ -1177 +7422 @@ index 0000000..a6452b3
--++index ebc3aa5..b33da59 100644
-+++index 3c0aa8c..7785159 100644
-@@ -1180,30 +7425,76 @@ index 0000000..a6452b3
--++@@ -5,0 +6,22 @@
--+++      {
--+++        "line": 20,
--+++        "column": 11,
--+++        "endLine": 20,
--+++        "endColumn": 35,
--+++        "severity": 3,
--+++        "ruleName": "AvoidDebugStatements",
--+++        "category": "Performance",
--+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
--+++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
--+++      },
--+++      {
--+++        "line": 20,
--+++        "column": 11,
--+++        "endLine": 20,
--+++        "endColumn": 35,
+-@@ -1211 +7502 @@ index 0000000..a6452b3
+--+index ebc3aa5..d4945e4 100644
+-++index 3c0aa8c..4535f73 100644
+-@@ -1214 +7505,22 @@ index 0000000..a6452b3
+--+@@ -5,0 +6,22 @@
+-++@@ -7 +7 @@
+-++-        "line": 20,
+-+++        "line": 17,
+-++@@ -9,2 +9,2 @@
+-++-        "endLine": 20,
+-++-        "endColumn": 35,
+-+++        "endLine": 17,
+-+++        "endColumn": 29,
+-++@@ -18 +18 @@
+-++-        "line": 20,
+-+++        "line": 17,
+-++@@ -20,2 +20,24 @@
+-++-        "endLine": 20,
+-++-        "endColumn": 35,
+-+++        "endLine": 17,
+-+++        "endColumn": 29,
@@ -8531,49 +19414,157 @@ index 1f4c0b2..3afa5f1 100644
--+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
--+index 9e21e88..1ec7a54 100644
--+--- a/force-app/main/default/classes/Account_Insert.cls
--++++ b/force-app/main/default/classes/Account_Insert.cls
--+@@ -70 +70 @@ public with sharing class AccountInsertClass {
--+-          System.debug('Hi AND');
--++          System.debug('Hi');
-+++@@ -7 +7 @@
-+++-        "line": 20,
-++++        "line": 17,
-+++@@ -9,2 +9,2 @@
-+++-        "endLine": 20,
-+++-        "endColumn": 35,
-++++        "endLine": 17,
-++++        "endColumn": 29,
-+++@@ -18 +18 @@
-+++-        "line": 20,
-++++        "line": 17,
-+++@@ -20,2 +20,24 @@
-+++-        "endLine": 20,
-+++-        "endColumn": 35,
-++++        "endLine": 17,
-++++        "endColumn": 29,
-+@@ -1237,11 +6227,0 @@ index 0000000..a6452b3
-+-+@@ -10 +32 @@
-+-+-        "endColumn": 29,
-+-++        "endColumn": 32,
-+-+@@ -21 +43 @@
-+-+-        "endColumn": 29,
-+-++        "endColumn": 32,
-+-+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-+-+index ebc3aa5..d4945e4 100644
-+-+--- a/scanner-reports/final-filtered-scanner-report.json
-+-++++ b/scanner-reports/final-filtered-scanner-report.json
-+-+@@ -5,0 +6,22 @@
-+@@ -1249 +6229 @@ index 0000000..a6452b3
-+-++        "line": 20,
-++++        "line": 21,
-+@@ -1251,2 +6231,2 @@ index 0000000..a6452b3
-+-++        "endLine": 20,
-+-++        "endColumn": 35,
-++++        "endLine": 21,
-++++        "endColumn": 32,
-+@@ -1260 +6240 @@ index 0000000..a6452b3
-+-++        "line": 20,
-++++        "line": 21,
-+@@ -1262,13 +6242 @@ index 0000000..a6452b3
-+-++        "endLine": 20,
-+-++        "endColumn": 35,
+-@@ -1216 +7528 @@ index 0000000..a6452b3
+--++        "line": 20,
+-+++        "line": 21,
+-@@ -1218,2 +7530,2 @@ index 0000000..a6452b3
+--++        "endLine": 20,
+--++        "endColumn": 35,
+-+++        "endLine": 21,
+-+++        "endColumn": 29,
+-@@ -1227 +7539 @@ index 0000000..a6452b3
+--++        "line": 20,
+-+++        "line": 21,
+-@@ -1229,2 +7541,22 @@ index 0000000..a6452b3
+--++        "endLine": 20,
+--++        "endColumn": 35,
+-+++        "endLine": 21,
+-+++        "endColumn": 29,
+-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-++index 3c0aa8c..4535f73 100644
+-++--- a/scanner-reports/final-filtered-scanner-report.json
+-+++++ b/scanner-reports/final-filtered-scanner-report.json
+-++@@ -7 +7 @@
+-++-        "line": 20,
+-+++        "line": 17,
+-++@@ -9,2 +9,2 @@
+-++-        "endLine": 20,
+-++-        "endColumn": 35,
+-+++        "endLine": 17,
+-+++        "endColumn": 29,
+-++@@ -18 +18 @@
+-++-        "line": 20,
+-+++        "line": 17,
+-++@@ -20,2 +20,24 @@
+-++-        "endLine": 20,
+-++-        "endColumn": 35,
+-+++        "endLine": 17,
+-+++        "endColumn": 29,
+-@@ -1237,11 +7568,0 @@ index 0000000..a6452b3
+--+@@ -10 +32 @@
+--+-        "endColumn": 29,
++-@@ -1216 +7528 @@ index 0000000..a6452b3
++--++        "line": 20,
++-+++        "line": 21,
++-@@ -1218,2 +7530,2 @@ index 0000000..a6452b3
++--++        "endLine": 20,
++--++        "endColumn": 35,
++-+++        "endLine": 21,
++-+++        "endColumn": 29,
++-@@ -1227 +7539 @@ index 0000000..a6452b3
++--++        "line": 20,
++-+++        "line": 21,
++-@@ -1229,2 +7541,22 @@ index 0000000..a6452b3
++--++        "endLine": 20,
++--++        "endColumn": 35,
++-+++        "endLine": 21,
++-+++        "endColumn": 29,
++-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-++index 3c0aa8c..4535f73 100644
++-++--- a/scanner-reports/final-filtered-scanner-report.json
++-+++++ b/scanner-reports/final-filtered-scanner-report.json
++-++@@ -7 +7 @@
++-++-        "line": 20,
++-+++        "line": 17,
++-++@@ -9,2 +9,2 @@
++-++-        "endLine": 20,
++-++-        "endColumn": 35,
++-+++        "endLine": 17,
++-+++        "endColumn": 29,
++-++@@ -18 +18 @@
++-++-        "line": 20,
++-+++        "line": 17,
++-++@@ -20,2 +20,24 @@
++-++-        "endLine": 20,
++-++-        "endColumn": 35,
++-+++        "endLine": 17,
++-+++        "endColumn": 29,
++-@@ -1237,11 +7568,0 @@ index 0000000..a6452b3
++--+@@ -10 +32 @@
++--+-        "endColumn": 29,
++--++        "endColumn": 32,
++--+@@ -21 +43 @@
++--+-        "endColumn": 29,
++--++        "endColumn": 32,
++--+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++--+index ebc3aa5..d4945e4 100644
++--+--- a/scanner-reports/final-filtered-scanner-report.json
++--++++ b/scanner-reports/final-filtered-scanner-report.json
++--+@@ -5,0 +6,22 @@
++-@@ -1249 +7570 @@ index 0000000..a6452b3
++--++        "line": 20,
++-+++        "line": 21,
++-@@ -1251,2 +7572,2 @@ index 0000000..a6452b3
++--++        "endLine": 20,
++--++        "endColumn": 35,
++-+++        "endLine": 21,
++-+++        "endColumn": 29,
++-@@ -1260 +7581 @@ index 0000000..a6452b3
++--++        "line": 20,
++-+++        "line": 21,
++-@@ -1262,14 +7583,2 @@ index 0000000..a6452b3
++--++        "endLine": 20,
++--++        "endColumn": 35,
++--++        "severity": 3,
++--++        "ruleName": "DebugsShouldUseLoggingLevel",
++--++        "category": "Best Practices",
++--++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++--++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++--++      },
++--+@@ -10 +32 @@
++--+-        "endColumn": 29,
++--++        "endColumn": 32,
++--+@@ -21 +43 @@
++--+-        "endColumn": 29,
++--++        "endColumn": 32,
++-+++        "endLine": 21,
++-+++        "endColumn": 29,
++-@@ -1277 +7586 @@ index 0000000..a6452b3
++--+index c973918..e670f52 100644
++-++index 343e8d0..1fbb2c6 100644
++-@@ -1281 +7590 @@ index 0000000..a6452b3
++--+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-@@ -1283 +7592 @@ index 0000000..a6452b3
++--++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-@@ -1286 +7595 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++--index 9e21e88..d522ad0 100644
++-+index add3f8c..90803a9 100644
++-@@ -1289,4 +7598,2 @@ index 9e21e88..d522ad0 100644
++--@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
++--+        System.debug('Happy');
++--@@ -70 +71 @@ public with sharing class AccountInsertClass {
++---          System.debug('Hi AND');
++-+@@ -17 +17 @@ public with sharing class AccountInsertClass {
++-+-          System.debug('Happy');
++-@@ -1293,0 +7601,95 @@ index 9e21e88..d522ad0 100644
++-+@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
++-++          System.debug('Hello Hi');
++-+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+index 3c0aa8c..7785159 100644
++-+--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+@@ -7 +7 @@
++-+-        "line": 20,
++-++        "line": 17,
++-+@@ -9,2 +9,2 @@
++-+-        "endLine": 20,
++-+-        "endColumn": 35,
++-++        "endLine": 17,
++-++        "endColumn": 29,
++-+@@ -18 +18 @@
++-+-        "line": 20,
++-++        "line": 17,
++-+@@ -20,2 +20,24 @@
++-+-        "endLine": 20,
++-+-        "endColumn": 35,
++-++        "endLine": 17,
++-++        "endColumn": 29,
@@ -8586,94 +19577,127 @@ index 1f4c0b2..3afa5f1 100644
-+-+@@ -10 +32 @@
-+-+-        "endColumn": 29,
-+-++        "endColumn": 32,
-+-+@@ -21 +43 @@
-+-+-        "endColumn": 29,
-++++        "endLine": 21,
-+@@ -1277 +6245 @@ index 0000000..a6452b3
-+-+index c973918..e670f52 100644
-+++index 343e8d0..322e147 100644
-+@@ -1281 +6249 @@ index 0000000..a6452b3
-+-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+@@ -1283 +6251 @@ index 0000000..a6452b3
-+-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+@@ -1286 +6254 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-+-index 9e21e88..d522ad0 100644
-++index add3f8c..6d35ef2 100644
-+@@ -1289,4 +6257,2 @@ index 9e21e88..d522ad0 100644
-+-@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
-+-+        System.debug('Happy');
-+-@@ -70 +71 @@ public with sharing class AccountInsertClass {
-+--          System.debug('Hi AND');
-++@@ -17 +17 @@ public with sharing class AccountInsertClass {
-++-          System.debug('Happy');
-+@@ -1293,0 +6260,95 @@ index 9e21e88..d522ad0 100644
-++@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
-+++          System.debug('Hello');
-@@ -1211 +7502 @@ index 0000000..a6452b3
--+index ebc3aa5..d4945e4 100644
-++index 3c0aa8c..4535f73 100644
-@@ -1214 +7505,22 @@ index 0000000..a6452b3
--+@@ -5,0 +6,22 @@
-++@@ -7 +7 @@
-++-        "line": 20,
-+++        "line": 17,
-++@@ -9,2 +9,2 @@
-++-        "endLine": 20,
-++-        "endColumn": 35,
-+++        "endLine": 17,
-+++        "endColumn": 29,
-++@@ -18 +18 @@
-++-        "line": 20,
-+++        "line": 17,
-++@@ -20,2 +20,24 @@
-++-        "endLine": 20,
-++-        "endColumn": 35,
-+++        "endLine": 17,
-+++        "endColumn": 29,
-+++        "severity": 3,
-+++        "ruleName": "DebugsShouldUseLoggingLevel",
-+++        "category": "Best Practices",
-+++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+++      },
-@@ -1216 +7528 @@ index 0000000..a6452b3
--++        "line": 20,
-+++        "line": 21,
-@@ -1218,2 +7530,2 @@ index 0000000..a6452b3
--++        "endLine": 20,
--++        "endColumn": 35,
-+++        "endLine": 21,
-+++        "endColumn": 29,
-@@ -1227 +7539 @@ index 0000000..a6452b3
--++        "line": 20,
-+++        "line": 21,
-@@ -1229,2 +7541,22 @@ index 0000000..a6452b3
--++        "endLine": 20,
--++        "endColumn": 35,
-+++        "endLine": 21,
-+++        "endColumn": 29,
-++diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-++index 3c0aa8c..4535f73 100644
-++--- a/scanner-reports/final-filtered-scanner-report.json
-+++++ b/scanner-reports/final-filtered-scanner-report.json
-++@@ -7 +7 @@
-++-        "line": 20,
-+++        "line": 17,
-++@@ -9,2 +9,2 @@
-++-        "endLine": 20,
-++-        "endColumn": 35,
-+++        "endLine": 17,
-+++        "endColumn": 29,
-++@@ -18 +18 @@
-++-        "line": 20,
-+++        "line": 17,
-++@@ -20,2 +20,24 @@
-++-        "endLine": 20,
-++-        "endColumn": 35,
-+++        "endLine": 17,
-+++        "endColumn": 29,
-@@ -1237,11 +7568,0 @@ index 0000000..a6452b3
--+@@ -10 +32 @@
--+-        "endColumn": 29,
++-++      {
++-++        "line": 21,
++-++        "column": 11,
++-++        "endLine": 21,
+@@ -8681,2 +9846,10 @@ index 1f4c0b2..3afa5f1 100644
+--+@@ -21 +43 @@
+--+-        "endColumn": 29,
++-++        "severity": 3,
++-++        "ruleName": "AvoidDebugStatements",
++-++        "category": "Performance",
++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++      },
++-++      {
++-++        "line": 21,
++-++        "column": 11,
++-++        "endLine": 21,
+@@ -8685 +9858 @@ index 1f4c0b2..3afa5f1 100644
+--+index ebc3aa5..d4945e4 100644
++-+index 3c0aa8c..7785159 100644
+@@ -8688,15 +9861,16 @@ index 1f4c0b2..3afa5f1 100644
+--+@@ -5,0 +6,22 @@
+-@@ -1249 +7570 @@ index 0000000..a6452b3
+--++        "line": 20,
+-+++        "line": 21,
+-@@ -1251,2 +7572,2 @@ index 0000000..a6452b3
+--++        "endLine": 20,
+--++        "endColumn": 35,
+-+++        "endLine": 21,
+-+++        "endColumn": 29,
+-@@ -1260 +7581 @@ index 0000000..a6452b3
+--++        "line": 20,
+-+++        "line": 21,
+-@@ -1262,14 +7583,2 @@ index 0000000..a6452b3
+--++        "endLine": 20,
+--++        "endColumn": 35,
++-+@@ -7 +7 @@
++-+-        "line": 20,
++-++        "line": 17,
++-+@@ -9,2 +9,2 @@
++-+-        "endLine": 20,
++-+-        "endColumn": 35,
++-++        "endLine": 17,
++-++        "endColumn": 29,
++-+@@ -18 +18 @@
++-+-        "line": 20,
++-++        "line": 17,
++-+@@ -20,2 +20,24 @@
++-+-        "endLine": 20,
++-+-        "endColumn": 35,
++-++        "endLine": 17,
++-++        "endColumn": 29,
+@@ -8709,2 +9883,4 @@ index 1f4c0b2..3afa5f1 100644
+--+@@ -10 +32 @@
+--+-        "endColumn": 29,
++-++      {
++-++        "line": 21,
++-++        "column": 11,
++-++        "endLine": 21,
+@@ -8712,2 +9888,10 @@ index 1f4c0b2..3afa5f1 100644
+--+@@ -21 +43 @@
+--+-        "endColumn": 29,
++-++        "severity": 3,
++-++        "ruleName": "AvoidDebugStatements",
++-++        "category": "Performance",
++-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-++      },
++-++      {
++-++        "line": 21,
++-++        "column": 11,
++-++        "endLine": 21,
+@@ -8715,117 +9899,212 @@ index 1f4c0b2..3afa5f1 100644
+-+++        "endLine": 21,
+-+++        "endColumn": 29,
+-@@ -1277 +7586 @@ index 0000000..a6452b3
+--+index c973918..e670f52 100644
+-++index 343e8d0..1fbb2c6 100644
+-@@ -1281 +7590 @@ index 0000000..a6452b3
+--+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-@@ -1283 +7592 @@ index 0000000..a6452b3
+--++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-@@ -1286 +7595 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+--index 9e21e88..d522ad0 100644
+-+index add3f8c..90803a9 100644
+-@@ -1289,4 +7598,2 @@ index 9e21e88..d522ad0 100644
+--@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
+--+        System.debug('Happy');
+--@@ -70 +71 @@ public with sharing class AccountInsertClass {
+---          System.debug('Hi AND');
+-+@@ -17 +17 @@ public with sharing class AccountInsertClass {
+-+-          System.debug('Happy');
+-@@ -1293,0 +7601,95 @@ index 9e21e88..d522ad0 100644
+-+@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
+-++          System.debug('Hello Hi');
+-+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+index 3c0aa8c..7785159 100644
+-+--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+@@ -7 +7 @@
+-+-        "line": 20,
+-++        "line": 17,
+-+@@ -9,2 +9,2 @@
+-+-        "endLine": 20,
+-+-        "endColumn": 35,
+-++        "endLine": 17,
+-++        "endColumn": 29,
+-+@@ -18 +18 @@
+-+-        "line": 20,
+-++        "line": 17,
+-+@@ -20,2 +20,24 @@
+-+-        "endLine": 20,
+-+-        "endColumn": 35,
+-++        "endLine": 17,
+-++        "endColumn": 29,
+-++        "severity": 3,
+-++        "ruleName": "DebugsShouldUseLoggingLevel",
+-++        "category": "Best Practices",
+-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-++      },
+-++      {
+-++        "line": 21,
+-++        "column": 11,
+-++        "endLine": 21,
@@ -8681,2 +19705,10 @@ index 1f4c0b2..3afa5f1 100644
--+@@ -21 +43 @@
--+-        "endColumn": 29,
+-++        "severity": 3,
+-++        "ruleName": "AvoidDebugStatements",
+-++        "category": "Performance",
+-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++      },
+-++      {
+-++        "line": 21,
+-++        "column": 11,
+-++        "endLine": 21,
@@ -8685 +19717 @@ index 1f4c0b2..3afa5f1 100644
--+index ebc3aa5..d4945e4 100644
+-+index 3c0aa8c..7785159 100644
@@ -8688,15 +19720,16 @@ index 1f4c0b2..3afa5f1 100644
--+@@ -5,0 +6,22 @@
-@@ -1249 +7570 @@ index 0000000..a6452b3
--++        "line": 20,
-+++        "line": 21,
-@@ -1251,2 +7572,2 @@ index 0000000..a6452b3
--++        "endLine": 20,
--++        "endColumn": 35,
-+++        "endLine": 21,
-+++        "endColumn": 29,
-@@ -1260 +7581 @@ index 0000000..a6452b3
--++        "line": 20,
-+++        "line": 21,
-@@ -1262,14 +7583,2 @@ index 0000000..a6452b3
--++        "endLine": 20,
--++        "endColumn": 35,
+-+@@ -7 +7 @@
+-+-        "line": 20,
+-++        "line": 17,
+-+@@ -9,2 +9,2 @@
+-+-        "endLine": 20,
+-+-        "endColumn": 35,
+-++        "endLine": 17,
+-++        "endColumn": 29,
+-+@@ -18 +18 @@
+-+-        "line": 20,
+-++        "line": 17,
+-+@@ -20,2 +20,24 @@
+-+-        "endLine": 20,
+-+-        "endColumn": 35,
+-++        "endLine": 17,
+-++        "endColumn": 29,
@@ -8709,2 +19742,4 @@ index 1f4c0b2..3afa5f1 100644
--+@@ -10 +32 @@
--+-        "endColumn": 29,
+-++      {
+-++        "line": 21,
+-++        "column": 11,
+-++        "endLine": 21,
@@ -8712,2 +19747,10 @@ index 1f4c0b2..3afa5f1 100644
--+@@ -21 +43 @@
--+-        "endColumn": 29,
+-++        "severity": 3,
+-++        "ruleName": "AvoidDebugStatements",
+-++        "category": "Performance",
+-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-++      },
+-++      {
+-++        "line": 21,
+-++        "column": 11,
+-++        "endLine": 21,
@@ -8715,117 +19758,344 @@ index 1f4c0b2..3afa5f1 100644
-+++        "endLine": 21,
-+++        "endColumn": 29,
-@@ -1277 +7586 @@ index 0000000..a6452b3
--+index c973918..e670f52 100644
-++index 343e8d0..1fbb2c6 100644
-@@ -1281 +7590 @@ index 0000000..a6452b3
--+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-++-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-@@ -1283 +7592 @@ index 0000000..a6452b3
--++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-@@ -1286 +7595 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
--index 9e21e88..d522ad0 100644
-+index add3f8c..90803a9 100644
-@@ -1289,4 +7598,2 @@ index 9e21e88..d522ad0 100644
--@@ -49,0 +50 @@ public with sharing class AccountInsertClass {
--+        System.debug('Happy');
--@@ -70 +71 @@ public with sharing class AccountInsertClass {
---          System.debug('Hi AND');
-+@@ -17 +17 @@ public with sharing class AccountInsertClass {
-+-          System.debug('Happy');
-@@ -1293,0 +7601,95 @@ index 9e21e88..d522ad0 100644
-+@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
-++          System.debug('Hello Hi');
-+diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+index 3c0aa8c..7785159 100644
-+--- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-++++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+@@ -7 +7 @@
-+-        "line": 20,
-++        "line": 17,
-+@@ -9,2 +9,2 @@
-+-        "endLine": 20,
-+-        "endColumn": 35,
-++        "endLine": 17,
-++        "endColumn": 29,
-+@@ -18 +18 @@
-+-        "line": 20,
-++        "line": 17,
-+@@ -20,2 +20,24 @@
-+-        "endLine": 20,
-+-        "endColumn": 35,
-++        "endLine": 17,
-++        "endColumn": 29,
-++        "severity": 3,
-++        "ruleName": "DebugsShouldUseLoggingLevel",
-++        "category": "Best Practices",
-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++      },
-++      {
-++        "line": 21,
-++        "column": 11,
-++        "endLine": 21,
-++        "endColumn": 32,
-++        "severity": 3,
-++        "ruleName": "AvoidDebugStatements",
-++        "category": "Performance",
-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++      },
-++      {
-++        "line": 21,
-++        "column": 11,
-++        "endLine": 21,
-++        "endColumn": 32,
-+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-+index 3c0aa8c..7785159 100644
-+--- a/scanner-reports/final-filtered-scanner-report.json
-++++ b/scanner-reports/final-filtered-scanner-report.json
-+@@ -7 +7 @@
-+-        "line": 20,
-++        "line": 17,
-+@@ -9,2 +9,2 @@
-+-        "endLine": 20,
-+-        "endColumn": 35,
-++        "endLine": 17,
-++        "endColumn": 29,
-+@@ -18 +18 @@
-+-        "line": 20,
-++        "line": 17,
-+@@ -20,2 +20,24 @@
-+-        "endLine": 20,
-+-        "endColumn": 35,
-++        "endLine": 17,
-++        "endColumn": 29,
-++        "severity": 3,
-++        "ruleName": "DebugsShouldUseLoggingLevel",
-++        "category": "Best Practices",
-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-++        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-++      },
-++      {
-++        "line": 21,
-++        "column": 11,
-++        "endLine": 21,
-++        "endColumn": 32,
-++        "severity": 3,
-++        "ruleName": "AvoidDebugStatements",
-++        "category": "Performance",
-++        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-++        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-++      },
-++      {
-++        "line": 21,
-++        "column": 11,
-++        "endLine": 21,
-++        "endColumn": 32,
-+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-+index 343e8d0..322e147 100644
-+--- a/scanner-reports/scanner-report-Account_Insert.cls.json
-++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-+@@ -1 +1 @@
-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+\ No newline at end of file
-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-+\ No newline at end of file
+-+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+index 343e8d0..322e147 100644
+-+--- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-+@@ -1 +1 @@
+-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+\ No newline at end of file
+-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-+\ No newline at end of file
++-+diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+index 343e8d0..322e147 100644
++-+--- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-++++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-+@@ -1 +1 @@
++-+-[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+\ No newline at end of file
++-++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-+\ No newline at end of file
+++@@ -0,0 +1,97 @@
++++#!/bin/sh
++++. "$(dirname "$0")/_/husky.sh"
++++
++++# Install necessary dependencies
++++npm install @salesforce/cli --global
++++sf plugins install @salesforce/sfdx-scanner
++++
++++# Check for unstaged changes and get changed files/lines
++++git diff --unified=0 --cached > changes.diff || { echo "Failed to get git diff"; exit 1; }
++++
++++if [ ! -s changes.diff ]; then
++++  echo "No changes detected."
++++  exit 0
++++fi
++++
++++# Process only .cls and .lwc files
++++awk '
++++  BEGIN {valid_file=0} 
++++  /^diff --git/ {valid_file=0} 
++++  /\.cls$|\.lwc$/ {valid_file=1} 
++++  /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
++++  /^[+][^+]/ && valid_file {print "Line", start + line_offset++, ":", substr($0, 2)}  
++++' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
++++
++++if [ ! -s changed_cls_lwc_lines.txt ]; then
++++  echo "No changes detected in .cls or .lwc files."
++++  exit 0
++++fi
++++
++++cat changed_cls_lwc_lines.txt
++++
++++# Run SFDX Scanner on changed files
++++files=$(grep -E '^\+\+\+ b/.*(\.cls|\.lwc)$' changes.diff | sed 's/+++ b\///')
++++if [ -z "$files" ]; then
++++  echo "No changed .cls or .lwc files detected."
++++  exit 0
++++fi
++++
++++declare -a line_numbers_array=()
++++
++++while IFS= read -r file; do
++++  echo "Processing file: $file"
++++  file=$(echo "$file" | tr -d '"')
++++  changed_lines=$(grep -A 1000 "$file" changes.diff | grep '^\+' | sed 's/^+//')
++++  line_numbers=$(grep -A 1000 "$file" changes.diff | grep '^@@' | awk '{print $2}' | cut -d',' -f1 | sed 's/-//')
++++
++++  current_line_number=$(echo "$line_numbers" | head -1)
++++  echo "Starting line number: $current_line_number"
++++
++++  while IFS= read -r line; do
++++    echo "Running SFDX Scanner on file: $file at line number: $current_line_number..."
++++    sf scanner:run --target "$file" --format "csv" --outfile "scanner-report.csv" || { echo "Scanner run failed or no issues found for $file, continuing with other files."; }
++++    line_numbers_array+=("$current_line_number")
++++    current_line_number=$((current_line_number + 1))
++++  done <<< "$changed_lines"
++++done <<< "$files"
++++
++++echo "${line_numbers_array[*]}" > line_numbers.txt
++++cat line_numbers.txt
++++
++++# Filter Scanner Report by Line Numbers
++++if [ -f scanner-report.csv ]; then
++++  current_line_number_list=$(cat line_numbers.txt)
++++  current_line_number_list=$(echo $current_line_number_list | xargs)
++++  echo "Filtering scanner report for the following line numbers: $current_line_number_list"
++++  awk -v lines="$current_line_number_list" '
++++  BEGIN {
++++    FPAT = "([^,]+)|(\"[^\"]+\")";
++++    split(lines, arr, " ");
++++    for (i in arr) {
++++      valid[arr[i]] = 1;
++++    }
++++  }
++++  NR == 1 || (substr($4, 2, length($4)-2) in valid) {
++++    print $0;
++++  }
++++  ' scanner-report.csv > filtered-scanner-report.csv
++++  cat filtered-scanner-report.csv
++++else
++++  echo "No scanner report generated."
++++  exit 0
++++fi
++++
++++# Block commit if severity 3 vulnerabilities are found
++++if [ -f filtered-scanner-report.csv ]; then
++++  severity_fail_count=$(awk -F',' '{gsub(/^ *| *$/, "", $2); if($2 == "\"3\"") count++} END {print count}' filtered-scanner-report.csv)
++++  echo "Severity 3 issues count: $severity_fail_count"
++++  if [ "$severity_fail_count" -gt 0 ]; then
++++    echo "Blocking your commit due to severity 3 vulnerabilities found."
++++    exit 1
++++  else
++++    echo "No severity 3 vulnerabilities found. Proceeding with commit."
++++  fi
++++else
++++  echo "No filtered scanner report found."
++++  exit 0
++++fi
++@@ -8833 +105 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
++-index add3f8c..90803a9 100644
+++index 6d35ef2..90803a9 100644
++@@ -8836,4 +108,2 @@ index add3f8c..90803a9 100644
++-@@ -17 +17 @@ public with sharing class AccountInsertClass {
++--          System.debug('Happy');
++-+          System.debug('Hi');
++-@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
+++@@ -21 +21 @@ public with sharing class AccountInsertClass {
+++-          System.debug('Hello');
++@@ -8841,85 +110,0 @@ index add3f8c..90803a9 100644
++-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-index 3c0aa8c..842139e 100644
++---- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
++-@@ -7 +7 @@
++--        "line": 20,
++-+        "line": 17,
++-@@ -9 +9,23 @@
++--        "endLine": 20,
++-+        "endLine": 17,
++-+        "endColumn": 29,
++-+        "severity": 3,
++-+        "ruleName": "AvoidDebugStatements",
++-+        "category": "Performance",
++-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+      },
++-+      {
++-+        "line": 17,
++-+        "column": 11,
++-+        "endLine": 17,
++-+        "endColumn": 29,
++-+        "severity": 3,
++-+        "ruleName": "DebugsShouldUseLoggingLevel",
++-+        "category": "Best Practices",
++-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+      },
++-+      {
++-+        "line": 21,
++-+        "column": 11,
++-+        "endLine": 21,
++-@@ -18 +40 @@
++--        "line": 20,
++-+        "line": 21,
++-@@ -20 +42 @@
++--        "endLine": 20,
++-+        "endLine": 21,
++-diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
++-index 3c0aa8c..842139e 100644
++---- a/scanner-reports/final-filtered-scanner-report.json
++-+++ b/scanner-reports/final-filtered-scanner-report.json
++-@@ -7 +7 @@
++--        "line": 20,
++-+        "line": 17,
++-@@ -9 +9,23 @@
++--        "endLine": 20,
++-+        "endLine": 17,
++-+        "endColumn": 29,
++-+        "severity": 3,
++-+        "ruleName": "AvoidDebugStatements",
++-+        "category": "Performance",
++-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
++-+        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
++-+      },
++-+      {
++-+        "line": 17,
++-+        "column": 11,
++-+        "endLine": 17,
++-+        "endColumn": 29,
++-+        "severity": 3,
++-+        "ruleName": "DebugsShouldUseLoggingLevel",
++-+        "category": "Best Practices",
++-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
++-+        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
++-+      },
++-+      {
++-+        "line": 21,
++-+        "column": 11,
++-+        "endLine": 21,
++-@@ -18 +40 @@
++--        "line": 20,
++-+        "line": 21,
++-@@ -20 +42 @@
++--        "endLine": 20,
++-+        "endLine": 21,
++-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
++-index 343e8d0..57e0606 100644
++---- a/scanner-reports/scanner-report-Account_Insert.cls.json
++-+++ b/scanner-reports/scanner-report-Account_Insert.cls.json
++-@@ -1 +1 @@
++--[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-\ No newline at end of file
++-+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
++-\ No newline at end of file
++diff --git a/filtered-scanner-report.csv b/filtered-scanner-report.csv
++new file mode 100644
++index 0000000..1edb6a3
++--- /dev/null
+++++ b/filtered-scanner-report.csv
++@@ -0,0 +1,3 @@
+++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","21","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","21","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+@@ -8833 +10112 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
+-index add3f8c..90803a9 100644
++index 6d35ef2..ffe89e2 100644
+@@ -8836,4 +10115,2 @@ index add3f8c..90803a9 100644
+-@@ -17 +17 @@ public with sharing class AccountInsertClass {
+--          System.debug('Happy');
+-+          System.debug('Hi');
+-@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
++@@ -21 +21 @@ public with sharing class AccountInsertClass {
++-          System.debug('Hello');
+@@ -8841,85 +10118,18 @@ index add3f8c..90803a9 100644
+-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-index 3c0aa8c..842139e 100644
+---- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
+-@@ -7 +7 @@
+--        "line": 20,
+-+        "line": 17,
+-@@ -9 +9,23 @@
+--        "endLine": 20,
+-+        "endLine": 17,
+-+        "endColumn": 29,
+-+        "severity": 3,
+-+        "ruleName": "AvoidDebugStatements",
+-+        "category": "Performance",
+-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+      },
+-+      {
+-+        "line": 17,
+-+        "column": 11,
+-+        "endLine": 17,
+-+        "endColumn": 29,
+-+        "severity": 3,
+-+        "ruleName": "DebugsShouldUseLoggingLevel",
+-+        "category": "Best Practices",
+-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+      },
+-+      {
+-+        "line": 21,
+-+        "column": 11,
+-+        "endLine": 21,
+-@@ -18 +40 @@
+--        "line": 20,
+-+        "line": 21,
+-@@ -20 +42 @@
+--        "endLine": 20,
+-+        "endLine": 21,
+-diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
+-index 3c0aa8c..842139e 100644
+---- a/scanner-reports/final-filtered-scanner-report.json
+-+++ b/scanner-reports/final-filtered-scanner-report.json
+-@@ -7 +7 @@
+--        "line": 20,
+-+        "line": 17,
+-@@ -9 +9,23 @@
+--        "endLine": 20,
+-+        "endLine": 17,
+-+        "endColumn": 29,
+-+        "severity": 3,
+-+        "ruleName": "AvoidDebugStatements",
+-+        "category": "Performance",
+-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
+-+        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
+-+      },
+-+      {
+-+        "line": 17,
+-+        "column": 11,
+-+        "endLine": 17,
+-+        "endColumn": 29,
+-+        "severity": 3,
+-+        "ruleName": "DebugsShouldUseLoggingLevel",
+-+        "category": "Best Practices",
+-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
+-+        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
+-+      },
+-+      {
+-+        "line": 21,
+-+        "column": 11,
+-+        "endLine": 21,
+-@@ -18 +40 @@
+--        "line": 20,
+-+        "line": 21,
+-@@ -20 +42 @@
+--        "endLine": 20,
+-+        "endLine": 21,
+-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
+-index 343e8d0..57e0606 100644
+---- a/scanner-reports/scanner-report-Account_Insert.cls.json
+-+++ b/scanner-reports/scanner-report-Account_Insert.cls.json
+-@@ -1 +1 @@
+--[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-\ No newline at end of file
+-+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
+-\ No newline at end of file
++@@ -24,0 +25 @@ public with sharing class AccountInsertClass {
+++      System.debug('Hello');
++diff --git a/line_numbers.txt b/line_numbers.txt
++new file mode 100644
++index 0000000..31e3a7d
++--- /dev/null
+++++ b/line_numbers.txt
++@@ -0,0 +1 @@
+++21 22
++diff --git a/scanner-report.csv b/scanner-report.csv
++index 5a3a1ac..841bc73 100644
++--- a/scanner-report.csv
+++++ b/scanner-report.csv
++@@ -1,0 +2,4 @@
+++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","17","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","17","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","21","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","21","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
+diff --git a/filtered-scanner-report.csv b/filtered-scanner-report.csv
+new file mode 100644
+index 0000000..1edb6a3
+--- /dev/null
++++ b/filtered-scanner-report.csv
+@@ -0,0 +1,3 @@
++"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","21","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","21","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
@@ -8833 +20103 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
-index add3f8c..90803a9 100644
+index 6d35ef2..553a8f6 100644
@@ -8836,90 +20106,25 @@ index add3f8c..90803a9 100644
-@@ -17 +17 @@ public with sharing class AccountInsertClass {
--          System.debug('Happy');
-+          System.debug('Hi');
-@@ -20,0 +21 @@ public with sharing class AccountInsertClass {
-+          System.debug('Hello Hi');
-diff --git a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-index 3c0aa8c..842139e 100644
---- a/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-+++ b/scanner-reports/filtered-scanner-report-Account_Insert.cls.json
-@@ -7 +7 @@
--        "line": 20,
-+        "line": 17,
-@@ -9 +9,23 @@
--        "endLine": 20,
-+        "endLine": 17,
-+        "endColumn": 29,
-+        "severity": 3,
-+        "ruleName": "AvoidDebugStatements",
-+        "category": "Performance",
-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+      },
-+      {
-+        "line": 17,
-+        "column": 11,
-+        "endLine": 17,
-+        "endColumn": 29,
-+        "severity": 3,
-+        "ruleName": "DebugsShouldUseLoggingLevel",
-+        "category": "Best Practices",
-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+      },
-+      {
-+        "line": 21,
-+        "column": 11,
-+        "endLine": 21,
-@@ -18 +40 @@
--        "line": 20,
-+        "line": 21,
-@@ -20 +42 @@
--        "endLine": 20,
-+        "endLine": 21,
-diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
-index 3c0aa8c..842139e 100644
---- a/scanner-reports/final-filtered-scanner-report.json
-+++ b/scanner-reports/final-filtered-scanner-report.json
-@@ -7 +7 @@
--        "line": 20,
-+        "line": 17,
-@@ -9 +9,23 @@
--        "endLine": 20,
-+        "endLine": 17,
-+        "endColumn": 29,
-+        "severity": 3,
-+        "ruleName": "AvoidDebugStatements",
-+        "category": "Performance",
-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements",
-+        "message": "\r\nAvoid debug statements since they impact on performance\r\n"
-+      },
-+      {
-+        "line": 17,
-+        "column": 11,
-+        "endLine": 17,
-+        "endColumn": 29,
-+        "severity": 3,
-+        "ruleName": "DebugsShouldUseLoggingLevel",
-+        "category": "Best Practices",
-+        "url": "https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel",
-+        "message": "\r\nCalls to System.debug should specify a logging level.\r\n"
-+      },
-+      {
-+        "line": 21,
-+        "column": 11,
-+        "endLine": 21,
-@@ -18 +40 @@
--        "line": 20,
-+        "line": 21,
-@@ -20 +42 @@
--        "endLine": 20,
-+        "endLine": 21,
-diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
-index 343e8d0..57e0606 100644
---- a/scanner-reports/scanner-report-Account_Insert.cls.json
-+++ b/scanner-reports/scanner-report-Account_Insert.cls.json
-@@ -1 +1 @@
--[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":50,"column":9,"endLine":50,"endColumn":30,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":71,"column":11,"endLine":71,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-\ No newline at end of file
-+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":17,"column":11,"endLine":17,"endColumn":29,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":21,"column":11,"endLine":21,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
-\ No newline at end of file
+@@ -17 +16,0 @@ public with sharing class AccountInsertClass {
+-          System.debug('Hi');
+@@ -19 +18 @@ public with sharing class AccountInsertClass {
+-          acc.Rating = 'Hot';
++          acc.Rating = 'Hotter';
+@@ -21 +19,0 @@ public with sharing class AccountInsertClass {
+-          System.debug('Hello');
+diff --git a/line_numbers.txt b/line_numbers.txt
+new file mode 100644
+index 0000000..31e3a7d
+--- /dev/null
++++ b/line_numbers.txt
+@@ -0,0 +1 @@
++21 22
+diff --git a/scanner-report.csv b/scanner-report.csv
+index 5a3a1ac..c88caf7 100644
+--- a/scanner-report.csv
++++ b/scanner-report.csv
+@@ -1,0 +2,6 @@
++"1","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","17","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++"2","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","17","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","21","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","21","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
++"5","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","25","7","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
++"6","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","25","7","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
diff --git a/filtered-scanner-report.csv b/filtered-scanner-report.csv
new file mode 100644
index 0000000..1edb6a3
--- /dev/null
+++ b/filtered-scanner-report.csv
@@ -0,0 +1,3 @@
+"Problem","Severity","File","Line","Column","Rule","Description","URL","Category","Engine"
+"3","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","21","11","AvoidDebugStatements","Avoid debug statements since they impact on performance","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_performance.html#avoiddebugstatements","Performance","pmd"
+"4","3","C:\GitHub Folder\CodeScanningSolution\force-app\main\default\classes\Account_Insert.cls","21","11","DebugsShouldUseLoggingLevel","Calls to System.debug should specify a logging level.","https://docs.pmd-code.org/pmd-doc-7.5.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","Best Practices","pmd"
diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
index 6d35ef2..553a8f6 100644
--- a/force-app/main/default/classes/Account_Insert.cls
+++ b/force-app/main/default/classes/Account_Insert.cls
@@ -17 +16,0 @@ public with sharing class AccountInsertClass {
-          System.debug('Hi');
@@ -19 +18 @@ public with sharing class AccountInsertClass {
-          acc.Rating = 'Hot';
+          acc.Rating = 'Hotter';
@@ -21 +19,0 @@ public with sharing class AccountInsertClass {
-          System.debug('Hello');
diff --git a/line_numbers.txt b/line_numbers.txt
new file mode 100644
index 0000000..31e3a7d
--- /dev/null
+++ b/line_numbers.txt
@@ -0,0 +1 @@
+21 22
