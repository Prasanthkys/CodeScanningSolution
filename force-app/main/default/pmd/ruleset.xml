<?xml version="1.0"?>
<ruleset name="OpinionatedSalesforce" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>Opinionated PMD Ruleset</description>

    <!-- IGNORE EXTERNAL LIBS -->
    <include-pattern>.*/force-app/main/default/.*</include-pattern>


    <!-- STANDARD RULES -->  
    
    <rule ref="category/apex/security.xml">
        <priority>1</priority>

        <!-- Salesforce Graph Engine does this better -->    
        <exclude name="ApexCRUDViolation" />    
    </rule>  

    <rule ref="category/apex/bestpractices.xml">      
        <priority>2</priority>   

        <exclude name="DebugsShouldUseLoggingLevel" /> <!-- Is buggy -->
        <exclude name="ApexUnitTestClassShouldHaveRunAs" /> <!-- No smart person does that -->
        <exclude name="ApexAssertionsShouldIncludeMessage" /> <!-- Better have a focused well named method -->
        <exclude name="ApexUnitTestClassShouldHaveAsserts" /> <!-- Configured below -->
    </rule>

    <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts" message="Apex unit test classes should have at least one System.assert() or assertEquals() or AssertNotEquals() call">
        <priority>2</priority>
        <properties>
            <property name="additionalAssertMethodPattern" value="((System\.Assert|Assert|Asserts)\.\w+|verify\w+)"/>
        </properties>
    </rule>
    
    <rule ref="category/apex/design.xml">      
        <priority>2</priority>  

        <!-- Salesforce Graph Engine does this better --> 
        <exclude name="UnusedMethod" />

        <!-- Cognitive Complexity covers all of that better -->     
        <exclude name="AvoidDeeplyNestedIfStmts" />
        <exclude name="StdCyclomaticComplexity" />
        <exclude name="CyclomaticComplexity" />
        <exclude name="ExcessiveClassLength" />
        <exclude name="ExcessivePublicCount" />
        <exclude name="TooManyFields" />
        <exclude name="NcssTypeCount" />
    </rule>

    <rule ref="category/apex/performance.xml">      
        <priority>2</priority>   

        <exclude name="AvoidNonRestrictiveQueries" />  <!-- Stupid rule, sorry but no -->
        <exclude name="AvoidDebugStatements" />  <!-- Improved by XPath below --> 
    </rule>

    <rule name="DebugsNeedALoggingLevel" language="apex" message="Debug statements should use an explicit Debug Level" class="net.sourceforge.pmd.lang.rule.xpath.XPathRule">
        <priority>2</priority>
        <properties><property name="xpath"><value><![CDATA[

            //MethodCallExpression[lower-case(@FullMethodName)='system.debug'][count(//VariableExpression)>2]
        
        ]]></value></property></properties>
    </rule>

    <rule ref="category/apex/codestyle.xml">      
        <priority>3</priority>  
        
        <!-- Improve by disallowing _ in Classnames -->
        <exclude name="ClassNamingConventions" />  
    </rule>

    <rule ref="category/apex/codestyle.xml/ClassNamingConventions">
        <priority>3</priority> 
        <properties>
            <property name="testClassPattern" value="[A-Z][a-zA-Z0-9_]*" />
            <property name="abstractClassPattern" value="[A-Z][a-zA-Z0-9]*" />
            <property name="classPattern" value="[A-Z][a-zA-Z0-9]*" />
            <property name="interfacePattern" value="[A-Z][a-zA-Z0-9]*" />
            <property name="enumPattern" value="[A-Z][a-zA-Z0-9]*" />
        </properties>
    </rule>  

    <rule ref="category/apex/errorprone.xml">      
        <priority>2</priority>  
    </rule>
</ruleset>