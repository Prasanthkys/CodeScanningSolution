#!/bin/bash

# Get the list of changed Apex (.cls) or LWC files
changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')

# Check if there are any relevant changes
if [ -z "$changed_files" ]; then
  echo "No relevant changes to scan in the files."
  exit 0
fi

# Create a temporary file to store the uncommitted lines
temp_file=$(mktemp)

# Extract uncommitted lines from the changed files
for file in $changed_files; do
  # Get uncommitted lines and append to temp_file
  git diff --cached --unified=0 "$file" | awk '/^@@/ {next} /^+/ {print substr($0,2)}' >> "$temp_file"
done

# Check if the temp file has content (uncommitted lines)
if [ ! -s "$temp_file" ]; then
  echo "No uncommitted lines to scan."
  rm "$temp_file"
  exit 0
fi

# Run the SFDX scanner on the temp file
sf scanner:run --target "$temp_file" --format "json" --outfile "scanner-report.json"

# Ensure that the scanner report was generated
if [ ! -f "scanner-report.json" ]; then
  echo "Scanner report not found. Please check the scanner command."
  rm "$temp_file"
  exit 1
fi

# Parse the updated (filtered) scanner report and check for severity 3 issues
severity_fail_count=$(grep -oP '"severity":\s*(1|3)' scanner-report.json | wc -l)

# Output the fail count for debugging
echo "Severity Fail Count: $severity_fail_count"

# Block commit if there are severity 3 issues
if [ "$severity_fail_count" -gt 0 ]; then
  echo "Blocking your commit due to vulnerabilities found with severity 3."
  rm "$temp_file"
  exit 1
else
  echo "No vulnerabilities found. Proceeding with commit."
  rm "$temp_file"
  exit 0
fi