0 : -@@ -52 +61 @@ while IFS= read -r file; do
1 : --  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
2 : -+  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
3 : -@@ -55 +64 @@ while IFS= read -r file; do
4 : --  if [ ! -f "scanner-report-$file.json" ]; then
5 : -+  if [ ! -f "$output_file" ]; then
6 : -@@ -64 +73 @@ while IFS= read -r file; do
7 : --  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
8 : -+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
9 : -@@ -67 +76 @@ while IFS= read -r file; do
10 : --  if [ ! -s "filtered-scanner-report-$file.json" ]; then
11 : -+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
12 : -@@ -73 +82 @@ while IFS= read -r file; do
13 : --  cat "filtered-scanner-report-$file.json"
14 : -+  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
15 : -@@ -78 +87 @@ done <<< "$changed_files"
16 : --filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
17 : -+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
18 : -@@ -85 +94 @@ fi
19 : --jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
20 : -+jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
21 : -@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
22 : --severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
23 : -+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
24 : @@ -42,3 +35,2 @@ diff --git a/changes.diff b/changes.diff
314 : -index 0000000..dd57583
3166 : @@ -46,5 +38,3 @@ index 0000000..dd57583
3167 : -@@ -0,0 +1,119 @@
3168 : -+diff --git a/.husky/pre-commit b/.husky/pre-commit
3169 : -+new file mode 100644
3170 : -+index 0000000..9b8d99e
3171 : -+--- /dev/null
3172 : @@ -52,53 +42,3 @@ index 0000000..dd57583
3173 : -+@@ -0,0 +1,100 @@
3174 : -++#!/bin/bash
3175 : -++
3176 : -++# Prevent modification of Husky files
3177 : -++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
3178 : -++#   echo "Error: pre-commit and post-commit files cannot be modified."
3179 : -++#   exit 1
3180 : -++# fi
3181 : -++# chmod 544 .husky/pre-commit
3182 : -++# chmod 544 .husky/post-commit
3183 : -++
3184 : -++# Check if Husky is installed
3185 : -++if ! command -v husky &> /dev/null
3186 : -++then
3187 : -++    echo "Husky is not installed. Installing Husky..."
3188 : -++    npm install husky --save-dev
3189 : -++    npx husky install
3190 : -++else
3191 : -++    echo "Husky is already installed Successfully."
3192 : -++fi
3193 : -++
3194 : -++# Get the list of changed Apex (.cls) or LWC files
3195 : -++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
3196 : -++
3197 : -++# Check if there are any relevant changes
3198 : -++if [ -z "$changed_files" ]; then
3199 : -++  echo "No relevant changes to scan in the files."
3200 : -++  exit 0
3201 : -++fi
3202 : -++
3203 : -++# Extract the changed lines and corresponding line numbers from the diff for each file
3204 : -++git diff --unified=0 --cached > changes.diff
3205 : -++
3206 : -++# Loop through each changed file
3207 : -++while IFS= read -r file; do
3208 : -++  echo "Processing file: $file"
3209 : -++
3210 : -++  # Extract line numbers from the diff for this file
3211 : -++  changed_lines=$(awk -v file="$file" '
3212 : -++    BEGIN {inside=0}
3213 : -++    /^diff --git/ {inside=0}
3214 : -++    $0 ~ file {inside=1}
3215 : -++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
3216 : -++  ' changes.diff)
3217 : -++
3218 : -++  # If no line numbers were found for this file, skip it
3219 : -++  if [ -z "$changed_lines" ]; then
3220 : -++    echo "No changed lines found in $file"
3221 : -++    continue
3222 : -++  fi
3223 : -++
3224 : -++  # Run the SFDX scanner on the file and generate the report
3225 : -++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
3226 : @@ -106,5 +46,3 @@ index 0000000..dd57583
3227 : -++  # Ensure that the scanner report was generated
3228 : -++  if [ ! -f "scanner-report-$file.json" ]; then
3229 : -++    echo "Scanner report for $file not found."
3230 : -++    continue
3231 : -++  fi
3232 : @@ -112,5 +50,3 @@ index 0000000..dd57583
3233 : -++  # Filter the scanner report based on the changed lines
3234 : -++  echo "Filtering scanner report for $file by changed lines..."
3235 : -++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
3236 : -++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
3237 : -++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
3238 : @@ -118,48 +54,268 @@ index 0000000..dd57583
3239 : -++  # If no filtered report is found, skip
3240 : -++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
3241 : -++    echo "No issues found for the changed lines in $file"
3242 : -++    continue
3243 : -++  fi
3244 : -++
3245 : -++  echo "Filtered scanner report for $file:"
3246 : -++  cat "filtered-scanner-report-$file.json"
3247 : -++
3248 : -++done <<< "$changed_files"
3249 : -++
3250 : -++# Check if any filtered reports were generated
3251 : -++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
3252 : -++if [ -z "$filtered_reports" ]; then
3253 : -++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
3254 : -++  exit 0
3255 : -++fi
3256 : -++
3257 : -++# Combine all filtered reports into one final report
3258 : -++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
3259 : -++
3260 : -++# Parse the final filtered scanner report and check for severity 3 issues
3261 : -++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
3262 : -++
3263 : -++# Output the fail count for debugging
3264 : -++echo "Severity Fail Count: $severity_fail_count"
3265 : -++
3266 : -++# Block commit if there are severity 3 issues
3267 : -++if [ "$severity_fail_count" -gt 0 ]; then
3268 : -++  echo "Blocking your commit due to vulnerabilities found with severity 3."
3269 : -++  exit 1
3270 : -++else
3271 : -++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
3272 : -++  exit 0
3273 : -++fi
3274 : -+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
3275 : -+index 1e62ed4..14cff41 100644
3276 : -+--- a/force-app/main/default/classes/Account_Insert.cls
3277 : -++++ b/force-app/main/default/classes/Account_Insert.cls
3278 : -+@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
3279 : -++          System.debug('Hello Hi');
3280 : -+diff --git a/scanner-report.json b/scanner-report.json
3281 : -+new file mode 100644
3282 : -+index 0000000..8a298a1
3283 : -+--- /dev/null
3284 : -++++ b/scanner-report.json
3285 : -+@@ -0,0 +1 @@
3286 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
3287 : @@ -167 +323 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
3288 : -index 14cff41..9a5148a 100644
3289 : @@ -171,2 +327,20 @@ index 14cff41..9a5148a 100644
3290 : --          System.debug('Hello Hi');
3291 : -+          System.debug('Hello');
323 : index 1ec7a54..870d508 100644
3272 : -          System.debug('Hi');
3302 : deleted file mode 100644
3303 : index e69de29..0000000
3336 : deleted file mode 100644
3337 : index fe51488..0000000
3338 : --- a/scanner-reports/final-filtered-scanner-report.json
3339 : @@ -1 +0,0 @@
3340 : -[]
3406 : deleted file mode 100644
3407 : index e670f52..0000000
3408 : --- a/scanner-reports/scanner-report-.json
3409 : @@ -1 +0,0 @@
3410 : -[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
70 :           System.debug('Hi');
