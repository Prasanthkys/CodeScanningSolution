a/changed_cls_lwc_lines.txt 0 : 0 : 3274 : -+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
a/changed_cls_lwc_lines.txt 1 : 1 : 3275 : -+index 1e62ed4..14cff41 100644
a/changed_cls_lwc_lines.txt 2 : 2 : 3276 : -+--- a/force-app/main/default/classes/Account_Insert.cls
a/changed_cls_lwc_lines.txt 3 : 3 : 3277 : -++++ b/force-app/main/default/classes/Account_Insert.cls
a/changed_cls_lwc_lines.txt 4 : 4 : 3278 : -+@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
a/changed_cls_lwc_lines.txt 5 : 5 : 3279 : -++          System.debug('Hello Hi');
a/changed_cls_lwc_lines.txt 6 : 6 : 3280 : -+diff --git a/scanner-report.json b/scanner-report.json
a/changed_cls_lwc_lines.txt 7 : 7 : 3281 : -+new file mode 100644
a/changed_cls_lwc_lines.txt 8 : 8 : 3282 : -+index 0000000..8a298a1
a/changed_cls_lwc_lines.txt 9 : 9 : 3283 : -+--- /dev/null
a/changed_cls_lwc_lines.txt 10 : 10 : 3284 : -++++ b/scanner-report.json
a/changed_cls_lwc_lines.txt 11 : 11 : 3285 : -+@@ -0,0 +1 @@
a/changed_cls_lwc_lines.txt 12 : 12 : 3286 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
a/changed_cls_lwc_lines.txt 13 : 13 : 3287 : @@ -167 +323 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
a/changed_cls_lwc_lines.txt 14 : 14 : 3288 : -index 14cff41..9a5148a 100644
a/changed_cls_lwc_lines.txt 15 : 15 : 3289 : @@ -171,2 +327,20 @@ index 14cff41..9a5148a 100644
a/changed_cls_lwc_lines.txt 16 : 16 : 3290 : --          System.debug('Hello Hi');
a/changed_cls_lwc_lines.txt 17 : 17 : 3291 : -+          System.debug('Hello');
a/changed_cls_lwc_lines.txt 18 : 18 : 323 : index 1ec7a54..870d508 100644
a/changed_cls_lwc_lines.txt 19 : 19 : 3272 : -          System.debug('Hi');
a/changed_cls_lwc_lines.txt 20 : 20 : 3302 : deleted file mode 100644
a/changed_cls_lwc_lines.txt 21 : 21 : 3303 : index e69de29..0000000
a/changed_cls_lwc_lines.txt 22 : 22 : 3336 : deleted file mode 100644
a/changed_cls_lwc_lines.txt 23 : 23 : 3337 : index fe51488..0000000
a/changed_cls_lwc_lines.txt 24 : 24 : 3338 : --- a/scanner-reports/final-filtered-scanner-report.json
a/changed_cls_lwc_lines.txt 25 : 25 : 3339 : @@ -1 +0,0 @@
a/changed_cls_lwc_lines.txt 26 : 26 : 3340 : -[]
a/changed_cls_lwc_lines.txt 27 : 27 : 3406 : deleted file mode 100644
a/changed_cls_lwc_lines.txt 28 : 28 : 3407 : index e670f52..0000000
a/changed_cls_lwc_lines.txt 29 : 29 : 3408 : --- a/scanner-reports/scanner-report-.json
a/changed_cls_lwc_lines.txt 30 : 30 : 3409 : @@ -1 +0,0 @@
a/changed_cls_lwc_lines.txt 31 : 31 : 3410 : -[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
a/changed_cls_lwc_lines.txt 32 : 32 : 70 :           System.debug('Hi');
a/changed_cls_lwc_lines.txt 33 : 33 : -+@@ -52 +61 @@ while IFS= read -r file; do
a/changed_cls_lwc_lines.txt 34 : 34 : -+-  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
a/changed_cls_lwc_lines.txt 35 : 35 : -++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
a/changed_cls_lwc_lines.txt 36 : 36 : -+@@ -55 +64 @@ while IFS= read -r file; do
a/changed_cls_lwc_lines.txt 37 : 37 : -+-  if [ ! -f "scanner-report-$file.json" ]; then
a/changed_cls_lwc_lines.txt 38 : 38 : -++  if [ ! -f "$output_file" ]; then
a/changed_cls_lwc_lines.txt 39 : 39 : -+@@ -64 +73 @@ while IFS= read -r file; do
a/changed_cls_lwc_lines.txt 40 : 40 : -+-  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
a/changed_cls_lwc_lines.txt 41 : 41 : -++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
a/changed_cls_lwc_lines.txt 42 : 42 : -+@@ -67 +76 @@ while IFS= read -r file; do
a/changed_cls_lwc_lines.txt 43 : 43 : -+-  if [ ! -s "filtered-scanner-report-$file.json" ]; then
a/changed_cls_lwc_lines.txt 44 : 44 : -++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
a/changed_cls_lwc_lines.txt 45 : 45 : -+@@ -73 +82 @@ while IFS= read -r file; do
a/changed_cls_lwc_lines.txt 46 : 46 : -+-  cat "filtered-scanner-report-$file.json"
a/changed_cls_lwc_lines.txt 47 : 47 : -++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
a/changed_cls_lwc_lines.txt 48 : 48 : -+@@ -78 +87 @@ done <<< "$changed_files"
a/changed_cls_lwc_lines.txt 49 : 49 : -+-filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
a/changed_cls_lwc_lines.txt 50 : 50 : -++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
a/changed_cls_lwc_lines.txt 51 : 51 : -+@@ -85 +94 @@ fi
a/changed_cls_lwc_lines.txt 52 : 52 : -+-jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
a/changed_cls_lwc_lines.txt 53 : 53 : -++jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
a/changed_cls_lwc_lines.txt 54 : 54 : -+@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
a/changed_cls_lwc_lines.txt 55 : 55 : -+-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
a/changed_cls_lwc_lines.txt 56 : 56 : -++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
a/changed_cls_lwc_lines.txt 57 : 57 : -+diff --git a/changes.diff b/changes.diff
a/changed_cls_lwc_lines.txt 58 : 58 : -@@ -3 +43 @@ new file mode 100644
a/changed_cls_lwc_lines.txt 59 : 59 : --index 0000000..9b8d99e
a/changed_cls_lwc_lines.txt 60 : 60 : -+index 0000000..dd57583
a/changed_cls_lwc_lines.txt 61 : 61 : -@@ -5,102 +45,121 @@ index 0000000..9b8d99e
a/changed_cls_lwc_lines.txt 62 : 62 : --+++ b/.husky/pre-commit
a/changed_cls_lwc_lines.txt 63 : 63 : --@@ -0,0 +1,100 @@
a/changed_cls_lwc_lines.txt 64 : 64 : --+#!/bin/bash
a/changed_cls_lwc_lines.txt 65 : 65 : --+
a/changed_cls_lwc_lines.txt 66 : 66 : --+# Prevent modification of Husky files
a/changed_cls_lwc_lines.txt 67 : 67 : --+# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
a/changed_cls_lwc_lines.txt 68 : 68 : --+#   echo "Error: pre-commit and post-commit files cannot be modified."
a/changed_cls_lwc_lines.txt 69 : 69 : --+#   exit 1
a/changed_cls_lwc_lines.txt 70 : 70 : --+# fi
a/changed_cls_lwc_lines.txt 71 : 71 : --+# chmod 544 .husky/pre-commit
a/changed_cls_lwc_lines.txt 72 : 72 : --+# chmod 544 .husky/post-commit
a/changed_cls_lwc_lines.txt 73 : 73 : --+
a/changed_cls_lwc_lines.txt 74 : 74 : --+# Check if Husky is installed
a/changed_cls_lwc_lines.txt 75 : 75 : --+if ! command -v husky &> /dev/null
a/changed_cls_lwc_lines.txt 76 : 76 : --+then
a/changed_cls_lwc_lines.txt 77 : 77 : --+    echo "Husky is not installed. Installing Husky..."
a/changed_cls_lwc_lines.txt 78 : 78 : --+    npm install husky --save-dev
a/changed_cls_lwc_lines.txt 79 : 79 : --+    npx husky install
a/changed_cls_lwc_lines.txt 80 : 80 : --+else
a/changed_cls_lwc_lines.txt 81 : 81 : --+    echo "Husky is already installed Successfully."
a/changed_cls_lwc_lines.txt 82 : 82 : --+fi
a/changed_cls_lwc_lines.txt 83 : 83 : --+
a/changed_cls_lwc_lines.txt 84 : 84 : --+# Get the list of changed Apex (.cls) or LWC files
a/changed_cls_lwc_lines.txt 85 : 85 : --+changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
a/changed_cls_lwc_lines.txt 86 : 86 : --+
a/changed_cls_lwc_lines.txt 87 : 87 : --+# Check if there are any relevant changes
a/changed_cls_lwc_lines.txt 88 : 88 : --+if [ -z "$changed_files" ]; then
a/changed_cls_lwc_lines.txt 89 : 89 : --+  echo "No relevant changes to scan in the files."
a/changed_cls_lwc_lines.txt 90 : 90 : --+  exit 0
a/changed_cls_lwc_lines.txt 91 : 91 : --+fi
a/changed_cls_lwc_lines.txt 92 : 92 : --+
a/changed_cls_lwc_lines.txt 93 : 93 : --+# Extract the changed lines and corresponding line numbers from the diff for each file
a/changed_cls_lwc_lines.txt 94 : 94 : --+git diff --unified=0 --cached > changes.diff
a/changed_cls_lwc_lines.txt 95 : 95 : --+
a/changed_cls_lwc_lines.txt 96 : 96 : --+# Loop through each changed file
a/changed_cls_lwc_lines.txt 97 : 97 : --+while IFS= read -r file; do
a/changed_cls_lwc_lines.txt 98 : 98 : --+  echo "Processing file: $file"
a/changed_cls_lwc_lines.txt 99 : 99 : --+
a/changed_cls_lwc_lines.txt 100 : 100 : --+  # Extract line numbers from the diff for this file
a/changed_cls_lwc_lines.txt 101 : 101 : --+  changed_lines=$(awk -v file="$file" '
a/changed_cls_lwc_lines.txt 102 : 102 : --+    BEGIN {inside=0}
a/changed_cls_lwc_lines.txt 103 : 103 : --+    /^diff --git/ {inside=0}
a/changed_cls_lwc_lines.txt 104 : 104 : --+    $0 ~ file {inside=1}
a/changed_cls_lwc_lines.txt 105 : 105 : --+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
a/changed_cls_lwc_lines.txt 106 : 106 : --+  ' changes.diff)
a/changed_cls_lwc_lines.txt 107 : 107 : --+
a/changed_cls_lwc_lines.txt 108 : 108 : --+  # If no line numbers were found for this file, skip it
a/changed_cls_lwc_lines.txt 109 : 109 : --+  if [ -z "$changed_lines" ]; then
a/changed_cls_lwc_lines.txt 110 : 110 : --+    echo "No changed lines found in $file"
a/changed_cls_lwc_lines.txt 111 : 111 : --+    continue
a/changed_cls_lwc_lines.txt 112 : 112 : --+  fi
a/changed_cls_lwc_lines.txt 113 : 113 : --+
a/changed_cls_lwc_lines.txt 114 : 114 : --+  # Run the SFDX scanner on the file and generate the report
a/changed_cls_lwc_lines.txt 115 : 115 : --+  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
a/changed_cls_lwc_lines.txt 116 : 116 : --+
a/changed_cls_lwc_lines.txt 117 : 117 : --+  # Ensure that the scanner report was generated
a/changed_cls_lwc_lines.txt 118 : 118 : --+  if [ ! -f "scanner-report-$file.json" ]; then
a/changed_cls_lwc_lines.txt 119 : 119 : --+    echo "Scanner report for $file not found."
a/changed_cls_lwc_lines.txt 120 : 120 : --+    continue
a/changed_cls_lwc_lines.txt 121 : 121 : --+  fi
a/changed_cls_lwc_lines.txt 122 : 122 : @@ -144,169 +149,25 @@ index dd57583..2bddfca 100644
a/changed_cls_lwc_lines.txt 123 : 123 : --+  # Filter the scanner report based on the changed lines
a/changed_cls_lwc_lines.txt 124 : 124 : --+  echo "Filtering scanner report for $file by changed lines..."
a/changed_cls_lwc_lines.txt 125 : 125 : --+  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
a/changed_cls_lwc_lines.txt 126 : 126 : --+    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
a/changed_cls_lwc_lines.txt 127 : 127 : --+  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
a/changed_cls_lwc_lines.txt 128 : 128 : --+
a/changed_cls_lwc_lines.txt 129 : 129 : --+  # If no filtered report is found, skip
a/changed_cls_lwc_lines.txt 130 : 130 : --+  if [ ! -s "filtered-scanner-report-$file.json" ]; then
a/changed_cls_lwc_lines.txt 131 : 131 : --+    echo "No issues found for the changed lines in $file"
a/changed_cls_lwc_lines.txt 132 : 132 : --+    continue
a/changed_cls_lwc_lines.txt 133 : 133 : --+  fi
a/changed_cls_lwc_lines.txt 134 : 134 : --+
a/changed_cls_lwc_lines.txt 135 : 135 : --+  echo "Filtered scanner report for $file:"
a/changed_cls_lwc_lines.txt 136 : 136 : --+  cat "filtered-scanner-report-$file.json"
a/changed_cls_lwc_lines.txt 137 : 137 : --+
a/changed_cls_lwc_lines.txt 138 : 138 : --+done <<< "$changed_files"
a/changed_cls_lwc_lines.txt 139 : 139 : --+
a/changed_cls_lwc_lines.txt 140 : 140 : --+# Check if any filtered reports were generated
a/changed_cls_lwc_lines.txt 141 : 141 : --+filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
a/changed_cls_lwc_lines.txt 142 : 142 : --+if [ -z "$filtered_reports" ]; then
a/changed_cls_lwc_lines.txt 143 : 143 : --+  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
a/changed_cls_lwc_lines.txt 144 : 144 : --+  exit 0
a/changed_cls_lwc_lines.txt 145 : 145 : --+fi
a/changed_cls_lwc_lines.txt 146 : 146 : --+
a/changed_cls_lwc_lines.txt 147 : 147 : --+# Combine all filtered reports into one final report
a/changed_cls_lwc_lines.txt 148 : 148 : --+jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
a/changed_cls_lwc_lines.txt 149 : 149 : --+
a/changed_cls_lwc_lines.txt 150 : 150 : --+# Parse the final filtered scanner report and check for severity 3 issues
a/changed_cls_lwc_lines.txt 151 : 151 : --+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
a/changed_cls_lwc_lines.txt 152 : 152 : --+
a/changed_cls_lwc_lines.txt 153 : 153 : --+# Output the fail count for debugging
a/changed_cls_lwc_lines.txt 154 : 154 : --+echo "Severity Fail Count: $severity_fail_count"
a/changed_cls_lwc_lines.txt 155 : 155 : --+
a/changed_cls_lwc_lines.txt 156 : 156 : --+# Block commit if there are severity 3 issues
a/changed_cls_lwc_lines.txt 157 : 157 : --+if [ "$severity_fail_count" -gt 0 ]; then
a/changed_cls_lwc_lines.txt 158 : 158 : --+  echo "Blocking your commit due to vulnerabilities found with severity 3."
a/changed_cls_lwc_lines.txt 159 : 159 : --+  exit 1
a/changed_cls_lwc_lines.txt 160 : 160 : --+else
a/changed_cls_lwc_lines.txt 161 : 161 : --+  echo "No vulnerabilities found in changed lines. Proceeding with commit."
a/changed_cls_lwc_lines.txt 162 : 162 : --+  exit 0
a/changed_cls_lwc_lines.txt 163 : 163 : --+fi
a/changed_cls_lwc_lines.txt 164 : 164 : -++++ b/changes.diff
a/changed_cls_lwc_lines.txt 165 : 165 : -+@@ -0,0 +1,119 @@
a/changed_cls_lwc_lines.txt 166 : 166 : -++diff --git a/.husky/pre-commit b/.husky/pre-commit
a/changed_cls_lwc_lines.txt 167 : 167 : -++new file mode 100644
a/changed_cls_lwc_lines.txt 168 : 168 : -++index 0000000..9b8d99e
a/changed_cls_lwc_lines.txt 169 : 169 : -++--- /dev/null
a/changed_cls_lwc_lines.txt 170 : 170 : -+++++ b/.husky/pre-commit
a/changed_cls_lwc_lines.txt 171 : 171 : -++@@ -0,0 +1,100 @@
a/changed_cls_lwc_lines.txt 172 : 172 : -+++#!/bin/bash
a/changed_cls_lwc_lines.txt 173 : 173 : -+++
a/changed_cls_lwc_lines.txt 174 : 174 : -+++# Prevent modification of Husky files
a/changed_cls_lwc_lines.txt 175 : 175 : -+++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
a/changed_cls_lwc_lines.txt 176 : 176 : -+++#   echo "Error: pre-commit and post-commit files cannot be modified."
a/changed_cls_lwc_lines.txt 177 : 177 : -+++#   exit 1
a/changed_cls_lwc_lines.txt 178 : 178 : -+++# fi
a/changed_cls_lwc_lines.txt 179 : 179 : -+++# chmod 544 .husky/pre-commit
a/changed_cls_lwc_lines.txt 180 : 180 : -+++# chmod 544 .husky/post-commit
a/changed_cls_lwc_lines.txt 181 : 181 : -+++
a/changed_cls_lwc_lines.txt 182 : 182 : -+++# Check if Husky is installed
a/changed_cls_lwc_lines.txt 183 : 183 : -+++if ! command -v husky &> /dev/null
a/changed_cls_lwc_lines.txt 184 : 184 : -+++then
a/changed_cls_lwc_lines.txt 185 : 185 : -+++    echo "Husky is not installed. Installing Husky..."
a/changed_cls_lwc_lines.txt 186 : 186 : -+++    npm install husky --save-dev
a/changed_cls_lwc_lines.txt 187 : 187 : -+++    npx husky install
a/changed_cls_lwc_lines.txt 188 : 188 : -+++else
a/changed_cls_lwc_lines.txt 189 : 189 : -+++    echo "Husky is already installed Successfully."
a/changed_cls_lwc_lines.txt 190 : 190 : -+++fi
a/changed_cls_lwc_lines.txt 191 : 191 : -+++
a/changed_cls_lwc_lines.txt 192 : 192 : -+++# Get the list of changed Apex (.cls) or LWC files
a/changed_cls_lwc_lines.txt 193 : 193 : -+++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
a/changed_cls_lwc_lines.txt 194 : 194 : -+++
a/changed_cls_lwc_lines.txt 195 : 195 : -+++# Check if there are any relevant changes
a/changed_cls_lwc_lines.txt 196 : 196 : -+++if [ -z "$changed_files" ]; then
a/changed_cls_lwc_lines.txt 197 : 197 : -+++  echo "No relevant changes to scan in the files."
a/changed_cls_lwc_lines.txt 198 : 198 : -+++  exit 0
a/changed_cls_lwc_lines.txt 199 : 199 : -+++fi
a/changed_cls_lwc_lines.txt 200 : 200 : -+++
a/changed_cls_lwc_lines.txt 201 : 201 : -+++# Extract the changed lines and corresponding line numbers from the diff for each file
a/changed_cls_lwc_lines.txt 202 : 202 : -+++git diff --unified=0 --cached > changes.diff
a/changed_cls_lwc_lines.txt 203 : 203 : -+++
a/changed_cls_lwc_lines.txt 204 : 204 : -+++# Loop through each changed file
a/changed_cls_lwc_lines.txt 205 : 205 : -+++while IFS= read -r file; do
a/changed_cls_lwc_lines.txt 206 : 206 : -+++  echo "Processing file: $file"
a/changed_cls_lwc_lines.txt 207 : 207 : -+++
a/changed_cls_lwc_lines.txt 208 : 208 : -+++  # Extract line numbers from the diff for this file
a/changed_cls_lwc_lines.txt 209 : 209 : -+++  changed_lines=$(awk -v file="$file" '
a/changed_cls_lwc_lines.txt 210 : 210 : -+++    BEGIN {inside=0}
a/changed_cls_lwc_lines.txt 211 : 211 : -+++    /^diff --git/ {inside=0}
a/changed_cls_lwc_lines.txt 212 : 212 : -+++    $0 ~ file {inside=1}
a/changed_cls_lwc_lines.txt 213 : 213 : -+++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
a/changed_cls_lwc_lines.txt 214 : 214 : -+++  ' changes.diff)
a/changed_cls_lwc_lines.txt 215 : 215 : -+++
a/changed_cls_lwc_lines.txt 216 : 216 : -+++  # If no line numbers were found for this file, skip it
a/changed_cls_lwc_lines.txt 217 : 217 : -+++  if [ -z "$changed_lines" ]; then
a/changed_cls_lwc_lines.txt 218 : 218 : -+++    echo "No changed lines found in $file"
a/changed_cls_lwc_lines.txt 219 : 219 : -+++    continue
a/changed_cls_lwc_lines.txt 220 : 220 : -+++  fi
a/changed_cls_lwc_lines.txt 221 : 221 : -+++
a/changed_cls_lwc_lines.txt 222 : 222 : -+++  # Run the SFDX scanner on the file and generate the report
a/changed_cls_lwc_lines.txt 223 : 223 : -+++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
a/changed_cls_lwc_lines.txt 224 : 224 : -+++
a/changed_cls_lwc_lines.txt 225 : 225 : -+++  # Ensure that the scanner report was generated
a/changed_cls_lwc_lines.txt 226 : 226 : -+++  if [ ! -f "scanner-report-$file.json" ]; then
a/changed_cls_lwc_lines.txt 227 : 227 : -+++    echo "Scanner report for $file not found."
a/changed_cls_lwc_lines.txt 228 : 228 : -+++    continue
a/changed_cls_lwc_lines.txt 229 : 229 : -+++  fi
a/changed_cls_lwc_lines.txt 230 : 230 : -+++
a/changed_cls_lwc_lines.txt 231 : 231 : -+++  # Filter the scanner report based on the changed lines
a/changed_cls_lwc_lines.txt 232 : 232 : -+++  echo "Filtering scanner report for $file by changed lines..."
a/changed_cls_lwc_lines.txt 233 : 233 : -+++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
a/changed_cls_lwc_lines.txt 234 : 234 : -+++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
a/changed_cls_lwc_lines.txt 235 : 235 : -+++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
a/changed_cls_lwc_lines.txt 236 : 236 : -+++
a/changed_cls_lwc_lines.txt 237 : 237 : -+++  # If no filtered report is found, skip
a/changed_cls_lwc_lines.txt 238 : 238 : -+++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
a/changed_cls_lwc_lines.txt 239 : 239 : -+++    echo "No issues found for the changed lines in $file"
a/changed_cls_lwc_lines.txt 240 : 240 : -+++    continue
a/changed_cls_lwc_lines.txt 241 : 241 : -+++  fi
a/changed_cls_lwc_lines.txt 242 : 242 : -+++
a/changed_cls_lwc_lines.txt 243 : 243 : -+++  echo "Filtered scanner report for $file:"
a/changed_cls_lwc_lines.txt 244 : 244 : -+++  cat "filtered-scanner-report-$file.json"
a/changed_cls_lwc_lines.txt 245 : 245 : -+++
a/changed_cls_lwc_lines.txt 246 : 246 : -+++done <<< "$changed_files"
a/changed_cls_lwc_lines.txt 247 : 247 : -+++
a/changed_cls_lwc_lines.txt 248 : 248 : -+++# Check if any filtered reports were generated
a/changed_cls_lwc_lines.txt 249 : 249 : -+++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
a/changed_cls_lwc_lines.txt 250 : 250 : -+++if [ -z "$filtered_reports" ]; then
a/changed_cls_lwc_lines.txt 251 : 251 : -+++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
a/changed_cls_lwc_lines.txt 252 : 252 : -+++  exit 0
a/changed_cls_lwc_lines.txt 253 : 253 : -+++fi
a/changed_cls_lwc_lines.txt 254 : 254 : -+++
a/changed_cls_lwc_lines.txt 255 : 255 : -+++# Combine all filtered reports into one final report
a/changed_cls_lwc_lines.txt 256 : 256 : -+++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
a/changed_cls_lwc_lines.txt 257 : 257 : -+++
a/changed_cls_lwc_lines.txt 258 : 258 : -+++# Parse the final filtered scanner report and check for severity 3 issues
a/changed_cls_lwc_lines.txt 259 : 259 : -+++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
a/changed_cls_lwc_lines.txt 260 : 260 : -+++
a/changed_cls_lwc_lines.txt 261 : 261 : -+++# Output the fail count for debugging
a/changed_cls_lwc_lines.txt 262 : 262 : -+++echo "Severity Fail Count: $severity_fail_count"
a/changed_cls_lwc_lines.txt 263 : 263 : -+++
a/changed_cls_lwc_lines.txt 264 : 264 : -+++# Block commit if there are severity 3 issues
a/changed_cls_lwc_lines.txt 265 : 265 : -+++if [ "$severity_fail_count" -gt 0 ]; then
a/changed_cls_lwc_lines.txt 266 : 266 : -+++  echo "Blocking your commit due to vulnerabilities found with severity 3."
a/changed_cls_lwc_lines.txt 267 : 267 : -+++  exit 1
a/changed_cls_lwc_lines.txt 268 : 268 : -+++else
a/changed_cls_lwc_lines.txt 269 : 269 : -+++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
a/changed_cls_lwc_lines.txt 270 : 270 : -+++  exit 0
a/changed_cls_lwc_lines.txt 271 : 271 : -+++fi
a/changed_cls_lwc_lines.txt 272 : 272 : -++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
a/changed_cls_lwc_lines.txt 273 : 273 : -++index 1e62ed4..14cff41 100644
a/changed_cls_lwc_lines.txt 274 : 274 : -++--- a/force-app/main/default/classes/Account_Insert.cls
a/changed_cls_lwc_lines.txt 275 : 275 : -+++++ b/force-app/main/default/classes/Account_Insert.cls
a/changed_cls_lwc_lines.txt 276 : 276 : -++@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
a/changed_cls_lwc_lines.txt 277 : 277 : -+++          System.debug('Hello Hi');
a/changed_cls_lwc_lines.txt 278 : 278 : -++diff --git a/scanner-report.json b/scanner-report.json
a/changed_cls_lwc_lines.txt 279 : 279 : -++new file mode 100644
a/changed_cls_lwc_lines.txt 280 : 280 : -++index 0000000..8a298a1
a/changed_cls_lwc_lines.txt 281 : 281 : -++--- /dev/null
a/changed_cls_lwc_lines.txt 282 : 282 : -+++++ b/scanner-report.json
a/changed_cls_lwc_lines.txt 283 : 283 : -++@@ -0,0 +1 @@
a/changed_cls_lwc_lines.txt 284 : 284 : -+++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
a/changed_cls_lwc_lines.txt 285 : 285 : -@@ -108 +167 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
a/changed_cls_lwc_lines.txt 286 : 286 : --index 1e62ed4..14cff41 100644
a/changed_cls_lwc_lines.txt 287 : 287 : -+index 14cff41..9a5148a 100644
a/changed_cls_lwc_lines.txt 288 : 288 : -@@ -111,9 +170,3 @@ index 1e62ed4..14cff41 100644
a/changed_cls_lwc_lines.txt 289 : 289 : --@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
a/changed_cls_lwc_lines.txt 290 : 290 : --+          System.debug('Hello Hi');
a/changed_cls_lwc_lines.txt 291 : 291 : --diff --git a/scanner-report.json b/scanner-report.json
a/changed_cls_lwc_lines.txt 292 : 292 : @@ -314 +175 @@ index dd57583..2bddfca 100644
a/changed_cls_lwc_lines.txt 293 : 293 : --index 0000000..8a298a1
a/changed_cls_lwc_lines.txt 294 : 294 : @@ -316,6 +177,429 @@ index dd57583..2bddfca 100644
a/changed_cls_lwc_lines.txt 295 : 295 : --+++ b/scanner-report.json
a/changed_cls_lwc_lines.txt 296 : 296 : --@@ -0,0 +1 @@
a/changed_cls_lwc_lines.txt 297 : 297 : --+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
a/changed_cls_lwc_lines.txt 298 : 298 : -+@@ -70 +70 @@ public with sharing class AccountInsertClass {
a/changed_cls_lwc_lines.txt 299 : 299 : -+-          System.debug('Hello Hi');
a/changed_cls_lwc_lines.txt 300 : 300 : -++          System.debug('Hello');
a/changed_cls_lwc_lines.txt 301 : 301 : @@ -323 +607 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
a/changed_cls_lwc_lines.txt 302 : 302 : -index 9a5148a..1ec7a54 100644
a/changed_cls_lwc_lines.txt 303 : 303 : @@ -327,2 +611,2 @@ index 9a5148a..1ec7a54 100644
a/changed_cls_lwc_lines.txt 304 : 304 : --          System.debug('Hello');
a/changed_cls_lwc_lines.txt 305 : 305 : -+          System.debug('Hi');
a/changed_cls_lwc_lines.txt 306 : 306 : @@ -330,2 +614,2 @@ diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/fil
a/changed_cls_lwc_lines.txt 307 : 307 : -new file mode 100644
a/changed_cls_lwc_lines.txt 308 : 308 : -index 0000000..e69de29
a/changed_cls_lwc_lines.txt 309 : 309 : @@ -333,6 +617,6 @@ diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-report
a/changed_cls_lwc_lines.txt 310 : 310 : -new file mode 100644
a/changed_cls_lwc_lines.txt 311 : 311 : -index 0000000..fe51488
a/changed_cls_lwc_lines.txt 312 : 312 : ---- /dev/null
a/changed_cls_lwc_lines.txt 313 : 313 : -+++ b/scanner-reports/final-filtered-scanner-report.json
a/changed_cls_lwc_lines.txt 314 : 314 : -@@ -0,0 +1 @@
a/changed_cls_lwc_lines.txt 315 : 315 : -+[]
a/changed_cls_lwc_lines.txt 316 : 316 : @@ -340,6 +624,6 @@ diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-repo
a/changed_cls_lwc_lines.txt 317 : 317 : -new file mode 100644
a/changed_cls_lwc_lines.txt 318 : 318 : -index 0000000..e670f52
a/changed_cls_lwc_lines.txt 319 : 319 : ---- /dev/null
a/changed_cls_lwc_lines.txt 320 : 320 : -+++ b/scanner-reports/scanner-report-.json
a/changed_cls_lwc_lines.txt 321 : 321 : -@@ -0,0 +1 @@
a/changed_cls_lwc_lines.txt 322 : 322 : -+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
a/changed_cls_lwc_lines.txt 323 : 607 : index 870d508..1ec7a54 100644
a/changed_cls_lwc_lines.txt 324 : 61119 : -          System.debug('Hi Hello');
a/changed_cls_lwc_lines.txt 325 : 61120 : diff --git a/scanner-reports/scanner-report-Account_Insert.cls.json b/scanner-reports/scanner-report-Account_Insert.cls.json
a/changed_cls_lwc_lines.txt 326 : 61121 : new file mode 100644
a/changed_cls_lwc_lines.txt 327 : 61122 : index 0000000..cd70445
a/changed_cls_lwc_lines.txt 328 : 61123 : --- /dev/null
a/changed_cls_lwc_lines.txt 329 : 61124 : @@ -0,0 +1 @@
a/changed_cls_lwc_lines.txt 330 : 70 :           System.debug('Hi Hello');
a/changes.diff 239 : index 6223d95..dfdd9f6 100644
a/changes.diff 24330 : -index 4433528..439f404 100644
a/changes.diff 24331 : @@ -5,40 +5,17 @@ index 4433528..439f404 100644
a/changes.diff 24332 : -@@ -4,6 +4 @@
a/changes.diff 24333 : --# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
a/changes.diff 24334 : --#   echo "Error: pre-commit and post-commit files cannot be modified."
a/changes.diff 24335 : --#   exit 1
a/changes.diff 24336 : --# fi
a/changes.diff 24337 : --# chmod 544 .husky/pre-commit
a/changes.diff 24338 : --# chmod 544 .husky/post-commit
a/changes.diff 24339 : -+# ...
a/changes.diff 24340 : -@@ -12,8 +7 @@
a/changes.diff 24341 : --if ! command -v husky &> /dev/null
a/changes.diff 24342 : --then
a/changes.diff 24343 : --    echo "Husky is not installed. Installing Husky..."
a/changes.diff 24344 : --    npm install husky --save-dev
a/changes.diff 24345 : --    npx husky install
a/changes.diff 24346 : --else
a/changes.diff 24347 : --    echo "Husky is already installed successfully."
a/changes.diff 24348 : --fi
a/changes.diff 24349 : -+# ...
a/changes.diff 24350 : -@@ -36,6 +24,16 @@ git diff --unified=0 --cached > changes.diff
a/changes.diff 24351 : --# Loop through each changed file
a/changes.diff 24352 : --while IFS= read -r file; do
a/changes.diff 24353 : --  echo "Processing file: $file"
a/changes.diff 24354 : --
a/changes.diff 24355 : --  # Remove leading slashes to make it compatible with file path
a/changes.diff 24356 : --  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
a/changes.diff 24357 : -+# Extract and print only the changed lines and line numbers from .cls and .lwc files
a/changes.diff 24358 : -+echo "Processing changes for .cls and .lwc files only..."
a/changes.diff 24359 : -+awk '
a/changes.diff 24360 : -+  BEGIN {valid_file=0; file=""}
a/changes.diff 24361 : -+  /^diff --git/ {valid_file=0}
a/changes.diff 24362 : -+  /^diff --git a\/.* b\/(.*)/ {file=$3; sub(/^b\//,"",file)}
a/changes.diff 24363 : -+  $0 ~ /\.cls$|\.lwc$/ {valid_file=1}
a/changes.diff 24364 : -+  /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}
a/changes.diff 24365 : -+  /^[+][^+]/ && valid_file {print file, start + line_offset++, ":", substr($0, 2)}
a/changes.diff 24366 : -+' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
a/changes.diff 24367 : -+
a/changes.diff 24368 : -+# Check if any relevant changes were found in .cls or .lwc files
a/changes.diff 24369 : -+if [ ! -s changed_cls_lwc_lines.txt ]; then
a/changes.diff 24370 : -+  echo "No changes detected in .cls or .lwc files."
a/changes.diff 24371 : -+  exit 0
a/changes.diff 24372 : @@ -46,18 +23,19 @@ index 4433528..439f404 100644
a/changes.diff 24373 : -@@ -43,8 +41 @@ while IFS= read -r file; do
a/changes.diff 24374 : --  # Extract the changed lines and corresponding line numbers
a/changes.diff 24375 : --  awk '
a/changes.diff 24376 : --    BEGIN {valid_file=0} 
a/changes.diff 24377 : --    /^diff --git/ {valid_file=0} 
a/changes.diff 24378 : --    $0 ~ /\.cls$|\.lwc$/ {valid_file=1} 
a/changes.diff 24379 : --    /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
a/changes.diff 24380 : --    /^[+][^+]/ && valid_file {print start + line_offset++, ":", substr($0, 2)}  
a/changes.diff 24381 : --  ' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
a/changes.diff 24382 : -+cat changed_cls_lwc_lines.txt
a/changes.diff 24383 : -@@ -52,5 +43,5 @@ while IFS= read -r file; do
a/changes.diff 24384 : --  # If no lines are found for this file, skip it
a/changes.diff 24385 : --  if [ ! -s changed_cls_lwc_lines.txt ]; then
a/changes.diff 24386 : --    echo "No changed lines found in $file"
a/changes.diff 24387 : --    continue
a/changes.diff 24388 : --  fi
a/changes.diff 24389 : -+# Process each file
a/changes.diff 24390 : -+for file in $changed_files; do
a/changes.diff 2744 : @@ -65,7 +43,18 @@ index 4433528..439f404 100644
a/changes.diff 2745 : -+  clean_file=$(basename "$file")
a/changes.diff 2746 : -+  echo "Clean file: $clean_file"
a/changes.diff 2747 : -@@ -70,2 +61,10 @@ while IFS= read -r file; do
a/changes.diff 2748 : --  # Read the changed lines from the file for filtering
a/changes.diff 2749 : --  changed_lines=$(cut -d':' -f1 changed_cls_lwc_lines.txt | tr '\n' ' ')
a/changes.diff 2750 : -+  # Extract line numbers for this file
a/changes.diff 2751 : -+  line_numbers=$(grep "^$file " changed_cls_lwc_lines.txt | cut -d':' -f1 | awk '{print $2}' | tr '\n' ' ')
a/changes.diff 27947 : @@ -73 +62,2 @@ index 4433528..439f404 100644
a/changes.diff 27948 : -+  if [ -z "$line_numbers" ]; then
a/changes.diff 27949 : @@ -77,9 +67,8 @@ index 4433528..439f404 100644
a/changes.diff 27950 : -+
a/changes.diff 27951 : -+  # Generate the select expression for jq
a/changes.diff 27952 : -+  select_expression=$(echo "$line_numbers" | awk '{for(i=1;i<=NF;i++) printf ".line == %s%s", $i, (i<NF ? " or " : "")}')
a/changes.diff 27953 : -@@ -75,2 +74,2 @@ while IFS= read -r file; do
a/changes.diff 27954 : --  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
a/changes.diff 27955 : --    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
a/changes.diff 27956 : -+  jq '
a/changes.diff 27957 : -+    .[] | .violations[]? | select('"$select_expression"')
a/changes.diff 27958 : -@@ -87,2 +86 @@ while IFS= read -r file; do
a/changes.diff 32915 : @@ -87,5 +76,19 @@ index 4433528..439f404 100644
a/changes.diff 32916 : --done <<< "$changed_files"
a/changes.diff 32917 : -+done
a/changes.diff 32918 : -@@ -101 +99 @@ jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final
a/changes.diff 32919 : --severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
a/changes.diff 32920 : -+severity_fail_count=$(jq '[.[].severity | select(. == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
a/changes.diff 345208 : @@ -93,3 +96,2 @@ diff --git a/changed_cls_lwc_lines.txt b/changed_cls_lwc_lines.txt
a/changes.diff 345209 : -new file mode 100644
a/changes.diff 345210 : -index 0000000..1210cb6
a/changes.diff 345211 : ---- /dev/null
a/changes.diff 345212 : @@ -97,5 +99,139 @@ index 0000000..1210cb6
a/changes.diff 345213 : -@@ -0,0 +1,4 @@
a/changes.diff 345214 : -+108 : index 14cff41..9a5148a 100644
a/changes.diff 345215 : -+1119 : @@ -70 +70 @@ public with sharing class AccountInsertClass {
a/changes.diff 345216 : -+1120 : -          System.debug('Hello Hi');
a/changes.diff 345217 : -+70 :           System.debug('Hi');
a/changes.diff 345218 : @@ -103 +239 @@ diff --git a/changes.diff b/changes.diff
a/changes.diff 345219 : -index 2bddfca..b1d3858 100644
a/changes.diff 345220 : @@ -107,17 +243,110 @@ index 2bddfca..b1d3858 100644
a/changes.diff 345221 : --index 9b8d99e..d68baeb 100644
a/changes.diff 345222 : -+index d68baeb..4433528 100644
a/changes.diff 345223 : -@@ -5,3 +5,22 @@ index 9b8d99e..d68baeb 100644
a/changes.diff 345224 : --@@ -29,0 +30,3 @@ fi
a/changes.diff 345225 : --+# Create a directory for scanner reports if it doesn't exist
a/changes.diff 345226 : --+mkdir -p scanner-reports
a/changes.diff 345227 : -+@@ -18 +18 @@ else
a/changes.diff 345228 : -+-    echo "Husky is already installed Successfully."
a/changes.diff 345229 : -++    echo "Husky is already installed successfully."
a/changes.diff 345230 : -+@@ -43,10 +43,11 @@ while IFS= read -r file; do
a/changes.diff 345231 : -+-  # Extract line numbers from the diff for this file
a/changes.diff 345232 : -+-  changed_lines=$(awk -v file="$file" '
a/changes.diff 345233 : -+-    BEGIN {inside=0}
a/changes.diff 345234 : -+-    /^diff --git/ {inside=0}
a/changes.diff 345235 : -+-    $0 ~ file {inside=1}
a/changes.diff 345236 : -+-    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
a/changes.diff 345237 : -+-  ' changes.diff)
a/changes.diff 345238 : @@ -125,159 +354,26 @@ index 2bddfca..b1d3858 100644
a/changes.diff 345239 : -+-  # If no line numbers were found for this file, skip it
a/changes.diff 345240 : -+-  if [ -z "$changed_lines" ]; then
a/changes.diff 345241 : -++  # Extract the changed lines and corresponding line numbers
a/changes.diff 345242 : -++  awk '
a/changes.diff 345243 : -++    BEGIN {valid_file=0} 
a/changes.diff 345244 : -++    /^diff --git/ {valid_file=0} 
a/changes.diff 345245 : -++    $0 ~ /\.cls$|\.lwc$/ {valid_file=1} 
a/changes.diff 345246 : -++    /^@@/ && valid_file {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); line_offset=0; next}  
a/changes.diff 345247 : -++    /^[+][^+]/ && valid_file {print start + line_offset++, ":", substr($0, 2)}  
a/changes.diff 345248 : -++  ' changes.diff | grep -v '^+++' > changed_cls_lwc_lines.txt
a/changes.diff 345249 : -@@ -9,3 +28,5 @@ index 9b8d99e..d68baeb 100644
a/changes.diff 345250 : --@@ -36,0 +40,3 @@ while IFS= read -r file; do
a/changes.diff 345251 : --+  # Remove leading slashes to make it compatible with file path
a/changes.diff 345252 : --+  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
a/changes.diff 345253 : -++  # If no lines are found for this file, skip it
a/changes.diff 345254 : -++  if [ ! -s changed_cls_lwc_lines.txt ]; then
a/changes.diff 345255 : -+@@ -68,0 +70,3 @@ while IFS= read -r file; do
a/changes.diff 345256 : -++  # Read the changed lines from the file for filtering
a/changes.diff 345257 : -++  changed_lines=$(cut -d':' -f1 changed_cls_lwc_lines.txt | tr '\n' ' ')
a/changes.diff 345258 : -@@ -13,28 +33,0 @@ index 9b8d99e..d68baeb 100644
a/changes.diff 345259 : --@@ -50,0 +57,3 @@ while IFS= read -r file; do
a/changes.diff 345260 : --+  # Define the output path for the scanner report
a/changes.diff 345261 : --+  output_file="scanner-reports/scanner-report-${clean_file}.json"
a/changes.diff 554583 : --@@ -52 +61 @@ while IFS= read -r file; do
a/changes.diff 554584 : ---  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
a/changes.diff 554585 : --+  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
a/changes.diff 554586 : --@@ -55 +64 @@ while IFS= read -r file; do
a/changes.diff 554587 : ---  if [ ! -f "scanner-report-$file.json" ]; then
a/changes.diff 554588 : --+  if [ ! -f "$output_file" ]; then
a/changes.diff 554589 : --@@ -64 +73 @@ while IFS= read -r file; do
a/changes.diff 554590 : ---  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
a/changes.diff 554591 : --+  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
a/changes.diff 554592 : --@@ -67 +76 @@ while IFS= read -r file; do
a/changes.diff 554593 : ---  if [ ! -s "filtered-scanner-report-$file.json" ]; then
a/changes.diff 554594 : --+  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
a/changes.diff 554595 : --@@ -73 +82 @@ while IFS= read -r file; do
a/changes.diff 554596 : ---  cat "filtered-scanner-report-$file.json"
a/changes.diff 554597 : --+  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
a/changes.diff 554598 : --@@ -78 +87 @@ done <<< "$changed_files"
a/changes.diff 554599 : ---filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
a/changes.diff 554600 : --+filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
a/changes.diff 554601 : --@@ -85 +94 @@ fi
a/changes.diff 554602 : ---jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
a/changes.diff 554603 : --+jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
a/changes.diff 554604 : --@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
a/changes.diff 554605 : ---severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
a/changes.diff 554606 : --+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
a/changes.diff 554607 : -@@ -42,3 +35,2 @@ diff --git a/changes.diff b/changes.diff
a/changes.diff 554608 : --new file mode 100644
a/changes.diff 554609 : --index 0000000..dd57583
a/changes.diff 554610 : ----- /dev/null
a/changes.diff 554611 : -+index dd57583..2bddfca 100644
a/changes.diff 554612 : -+--- a/changes.diff
a/changes.diff 554613 : -@@ -46,5 +38,3 @@ index 0000000..dd57583
a/changes.diff 554614 : --@@ -0,0 +1,119 @@
a/changes.diff 554615 : --+diff --git a/.husky/pre-commit b/.husky/pre-commit
a/changes.diff 554616 : --+new file mode 100644
a/changes.diff 554617 : --+index 0000000..9b8d99e
a/changes.diff 554618 : --+--- /dev/null
a/changes.diff 554619 : -+@@ -1,0 +2,40 @@ diff --git a/.husky/pre-commit b/.husky/pre-commit
a/changes.diff 554620 : -++index 9b8d99e..d68baeb 100644
a/changes.diff 554621 : -++--- a/.husky/pre-commit
a/changes.diff 554622 : -@@ -52,53 +42,3 @@ index 0000000..dd57583
a/changes.diff 554623 : --+@@ -0,0 +1,100 @@
a/changes.diff 554624 : --++#!/bin/bash
a/changes.diff 554625 : --++
a/changes.diff 554626 : --++# Prevent modification of Husky files
a/changes.diff 554627 : --++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
a/changes.diff 554628 : --++#   echo "Error: pre-commit and post-commit files cannot be modified."
a/changes.diff 554629 : --++#   exit 1
a/changes.diff 554630 : --++# fi
a/changes.diff 554631 : --++# chmod 544 .husky/pre-commit
a/changes.diff 554632 : --++# chmod 544 .husky/post-commit
a/changes.diff 554633 : --++
a/changes.diff 554634 : --++# Check if Husky is installed
a/changes.diff 554635 : --++if ! command -v husky &> /dev/null
a/changes.diff 554636 : --++then
a/changes.diff 554637 : --++    echo "Husky is not installed. Installing Husky..."
a/changes.diff 554638 : --++    npm install husky --save-dev
a/changes.diff 554639 : --++    npx husky install
a/changes.diff 554640 : --++else
a/changes.diff 554641 : --++    echo "Husky is already installed Successfully."
a/changes.diff 554642 : --++fi
a/changes.diff 554643 : --++
a/changes.diff 554644 : --++# Get the list of changed Apex (.cls) or LWC files
a/changes.diff 554645 : --++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
a/changes.diff 554646 : --++
a/changes.diff 554647 : --++# Check if there are any relevant changes
a/changes.diff 554648 : --++if [ -z "$changed_files" ]; then
a/changes.diff 554649 : --++  echo "No relevant changes to scan in the files."
a/changes.diff 554650 : --++  exit 0
a/changes.diff 554651 : --++fi
a/changes.diff 554652 : --++
a/changes.diff 554653 : --++# Extract the changed lines and corresponding line numbers from the diff for each file
a/changes.diff 554654 : --++git diff --unified=0 --cached > changes.diff
a/changes.diff 554655 : --++
a/changes.diff 554656 : --++# Loop through each changed file
a/changes.diff 554657 : --++while IFS= read -r file; do
a/changes.diff 554658 : --++  echo "Processing file: $file"
a/changes.diff 554659 : --++
a/changes.diff 554660 : --++  # Extract line numbers from the diff for this file
a/changes.diff 554661 : --++  changed_lines=$(awk -v file="$file" '
a/changes.diff 554662 : --++    BEGIN {inside=0}
a/changes.diff 554663 : --++    /^diff --git/ {inside=0}
a/changes.diff 554664 : --++    $0 ~ file {inside=1}
a/changes.diff 554665 : --++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
a/changes.diff 554666 : --++  ' changes.diff)
a/changes.diff 554667 : --++
a/changes.diff 554668 : --++  # If no line numbers were found for this file, skip it
a/changes.diff 554669 : --++  if [ -z "$changed_lines" ]; then
a/changes.diff 554670 : --++    echo "No changed lines found in $file"
a/changes.diff 554671 : --++    continue
a/changes.diff 554672 : --++  fi
a/changes.diff 554673 : --++
a/changes.diff 554674 : --++  # Run the SFDX scanner on the file and generate the report
a/changes.diff 554675 : --++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
a/changes.diff 554676 : -++@@ -29,0 +30,3 @@ fi
a/changes.diff 554677 : -+++# Create a directory for scanner reports if it doesn't exist
a/changes.diff 554678 : -+++mkdir -p scanner-reports
a/changes.diff 554679 : -@@ -106,5 +46,3 @@ index 0000000..dd57583
a/changes.diff 554680 : --++  # Ensure that the scanner report was generated
a/changes.diff 554681 : --++  if [ ! -f "scanner-report-$file.json" ]; then
a/changes.diff 554682 : --++    echo "Scanner report for $file not found."
a/changes.diff 554683 : --++    continue
a/changes.diff 554684 : --++  fi
a/changes.diff 554685 : -++@@ -36,0 +40,3 @@ while IFS= read -r file; do
a/changes.diff 554686 : -+++  # Remove leading slashes to make it compatible with file path
a/changes.diff 554687 : -+++  clean_file=$(echo "$file" | sed 's#^\(\./\|/##')
a/changes.diff 554688 : -@@ -112,5 +50,3 @@ index 0000000..dd57583
a/changes.diff 554689 : --++  # Filter the scanner report based on the changed lines
a/changes.diff 554690 : --++  echo "Filtering scanner report for $file by changed lines..."
a/changes.diff 554691 : --++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
a/changes.diff 554692 : --++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
a/changes.diff 554693 : --++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
a/changes.diff 554694 : -++@@ -50,0 +57,3 @@ while IFS= read -r file; do
a/changes.diff 554695 : -+++  # Define the output path for the scanner report
a/changes.diff 554696 : -+++  output_file="scanner-reports/scanner-report-${clean_file}.json"
a/changes.diff 554697 : -@@ -118,48 +54,268 @@ index 0000000..dd57583
a/changes.diff 554698 : --++  # If no filtered report is found, skip
a/changes.diff 554699 : --++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
a/changes.diff 554700 : --++    echo "No issues found for the changed lines in $file"
a/changes.diff 554701 : --++    continue
a/changes.diff 554702 : --++  fi
a/changes.diff 554703 : --++
a/changes.diff 554704 : --++  echo "Filtered scanner report for $file:"
a/changes.diff 554705 : --++  cat "filtered-scanner-report-$file.json"
a/changes.diff 554706 : --++
a/changes.diff 554707 : --++done <<< "$changed_files"
a/changes.diff 554708 : --++
a/changes.diff 554709 : --++# Check if any filtered reports were generated
a/changes.diff 554710 : --++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
a/changes.diff 554711 : --++if [ -z "$filtered_reports" ]; then
a/changes.diff 554712 : --++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
a/changes.diff 554713 : --++  exit 0
a/changes.diff 554714 : --++fi
a/changes.diff 554715 : --++
a/changes.diff 554716 : --++# Combine all filtered reports into one final report
a/changes.diff 554717 : --++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
a/changes.diff 114350 : @@ -285,2 +381,3 @@ index 2bddfca..b1d3858 100644
a/changes.diff 114351 : --++# Parse the final filtered scanner report and check for severity 3 issues
a/changes.diff 114352 : --++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
a/changes.diff 114353 : @@ -288,2 +385,3 @@ index 2bddfca..b1d3858 100644
a/changes.diff 114354 : --++# Output the fail count for debugging
a/changes.diff 114355 : --++echo "Severity Fail Count: $severity_fail_count"
a/changes.diff 114356 : @@ -291,315 +389,804 @@ index 2bddfca..b1d3858 100644
a/changes.diff 114357 : --++# Block commit if there are severity 3 issues
a/changes.diff 114358 : --++if [ "$severity_fail_count" -gt 0 ]; then
a/changes.diff 114359 : --++  echo "Blocking your commit due to vulnerabilities found with severity 3."
a/changes.diff 114360 : --++  exit 1
a/changes.diff 114361 : --++else
a/changes.diff 114362 : --++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
a/changes.diff 114363 : --++  exit 0
a/changes.diff 114364 : --++fi
a/changes.diff 114365 : --+diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
a/changes.diff 114366 : --+index 1e62ed4..14cff41 100644
a/changes.diff 114367 : --+--- a/force-app/main/default/classes/Account_Insert.cls
a/changes.diff 114368 : --++++ b/force-app/main/default/classes/Account_Insert.cls
a/changes.diff 114369 : --+@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
a/changes.diff 114370 : --++          System.debug('Hello Hi');
a/changes.diff 114371 : --+diff --git a/scanner-report.json b/scanner-report.json
a/changes.diff 114372 : --+new file mode 100644
a/changes.diff 114373 : --+index 0000000..8a298a1
a/changes.diff 114374 : --+--- /dev/null
a/changes.diff 114375 : --++++ b/scanner-report.json
a/changes.diff 114376 : --+@@ -0,0 +1 @@
a/changes.diff 114377 : --++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
a/changes.diff 114378 : -++@@ -52 +61 @@ while IFS= read -r file; do
a/changes.diff 114379 : -++-  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
a/changes.diff 114380 : -+++  sf scanner:run --target "$file" --format "json" --outfile "$output_file"
a/changes.diff 114381 : -++@@ -55 +64 @@ while IFS= read -r file; do
a/changes.diff 114382 : -++-  if [ ! -f "scanner-report-$file.json" ]; then
a/changes.diff 114383 : -+++  if [ ! -f "$output_file" ]; then
a/changes.diff 114384 : -++@@ -64 +73 @@ while IFS= read -r file; do
a/changes.diff 114385 : -++-  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
a/changes.diff 114386 : -+++  ' "$output_file" > "scanner-reports/filtered-scanner-report-${clean_file}.json"
a/changes.diff 114387 : -++@@ -67 +76 @@ while IFS= read -r file; do
a/changes.diff 114388 : -++-  if [ ! -s "filtered-scanner-report-$file.json" ]; then
a/changes.diff 114389 : -+++  if [ ! -s "scanner-reports/filtered-scanner-report-${clean_file}.json" ]; then
a/changes.diff 114390 : -++@@ -73 +82 @@ while IFS= read -r file; do
a/changes.diff 114391 : -++-  cat "filtered-scanner-report-$file.json"
a/changes.diff 114392 : -+++  cat "scanner-reports/filtered-scanner-report-${clean_file}.json"
a/changes.diff 114393 : -++@@ -78 +87 @@ done <<< "$changed_files"
a/changes.diff 114394 : -++-filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
a/changes.diff 114395 : -+++filtered_reports=$(ls scanner-reports/filtered-scanner-report-*.json 2> /dev/null)
a/changes.diff 114396 : -++@@ -85 +94 @@ fi
a/changes.diff 114397 : -++-jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
a/changes.diff 114398 : -+++jq -s '.' scanner-reports/filtered-scanner-report-*.json > scanner-reports/final-filtered-scanner-report.json
a/changes.diff 114399 : -++@@ -88 +97 @@ jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
a/changes.diff 114400 : -++-severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
a/changes.diff 114401 : -+++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' scanner-reports/final-filtered-scanner-report.json)
a/changes.diff 114402 : -++diff --git a/changes.diff b/changes.diff
a/changes.diff 114403 : -+@@ -3 +43 @@ new file mode 100644
a/changes.diff 114404 : -+-index 0000000..9b8d99e
a/changes.diff 114405 : -++index 0000000..dd57583
a/changes.diff 114406 : -+@@ -5,102 +45,121 @@ index 0000000..9b8d99e
a/changes.diff 114407 : -+-+++ b/.husky/pre-commit
a/changes.diff 114408 : -+-@@ -0,0 +1,100 @@
a/changes.diff 114409 : -+-+#!/bin/bash
a/changes.diff 114410 : -+-+
a/changes.diff 114411 : -+-+# Prevent modification of Husky files
a/changes.diff 114412 : -+-+# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
a/changes.diff 114413 : -+-+#   echo "Error: pre-commit and post-commit files cannot be modified."
a/changes.diff 114414 : -+-+#   exit 1
a/changes.diff 114415 : -+-+# fi
a/changes.diff 114416 : -+-+# chmod 544 .husky/pre-commit
a/changes.diff 114417 : -+-+# chmod 544 .husky/post-commit
a/changes.diff 114418 : -+-+
a/changes.diff 114419 : -+-+# Check if Husky is installed
a/changes.diff 114420 : -+-+if ! command -v husky &> /dev/null
a/changes.diff 114421 : -+-+then
a/changes.diff 114422 : -+-+    echo "Husky is not installed. Installing Husky..."
a/changes.diff 114423 : -+-+    npm install husky --save-dev
a/changes.diff 114424 : -+-+    npx husky install
a/changes.diff 114425 : -+-+else
a/changes.diff 114426 : -+-+    echo "Husky is already installed Successfully."
a/changes.diff 114427 : -+-+fi
a/changes.diff 114428 : -+-+
a/changes.diff 114429 : -+-+# Get the list of changed Apex (.cls) or LWC files
a/changes.diff 114430 : -+-+changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
a/changes.diff 114431 : -+-+
a/changes.diff 114432 : -+-+# Check if there are any relevant changes
a/changes.diff 114433 : -+-+if [ -z "$changed_files" ]; then
a/changes.diff 114434 : -+-+  echo "No relevant changes to scan in the files."
a/changes.diff 114435 : -+-+  exit 0
a/changes.diff 114436 : -+-+fi
a/changes.diff 114437 : -+-+
a/changes.diff 114438 : -+-+# Extract the changed lines and corresponding line numbers from the diff for each file
a/changes.diff 114439 : -+-+git diff --unified=0 --cached > changes.diff
a/changes.diff 114440 : -+-+
a/changes.diff 114441 : -+-+# Loop through each changed file
a/changes.diff 114442 : -+-+while IFS= read -r file; do
a/changes.diff 114443 : -+-+  echo "Processing file: $file"
a/changes.diff 114444 : -+-+
a/changes.diff 114445 : -+-+  # Extract line numbers from the diff for this file
a/changes.diff 114446 : -+-+  changed_lines=$(awk -v file="$file" '
a/changes.diff 114447 : -+-+    BEGIN {inside=0}
a/changes.diff 114448 : -+-+    /^diff --git/ {inside=0}
a/changes.diff 114449 : -+-+    $0 ~ file {inside=1}
a/changes.diff 114450 : -+-+    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
a/changes.diff 114451 : -+-+  ' changes.diff)
a/changes.diff 114452 : -+-+
a/changes.diff 114453 : -+-+  # If no line numbers were found for this file, skip it
a/changes.diff 114454 : -+-+  if [ -z "$changed_lines" ]; then
a/changes.diff 114455 : -+-+    echo "No changed lines found in $file"
a/changes.diff 114456 : -+-+    continue
a/changes.diff 114457 : -+-+  fi
a/changes.diff 114458 : -+-+
a/changes.diff 114459 : -+-+  # Run the SFDX scanner on the file and generate the report
a/changes.diff 114460 : -+-+  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
a/changes.diff 114461 : -+-+
a/changes.diff 114462 : -+-+  # Ensure that the scanner report was generated
a/changes.diff 114463 : -+-+  if [ ! -f "scanner-report-$file.json" ]; then
a/changes.diff 114464 : -+-+    echo "Scanner report for $file not found."
a/changes.diff 114465 : -+-+    continue
a/changes.diff 114466 : -+-+  fi
a/changes.diff 114467 : -+-+
a/changes.diff 114468 : -+-+  # Filter the scanner report based on the changed lines
a/changes.diff 114469 : -+-+  echo "Filtering scanner report for $file by changed lines..."
a/changes.diff 114470 : -+-+  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
a/changes.diff 114471 : -+-+    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
a/changes.diff 114472 : -+-+  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
a/changes.diff 114473 : -+-+
a/changes.diff 114474 : -+-+  # If no filtered report is found, skip
a/changes.diff 114475 : -+-+  if [ ! -s "filtered-scanner-report-$file.json" ]; then
a/changes.diff 114476 : -+-+    echo "No issues found for the changed lines in $file"
a/changes.diff 114477 : -+-+    continue
a/changes.diff 114478 : -+-+  fi
a/changes.diff 114479 : -+-+
a/changes.diff 114480 : -+-+  echo "Filtered scanner report for $file:"
a/changes.diff 114481 : -+-+  cat "filtered-scanner-report-$file.json"
a/changes.diff 114482 : -+-+
a/changes.diff 114483 : -+-+done <<< "$changed_files"
a/changes.diff 114484 : -+-+
a/changes.diff 114485 : -+-+# Check if any filtered reports were generated
a/changes.diff 114486 : -+-+filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
a/changes.diff 114487 : -+-+if [ -z "$filtered_reports" ]; then
a/changes.diff 114488 : -+-+  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
a/changes.diff 114489 : -+-+  exit 0
a/changes.diff 114490 : -+-+fi
a/changes.diff 114491 : -+-+
a/changes.diff 114492 : -+-+# Combine all filtered reports into one final report
a/changes.diff 114493 : -+-+jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
a/changes.diff 114494 : -+-+
a/changes.diff 114495 : -+-+# Parse the final filtered scanner report and check for severity 3 issues
a/changes.diff 114496 : -+-+severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
a/changes.diff 114497 : -+-+
a/changes.diff 114498 : -+-+# Output the fail count for debugging
a/changes.diff 114499 : -+-+echo "Severity Fail Count: $severity_fail_count"
a/changes.diff 114500 : -+-+
a/changes.diff 114501 : -+-+# Block commit if there are severity 3 issues
a/changes.diff 114502 : -+-+if [ "$severity_fail_count" -gt 0 ]; then
a/changes.diff 114503 : -+-+  echo "Blocking your commit due to vulnerabilities found with severity 3."
a/changes.diff 114504 : -+-+  exit 1
a/changes.diff 114505 : -+-+else
a/changes.diff 114506 : -+-+  echo "No vulnerabilities found in changed lines. Proceeding with commit."
a/changes.diff 114507 : -+-+  exit 0
a/changes.diff 114508 : -+-+fi
a/changes.diff 114509 : -+++++ b/changes.diff
a/changes.diff 114510 : -++@@ -0,0 +1,119 @@
a/changes.diff 114511 : -+++diff --git a/.husky/pre-commit b/.husky/pre-commit
a/changes.diff 114512 : -+++new file mode 100644
a/changes.diff 114513 : -+++index 0000000..9b8d99e
a/changes.diff 114514 : -+++--- /dev/null
a/changes.diff 114515 : -++++++ b/.husky/pre-commit
a/changes.diff 114516 : -+++@@ -0,0 +1,100 @@
a/changes.diff 114517 : -++++#!/bin/bash
a/changes.diff 114518 : -++++
a/changes.diff 114519 : -++++# Prevent modification of Husky files
a/changes.diff 114520 : -++++# if git diff --name-only --cached | grep -q ".husky/pre-commit\|.husky/post-commit"; then
a/changes.diff 114521 : -++++#   echo "Error: pre-commit and post-commit files cannot be modified."
a/changes.diff 114522 : -++++#   exit 1
a/changes.diff 114523 : -++++# fi
a/changes.diff 114524 : -++++# chmod 544 .husky/pre-commit
a/changes.diff 114525 : -++++# chmod 544 .husky/post-commit
a/changes.diff 114526 : -++++
a/changes.diff 114527 : -++++# Check if Husky is installed
a/changes.diff 114528 : -++++if ! command -v husky &> /dev/null
a/changes.diff 114529 : -++++then
a/changes.diff 114530 : -++++    echo "Husky is not installed. Installing Husky..."
a/changes.diff 114531 : -++++    npm install husky --save-dev
a/changes.diff 114532 : -++++    npx husky install
a/changes.diff 114533 : -++++else
a/changes.diff 114534 : -++++    echo "Husky is already installed Successfully."
a/changes.diff 114535 : -++++fi
a/changes.diff 114536 : -++++
a/changes.diff 114537 : -++++# Get the list of changed Apex (.cls) or LWC files
a/changes.diff 114538 : -++++changed_files=$(git diff --cached --name-only | grep -E '\.cls$|\.lwc$')
a/changes.diff 114539 : -++++
a/changes.diff 114540 : -++++# Check if there are any relevant changes
a/changes.diff 114541 : -++++if [ -z "$changed_files" ]; then
a/changes.diff 114542 : -++++  echo "No relevant changes to scan in the files."
a/changes.diff 114543 : -++++  exit 0
a/changes.diff 114544 : -++++fi
a/changes.diff 114545 : -++++
a/changes.diff 114546 : -++++# Extract the changed lines and corresponding line numbers from the diff for each file
a/changes.diff 114547 : -++++git diff --unified=0 --cached > changes.diff
a/changes.diff 114548 : -++++
a/changes.diff 114549 : -++++# Loop through each changed file
a/changes.diff 114550 : -++++while IFS= read -r file; do
a/changes.diff 114551 : -++++  echo "Processing file: $file"
a/changes.diff 114552 : -++++
a/changes.diff 114553 : -++++  # Extract line numbers from the diff for this file
a/changes.diff 114554 : -++++  changed_lines=$(awk -v file="$file" '
a/changes.diff 114555 : -++++    BEGIN {inside=0}
a/changes.diff 114556 : -++++    /^diff --git/ {inside=0}
a/changes.diff 114557 : -++++    $0 ~ file {inside=1}
a/changes.diff 114558 : -++++    inside && /^@@/ {split($0, arr, " "); gsub(",", "", arr[2]); start = substr(arr[2], 2); print start}
a/changes.diff 114559 : -++++  ' changes.diff)
a/changes.diff 114560 : -++++
a/changes.diff 114561 : -++++  # If no line numbers were found for this file, skip it
a/changes.diff 114562 : -++++  if [ -z "$changed_lines" ]; then
a/changes.diff 114563 : -++++    echo "No changed lines found in $file"
a/changes.diff 114564 : -++++    continue
a/changes.diff 114565 : -++++  fi
a/changes.diff 114566 : -++++
a/changes.diff 114567 : -++++  # Run the SFDX scanner on the file and generate the report
a/changes.diff 114568 : -++++  sf scanner:run --target "$file" --format "json" --outfile "scanner-report-$file.json"
a/changes.diff 114569 : -++++
a/changes.diff 114570 : -++++  # Ensure that the scanner report was generated
a/changes.diff 114571 : -++++  if [ ! -f "scanner-report-$file.json" ]; then
a/changes.diff 114572 : -++++    echo "Scanner report for $file not found."
a/changes.diff 114573 : -++++    continue
a/changes.diff 114574 : -++++  fi
a/changes.diff 114575 : -++++
a/changes.diff 114576 : -++++  # Filter the scanner report based on the changed lines
a/changes.diff 114577 : -++++  echo "Filtering scanner report for $file by changed lines..."
a/changes.diff 114578 : -++++  jq --argfile lines <(echo "$changed_lines" | jq -R . | jq -s .) '
a/changes.diff 114579 : -++++    .[] | select(.violations[]?.line as $line | $lines | index($line) != null)
a/changes.diff 114580 : -++++  ' "scanner-report-$file.json" > "filtered-scanner-report-$file.json"
a/changes.diff 114581 : -++++
a/changes.diff 114582 : -++++  # If no filtered report is found, skip
a/changes.diff 114583 : -++++  if [ ! -s "filtered-scanner-report-$file.json" ]; then
a/changes.diff 114584 : -++++    echo "No issues found for the changed lines in $file"
a/changes.diff 114585 : -++++    continue
a/changes.diff 114586 : -++++  fi
a/changes.diff 114587 : -++++
a/changes.diff 114588 : -++++  echo "Filtered scanner report for $file:"
a/changes.diff 114589 : -++++  cat "filtered-scanner-report-$file.json"
a/changes.diff 114590 : -++++
a/changes.diff 114591 : -++++done <<< "$changed_files"
a/changes.diff 114592 : -++++
a/changes.diff 114593 : -++++# Check if any filtered reports were generated
a/changes.diff 114594 : -++++filtered_reports=$(ls filtered-scanner-report-*.json 2> /dev/null)
a/changes.diff 114595 : -++++if [ -z "$filtered_reports" ]; then
a/changes.diff 114596 : -++++  echo "No vulnerabilities found in the changed lines. Proceeding with commit."
a/changes.diff 114597 : -++++  exit 0
a/changes.diff 114598 : -++++fi
a/changes.diff 114599 : -++++
a/changes.diff 114600 : -++++# Combine all filtered reports into one final report
a/changes.diff 114601 : -++++jq -s '.' filtered-scanner-report-*.json > final-filtered-scanner-report.json
a/changes.diff 114602 : -++++
a/changes.diff 114603 : -++++# Parse the final filtered scanner report and check for severity 3 issues
a/changes.diff 114604 : -++++severity_fail_count=$(jq '[.[].violations[]? | select(.severity == 3)] | length' final-filtered-scanner-report.json)
a/changes.diff 114605 : -++++
a/changes.diff 114606 : -++++# Output the fail count for debugging
a/changes.diff 114607 : -++++echo "Severity Fail Count: $severity_fail_count"
a/changes.diff 114608 : -++++
a/changes.diff 114609 : -++++# Block commit if there are severity 3 issues
a/changes.diff 114610 : -++++if [ "$severity_fail_count" -gt 0 ]; then
a/changes.diff 114611 : -++++  echo "Blocking your commit due to vulnerabilities found with severity 3."
a/changes.diff 114612 : -++++  exit 1
a/changes.diff 114613 : -++++else
a/changes.diff 114614 : -++++  echo "No vulnerabilities found in changed lines. Proceeding with commit."
a/changes.diff 114615 : -++++  exit 0
a/changes.diff 114616 : -++++fi
a/changes.diff 114617 : -+++diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/default/classes/Account_Insert.cls
a/changes.diff 114618 : -+++index 1e62ed4..14cff41 100644
a/changes.diff 114619 : -+++--- a/force-app/main/default/classes/Account_Insert.cls
a/changes.diff 114620 : -++++++ b/force-app/main/default/classes/Account_Insert.cls
a/changes.diff 114621 : -+++@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
a/changes.diff 114622 : -++++          System.debug('Hello Hi');
a/changes.diff 114623 : -+++diff --git a/scanner-report.json b/scanner-report.json
a/changes.diff 114624 : -+++new file mode 100644
a/changes.diff 114625 : -+++index 0000000..8a298a1
a/changes.diff 114626 : -+++--- /dev/null
a/changes.diff 114627 : -++++++ b/scanner-report.json
a/changes.diff 114628 : -+++@@ -0,0 +1 @@
a/changes.diff 114629 : -++++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
a/changes.diff 114630 : -+@@ -108 +167 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
a/changes.diff 114631 : -+-index 1e62ed4..14cff41 100644
a/changes.diff 114632 : -++index 14cff41..9a5148a 100644
a/changes.diff 114633 : -+@@ -111,9 +170,3 @@ index 1e62ed4..14cff41 100644
a/changes.diff 114634 : -+-@@ -69,0 +70 @@ public with sharing class AccountInsertClass {
a/changes.diff 114635 : -+-+          System.debug('Hello Hi');
a/changes.diff 114636 : -+-diff --git a/scanner-report.json b/scanner-report.json
a/changes.diff 114637 : -+-new file mode 100644
a/changes.diff 114638 : -+-index 0000000..8a298a1
a/changes.diff 114639 : -+---- /dev/null
a/changes.diff 114640 : -+-+++ b/scanner-report.json
a/changes.diff 114641 : -+-@@ -0,0 +1 @@
a/changes.diff 114642 : -+-+[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
a/changes.diff 114643 : -++@@ -70 +70 @@ public with sharing class AccountInsertClass {
a/changes.diff 114644 : -++-          System.debug('Hello Hi');
a/changes.diff 114645 : -+++          System.debug('Hello');
a/changes.diff 114646 : -@@ -167 +323 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
a/changes.diff 114647 : --index 14cff41..9a5148a 100644
a/changes.diff 114648 : -+index 9a5148a..1ec7a54 100644
a/changes.diff 114649 : -@@ -171,2 +327,20 @@ index 14cff41..9a5148a 100644
a/changes.diff 114650 : ---          System.debug('Hello Hi');
a/changes.diff 114651 : --+          System.debug('Hello');
a/changes.diff 114652 : -+-          System.debug('Hello');
a/changes.diff 114653 : -++          System.debug('Hi');
a/changes.diff 114654 : -+diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/filtered-scanner-report-.json
a/changes.diff 114655 : -+new file mode 100644
a/changes.diff 114656 : -+index 0000000..e69de29
a/changes.diff 114657 : -+diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
a/changes.diff 114658 : -+new file mode 100644
a/changes.diff 114659 : -+index 0000000..fe51488
a/changes.diff 114660 : -+--- /dev/null
a/changes.diff 114661 : -++++ b/scanner-reports/final-filtered-scanner-report.json
a/changes.diff 114662 : -+@@ -0,0 +1 @@
a/changes.diff 114663 : -++[]
a/changes.diff 114664 : -+diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-report-.json
a/changes.diff 114665 : -+new file mode 100644
a/changes.diff 114666 : -+index 0000000..e670f52
a/changes.diff 114667 : -+--- /dev/null
a/changes.diff 114668 : -++++ b/scanner-reports/scanner-report-.json
a/changes.diff 114669 : -+@@ -0,0 +1 @@
a/changes.diff 114670 : -++[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
a/changes.diff 114671 : -+\ No newline at end of file
a/changes.diff 114672 : @@ -607 +1194 @@ diff --git a/force-app/main/default/classes/Account_Insert.cls b/force-app/main/
a/changes.diff 114673 : -index 1ec7a54..870d508 100644
a/changes.diff 114674 : @@ -611,19 +1198,9 @@ index 1ec7a54..870d508 100644
a/changes.diff 114675 : --          System.debug('Hi');
a/changes.diff 114676 : -+          System.debug('Hi Hello');
a/changes.diff 114677 : -diff --git a/scanner-reports/filtered-scanner-report-.json b/scanner-reports/filtered-scanner-report-.json
a/changes.diff 114678 : -deleted file mode 100644
a/changes.diff 114679 : -index e69de29..0000000
a/changes.diff 114680 : -diff --git a/scanner-reports/final-filtered-scanner-report.json b/scanner-reports/final-filtered-scanner-report.json
a/changes.diff 114681 : -deleted file mode 100644
a/changes.diff 114682 : -index fe51488..0000000
a/changes.diff 114683 : ---- a/scanner-reports/final-filtered-scanner-report.json
a/changes.diff 114684 : -+++ /dev/null
a/changes.diff 114685 : -@@ -1 +0,0 @@
a/changes.diff 114686 : --[]
a/changes.diff 114687 : -diff --git a/scanner-reports/scanner-report-.json b/scanner-reports/scanner-report-.json
a/changes.diff 114688 : -deleted file mode 100644
a/changes.diff 114689 : -index e670f52..0000000
a/changes.diff 114690 : ---- a/scanner-reports/scanner-report-.json
a/changes.diff 114691 : -+++ /dev/null
a/changes.diff 114692 : -@@ -1 +0,0 @@
a/changes.diff 114693 : --[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":32,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
a/changes.diff 1194 : index 1ec7a54..870d508 100644
a/changes.diff 11982 : -          System.debug('Hi');
a/changes.diff 12016 : deleted file mode 100644
a/changes.diff 12017 : index cd70445..0000000
a/changes.diff 12018 : --- a/scanner-reports/scanner-report-Account_Insert.cls.json
a/changes.diff 12019 : @@ -1 +0,0 @@
a/changes.diff 12020 : -[{"engine":"pmd","fileName":"C:\\GitHub Folder\\CodeScanningSolution\\force-app\\main\\default\\classes\\Account_Insert.cls","violations":[{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":20,"column":11,"endLine":20,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":35,"severity":3,"ruleName":"AvoidDebugStatements","category":"Performance","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_performance.html#avoiddebugstatements","message":"\r\nAvoid debug statements since they impact on performance\r\n"},{"line":70,"column":11,"endLine":70,"endColumn":35,"severity":3,"ruleName":"DebugsShouldUseLoggingLevel","category":"Best Practices","url":"https://docs.pmd-code.org/pmd-doc-7.4.0/pmd_rules_apex_bestpractices.html#debugsshoulduselogginglevel","message":"\r\nCalls to System.debug should specify a logging level.\r\n"}]}]
a/force-app/main/default/classes/Account_Insert.cls 70 :           System.debug('Hi');
